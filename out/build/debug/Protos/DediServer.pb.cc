// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: DediServer.proto
// Protobuf C++ Version: 5.29.0-dev

#include "DediServer.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace DC {
namespace Packet {

inline constexpr SRankGameUserInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rankid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currentpoint_{0u},
        needpoint_{0u},
        currenttotalpoint_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SRankGameUserInfo::SRankGameUserInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SRankGameUserInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SRankGameUserInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SRankGameUserInfoDefaultTypeInternal() {}
  union {
    SRankGameUserInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SRankGameUserInfoDefaultTypeInternal _SRankGameUserInfo_default_instance_;

inline constexpr SGameQuestContentInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : contentid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contentvalue_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SGameQuestContentInfo::SGameQuestContentInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SGameQuestContentInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SGameQuestContentInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SGameQuestContentInfoDefaultTypeInternal() {}
  union {
    SGameQuestContentInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SGameQuestContentInfoDefaultTypeInternal _SGameQuestContentInfo_default_instance_;

inline constexpr S2C_UserReport_POST_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reportaccountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        targetaccountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reportkey_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        category_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR S2C_UserReport_POST_Response::S2C_UserReport_POST_Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct S2C_UserReport_POST_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_UserReport_POST_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_UserReport_POST_ResponseDefaultTypeInternal() {}
  union {
    S2C_UserReport_POST_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_UserReport_POST_ResponseDefaultTypeInternal _S2C_UserReport_POST_Response_default_instance_;

inline constexpr S2C_GameStartServer_Json::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dungeonmapids_{},
        resturl_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        region_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        fleetid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dungeonidtag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cloudscanurl_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        serverlocate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        matchingqueuetype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gameid_{::uint64_t{0u}},
        maxgameuser_{0u},
        waittimesec_{0u},
        gamehackpolicy_{0u},
        validplayermeleeattackrange_{0u},
        gametype_{0u},
        shippinglogonoffpolicy_{0u},
        shippingloglevelpolicy_{0u},
        gmonoffpolicy_{0u},
        shippinglogironshieldonoffpolicy_{0u},
        shippinglogironshieldlevelpolicy_{0u},
        currentfloor_{0u},
        floormatchmakingonoff_{0u},
        matchmakingtype_{0u},
        basecampremovedpolicy_{0u},
        numreservedusers_{0u},
        reserveduserwaittimeoutsec_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR S2C_GameStartServer_Json::S2C_GameStartServer_Json(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct S2C_GameStartServer_JsonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_GameStartServer_JsonDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_GameStartServer_JsonDefaultTypeInternal() {}
  union {
    S2C_GameStartServer_Json _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_GameStartServer_JsonDefaultTypeInternal _S2C_GameStartServer_Json_default_instance_;

inline constexpr S2C_GameSpectator_Check_Json::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : issuccess_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR S2C_GameSpectator_Check_Json::S2C_GameSpectator_Check_Json(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct S2C_GameSpectator_Check_JsonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_GameSpectator_Check_JsonDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_GameSpectator_Check_JsonDefaultTypeInternal() {}
  union {
    S2C_GameSpectator_Check_Json _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_GameSpectator_Check_JsonDefaultTypeInternal _S2C_GameSpectator_Check_Json_default_instance_;

inline constexpr S2C_GamePolicy_GET::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : apphash_{},
        policyjson_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR S2C_GamePolicy_GET::S2C_GamePolicy_GET(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct S2C_GamePolicy_GETDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_GamePolicy_GETDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_GamePolicy_GETDefaultTypeInternal() {}
  union {
    S2C_GamePolicy_GET _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_GamePolicy_GETDefaultTypeInternal _S2C_GamePolicy_GET_default_instance_;

inline constexpr S2C_GameFileDB_GET::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : filedbjson_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR S2C_GameFileDB_GET::S2C_GameFileDB_GET(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct S2C_GameFileDB_GETDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_GameFileDB_GETDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_GameFileDB_GETDefaultTypeInternal() {}
  union {
    S2C_GameFileDB_GET _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_GameFileDB_GETDefaultTypeInternal _S2C_GameFileDB_GET_default_instance_;

inline constexpr S2C_GameEnterUser_Json::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : resturl_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        streamingnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterclass_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        partyid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gender_{0u},
        level_{0u},
        karmarating_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR S2C_GameEnterUser_Json::S2C_GameEnterUser_Json(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct S2C_GameEnterUser_JsonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_GameEnterUser_JsonDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_GameEnterUser_JsonDefaultTypeInternal() {}
  union {
    S2C_GameEnterUser_Json _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_GameEnterUser_JsonDefaultTypeInternal _S2C_GameEnterUser_Json_default_instance_;

inline constexpr S2C_BanCheck_Hardware_POST_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : banhids_{},
        loginhids_{},
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        isban_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR S2C_BanCheck_Hardware_POST_Response::S2C_BanCheck_Hardware_POST_Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct S2C_BanCheck_Hardware_POST_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_BanCheck_Hardware_POST_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_BanCheck_Hardware_POST_ResponseDefaultTypeInternal() {}
  union {
    S2C_BanCheck_Hardware_POST_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_BanCheck_Hardware_POST_ResponseDefaultTypeInternal _S2C_BanCheck_Hardware_POST_Response_default_instance_;

inline constexpr MonsterKillLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : monstername_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        monsterkillcount_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MonsterKillLog::MonsterKillLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MonsterKillLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonsterKillLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonsterKillLogDefaultTypeInternal() {}
  union {
    MonsterKillLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonsterKillLogDefaultTypeInternal _MonsterKillLog_default_instance_;

inline constexpr Location::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Location::Location(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationDefaultTypeInternal() {}
  union {
    Location _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationDefaultTypeInternal _Location_default_instance_;

inline constexpr Killlog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instigatoraccountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instigatorname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        effectcausername_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hitboxtype_{0u},
        advpoint_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Killlog::Killlog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct KilllogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KilllogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KilllogDefaultTypeInternal() {}
  union {
    Killlog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KilllogDefaultTypeInternal _Killlog_default_instance_;

inline constexpr GameFloorMatchMaking_UserInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sessionid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        port_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameFloorMatchMaking_UserInfoResponse::GameFloorMatchMaking_UserInfoResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameFloorMatchMaking_UserInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameFloorMatchMaking_UserInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameFloorMatchMaking_UserInfoResponseDefaultTypeInternal() {}
  union {
    GameFloorMatchMaking_UserInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameFloorMatchMaking_UserInfoResponseDefaultTypeInternal _GameFloorMatchMaking_UserInfoResponse_default_instance_;

inline constexpr GameFloorMatchMaking_UserInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        partyid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameFloorMatchMaking_UserInfo::GameFloorMatchMaking_UserInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameFloorMatchMaking_UserInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameFloorMatchMaking_UserInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameFloorMatchMaking_UserInfoDefaultTypeInternal() {}
  union {
    GameFloorMatchMaking_UserInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameFloorMatchMaking_UserInfoDefaultTypeInternal _GameFloorMatchMaking_UserInfo_default_instance_;

inline constexpr GameExitExpPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : exppointtype_{0u},
        exppoint_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameExitExpPoint::GameExitExpPoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameExitExpPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameExitExpPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameExitExpPointDefaultTypeInternal() {}
  union {
    GameExitExpPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameExitExpPointDefaultTypeInternal _GameExitExpPoint_default_instance_;

inline constexpr GameExitAdvPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : advpointtype_{0},
        advpoint_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameExitAdvPoint::GameExitAdvPoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameExitAdvPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameExitAdvPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameExitAdvPointDefaultTypeInternal() {}
  union {
    GameExitAdvPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameExitAdvPointDefaultTypeInternal _GameExitAdvPoint_default_instance_;

inline constexpr GameEndUserInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        kill_{0u},
        death_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameEndUserInfo::GameEndUserInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameEndUserInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameEndUserInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameEndUserInfoDefaultTypeInternal() {}
  union {
    GameEndUserInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameEndUserInfoDefaultTypeInternal _GameEndUserInfo_default_instance_;

inline constexpr C2S_IronShield_Report_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hids_{},
        blob_{},
        _blob_cached_byte_size_{0},
        reportid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        originnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        blobnametag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        callbacktype_{0u},
        needblock_{0u},
        needhwblock_{0u},
        blocktime_min_{0u},
        bantype_{0u},
        blobtype_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_IronShield_Report_POST::C2S_IronShield_Report_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_IronShield_Report_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_IronShield_Report_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_IronShield_Report_POSTDefaultTypeInternal() {}
  union {
    C2S_IronShield_Report_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_IronShield_Report_POSTDefaultTypeInternal _C2S_IronShield_Report_POST_default_instance_;

inline constexpr C2S_IronShield_Isolation_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        isolationhours_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_IronShield_Isolation_POST::C2S_IronShield_Isolation_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_IronShield_Isolation_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_IronShield_Isolation_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_IronShield_Isolation_POSTDefaultTypeInternal() {}
  union {
    C2S_IronShield_Isolation_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_IronShield_Isolation_POSTDefaultTypeInternal _C2S_IronShield_Isolation_POST_default_instance_;

inline constexpr C2S_GameStart_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mapnames_{},
        gameid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_GameStart_POST::C2S_GameStart_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_GameStart_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_GameStart_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_GameStart_POSTDefaultTypeInternal() {}
  union {
    C2S_GameStart_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_GameStart_POSTDefaultTypeInternal _C2S_GameStart_POST_default_instance_;

inline constexpr C2S_GameSpectator_Check_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_GameSpectator_Check_POST::C2S_GameSpectator_Check_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_GameSpectator_Check_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_GameSpectator_Check_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_GameSpectator_Check_POSTDefaultTypeInternal() {}
  union {
    C2S_GameSpectator_Check_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_GameSpectator_Check_POSTDefaultTypeInternal _C2S_GameSpectator_Check_POST_default_instance_;

inline constexpr C2S_GameReady_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gameid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_GameReady_POST::C2S_GameReady_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_GameReady_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_GameReady_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_GameReady_POSTDefaultTypeInternal() {}
  union {
    C2S_GameReady_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_GameReady_POSTDefaultTypeInternal _C2S_GameReady_POST_default_instance_;

inline constexpr C2S_GameInterrupt_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gameid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_GameInterrupt_POST::C2S_GameInterrupt_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_GameInterrupt_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_GameInterrupt_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_GameInterrupt_POSTDefaultTypeInternal() {}
  union {
    C2S_GameInterrupt_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_GameInterrupt_POSTDefaultTypeInternal _C2S_GameInterrupt_POST_default_instance_;

inline constexpr C2S_GameExitEscapedUser_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gameid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_GameExitEscapedUser_POST::C2S_GameExitEscapedUser_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_GameExitEscapedUser_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_GameExitEscapedUser_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_GameExitEscapedUser_POSTDefaultTypeInternal() {}
  union {
    C2S_GameExitEscapedUser_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_GameExitEscapedUser_POSTDefaultTypeInternal _C2S_GameExitEscapedUser_POST_default_instance_;

inline constexpr C2S_GameEnterUser_Post::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gameid_{::uint64_t{0u}},
        issuccess_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_GameEnterUser_Post::C2S_GameEnterUser_Post(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_GameEnterUser_PostDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_GameEnterUser_PostDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_GameEnterUser_PostDefaultTypeInternal() {}
  union {
    C2S_GameEnterUser_Post _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_GameEnterUser_PostDefaultTypeInternal _C2S_GameEnterUser_Post_default_instance_;

inline constexpr C2S_GameCharacterInfo_Get::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gameid_{::uint64_t{0u}},
        gametype_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_GameCharacterInfo_Get::C2S_GameCharacterInfo_Get(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_GameCharacterInfo_GetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_GameCharacterInfo_GetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_GameCharacterInfo_GetDefaultTypeInternal() {}
  union {
    C2S_GameCharacterInfo_Get _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_GameCharacterInfo_GetDefaultTypeInternal _C2S_GameCharacterInfo_Get_default_instance_;

inline constexpr C2S_GameAliveCheck_GET::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gameid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_GameAliveCheck_GET::C2S_GameAliveCheck_GET(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_GameAliveCheck_GETDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_GameAliveCheck_GETDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_GameAliveCheck_GETDefaultTypeInternal() {}
  union {
    C2S_GameAliveCheck_GET _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_GameAliveCheck_GETDefaultTypeInternal _C2S_GameAliveCheck_GET_default_instance_;

inline constexpr C2S_BanCheck_Hardware_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hids_{},
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_BanCheck_Hardware_POST::C2S_BanCheck_Hardware_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_BanCheck_Hardware_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_BanCheck_Hardware_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_BanCheck_Hardware_POSTDefaultTypeInternal() {}
  union {
    C2S_BanCheck_Hardware_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_BanCheck_Hardware_POSTDefaultTypeInternal _C2S_BanCheck_Hardware_POST_default_instance_;

inline constexpr C2S_Arena_Exit_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        secretid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gameid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_Arena_Exit_POST::C2S_Arena_Exit_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_Arena_Exit_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_Arena_Exit_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_Arena_Exit_POSTDefaultTypeInternal() {}
  union {
    C2S_Arena_Exit_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_Arena_Exit_POSTDefaultTypeInternal _C2S_Arena_Exit_POST_default_instance_;

inline constexpr AliveDataInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : us_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AliveDataInfo::AliveDataInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AliveDataInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AliveDataInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AliveDataInfoDefaultTypeInternal() {}
  union {
    AliveDataInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AliveDataInfoDefaultTypeInternal _AliveDataInfo_default_instance_;

inline constexpr SSpell_Floor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        spell_{nullptr},
        count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SSpell_Floor::SSpell_Floor(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SSpell_FloorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SSpell_FloorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SSpell_FloorDefaultTypeInternal() {}
  union {
    SSpell_Floor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SSpell_FloorDefaultTypeInternal _SSpell_Floor_default_instance_;

inline constexpr SSkill_Floor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        skill_{nullptr},
        count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SSkill_Floor::SSkill_Floor(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SSkill_FloorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SSkill_FloorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SSkill_FloorDefaultTypeInternal() {}
  union {
    SSkill_Floor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SSkill_FloorDefaultTypeInternal _SSkill_Floor_default_instance_;

inline constexpr SShapeShift_Floor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        shapeshift_{nullptr},
        count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SShapeShift_Floor::SShapeShift_Floor(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SShapeShift_FloorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SShapeShift_FloorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SShapeShift_FloorDefaultTypeInternal() {}
  union {
    SShapeShift_Floor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SShapeShift_FloorDefaultTypeInternal _SShapeShift_Floor_default_instance_;

inline constexpr SMusic_Floor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        music_{nullptr},
        count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SMusic_Floor::SMusic_Floor(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SMusic_FloorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SMusic_FloorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SMusic_FloorDefaultTypeInternal() {}
  union {
    SMusic_Floor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SMusic_FloorDefaultTypeInternal _SMusic_Floor_default_instance_;

inline constexpr SGameQuestInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : infos_{},
        questid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SGameQuestInfo::SGameQuestInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SGameQuestInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SGameQuestInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SGameQuestInfoDefaultTypeInternal() {}
  union {
    SGameQuestInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SGameQuestInfoDefaultTypeInternal _SGameQuestInfo_default_instance_;

inline constexpr S2C_FloorMatchMaking_POST_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : infos_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR S2C_FloorMatchMaking_POST_Response::S2C_FloorMatchMaking_POST_Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct S2C_FloorMatchMaking_POST_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_FloorMatchMaking_POST_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_FloorMatchMaking_POST_ResponseDefaultTypeInternal() {}
  union {
    S2C_FloorMatchMaking_POST_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_FloorMatchMaking_POST_ResponseDefaultTypeInternal _S2C_FloorMatchMaking_POST_Response_default_instance_;

inline constexpr NewItemLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        itemid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pos_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NewItemLog::NewItemLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NewItemLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewItemLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewItemLogDefaultTypeInternal() {}
  union {
    NewItemLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewItemLogDefaultTypeInternal _NewItemLog_default_instance_;

inline constexpr GameDown_UserPartyInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterclass_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_{nullptr},
        gender_{0u},
        level_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR GameDown_UserPartyInfo::GameDown_UserPartyInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameDown_UserPartyInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameDown_UserPartyInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameDown_UserPartyInfoDefaultTypeInternal() {}
  union {
    GameDown_UserPartyInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameDown_UserPartyInfoDefaultTypeInternal _GameDown_UserPartyInfo_default_instance_;

inline constexpr Circle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pos_{nullptr},
        radius_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Circle::Circle(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CircleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CircleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CircleDefaultTypeInternal() {}
  union {
    Circle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CircleDefaultTypeInternal _Circle_default_instance_;

inline constexpr C2S_UserReport_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_{},
        _category_cached_byte_size_{0},
        reportaccountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        targetaccountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        targetcharacterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reportcontent_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        targetnickname_{nullptr},
        gameid_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_UserReport_POST::C2S_UserReport_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_UserReport_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_UserReport_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_UserReport_POSTDefaultTypeInternal() {}
  union {
    C2S_UserReport_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_UserReport_POSTDefaultTypeInternal _C2S_UserReport_POST_default_instance_;

inline constexpr C2S_FloorMatchMaking_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : infos_{},
        dungeonid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gameid_{::uint64_t{0u}},
        currentfloor_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_FloorMatchMaking_POST::C2S_FloorMatchMaking_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_FloorMatchMaking_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_FloorMatchMaking_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_FloorMatchMaking_POSTDefaultTypeInternal() {}
  union {
    C2S_FloorMatchMaking_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_FloorMatchMaking_POSTDefaultTypeInternal _C2S_FloorMatchMaking_POST_default_instance_;

inline constexpr C2S_AliveAppendData_GET::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : infos_{},
        gs_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_AliveAppendData_GET::C2S_AliveAppendData_GET(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_AliveAppendData_GETDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_AliveAppendData_GETDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_AliveAppendData_GETDefaultTypeInternal() {}
  union {
    C2S_AliveAppendData_GET _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_AliveAppendData_GETDefaultTypeInternal _C2S_AliveAppendData_GET_default_instance_;

inline constexpr S2C_GameDown_UserParty_GET::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : partymember_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR S2C_GameDown_UserParty_GET::S2C_GameDown_UserParty_GET(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct S2C_GameDown_UserParty_GETDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_GameDown_UserParty_GETDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_GameDown_UserParty_GETDefaultTypeInternal() {}
  union {
    S2C_GameDown_UserParty_GET _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_GameDown_UserParty_GETDefaultTypeInternal _S2C_GameDown_UserParty_GET_default_instance_;

inline constexpr S2C_GameCharacterInfo_Json::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        items_{},
        perks_{},
        skills_{},
        spells_{},
        characterskinids_{},
        itemskinids_{},
        emotes_{},
        actionids_{},
        musics_{},
        shapeshifts_{},
        quests_{},
        armorskinids_{},
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        seasonid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rankinfo_{nullptr},
        gameid_{::uint64_t{0u}},
        entrancefee_{0u},
        isseason_{0u},
        totalplaytimesec_{0},
        level_{0},
        fame_{0},
        isblacklist_{0},
        gearscore_{0} {}

template <typename>
PROTOBUF_CONSTEXPR S2C_GameCharacterInfo_Json::S2C_GameCharacterInfo_Json(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct S2C_GameCharacterInfo_JsonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_GameCharacterInfo_JsonDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_GameCharacterInfo_JsonDefaultTypeInternal() {}
  union {
    S2C_GameCharacterInfo_Json _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_GameCharacterInfo_JsonDefaultTypeInternal _S2C_GameCharacterInfo_Json_default_instance_;

inline constexpr GameResultInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : advpoints_{},
        exppoints_{},
        killlogdata_{},
        monsterkilllogs_{},
        locations_{},
        newitemlogs_{},
        quests_{},
        gamestats_{},
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterclass_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        escapemapname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        seasonid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dungeonidtag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        userpclanguagecode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gameid_{::uint64_t{0u}},
        killcount_{0u},
        gametype_{0u},
        needblock_{0u},
        needhwblock_{0u},
        blocktime_min_{0u},
        addtriumphexpvalue_{0},
        isseason_{0u},
        isbasecamp_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameResultInfo::GameResultInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameResultInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameResultInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameResultInfoDefaultTypeInternal() {}
  union {
    GameResultInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameResultInfoDefaultTypeInternal _GameResultInfo_default_instance_;

inline constexpr FloorMatchMaking_CharacterInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : downitems_{},
        perks_{},
        skills_{},
        spells_{},
        musics_{},
        shapeshifts_{},
        characterskinids_{},
        itemskinids_{},
        emotes_{},
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hp_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FloorMatchMaking_CharacterInfo::FloorMatchMaking_CharacterInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FloorMatchMaking_CharacterInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FloorMatchMaking_CharacterInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FloorMatchMaking_CharacterInfoDefaultTypeInternal() {}
  union {
    FloorMatchMaking_CharacterInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FloorMatchMaking_CharacterInfoDefaultTypeInternal _FloorMatchMaking_CharacterInfo_default_instance_;

inline constexpr C2S_Game_Finalize_Session_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : recoveryitems_{},
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gameid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_Game_Finalize_Session_POST::C2S_Game_Finalize_Session_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_Game_Finalize_Session_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_Game_Finalize_Session_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_Game_Finalize_Session_POSTDefaultTypeInternal() {}
  union {
    C2S_Game_Finalize_Session_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_Game_Finalize_Session_POSTDefaultTypeInternal _C2S_Game_Finalize_Session_POST_default_instance_;

inline constexpr C2S_GameExitUser_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : items_{},
        guaranteeditems_{},
        advpoints_{},
        exppoints_{},
        killlogdata_{},
        monsterkilllogs_{},
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterclass_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        escapemapname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gameid_{::uint64_t{0u}},
        escape_{0u},
        killcount_{0u},
        gametype_{0u},
        needblock_{0u},
        needhwblock_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_GameExitUser_POST::C2S_GameExitUser_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_GameExitUser_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_GameExitUser_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_GameExitUser_POSTDefaultTypeInternal() {}
  union {
    C2S_GameExitUser_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_GameExitUser_POSTDefaultTypeInternal _C2S_GameExitUser_POST_default_instance_;

inline constexpr C2S_GameEndServer_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : users_{},
        circles_{},
        gameid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_GameEndServer_POST::C2S_GameEndServer_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_GameEndServer_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_GameEndServer_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_GameEndServer_POSTDefaultTypeInternal() {}
  union {
    C2S_GameEndServer_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_GameEndServer_POSTDefaultTypeInternal _C2S_GameEndServer_POST_default_instance_;

inline constexpr C2S_Dirty_Item_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : upsertitems_{},
        deleteitemuniqueids_{},
        _deleteitemuniqueids_cached_byte_size_{0},
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gameid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_Dirty_Item_POST::C2S_Dirty_Item_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_Dirty_Item_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_Dirty_Item_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_Dirty_Item_POSTDefaultTypeInternal() {}
  union {
    C2S_Dirty_Item_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_Dirty_Item_POSTDefaultTypeInternal _C2S_Dirty_Item_POST_default_instance_;

inline constexpr C2S_Prepare_FloorMatchMaking::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        info_{nullptr},
        resultinfo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_Prepare_FloorMatchMaking::C2S_Prepare_FloorMatchMaking(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_Prepare_FloorMatchMakingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_Prepare_FloorMatchMakingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_Prepare_FloorMatchMakingDefaultTypeInternal() {}
  union {
    C2S_Prepare_FloorMatchMaking _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_Prepare_FloorMatchMakingDefaultTypeInternal _C2S_Prepare_FloorMatchMaking_default_instance_;

inline constexpr C2S_GameExitUser_V2_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        resultinfo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_GameExitUser_V2_POST::C2S_GameExitUser_V2_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_GameExitUser_V2_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_GameExitUser_V2_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_GameExitUser_V2_POSTDefaultTypeInternal() {}
  union {
    C2S_GameExitUser_V2_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_GameExitUser_V2_POSTDefaultTypeInternal _C2S_GameExitUser_V2_POST_default_instance_;

inline constexpr C2S_GameEscapeUser_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        items_{},
        frienditemrecoveryinfos_{},
        secretid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resultinfo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_GameEscapeUser_POST::C2S_GameEscapeUser_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_GameEscapeUser_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_GameEscapeUser_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_GameEscapeUser_POSTDefaultTypeInternal() {}
  union {
    C2S_GameEscapeUser_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_GameEscapeUser_POSTDefaultTypeInternal _C2S_GameEscapeUser_POST_default_instance_;

inline constexpr C2S_Arena_Result_POST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        items_{},
        secretid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resultinfo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_Arena_Result_POST::C2S_Arena_Result_POST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_Arena_Result_POSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_Arena_Result_POSTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_Arena_Result_POSTDefaultTypeInternal() {}
  union {
    C2S_Arena_Result_POST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_Arena_Result_POSTDefaultTypeInternal _C2S_Arena_Result_POST_default_instance_;
}  // namespace Packet
}  // namespace DC
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_DediServer_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_DediServer_2eproto = nullptr;
const ::uint32_t
    TableStruct_DediServer_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SGameQuestContentInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SGameQuestContentInfo, _impl_.contentid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SGameQuestContentInfo, _impl_.contentvalue_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SGameQuestInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SGameQuestInfo, _impl_.questid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SGameQuestInfo, _impl_.infos_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameEnterUser_Json, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameEnterUser_Json, _impl_.resturl_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameEnterUser_Json, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameEnterUser_Json, _impl_.streamingnickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameEnterUser_Json, _impl_.characterclass_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameEnterUser_Json, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameEnterUser_Json, _impl_.gender_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameEnterUser_Json, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameEnterUser_Json, _impl_.partyid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameEnterUser_Json, _impl_.karmarating_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameExitAdvPoint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameExitAdvPoint, _impl_.advpointtype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameExitAdvPoint, _impl_.advpoint_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameExitExpPoint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameExitExpPoint, _impl_.exppointtype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameExitExpPoint, _impl_.exppoint_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Killlog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Killlog, _impl_.instigatoraccountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Killlog, _impl_.instigatorname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Killlog, _impl_.effectcausername_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Killlog, _impl_.hitboxtype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Killlog, _impl_.advpoint_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::MonsterKillLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::MonsterKillLog, _impl_.monstername_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::MonsterKillLog, _impl_.monsterkillcount_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.escape_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.items_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.guaranteeditems_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.characterclass_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.killcount_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.advpoints_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.escapemapname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.exppoints_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.killlogdata_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.monsterkilllogs_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.gametype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.needblock_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_POST, _impl_.needhwblock_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameEnterUser_Post, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameEnterUser_Post, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameEnterUser_Post, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameEnterUser_Post, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameEnterUser_Post, _impl_.issuccess_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.resturl_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.maxgameuser_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.waittimesec_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.dungeonmapids_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.gamehackpolicy_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.validplayermeleeattackrange_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.gametype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.shippinglogonoffpolicy_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.shippingloglevelpolicy_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.gmonoffpolicy_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.shippinglogironshieldonoffpolicy_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.shippinglogironshieldlevelpolicy_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.currentfloor_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.floormatchmakingonoff_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.matchmakingtype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.region_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.fleetid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.dungeonidtag_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.cloudscanurl_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.serverlocate_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.matchingqueuetype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.basecampremovedpolicy_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.numreservedusers_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameStartServer_Json, _impl_.reserveduserwaittimeoutsec_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameEndServer_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameEndServer_POST, _impl_.users_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameEndServer_POST, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameEndServer_POST, _impl_.circles_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameEndUserInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameEndUserInfo, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameEndUserInfo, _impl_.kill_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameEndUserInfo, _impl_.death_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameStart_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameStart_POST, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameStart_POST, _impl_.mapnames_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameCharacterInfo_Get, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameCharacterInfo_Get, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameCharacterInfo_Get, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameCharacterInfo_Get, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameCharacterInfo_Get, _impl_.gametype_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SRankGameUserInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SRankGameUserInfo, _impl_.rankid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SRankGameUserInfo, _impl_.currentpoint_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SRankGameUserInfo, _impl_.needpoint_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SRankGameUserInfo, _impl_.currenttotalpoint_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.items_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.perks_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.skills_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.spells_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.characterskinids_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.itemskinids_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.emotes_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.actionids_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.musics_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.shapeshifts_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.quests_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.rankinfo_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.entrancefee_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.seasonid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.isseason_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.armorskinids_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.totalplaytimesec_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.fame_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.isblacklist_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameCharacterInfo_Json, _impl_.gearscore_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameAliveCheck_GET, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameAliveCheck_GET, _impl_.gameid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::AliveDataInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::AliveDataInfo, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::AliveDataInfo, _impl_.us_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_AliveAppendData_GET, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_AliveAppendData_GET, _impl_.gs_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_AliveAppendData_GET, _impl_.infos_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameInterrupt_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameInterrupt_POST, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_UserReport_POST, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_UserReport_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_UserReport_POST, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_UserReport_POST, _impl_.reportaccountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_UserReport_POST, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_UserReport_POST, _impl_.targetaccountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_UserReport_POST, _impl_.targetnickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_UserReport_POST, _impl_.targetcharacterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_UserReport_POST, _impl_.reportcontent_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_UserReport_POST_Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_UserReport_POST_Response, _impl_.reportaccountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_UserReport_POST_Response, _impl_.targetaccountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_UserReport_POST_Response, _impl_.reportkey_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_UserReport_POST_Response, _impl_.category_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Location, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Location, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Location, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Location, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Circle, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Circle, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Circle, _impl_.pos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Circle, _impl_.radius_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::DC::Packet::NewItemLog, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::NewItemLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::NewItemLog, _impl_.pos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::NewItemLog, _impl_.itemid_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.characterclass_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.killcount_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.advpoints_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.escapemapname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.exppoints_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.killlogdata_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.monsterkilllogs_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.gametype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.needblock_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.needhwblock_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.blocktime_min_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.addtriumphexpvalue_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.locations_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.newitemlogs_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.quests_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.gamestats_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.seasonid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.isseason_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.dungeonidtag_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.isbasecamp_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameResultInfo, _impl_.userpclanguagecode_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameEscapeUser_POST, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameEscapeUser_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameEscapeUser_POST, _impl_.resultinfo_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameEscapeUser_POST, _impl_.items_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameEscapeUser_POST, _impl_.secretid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameEscapeUser_POST, _impl_.frienditemrecoveryinfos_),
        0,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_V2_POST, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_V2_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitUser_V2_POST, _impl_.resultinfo_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitEscapedUser_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitEscapedUser_POST, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitEscapedUser_POST, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameExitEscapedUser_POST, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SSkill_Floor, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SSkill_Floor, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SSkill_Floor, _impl_.skill_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SSkill_Floor, _impl_.count_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SSpell_Floor, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SSpell_Floor, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SSpell_Floor, _impl_.spell_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SSpell_Floor, _impl_.count_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SMusic_Floor, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SMusic_Floor, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SMusic_Floor, _impl_.music_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SMusic_Floor, _impl_.count_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SShapeShift_Floor, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SShapeShift_Floor, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SShapeShift_Floor, _impl_.shapeshift_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SShapeShift_Floor, _impl_.count_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::FloorMatchMaking_CharacterInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::FloorMatchMaking_CharacterInfo, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::FloorMatchMaking_CharacterInfo, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::FloorMatchMaking_CharacterInfo, _impl_.downitems_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::FloorMatchMaking_CharacterInfo, _impl_.perks_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::FloorMatchMaking_CharacterInfo, _impl_.skills_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::FloorMatchMaking_CharacterInfo, _impl_.spells_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::FloorMatchMaking_CharacterInfo, _impl_.musics_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::FloorMatchMaking_CharacterInfo, _impl_.shapeshifts_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::FloorMatchMaking_CharacterInfo, _impl_.characterskinids_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::FloorMatchMaking_CharacterInfo, _impl_.itemskinids_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::FloorMatchMaking_CharacterInfo, _impl_.emotes_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::FloorMatchMaking_CharacterInfo, _impl_.hp_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Prepare_FloorMatchMaking, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Prepare_FloorMatchMaking, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Prepare_FloorMatchMaking, _impl_.info_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Prepare_FloorMatchMaking, _impl_.resultinfo_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GamePolicy_GET, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GamePolicy_GET, _impl_.apphash_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GamePolicy_GET, _impl_.policyjson_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameFileDB_GET, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameFileDB_GET, _impl_.filedbjson_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameSpectator_Check_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameSpectator_Check_POST, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameSpectator_Check_POST, _impl_.token_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameSpectator_Check_Json, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameSpectator_Check_Json, _impl_.issuccess_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameDown_UserPartyInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameDown_UserPartyInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameDown_UserPartyInfo, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameDown_UserPartyInfo, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameDown_UserPartyInfo, _impl_.characterclass_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameDown_UserPartyInfo, _impl_.gender_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameDown_UserPartyInfo, _impl_.level_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameDown_UserParty_GET, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_GameDown_UserParty_GET, _impl_.partymember_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameReady_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_GameReady_POST, _impl_.gameid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameFloorMatchMaking_UserInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameFloorMatchMaking_UserInfo, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameFloorMatchMaking_UserInfo, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameFloorMatchMaking_UserInfo, _impl_.partyid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_FloorMatchMaking_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_FloorMatchMaking_POST, _impl_.infos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_FloorMatchMaking_POST, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_FloorMatchMaking_POST, _impl_.currentfloor_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_FloorMatchMaking_POST, _impl_.dungeonid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameFloorMatchMaking_UserInfoResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameFloorMatchMaking_UserInfoResponse, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameFloorMatchMaking_UserInfoResponse, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameFloorMatchMaking_UserInfoResponse, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameFloorMatchMaking_UserInfoResponse, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::GameFloorMatchMaking_UserInfoResponse, _impl_.sessionid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_FloorMatchMaking_POST_Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_FloorMatchMaking_POST_Response, _impl_.infos_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Report_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Report_POST, _impl_.callbacktype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Report_POST, _impl_.reportid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Report_POST, _impl_.hids_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Report_POST, _impl_.blob_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Report_POST, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Report_POST, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Report_POST, _impl_.originnickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Report_POST, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Report_POST, _impl_.needblock_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Report_POST, _impl_.needhwblock_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Report_POST, _impl_.blocktime_min_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Report_POST, _impl_.bantype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Report_POST, _impl_.blobtype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Report_POST, _impl_.blobnametag_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_BanCheck_Hardware_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_BanCheck_Hardware_POST, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_BanCheck_Hardware_POST, _impl_.hids_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_BanCheck_Hardware_POST_Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_BanCheck_Hardware_POST_Response, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_BanCheck_Hardware_POST_Response, _impl_.isban_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_BanCheck_Hardware_POST_Response, _impl_.banhids_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::S2C_BanCheck_Hardware_POST_Response, _impl_.loginhids_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Dirty_Item_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Dirty_Item_POST, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Dirty_Item_POST, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Dirty_Item_POST, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Dirty_Item_POST, _impl_.upsertitems_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Dirty_Item_POST, _impl_.deleteitemuniqueids_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Isolation_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Isolation_POST, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_IronShield_Isolation_POST, _impl_.isolationhours_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Arena_Result_POST, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Arena_Result_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Arena_Result_POST, _impl_.resultinfo_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Arena_Result_POST, _impl_.items_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Arena_Result_POST, _impl_.secretid_),
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Arena_Exit_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Arena_Exit_POST, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Arena_Exit_POST, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Arena_Exit_POST, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Arena_Exit_POST, _impl_.secretid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Game_Finalize_Session_POST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Game_Finalize_Session_POST, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Game_Finalize_Session_POST, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Game_Finalize_Session_POST, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::C2S_Game_Finalize_Session_POST, _impl_.recoveryitems_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::DC::Packet::SGameQuestContentInfo)},
        {10, -1, -1, sizeof(::DC::Packet::SGameQuestInfo)},
        {20, -1, -1, sizeof(::DC::Packet::S2C_GameEnterUser_Json)},
        {37, -1, -1, sizeof(::DC::Packet::GameExitAdvPoint)},
        {47, -1, -1, sizeof(::DC::Packet::GameExitExpPoint)},
        {57, -1, -1, sizeof(::DC::Packet::Killlog)},
        {70, -1, -1, sizeof(::DC::Packet::MonsterKillLog)},
        {80, -1, -1, sizeof(::DC::Packet::C2S_GameExitUser_POST)},
        {105, -1, -1, sizeof(::DC::Packet::C2S_GameEnterUser_Post)},
        {117, -1, -1, sizeof(::DC::Packet::S2C_GameStartServer_Json)},
        {150, -1, -1, sizeof(::DC::Packet::C2S_GameEndServer_POST)},
        {161, -1, -1, sizeof(::DC::Packet::GameEndUserInfo)},
        {172, -1, -1, sizeof(::DC::Packet::C2S_GameStart_POST)},
        {182, -1, -1, sizeof(::DC::Packet::C2S_GameCharacterInfo_Get)},
        {194, -1, -1, sizeof(::DC::Packet::SRankGameUserInfo)},
        {206, 238, -1, sizeof(::DC::Packet::S2C_GameCharacterInfo_Json)},
        {262, -1, -1, sizeof(::DC::Packet::C2S_GameAliveCheck_GET)},
        {271, -1, -1, sizeof(::DC::Packet::AliveDataInfo)},
        {281, -1, -1, sizeof(::DC::Packet::C2S_AliveAppendData_GET)},
        {291, -1, -1, sizeof(::DC::Packet::C2S_GameInterrupt_POST)},
        {300, 315, -1, sizeof(::DC::Packet::C2S_UserReport_POST)},
        {322, -1, -1, sizeof(::DC::Packet::S2C_UserReport_POST_Response)},
        {334, -1, -1, sizeof(::DC::Packet::Location)},
        {345, 355, -1, sizeof(::DC::Packet::Circle)},
        {357, 367, -1, sizeof(::DC::Packet::NewItemLog)},
        {369, -1, -1, sizeof(::DC::Packet::GameResultInfo)},
        {402, 414, -1, sizeof(::DC::Packet::C2S_GameEscapeUser_POST)},
        {418, 427, -1, sizeof(::DC::Packet::C2S_GameExitUser_V2_POST)},
        {428, -1, -1, sizeof(::DC::Packet::C2S_GameExitEscapedUser_POST)},
        {439, 449, -1, sizeof(::DC::Packet::SSkill_Floor)},
        {451, 461, -1, sizeof(::DC::Packet::SSpell_Floor)},
        {463, 473, -1, sizeof(::DC::Packet::SMusic_Floor)},
        {475, 485, -1, sizeof(::DC::Packet::SShapeShift_Floor)},
        {487, -1, -1, sizeof(::DC::Packet::FloorMatchMaking_CharacterInfo)},
        {507, 517, -1, sizeof(::DC::Packet::C2S_Prepare_FloorMatchMaking)},
        {519, -1, -1, sizeof(::DC::Packet::S2C_GamePolicy_GET)},
        {529, -1, -1, sizeof(::DC::Packet::S2C_GameFileDB_GET)},
        {538, -1, -1, sizeof(::DC::Packet::C2S_GameSpectator_Check_POST)},
        {548, -1, -1, sizeof(::DC::Packet::S2C_GameSpectator_Check_Json)},
        {557, 570, -1, sizeof(::DC::Packet::GameDown_UserPartyInfo)},
        {575, -1, -1, sizeof(::DC::Packet::S2C_GameDown_UserParty_GET)},
        {584, -1, -1, sizeof(::DC::Packet::C2S_GameReady_POST)},
        {593, -1, -1, sizeof(::DC::Packet::GameFloorMatchMaking_UserInfo)},
        {604, -1, -1, sizeof(::DC::Packet::C2S_FloorMatchMaking_POST)},
        {616, -1, -1, sizeof(::DC::Packet::GameFloorMatchMaking_UserInfoResponse)},
        {629, -1, -1, sizeof(::DC::Packet::S2C_FloorMatchMaking_POST_Response)},
        {638, -1, -1, sizeof(::DC::Packet::C2S_IronShield_Report_POST)},
        {660, -1, -1, sizeof(::DC::Packet::C2S_BanCheck_Hardware_POST)},
        {670, -1, -1, sizeof(::DC::Packet::S2C_BanCheck_Hardware_POST_Response)},
        {682, -1, -1, sizeof(::DC::Packet::C2S_Dirty_Item_POST)},
        {695, -1, -1, sizeof(::DC::Packet::C2S_IronShield_Isolation_POST)},
        {705, 716, -1, sizeof(::DC::Packet::C2S_Arena_Result_POST)},
        {719, -1, -1, sizeof(::DC::Packet::C2S_Arena_Exit_POST)},
        {731, -1, -1, sizeof(::DC::Packet::C2S_Game_Finalize_Session_POST)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::DC::Packet::_SGameQuestContentInfo_default_instance_._instance,
    &::DC::Packet::_SGameQuestInfo_default_instance_._instance,
    &::DC::Packet::_S2C_GameEnterUser_Json_default_instance_._instance,
    &::DC::Packet::_GameExitAdvPoint_default_instance_._instance,
    &::DC::Packet::_GameExitExpPoint_default_instance_._instance,
    &::DC::Packet::_Killlog_default_instance_._instance,
    &::DC::Packet::_MonsterKillLog_default_instance_._instance,
    &::DC::Packet::_C2S_GameExitUser_POST_default_instance_._instance,
    &::DC::Packet::_C2S_GameEnterUser_Post_default_instance_._instance,
    &::DC::Packet::_S2C_GameStartServer_Json_default_instance_._instance,
    &::DC::Packet::_C2S_GameEndServer_POST_default_instance_._instance,
    &::DC::Packet::_GameEndUserInfo_default_instance_._instance,
    &::DC::Packet::_C2S_GameStart_POST_default_instance_._instance,
    &::DC::Packet::_C2S_GameCharacterInfo_Get_default_instance_._instance,
    &::DC::Packet::_SRankGameUserInfo_default_instance_._instance,
    &::DC::Packet::_S2C_GameCharacterInfo_Json_default_instance_._instance,
    &::DC::Packet::_C2S_GameAliveCheck_GET_default_instance_._instance,
    &::DC::Packet::_AliveDataInfo_default_instance_._instance,
    &::DC::Packet::_C2S_AliveAppendData_GET_default_instance_._instance,
    &::DC::Packet::_C2S_GameInterrupt_POST_default_instance_._instance,
    &::DC::Packet::_C2S_UserReport_POST_default_instance_._instance,
    &::DC::Packet::_S2C_UserReport_POST_Response_default_instance_._instance,
    &::DC::Packet::_Location_default_instance_._instance,
    &::DC::Packet::_Circle_default_instance_._instance,
    &::DC::Packet::_NewItemLog_default_instance_._instance,
    &::DC::Packet::_GameResultInfo_default_instance_._instance,
    &::DC::Packet::_C2S_GameEscapeUser_POST_default_instance_._instance,
    &::DC::Packet::_C2S_GameExitUser_V2_POST_default_instance_._instance,
    &::DC::Packet::_C2S_GameExitEscapedUser_POST_default_instance_._instance,
    &::DC::Packet::_SSkill_Floor_default_instance_._instance,
    &::DC::Packet::_SSpell_Floor_default_instance_._instance,
    &::DC::Packet::_SMusic_Floor_default_instance_._instance,
    &::DC::Packet::_SShapeShift_Floor_default_instance_._instance,
    &::DC::Packet::_FloorMatchMaking_CharacterInfo_default_instance_._instance,
    &::DC::Packet::_C2S_Prepare_FloorMatchMaking_default_instance_._instance,
    &::DC::Packet::_S2C_GamePolicy_GET_default_instance_._instance,
    &::DC::Packet::_S2C_GameFileDB_GET_default_instance_._instance,
    &::DC::Packet::_C2S_GameSpectator_Check_POST_default_instance_._instance,
    &::DC::Packet::_S2C_GameSpectator_Check_Json_default_instance_._instance,
    &::DC::Packet::_GameDown_UserPartyInfo_default_instance_._instance,
    &::DC::Packet::_S2C_GameDown_UserParty_GET_default_instance_._instance,
    &::DC::Packet::_C2S_GameReady_POST_default_instance_._instance,
    &::DC::Packet::_GameFloorMatchMaking_UserInfo_default_instance_._instance,
    &::DC::Packet::_C2S_FloorMatchMaking_POST_default_instance_._instance,
    &::DC::Packet::_GameFloorMatchMaking_UserInfoResponse_default_instance_._instance,
    &::DC::Packet::_S2C_FloorMatchMaking_POST_Response_default_instance_._instance,
    &::DC::Packet::_C2S_IronShield_Report_POST_default_instance_._instance,
    &::DC::Packet::_C2S_BanCheck_Hardware_POST_default_instance_._instance,
    &::DC::Packet::_S2C_BanCheck_Hardware_POST_Response_default_instance_._instance,
    &::DC::Packet::_C2S_Dirty_Item_POST_default_instance_._instance,
    &::DC::Packet::_C2S_IronShield_Isolation_POST_default_instance_._instance,
    &::DC::Packet::_C2S_Arena_Result_POST_default_instance_._instance,
    &::DC::Packet::_C2S_Arena_Exit_POST_default_instance_._instance,
    &::DC::Packet::_C2S_Game_Finalize_Session_POST_default_instance_._instance,
};
const char descriptor_table_protodef_DediServer_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020DediServer.proto\022\tDC.Packet\032\013_Item.pro"
    "to\032\020_Character.proto\"@\n\025SGameQuestConten"
    "tInfo\022\021\n\tcontentId\030\002 \001(\t\022\024\n\014contentValue"
    "\030\003 \001(\005\"R\n\016SGameQuestInfo\022\017\n\007questId\030\001 \001("
    "\t\022/\n\005infos\030\002 \003(\0132 .DC.Packet.SGameQuestC"
    "ontentInfo\"\310\001\n\026S2C_GameEnterUser_Json\022\017\n"
    "\007restUrl\030\001 \001(\t\022\020\n\010nickName\030\002 \001(\014\022\031\n\021stre"
    "amingNickName\030\003 \001(\014\022\026\n\016characterClass\030\004 "
    "\001(\t\022\023\n\013characterId\030\005 \001(\t\022\016\n\006gender\030\006 \001(\r"
    "\022\r\n\005level\030\007 \001(\r\022\017\n\007partyId\030\010 \001(\t\022\023\n\013karm"
    "aRating\030\t \001(\005\":\n\020GameExitAdvPoint\022\024\n\014adv"
    "PointType\030\001 \001(\005\022\020\n\010advPoint\030\002 \001(\005\":\n\020Gam"
    "eExitExpPoint\022\024\n\014expPointType\030\001 \001(\r\022\020\n\010e"
    "xpPoint\030\002 \001(\r\"~\n\007Killlog\022\033\n\023instigatorAc"
    "countId\030\001 \001(\t\022\026\n\016instigatorName\030\002 \001(\t\022\030\n"
    "\020effectCauserName\030\003 \001(\t\022\022\n\nhitBoxType\030\004 "
    "\001(\r\022\020\n\010advPoint\030\005 \001(\005\"\?\n\016MonsterKillLog\022"
    "\023\n\013monsterName\030\001 \001(\t\022\030\n\020monsterKillCount"
    "\030\002 \001(\r\"\237\004\n\025C2S_GameExitUser_POST\022\016\n\006esca"
    "pe\030\001 \001(\r\022\021\n\taccountId\030\002 \001(\t\022\023\n\013character"
    "Id\030\003 \001(\t\022\016\n\006gameId\030\004 \001(\004\022\037\n\005items\030\005 \003(\0132"
    "\020.DC.Packet.SItem\022)\n\017guaranteedItems\030\006 \003"
    "(\0132\020.DC.Packet.SItem\022\026\n\016characterClass\030\007"
    " \001(\t\022\021\n\tkillCount\030\010 \001(\r\022.\n\tadvPoints\030\t \003"
    "(\0132\033.DC.Packet.GameExitAdvPoint\022\025\n\rescap"
    "eMapName\030\n \001(\t\022\016\n\006reason\030\013 \001(\t\022.\n\texpPoi"
    "nts\030\014 \003(\0132\033.DC.Packet.GameExitExpPoint\022\'"
    "\n\013killLogData\030\r \003(\0132\022.DC.Packet.Killlog\022"
    "2\n\017monsterKillLogs\030\016 \003(\0132\031.DC.Packet.Mon"
    "sterKillLog\022\020\n\010gameType\030\017 \001(\r\022\021\n\tneedBlo"
    "ck\030\020 \001(\r\022\023\n\013needHWBlock\030\021 \001(\r\")\n\006ESCAPE\022"
    "\010\n\004NONE\020\000\022\013\n\007SUCCESS\020\001\022\010\n\004FAIL\020\002\"c\n\026C2S_"
    "GameEnterUser_Post\022\021\n\taccountId\030\001 \001(\t\022\023\n"
    "\013characterId\030\002 \001(\t\022\016\n\006gameId\030\003 \001(\004\022\021\n\tis"
    "Success\030\004 \001(\r\"\316\005\n\030S2C_GameStartServer_Js"
    "on\022\017\n\007restUrl\030\001 \001(\t\022\016\n\006gameId\030\002 \001(\004\022\023\n\013m"
    "axGameUser\030\003 \001(\r\022\023\n\013waitTimeSec\030\004 \001(\r\022\025\n"
    "\rdungeonMapIds\030\005 \003(\t\022\026\n\016gameHackPolicy\030\006"
    " \001(\r\022#\n\033validPlayerMeleeAttackRange\030\007 \001("
    "\r\022\020\n\010gameType\030\010 \001(\r\022\036\n\026shippingLogOnOffP"
    "olicy\030\t \001(\r\022\036\n\026shippingLogLevelPolicy\030\n "
    "\001(\r\022\025\n\rgmOnOffPolicy\030\013 \001(\r\022(\n shippingLo"
    "gIronShieldOnOffPolicy\030\014 \001(\r\022(\n shipping"
    "LogIronShieldLevelPolicy\030\r \001(\r\022\024\n\014curren"
    "tFloor\030\020 \001(\r\022\035\n\025floorMatchmakingOnOff\030\021 "
    "\001(\r\022\027\n\017matchmakingType\030\022 \001(\r\022\016\n\006region\030\023"
    " \001(\t\022\017\n\007fleetId\030\024 \001(\t\022\024\n\014dungeonIdTag\030\025 "
    "\001(\t\022\024\n\014cloudScanUrl\030\026 \001(\t\022\024\n\014serverLocat"
    "e\030\027 \001(\t\022\031\n\021matchingQueueType\030\030 \001(\t\022\035\n\025ba"
    "seCampRemovedPolicy\030\031 \001(\r\022\030\n\020numReserved"
    "Users\030\032 \001(\r\022\"\n\032reservedUserWaitTimeoutSe"
    "c\030\033 \001(\r\"-\n\nMATCH_MAKE\022\010\n\004NONE\020\000\022\n\n\006NORMA"
    "L\020\001\022\t\n\005FLOOR\020\002\"w\n\026C2S_GameEndServer_POST"
    "\022)\n\005users\030\001 \003(\0132\032.DC.Packet.GameEndUserI"
    "nfo\022\016\n\006gameId\030\002 \001(\004\022\"\n\007circles\030\003 \003(\0132\021.D"
    "C.Packet.Circle\"A\n\017GameEndUserInfo\022\021\n\tac"
    "countId\030\001 \001(\t\022\014\n\004kill\030\002 \001(\r\022\r\n\005death\030\003 \001"
    "(\r\"6\n\022C2S_GameStart_POST\022\016\n\006gameId\030\001 \001(\004"
    "\022\020\n\010mapNames\030\002 \003(\t\"e\n\031C2S_GameCharacterI"
    "nfo_Get\022\016\n\006gameId\030\001 \001(\004\022\021\n\taccountId\030\002 \001"
    "(\t\022\023\n\013characterId\030\003 \001(\t\022\020\n\010gameType\030\004 \001("
    "\r\"g\n\021SRankGameUserInfo\022\016\n\006rankId\030\001 \001(\t\022\024"
    "\n\014currentPoint\030\002 \001(\r\022\021\n\tneedPoint\030\003 \001(\r\022"
    "\031\n\021currentTotalPoint\030\004 \001(\r\"\232\005\n\032S2C_GameC"
    "haracterInfo_Json\022\016\n\006gameId\030\001 \001(\004\022\021\n\tacc"
    "ountId\030\002 \001(\t\022\023\n\013characterId\030\003 \001(\t\022\037\n\005ite"
    "ms\030\004 \003(\0132\020.DC.Packet.SItem\022\037\n\005perks\030\005 \003("
    "\0132\020.DC.Packet.SPerk\022!\n\006skills\030\006 \003(\0132\021.DC"
    ".Packet.SSkill\022!\n\006spells\030\007 \003(\0132\021.DC.Pack"
    "et.SSpell\022\030\n\020characterSkinIds\030\010 \003(\t\022\023\n\013i"
    "temSkinIds\030\t \003(\t\022!\n\006emotes\030\n \003(\0132\021.DC.Pa"
    "cket.SEMOTE\022\021\n\tactionIds\030\013 \003(\t\022!\n\006musics"
    "\030\014 \003(\0132\021.DC.Packet.SMusic\022+\n\013shapeShifts"
    "\030\r \003(\0132\026.DC.Packet.SShapeShift\022)\n\006quests"
    "\030\016 \003(\0132\031.DC.Packet.SGameQuestInfo\022.\n\010ran"
    "kInfo\030\020 \001(\0132\034.DC.Packet.SRankGameUserInf"
    "o\022\023\n\013entranceFee\030\021 \001(\r\022\020\n\010seasonId\030\022 \001(\t"
    "\022\020\n\010isSeason\030\023 \001(\r\022\024\n\014armorSkinIds\030\024 \003(\t"
    "\022\030\n\020totalPlayTimeSec\030\025 \001(\005\022\r\n\005level\030\026 \001("
    "\005\022\014\n\004fame\030\027 \001(\005\022\023\n\013isBlackList\030\030 \001(\005\022\021\n\t"
    "gearScore\030\031 \001(\005\"(\n\026C2S_GameAliveCheck_GE"
    "T\022\016\n\006gameId\030\001 \001(\004\"\'\n\rAliveDataInfo\022\n\n\002Id"
    "\030\001 \001(\t\022\n\n\002Us\030\002 \003(\t\"N\n\027C2S_AliveAppendDat"
    "a_GET\022\n\n\002Gs\030\001 \001(\t\022\'\n\005infos\030\002 \003(\0132\030.DC.Pa"
    "cket.AliveDataInfo\"(\n\026C2S_GameInterrupt_"
    "POST\022\016\n\006gameId\030\001 \001(\004\"\321\001\n\023C2S_UserReport_"
    "POST\022\016\n\006gameId\030\001 \001(\004\022\027\n\017reportAccountId\030"
    "\002 \001(\t\022\020\n\010category\030\003 \003(\r\022\027\n\017targetAccount"
    "Id\030\004 \001(\t\0224\n\016targetNickName\030\005 \001(\0132\034.DC.Pa"
    "cket.SACCOUNT_NICKNAME\022\031\n\021targetCharacte"
    "rId\030\006 \001(\t\022\025\n\rreportContent\030\007 \001(\t\"u\n\034S2C_"
    "UserReport_POST_Response\022\027\n\017reportAccoun"
    "tId\030\001 \001(\t\022\027\n\017targetAccountId\030\002 \001(\t\022\021\n\tre"
    "portKey\030\003 \001(\t\022\020\n\010category\030\004 \001(\r\"+\n\010Locat"
    "ion\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\t\n\001z\030\003 \001(\005\":\n\006"
    "Circle\022 \n\003pos\030\001 \001(\0132\023.DC.Packet.Location"
    "\022\016\n\006radius\030\002 \001(\002\">\n\nNewItemLog\022 \n\003pos\030\001 "
    "\001(\0132\023.DC.Packet.Location\022\016\n\006itemId\030\002 \001(\t"
    "\"\326\005\n\016GameResultInfo\022\021\n\taccountId\030\001 \001(\t\022\023"
    "\n\013characterId\030\002 \001(\t\022\016\n\006gameId\030\003 \001(\004\022\026\n\016c"
    "haracterClass\030\004 \001(\t\022\021\n\tkillCount\030\005 \001(\r\022."
    "\n\tadvPoints\030\006 \003(\0132\033.DC.Packet.GameExitAd"
    "vPoint\022\025\n\rescapeMapName\030\007 \001(\t\022\016\n\006reason\030"
    "\010 \001(\t\022.\n\texpPoints\030\t \003(\0132\033.DC.Packet.Gam"
    "eExitExpPoint\022\'\n\013killLogData\030\n \003(\0132\022.DC."
    "Packet.Killlog\0222\n\017monsterKillLogs\030\013 \003(\0132"
    "\031.DC.Packet.MonsterKillLog\022\020\n\010gameType\030\014"
    " \001(\r\022\021\n\tneedBlock\030\r \001(\r\022\023\n\013needHWBlock\030\016"
    " \001(\r\022\025\n\rblockTime_min\030\017 \001(\r\022\032\n\022addTriump"
    "hExpValue\030\020 \001(\005\022&\n\tlocations\030\021 \003(\0132\023.DC."
    "Packet.Location\022*\n\013newItemLogs\030\022 \003(\0132\025.D"
    "C.Packet.NewItemLog\022)\n\006quests\030\023 \003(\0132\031.DC"
    ".Packet.SGameQuestInfo\022\'\n\tgameStats\030\024 \003("
    "\0132\024.DC.Packet.SGameStat\022\020\n\010seasonId\030\025 \001("
    "\t\022\020\n\010isSeason\030\026 \001(\r\022\024\n\014dungeonIdTag\030\027 \001("
    "\t\022\022\n\nisBasecamp\030\030 \001(\r\022\032\n\022userPcLanguageC"
    "ode\030\031 \001(\t\"\300\001\n\027C2S_GameEscapeUser_POST\022-\n"
    "\nresultInfo\030\001 \001(\0132\031.DC.Packet.GameResult"
    "Info\022\037\n\005items\030\002 \003(\0132\020.DC.Packet.SItem\022\020\n"
    "\010secretId\030\003 \001(\t\022C\n\027friendItemRecoveryInf"
    "os\030\004 \003(\0132\".DC.Packet.SFriendItemRecovery"
    "Info\"I\n\030C2S_GameExitUser_V2_POST\022-\n\nresu"
    "ltInfo\030\001 \001(\0132\031.DC.Packet.GameResultInfo\""
    "V\n\034C2S_GameExitEscapedUser_POST\022\021\n\taccou"
    "ntId\030\001 \001(\t\022\023\n\013characterId\030\002 \001(\t\022\016\n\006gameI"
    "d\030\003 \001(\004\"\?\n\014SSkill_Floor\022 \n\005skill\030\001 \001(\0132\021"
    ".DC.Packet.SSkill\022\r\n\005count\030\002 \001(\005\"\?\n\014SSpe"
    "ll_Floor\022 \n\005spell\030\001 \001(\0132\021.DC.Packet.SSpe"
    "ll\022\r\n\005count\030\002 \001(\005\"\?\n\014SMusic_Floor\022 \n\005mus"
    "ic\030\001 \001(\0132\021.DC.Packet.SMusic\022\r\n\005count\030\002 \001"
    "(\005\"N\n\021SShapeShift_Floor\022*\n\nshapeShift\030\001 "
    "\001(\0132\026.DC.Packet.SShapeShift\022\r\n\005count\030\002 \001"
    "(\005\"\236\003\n\036FloorMatchMaking_CharacterInfo\022\021\n"
    "\taccountId\030\001 \001(\t\022\023\n\013characterId\030\002 \001(\t\022\'\n"
    "\tdownItems\030\003 \003(\0132\024.DC.Packet.SDownItem\022\037"
    "\n\005perks\030\004 \003(\0132\020.DC.Packet.SPerk\022\'\n\006skill"
    "s\030\005 \003(\0132\027.DC.Packet.SSkill_Floor\022\'\n\006spel"
    "ls\030\006 \003(\0132\027.DC.Packet.SSpell_Floor\022\'\n\006mus"
    "ics\030\007 \003(\0132\027.DC.Packet.SMusic_Floor\0221\n\013sh"
    "apeShifts\030\010 \003(\0132\034.DC.Packet.SShapeShift_"
    "Floor\022\030\n\020characterSkinIds\030\t \003(\t\022\023\n\013itemS"
    "kinIds\030\n \003(\t\022!\n\006emotes\030\013 \003(\0132\021.DC.Packet"
    ".SEMOTE\022\n\n\002hp\030\014 \001(\005\"\206\001\n\034C2S_Prepare_Floo"
    "rMatchMaking\0227\n\004info\030\001 \001(\0132).DC.Packet.F"
    "loorMatchMaking_CharacterInfo\022-\n\nresultI"
    "nfo\030\002 \001(\0132\031.DC.Packet.GameResultInfo\"9\n\022"
    "S2C_GamePolicy_GET\022\017\n\007appHash\030\001 \003(\t\022\022\n\np"
    "olicyJson\030\002 \001(\t\"(\n\022S2C_GameFileDB_GET\022\022\n"
    "\nfileDBJson\030\001 \001(\t\"@\n\034C2S_GameSpectator_C"
    "heck_POST\022\021\n\taccountId\030\001 \001(\t\022\r\n\005token\030\002 "
    "\001(\t\"1\n\034S2C_GameSpectator_Check_Json\022\021\n\ti"
    "sSuccess\030\001 \001(\r\"\222\001\n\026GameDown_UserPartyInf"
    "o\022\021\n\taccountId\030\001 \001(\t\022.\n\010nickname\030\002 \001(\0132\034"
    ".DC.Packet.SACCOUNT_NICKNAME\022\026\n\016characte"
    "rClass\030\003 \001(\t\022\016\n\006gender\030\004 \001(\r\022\r\n\005level\030\005 "
    "\001(\r\"T\n\032S2C_GameDown_UserParty_GET\0226\n\013par"
    "tyMember\030\001 \003(\0132!.DC.Packet.GameDown_User"
    "PartyInfo\"$\n\022C2S_GameReady_POST\022\016\n\006gameI"
    "d\030\001 \001(\004\"X\n\035GameFloorMatchMaking_UserInfo"
    "\022\021\n\taccountId\030\001 \001(\t\022\023\n\013characterId\030\002 \001(\t"
    "\022\017\n\007partyId\030\003 \001(\t\"\215\001\n\031C2S_FloorMatchMaki"
    "ng_POST\0227\n\005infos\030\001 \003(\0132(.DC.Packet.GameF"
    "loorMatchMaking_UserInfo\022\016\n\006gameId\030\002 \001(\004"
    "\022\024\n\014currentFloor\030\003 \001(\r\022\021\n\tdungeonId\030\004 \001("
    "\t\"|\n%GameFloorMatchMaking_UserInfoRespon"
    "se\022\021\n\taccountId\030\001 \001(\t\022\023\n\013characterId\030\002 \001"
    "(\t\022\n\n\002ip\030\003 \001(\t\022\014\n\004port\030\004 \001(\005\022\021\n\tsessionI"
    "d\030\005 \001(\t\"e\n\"S2C_FloorMatchMaking_POST_Res"
    "ponse\022\?\n\005infos\030\001 \003(\01320.DC.Packet.GameFlo"
    "orMatchMaking_UserInfoResponse\"\247\002\n\032C2S_I"
    "ronShield_Report_POST\022\024\n\014callbackType\030\001 "
    "\001(\r\022\020\n\010reportId\030\002 \001(\t\022\014\n\004hIds\030\003 \003(\t\022\014\n\004b"
    "lob\030\004 \003(\r\022\021\n\taccountId\030\005 \001(\t\022\023\n\013characte"
    "rId\030\006 \001(\t\022\026\n\016originNickname\030\007 \001(\t\022\016\n\006rea"
    "son\030\010 \001(\t\022\021\n\tneedBlock\030\t \001(\r\022\023\n\013needHWBl"
    "ock\030\n \001(\r\022\025\n\rblockTime_min\030\013 \001(\r\022\017\n\007banT"
    "ype\030\014 \001(\r\022\020\n\010blobType\030\r \001(\005\022\023\n\013blobNameT"
    "ag\030\016 \001(\t\"=\n\032C2S_BanCheck_Hardware_POST\022\021"
    "\n\taccountId\030\001 \001(\t\022\014\n\004hIds\030\002 \003(\t\"k\n#S2C_B"
    "anCheck_Hardware_POST_Response\022\021\n\taccoun"
    "tId\030\001 \001(\t\022\r\n\005isBan\030\002 \001(\r\022\017\n\007banHIds\030\003 \003("
    "\t\022\021\n\tloginHIds\030\004 \003(\t\"\221\001\n\023C2S_Dirty_Item_"
    "POST\022\021\n\taccountId\030\001 \001(\t\022\023\n\013characterId\030\002"
    " \001(\t\022\016\n\006gameId\030\003 \001(\004\022%\n\013upsertItems\030\004 \003("
    "\0132\020.DC.Packet.SItem\022\033\n\023deleteItemUniqueI"
    "ds\030\005 \003(\004\"J\n\035C2S_IronShield_Isolation_POS"
    "T\022\021\n\taccountId\030\001 \001(\t\022\026\n\016isolationHours\030\002"
    " \001(\005\"y\n\025C2S_Arena_Result_POST\022-\n\nresultI"
    "nfo\030\001 \001(\0132\031.DC.Packet.GameResultInfo\022\037\n\005"
    "items\030\002 \003(\0132\020.DC.Packet.SItem\022\020\n\010secretI"
    "d\030\003 \001(\t\"_\n\023C2S_Arena_Exit_POST\022\021\n\taccoun"
    "tId\030\001 \001(\t\022\023\n\013characterId\030\002 \001(\t\022\016\n\006gameId"
    "\030\003 \001(\004\022\020\n\010secretId\030\004 \001(\t\"\201\001\n\036C2S_Game_Fi"
    "nalize_Session_POST\022\016\n\006gameId\030\001 \001(\004\022\021\n\ta"
    "ccountId\030\002 \001(\t\022\023\n\013characterId\030\003 \001(\t\022\'\n\rr"
    "ecoveryItems\030\004 \003(\0132\020.DC.Packet.SItemB&\n\026"
    "com.packets.dediServerB\ndediServerP\000b\006pr"
    "oto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_DediServer_2eproto_deps[2] =
    {
        &::descriptor_table__5fCharacter_2eproto,
        &::descriptor_table__5fItem_2eproto,
};
static ::absl::once_flag descriptor_table_DediServer_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_DediServer_2eproto = {
    false,
    false,
    7884,
    descriptor_table_protodef_DediServer_2eproto,
    "DediServer.proto",
    &descriptor_table_DediServer_2eproto_once,
    descriptor_table_DediServer_2eproto_deps,
    2,
    54,
    schemas,
    file_default_instances,
    TableStruct_DediServer_2eproto::offsets,
    file_level_enum_descriptors_DediServer_2eproto,
    file_level_service_descriptors_DediServer_2eproto,
};
namespace DC {
namespace Packet {
const ::google::protobuf::EnumDescriptor* C2S_GameExitUser_POST_ESCAPE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_DediServer_2eproto);
  return file_level_enum_descriptors_DediServer_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t C2S_GameExitUser_POST_ESCAPE_internal_data_[] = {
    196608u, 0u, };
bool C2S_GameExitUser_POST_ESCAPE_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr C2S_GameExitUser_POST_ESCAPE C2S_GameExitUser_POST::NONE;
constexpr C2S_GameExitUser_POST_ESCAPE C2S_GameExitUser_POST::SUCCESS;
constexpr C2S_GameExitUser_POST_ESCAPE C2S_GameExitUser_POST::FAIL;
constexpr C2S_GameExitUser_POST_ESCAPE C2S_GameExitUser_POST::ESCAPE_MIN;
constexpr C2S_GameExitUser_POST_ESCAPE C2S_GameExitUser_POST::ESCAPE_MAX;
constexpr int C2S_GameExitUser_POST::ESCAPE_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* S2C_GameStartServer_Json_MATCH_MAKE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_DediServer_2eproto);
  return file_level_enum_descriptors_DediServer_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t S2C_GameStartServer_Json_MATCH_MAKE_internal_data_[] = {
    196608u, 0u, };
bool S2C_GameStartServer_Json_MATCH_MAKE_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr S2C_GameStartServer_Json_MATCH_MAKE S2C_GameStartServer_Json::NONE;
constexpr S2C_GameStartServer_Json_MATCH_MAKE S2C_GameStartServer_Json::NORMAL;
constexpr S2C_GameStartServer_Json_MATCH_MAKE S2C_GameStartServer_Json::FLOOR;
constexpr S2C_GameStartServer_Json_MATCH_MAKE S2C_GameStartServer_Json::MATCH_MAKE_MIN;
constexpr S2C_GameStartServer_Json_MATCH_MAKE S2C_GameStartServer_Json::MATCH_MAKE_MAX;
constexpr int S2C_GameStartServer_Json::MATCH_MAKE_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class SGameQuestContentInfo::_Internal {
 public:
};

SGameQuestContentInfo::SGameQuestContentInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SGameQuestContentInfo)
}
inline PROTOBUF_NDEBUG_INLINE SGameQuestContentInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SGameQuestContentInfo& from_msg)
      : contentid_(arena, from.contentid_),
        _cached_size_{0} {}

SGameQuestContentInfo::SGameQuestContentInfo(
    ::google::protobuf::Arena* arena,
    const SGameQuestContentInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SGameQuestContentInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.contentvalue_ = from._impl_.contentvalue_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SGameQuestContentInfo)
}
inline PROTOBUF_NDEBUG_INLINE SGameQuestContentInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : contentid_(arena),
        _cached_size_{0} {}

inline void SGameQuestContentInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.contentvalue_ = {};
}
SGameQuestContentInfo::~SGameQuestContentInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.SGameQuestContentInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SGameQuestContentInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.contentid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SGameQuestContentInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SGameQuestContentInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SGameQuestContentInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SGameQuestContentInfo>(),
            ::google::protobuf::Message::GetNewImpl<SGameQuestContentInfo>(),
            ::google::protobuf::Message::GetClearImpl<SGameQuestContentInfo>(), &SGameQuestContentInfo::ByteSizeLong,
                &SGameQuestContentInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SGameQuestContentInfo, _impl_._cached_size_),
            false,
        },
        &SGameQuestContentInfo::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SGameQuestContentInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> SGameQuestContentInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SGameQuestContentInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string contentId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SGameQuestContentInfo, _impl_.contentid_)}},
    // int32 contentValue = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SGameQuestContentInfo, _impl_.contentvalue_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SGameQuestContentInfo, _impl_.contentvalue_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string contentId = 2;
    {PROTOBUF_FIELD_OFFSET(SGameQuestContentInfo, _impl_.contentid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 contentValue = 3;
    {PROTOBUF_FIELD_OFFSET(SGameQuestContentInfo, _impl_.contentvalue_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\37\11\0\0\0\0\0\0"
    "DC.Packet.SGameQuestContentInfo"
    "contentId"
  }},
};

PROTOBUF_NOINLINE void SGameQuestContentInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SGameQuestContentInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contentid_.ClearToEmpty();
  _impl_.contentvalue_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SGameQuestContentInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SGameQuestContentInfo& this_ = static_cast<const SGameQuestContentInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SGameQuestContentInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SGameQuestContentInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SGameQuestContentInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string contentId = 2;
          if (!this_._internal_contentid().empty()) {
            const std::string& _s = this_._internal_contentid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SGameQuestContentInfo.contentId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 contentValue = 3;
          if (this_._internal_contentvalue() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_contentvalue(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SGameQuestContentInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SGameQuestContentInfo::ByteSizeLong(const MessageLite& base) {
          const SGameQuestContentInfo& this_ = static_cast<const SGameQuestContentInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SGameQuestContentInfo::ByteSizeLong() const {
          const SGameQuestContentInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SGameQuestContentInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string contentId = 2;
            if (!this_._internal_contentid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contentid());
            }
            // int32 contentValue = 3;
            if (this_._internal_contentvalue() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_contentvalue());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SGameQuestContentInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SGameQuestContentInfo*>(&to_msg);
  auto& from = static_cast<const SGameQuestContentInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SGameQuestContentInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_contentid().empty()) {
    _this->_internal_set_contentid(from._internal_contentid());
  }
  if (from._internal_contentvalue() != 0) {
    _this->_impl_.contentvalue_ = from._impl_.contentvalue_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SGameQuestContentInfo::CopyFrom(const SGameQuestContentInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SGameQuestContentInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SGameQuestContentInfo::InternalSwap(SGameQuestContentInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contentid_, &other->_impl_.contentid_, arena);
        swap(_impl_.contentvalue_, other->_impl_.contentvalue_);
}

::google::protobuf::Metadata SGameQuestContentInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SGameQuestInfo::_Internal {
 public:
};

SGameQuestInfo::SGameQuestInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SGameQuestInfo)
}
inline PROTOBUF_NDEBUG_INLINE SGameQuestInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SGameQuestInfo& from_msg)
      : infos_{visibility, arena, from.infos_},
        questid_(arena, from.questid_),
        _cached_size_{0} {}

SGameQuestInfo::SGameQuestInfo(
    ::google::protobuf::Arena* arena,
    const SGameQuestInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SGameQuestInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SGameQuestInfo)
}
inline PROTOBUF_NDEBUG_INLINE SGameQuestInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : infos_{visibility, arena},
        questid_(arena),
        _cached_size_{0} {}

inline void SGameQuestInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SGameQuestInfo::~SGameQuestInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.SGameQuestInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SGameQuestInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.questid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SGameQuestInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SGameQuestInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SGameQuestInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SGameQuestInfo>(),
            ::google::protobuf::Message::GetNewImpl<SGameQuestInfo>(),
            ::google::protobuf::Message::GetClearImpl<SGameQuestInfo>(), &SGameQuestInfo::ByteSizeLong,
                &SGameQuestInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SGameQuestInfo, _impl_._cached_size_),
            false,
        },
        &SGameQuestInfo::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SGameQuestInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 40, 2> SGameQuestInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SGameQuestInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.SGameQuestContentInfo infos = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SGameQuestInfo, _impl_.infos_)}},
    // string questId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SGameQuestInfo, _impl_.questid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string questId = 1;
    {PROTOBUF_FIELD_OFFSET(SGameQuestInfo, _impl_.questid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .DC.Packet.SGameQuestContentInfo infos = 2;
    {PROTOBUF_FIELD_OFFSET(SGameQuestInfo, _impl_.infos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SGameQuestContentInfo>()},
  }}, {{
    "\30\7\0\0\0\0\0\0"
    "DC.Packet.SGameQuestInfo"
    "questId"
  }},
};

PROTOBUF_NOINLINE void SGameQuestInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SGameQuestInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.infos_.Clear();
  _impl_.questid_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SGameQuestInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SGameQuestInfo& this_ = static_cast<const SGameQuestInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SGameQuestInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SGameQuestInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SGameQuestInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string questId = 1;
          if (!this_._internal_questid().empty()) {
            const std::string& _s = this_._internal_questid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SGameQuestInfo.questId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .DC.Packet.SGameQuestContentInfo infos = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_infos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_infos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SGameQuestInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SGameQuestInfo::ByteSizeLong(const MessageLite& base) {
          const SGameQuestInfo& this_ = static_cast<const SGameQuestInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SGameQuestInfo::ByteSizeLong() const {
          const SGameQuestInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SGameQuestInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SGameQuestContentInfo infos = 2;
            {
              total_size += 1UL * this_._internal_infos_size();
              for (const auto& msg : this_._internal_infos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string questId = 1;
            if (!this_._internal_questid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_questid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SGameQuestInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SGameQuestInfo*>(&to_msg);
  auto& from = static_cast<const SGameQuestInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SGameQuestInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infos()->MergeFrom(
      from._internal_infos());
  if (!from._internal_questid().empty()) {
    _this->_internal_set_questid(from._internal_questid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SGameQuestInfo::CopyFrom(const SGameQuestInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SGameQuestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SGameQuestInfo::InternalSwap(SGameQuestInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.infos_.InternalSwap(&other->_impl_.infos_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.questid_, &other->_impl_.questid_, arena);
}

::google::protobuf::Metadata SGameQuestInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class S2C_GameEnterUser_Json::_Internal {
 public:
};

S2C_GameEnterUser_Json::S2C_GameEnterUser_Json(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.S2C_GameEnterUser_Json)
}
inline PROTOBUF_NDEBUG_INLINE S2C_GameEnterUser_Json::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::S2C_GameEnterUser_Json& from_msg)
      : resturl_(arena, from.resturl_),
        nickname_(arena, from.nickname_),
        streamingnickname_(arena, from.streamingnickname_),
        characterclass_(arena, from.characterclass_),
        characterid_(arena, from.characterid_),
        partyid_(arena, from.partyid_),
        _cached_size_{0} {}

S2C_GameEnterUser_Json::S2C_GameEnterUser_Json(
    ::google::protobuf::Arena* arena,
    const S2C_GameEnterUser_Json& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  S2C_GameEnterUser_Json* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gender_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gender_),
           offsetof(Impl_, karmarating_) -
               offsetof(Impl_, gender_) +
               sizeof(Impl_::karmarating_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.S2C_GameEnterUser_Json)
}
inline PROTOBUF_NDEBUG_INLINE S2C_GameEnterUser_Json::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : resturl_(arena),
        nickname_(arena),
        streamingnickname_(arena),
        characterclass_(arena),
        characterid_(arena),
        partyid_(arena),
        _cached_size_{0} {}

inline void S2C_GameEnterUser_Json::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gender_),
           0,
           offsetof(Impl_, karmarating_) -
               offsetof(Impl_, gender_) +
               sizeof(Impl_::karmarating_));
}
S2C_GameEnterUser_Json::~S2C_GameEnterUser_Json() {
  // @@protoc_insertion_point(destructor:DC.Packet.S2C_GameEnterUser_Json)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void S2C_GameEnterUser_Json::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.resturl_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.streamingnickname_.Destroy();
  _impl_.characterclass_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.partyid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    S2C_GameEnterUser_Json::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_S2C_GameEnterUser_Json_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &S2C_GameEnterUser_Json::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<S2C_GameEnterUser_Json>(),
            ::google::protobuf::Message::GetNewImpl<S2C_GameEnterUser_Json>(),
            ::google::protobuf::Message::GetClearImpl<S2C_GameEnterUser_Json>(), &S2C_GameEnterUser_Json::ByteSizeLong,
                &S2C_GameEnterUser_Json::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_._cached_size_),
            false,
        },
        &S2C_GameEnterUser_Json::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* S2C_GameEnterUser_Json::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 88, 2> S2C_GameEnterUser_Json::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::S2C_GameEnterUser_Json>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string restUrl = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.resturl_)}},
    // bytes nickName = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.nickname_)}},
    // bytes streamingNickName = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.streamingnickname_)}},
    // string characterClass = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.characterclass_)}},
    // string characterId = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.characterid_)}},
    // uint32 gender = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_GameEnterUser_Json, _impl_.gender_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.gender_)}},
    // uint32 level = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_GameEnterUser_Json, _impl_.level_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.level_)}},
    // string partyId = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.partyid_)}},
    // int32 karmaRating = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_GameEnterUser_Json, _impl_.karmarating_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.karmarating_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string restUrl = 1;
    {PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.resturl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes nickName = 2;
    {PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.nickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes streamingNickName = 3;
    {PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.streamingnickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string characterClass = 4;
    {PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.characterclass_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 5;
    {PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 gender = 6;
    {PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.gender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 level = 7;
    {PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string partyId = 8;
    {PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.partyid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 karmaRating = 9;
    {PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.karmarating_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\40\7\0\0\16\13\0\0\7\0\0\0\0\0\0\0"
    "DC.Packet.S2C_GameEnterUser_Json"
    "restUrl"
    "characterClass"
    "characterId"
    "partyId"
  }},
};

PROTOBUF_NOINLINE void S2C_GameEnterUser_Json::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.S2C_GameEnterUser_Json)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resturl_.ClearToEmpty();
  _impl_.nickname_.ClearToEmpty();
  _impl_.streamingnickname_.ClearToEmpty();
  _impl_.characterclass_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.partyid_.ClearToEmpty();
  ::memset(&_impl_.gender_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.karmarating_) -
      reinterpret_cast<char*>(&_impl_.gender_)) + sizeof(_impl_.karmarating_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* S2C_GameEnterUser_Json::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const S2C_GameEnterUser_Json& this_ = static_cast<const S2C_GameEnterUser_Json&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* S2C_GameEnterUser_Json::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const S2C_GameEnterUser_Json& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.S2C_GameEnterUser_Json)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string restUrl = 1;
          if (!this_._internal_resturl().empty()) {
            const std::string& _s = this_._internal_resturl();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameEnterUser_Json.restUrl");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bytes nickName = 2;
          if (!this_._internal_nickname().empty()) {
            const std::string& _s = this_._internal_nickname();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // bytes streamingNickName = 3;
          if (!this_._internal_streamingnickname().empty()) {
            const std::string& _s = this_._internal_streamingnickname();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          // string characterClass = 4;
          if (!this_._internal_characterclass().empty()) {
            const std::string& _s = this_._internal_characterclass();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameEnterUser_Json.characterClass");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string characterId = 5;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameEnterUser_Json.characterId");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // uint32 gender = 6;
          if (this_._internal_gender() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_gender(), target);
          }

          // uint32 level = 7;
          if (this_._internal_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_level(), target);
          }

          // string partyId = 8;
          if (!this_._internal_partyid().empty()) {
            const std::string& _s = this_._internal_partyid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameEnterUser_Json.partyId");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // int32 karmaRating = 9;
          if (this_._internal_karmarating() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<9>(
                    stream, this_._internal_karmarating(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.S2C_GameEnterUser_Json)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t S2C_GameEnterUser_Json::ByteSizeLong(const MessageLite& base) {
          const S2C_GameEnterUser_Json& this_ = static_cast<const S2C_GameEnterUser_Json&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t S2C_GameEnterUser_Json::ByteSizeLong() const {
          const S2C_GameEnterUser_Json& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.S2C_GameEnterUser_Json)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string restUrl = 1;
            if (!this_._internal_resturl().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_resturl());
            }
            // bytes nickName = 2;
            if (!this_._internal_nickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_nickname());
            }
            // bytes streamingNickName = 3;
            if (!this_._internal_streamingnickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_streamingnickname());
            }
            // string characterClass = 4;
            if (!this_._internal_characterclass().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterclass());
            }
            // string characterId = 5;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // string partyId = 8;
            if (!this_._internal_partyid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_partyid());
            }
            // uint32 gender = 6;
            if (this_._internal_gender() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gender());
            }
            // uint32 level = 7;
            if (this_._internal_level() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_level());
            }
            // int32 karmaRating = 9;
            if (this_._internal_karmarating() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_karmarating());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void S2C_GameEnterUser_Json::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<S2C_GameEnterUser_Json*>(&to_msg);
  auto& from = static_cast<const S2C_GameEnterUser_Json&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.S2C_GameEnterUser_Json)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_resturl().empty()) {
    _this->_internal_set_resturl(from._internal_resturl());
  }
  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_streamingnickname().empty()) {
    _this->_internal_set_streamingnickname(from._internal_streamingnickname());
  }
  if (!from._internal_characterclass().empty()) {
    _this->_internal_set_characterclass(from._internal_characterclass());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (!from._internal_partyid().empty()) {
    _this->_internal_set_partyid(from._internal_partyid());
  }
  if (from._internal_gender() != 0) {
    _this->_impl_.gender_ = from._impl_.gender_;
  }
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  if (from._internal_karmarating() != 0) {
    _this->_impl_.karmarating_ = from._impl_.karmarating_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_GameEnterUser_Json::CopyFrom(const S2C_GameEnterUser_Json& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.S2C_GameEnterUser_Json)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void S2C_GameEnterUser_Json::InternalSwap(S2C_GameEnterUser_Json* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resturl_, &other->_impl_.resturl_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.streamingnickname_, &other->_impl_.streamingnickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterclass_, &other->_impl_.characterclass_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.partyid_, &other->_impl_.partyid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.karmarating_)
      + sizeof(S2C_GameEnterUser_Json::_impl_.karmarating_)
      - PROTOBUF_FIELD_OFFSET(S2C_GameEnterUser_Json, _impl_.gender_)>(
          reinterpret_cast<char*>(&_impl_.gender_),
          reinterpret_cast<char*>(&other->_impl_.gender_));
}

::google::protobuf::Metadata S2C_GameEnterUser_Json::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameExitAdvPoint::_Internal {
 public:
};

GameExitAdvPoint::GameExitAdvPoint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.GameExitAdvPoint)
}
GameExitAdvPoint::GameExitAdvPoint(
    ::google::protobuf::Arena* arena, const GameExitAdvPoint& from)
    : GameExitAdvPoint(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GameExitAdvPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GameExitAdvPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, advpointtype_),
           0,
           offsetof(Impl_, advpoint_) -
               offsetof(Impl_, advpointtype_) +
               sizeof(Impl_::advpoint_));
}
GameExitAdvPoint::~GameExitAdvPoint() {
  // @@protoc_insertion_point(destructor:DC.Packet.GameExitAdvPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameExitAdvPoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GameExitAdvPoint::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GameExitAdvPoint_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GameExitAdvPoint::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GameExitAdvPoint>(),
            ::google::protobuf::Message::GetNewImpl<GameExitAdvPoint>(),
            ::google::protobuf::Message::GetClearImpl<GameExitAdvPoint>(), &GameExitAdvPoint::ByteSizeLong,
                &GameExitAdvPoint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GameExitAdvPoint, _impl_._cached_size_),
            false,
        },
        &GameExitAdvPoint::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GameExitAdvPoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GameExitAdvPoint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::GameExitAdvPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 advPoint = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameExitAdvPoint, _impl_.advpoint_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GameExitAdvPoint, _impl_.advpoint_)}},
    // int32 advPointType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameExitAdvPoint, _impl_.advpointtype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GameExitAdvPoint, _impl_.advpointtype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 advPointType = 1;
    {PROTOBUF_FIELD_OFFSET(GameExitAdvPoint, _impl_.advpointtype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 advPoint = 2;
    {PROTOBUF_FIELD_OFFSET(GameExitAdvPoint, _impl_.advpoint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GameExitAdvPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.GameExitAdvPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.advpointtype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.advpoint_) -
      reinterpret_cast<char*>(&_impl_.advpointtype_)) + sizeof(_impl_.advpoint_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameExitAdvPoint::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameExitAdvPoint& this_ = static_cast<const GameExitAdvPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameExitAdvPoint::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameExitAdvPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.GameExitAdvPoint)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 advPointType = 1;
          if (this_._internal_advpointtype() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_advpointtype(), target);
          }

          // int32 advPoint = 2;
          if (this_._internal_advpoint() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_advpoint(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.GameExitAdvPoint)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameExitAdvPoint::ByteSizeLong(const MessageLite& base) {
          const GameExitAdvPoint& this_ = static_cast<const GameExitAdvPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameExitAdvPoint::ByteSizeLong() const {
          const GameExitAdvPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.GameExitAdvPoint)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 advPointType = 1;
            if (this_._internal_advpointtype() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_advpointtype());
            }
            // int32 advPoint = 2;
            if (this_._internal_advpoint() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_advpoint());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameExitAdvPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameExitAdvPoint*>(&to_msg);
  auto& from = static_cast<const GameExitAdvPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.GameExitAdvPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_advpointtype() != 0) {
    _this->_impl_.advpointtype_ = from._impl_.advpointtype_;
  }
  if (from._internal_advpoint() != 0) {
    _this->_impl_.advpoint_ = from._impl_.advpoint_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameExitAdvPoint::CopyFrom(const GameExitAdvPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.GameExitAdvPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameExitAdvPoint::InternalSwap(GameExitAdvPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameExitAdvPoint, _impl_.advpoint_)
      + sizeof(GameExitAdvPoint::_impl_.advpoint_)
      - PROTOBUF_FIELD_OFFSET(GameExitAdvPoint, _impl_.advpointtype_)>(
          reinterpret_cast<char*>(&_impl_.advpointtype_),
          reinterpret_cast<char*>(&other->_impl_.advpointtype_));
}

::google::protobuf::Metadata GameExitAdvPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameExitExpPoint::_Internal {
 public:
};

GameExitExpPoint::GameExitExpPoint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.GameExitExpPoint)
}
GameExitExpPoint::GameExitExpPoint(
    ::google::protobuf::Arena* arena, const GameExitExpPoint& from)
    : GameExitExpPoint(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GameExitExpPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GameExitExpPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, exppointtype_),
           0,
           offsetof(Impl_, exppoint_) -
               offsetof(Impl_, exppointtype_) +
               sizeof(Impl_::exppoint_));
}
GameExitExpPoint::~GameExitExpPoint() {
  // @@protoc_insertion_point(destructor:DC.Packet.GameExitExpPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameExitExpPoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GameExitExpPoint::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GameExitExpPoint_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GameExitExpPoint::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GameExitExpPoint>(),
            ::google::protobuf::Message::GetNewImpl<GameExitExpPoint>(),
            ::google::protobuf::Message::GetClearImpl<GameExitExpPoint>(), &GameExitExpPoint::ByteSizeLong,
                &GameExitExpPoint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GameExitExpPoint, _impl_._cached_size_),
            false,
        },
        &GameExitExpPoint::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GameExitExpPoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GameExitExpPoint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::GameExitExpPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 expPoint = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameExitExpPoint, _impl_.exppoint_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GameExitExpPoint, _impl_.exppoint_)}},
    // uint32 expPointType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameExitExpPoint, _impl_.exppointtype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GameExitExpPoint, _impl_.exppointtype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 expPointType = 1;
    {PROTOBUF_FIELD_OFFSET(GameExitExpPoint, _impl_.exppointtype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 expPoint = 2;
    {PROTOBUF_FIELD_OFFSET(GameExitExpPoint, _impl_.exppoint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GameExitExpPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.GameExitExpPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.exppointtype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.exppoint_) -
      reinterpret_cast<char*>(&_impl_.exppointtype_)) + sizeof(_impl_.exppoint_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameExitExpPoint::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameExitExpPoint& this_ = static_cast<const GameExitExpPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameExitExpPoint::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameExitExpPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.GameExitExpPoint)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 expPointType = 1;
          if (this_._internal_exppointtype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_exppointtype(), target);
          }

          // uint32 expPoint = 2;
          if (this_._internal_exppoint() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_exppoint(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.GameExitExpPoint)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameExitExpPoint::ByteSizeLong(const MessageLite& base) {
          const GameExitExpPoint& this_ = static_cast<const GameExitExpPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameExitExpPoint::ByteSizeLong() const {
          const GameExitExpPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.GameExitExpPoint)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint32 expPointType = 1;
            if (this_._internal_exppointtype() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_exppointtype());
            }
            // uint32 expPoint = 2;
            if (this_._internal_exppoint() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_exppoint());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameExitExpPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameExitExpPoint*>(&to_msg);
  auto& from = static_cast<const GameExitExpPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.GameExitExpPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_exppointtype() != 0) {
    _this->_impl_.exppointtype_ = from._impl_.exppointtype_;
  }
  if (from._internal_exppoint() != 0) {
    _this->_impl_.exppoint_ = from._impl_.exppoint_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameExitExpPoint::CopyFrom(const GameExitExpPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.GameExitExpPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameExitExpPoint::InternalSwap(GameExitExpPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameExitExpPoint, _impl_.exppoint_)
      + sizeof(GameExitExpPoint::_impl_.exppoint_)
      - PROTOBUF_FIELD_OFFSET(GameExitExpPoint, _impl_.exppointtype_)>(
          reinterpret_cast<char*>(&_impl_.exppointtype_),
          reinterpret_cast<char*>(&other->_impl_.exppointtype_));
}

::google::protobuf::Metadata GameExitExpPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Killlog::_Internal {
 public:
};

Killlog::Killlog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Killlog)
}
inline PROTOBUF_NDEBUG_INLINE Killlog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Killlog& from_msg)
      : instigatoraccountid_(arena, from.instigatoraccountid_),
        instigatorname_(arena, from.instigatorname_),
        effectcausername_(arena, from.effectcausername_),
        _cached_size_{0} {}

Killlog::Killlog(
    ::google::protobuf::Arena* arena,
    const Killlog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Killlog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hitboxtype_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, hitboxtype_),
           offsetof(Impl_, advpoint_) -
               offsetof(Impl_, hitboxtype_) +
               sizeof(Impl_::advpoint_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Killlog)
}
inline PROTOBUF_NDEBUG_INLINE Killlog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : instigatoraccountid_(arena),
        instigatorname_(arena),
        effectcausername_(arena),
        _cached_size_{0} {}

inline void Killlog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hitboxtype_),
           0,
           offsetof(Impl_, advpoint_) -
               offsetof(Impl_, hitboxtype_) +
               sizeof(Impl_::advpoint_));
}
Killlog::~Killlog() {
  // @@protoc_insertion_point(destructor:DC.Packet.Killlog)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Killlog::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.instigatoraccountid_.Destroy();
  _impl_.instigatorname_.Destroy();
  _impl_.effectcausername_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Killlog::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Killlog_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Killlog::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Killlog>(),
            ::google::protobuf::Message::GetNewImpl<Killlog>(),
            ::google::protobuf::Message::GetClearImpl<Killlog>(), &Killlog::ByteSizeLong,
                &Killlog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Killlog, _impl_._cached_size_),
            false,
        },
        &Killlog::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Killlog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 75, 2> Killlog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Killlog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string instigatorAccountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Killlog, _impl_.instigatoraccountid_)}},
    // string instigatorName = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Killlog, _impl_.instigatorname_)}},
    // string effectCauserName = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Killlog, _impl_.effectcausername_)}},
    // uint32 hitBoxType = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Killlog, _impl_.hitboxtype_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Killlog, _impl_.hitboxtype_)}},
    // int32 advPoint = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Killlog, _impl_.advpoint_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Killlog, _impl_.advpoint_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string instigatorAccountId = 1;
    {PROTOBUF_FIELD_OFFSET(Killlog, _impl_.instigatoraccountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instigatorName = 2;
    {PROTOBUF_FIELD_OFFSET(Killlog, _impl_.instigatorname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string effectCauserName = 3;
    {PROTOBUF_FIELD_OFFSET(Killlog, _impl_.effectcausername_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 hitBoxType = 4;
    {PROTOBUF_FIELD_OFFSET(Killlog, _impl_.hitboxtype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // int32 advPoint = 5;
    {PROTOBUF_FIELD_OFFSET(Killlog, _impl_.advpoint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\21\23\16\20\0\0\0\0"
    "DC.Packet.Killlog"
    "instigatorAccountId"
    "instigatorName"
    "effectCauserName"
  }},
};

PROTOBUF_NOINLINE void Killlog::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Killlog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instigatoraccountid_.ClearToEmpty();
  _impl_.instigatorname_.ClearToEmpty();
  _impl_.effectcausername_.ClearToEmpty();
  ::memset(&_impl_.hitboxtype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.advpoint_) -
      reinterpret_cast<char*>(&_impl_.hitboxtype_)) + sizeof(_impl_.advpoint_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Killlog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Killlog& this_ = static_cast<const Killlog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Killlog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Killlog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Killlog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string instigatorAccountId = 1;
          if (!this_._internal_instigatoraccountid().empty()) {
            const std::string& _s = this_._internal_instigatoraccountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Killlog.instigatorAccountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string instigatorName = 2;
          if (!this_._internal_instigatorname().empty()) {
            const std::string& _s = this_._internal_instigatorname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Killlog.instigatorName");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string effectCauserName = 3;
          if (!this_._internal_effectcausername().empty()) {
            const std::string& _s = this_._internal_effectcausername();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Killlog.effectCauserName");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint32 hitBoxType = 4;
          if (this_._internal_hitboxtype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_hitboxtype(), target);
          }

          // int32 advPoint = 5;
          if (this_._internal_advpoint() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_advpoint(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Killlog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Killlog::ByteSizeLong(const MessageLite& base) {
          const Killlog& this_ = static_cast<const Killlog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Killlog::ByteSizeLong() const {
          const Killlog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Killlog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string instigatorAccountId = 1;
            if (!this_._internal_instigatoraccountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instigatoraccountid());
            }
            // string instigatorName = 2;
            if (!this_._internal_instigatorname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instigatorname());
            }
            // string effectCauserName = 3;
            if (!this_._internal_effectcausername().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_effectcausername());
            }
            // uint32 hitBoxType = 4;
            if (this_._internal_hitboxtype() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_hitboxtype());
            }
            // int32 advPoint = 5;
            if (this_._internal_advpoint() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_advpoint());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Killlog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Killlog*>(&to_msg);
  auto& from = static_cast<const Killlog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Killlog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_instigatoraccountid().empty()) {
    _this->_internal_set_instigatoraccountid(from._internal_instigatoraccountid());
  }
  if (!from._internal_instigatorname().empty()) {
    _this->_internal_set_instigatorname(from._internal_instigatorname());
  }
  if (!from._internal_effectcausername().empty()) {
    _this->_internal_set_effectcausername(from._internal_effectcausername());
  }
  if (from._internal_hitboxtype() != 0) {
    _this->_impl_.hitboxtype_ = from._impl_.hitboxtype_;
  }
  if (from._internal_advpoint() != 0) {
    _this->_impl_.advpoint_ = from._impl_.advpoint_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Killlog::CopyFrom(const Killlog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Killlog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Killlog::InternalSwap(Killlog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instigatoraccountid_, &other->_impl_.instigatoraccountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instigatorname_, &other->_impl_.instigatorname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.effectcausername_, &other->_impl_.effectcausername_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Killlog, _impl_.advpoint_)
      + sizeof(Killlog::_impl_.advpoint_)
      - PROTOBUF_FIELD_OFFSET(Killlog, _impl_.hitboxtype_)>(
          reinterpret_cast<char*>(&_impl_.hitboxtype_),
          reinterpret_cast<char*>(&other->_impl_.hitboxtype_));
}

::google::protobuf::Metadata Killlog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MonsterKillLog::_Internal {
 public:
};

MonsterKillLog::MonsterKillLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.MonsterKillLog)
}
inline PROTOBUF_NDEBUG_INLINE MonsterKillLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::MonsterKillLog& from_msg)
      : monstername_(arena, from.monstername_),
        _cached_size_{0} {}

MonsterKillLog::MonsterKillLog(
    ::google::protobuf::Arena* arena,
    const MonsterKillLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MonsterKillLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.monsterkillcount_ = from._impl_.monsterkillcount_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.MonsterKillLog)
}
inline PROTOBUF_NDEBUG_INLINE MonsterKillLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : monstername_(arena),
        _cached_size_{0} {}

inline void MonsterKillLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.monsterkillcount_ = {};
}
MonsterKillLog::~MonsterKillLog() {
  // @@protoc_insertion_point(destructor:DC.Packet.MonsterKillLog)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MonsterKillLog::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.monstername_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MonsterKillLog::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MonsterKillLog_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MonsterKillLog::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MonsterKillLog>(),
            ::google::protobuf::Message::GetNewImpl<MonsterKillLog>(),
            ::google::protobuf::Message::GetClearImpl<MonsterKillLog>(), &MonsterKillLog::ByteSizeLong,
                &MonsterKillLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MonsterKillLog, _impl_._cached_size_),
            false,
        },
        &MonsterKillLog::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MonsterKillLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 44, 2> MonsterKillLog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::MonsterKillLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 monsterKillCount = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonsterKillLog, _impl_.monsterkillcount_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterKillLog, _impl_.monsterkillcount_)}},
    // string monsterName = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterKillLog, _impl_.monstername_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string monsterName = 1;
    {PROTOBUF_FIELD_OFFSET(MonsterKillLog, _impl_.monstername_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 monsterKillCount = 2;
    {PROTOBUF_FIELD_OFFSET(MonsterKillLog, _impl_.monsterkillcount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\30\13\0\0\0\0\0\0"
    "DC.Packet.MonsterKillLog"
    "monsterName"
  }},
};

PROTOBUF_NOINLINE void MonsterKillLog::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.MonsterKillLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.monstername_.ClearToEmpty();
  _impl_.monsterkillcount_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MonsterKillLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MonsterKillLog& this_ = static_cast<const MonsterKillLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MonsterKillLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MonsterKillLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.MonsterKillLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string monsterName = 1;
          if (!this_._internal_monstername().empty()) {
            const std::string& _s = this_._internal_monstername();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.MonsterKillLog.monsterName");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 monsterKillCount = 2;
          if (this_._internal_monsterkillcount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_monsterkillcount(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.MonsterKillLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MonsterKillLog::ByteSizeLong(const MessageLite& base) {
          const MonsterKillLog& this_ = static_cast<const MonsterKillLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MonsterKillLog::ByteSizeLong() const {
          const MonsterKillLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.MonsterKillLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string monsterName = 1;
            if (!this_._internal_monstername().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_monstername());
            }
            // uint32 monsterKillCount = 2;
            if (this_._internal_monsterkillcount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_monsterkillcount());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MonsterKillLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MonsterKillLog*>(&to_msg);
  auto& from = static_cast<const MonsterKillLog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.MonsterKillLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_monstername().empty()) {
    _this->_internal_set_monstername(from._internal_monstername());
  }
  if (from._internal_monsterkillcount() != 0) {
    _this->_impl_.monsterkillcount_ = from._impl_.monsterkillcount_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MonsterKillLog::CopyFrom(const MonsterKillLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.MonsterKillLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MonsterKillLog::InternalSwap(MonsterKillLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.monstername_, &other->_impl_.monstername_, arena);
        swap(_impl_.monsterkillcount_, other->_impl_.monsterkillcount_);
}

::google::protobuf::Metadata MonsterKillLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_GameExitUser_POST::_Internal {
 public:
};

void C2S_GameExitUser_POST::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
void C2S_GameExitUser_POST::clear_guaranteeditems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guaranteeditems_.Clear();
}
C2S_GameExitUser_POST::C2S_GameExitUser_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_GameExitUser_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameExitUser_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_GameExitUser_POST& from_msg)
      : items_{visibility, arena, from.items_},
        guaranteeditems_{visibility, arena, from.guaranteeditems_},
        advpoints_{visibility, arena, from.advpoints_},
        exppoints_{visibility, arena, from.exppoints_},
        killlogdata_{visibility, arena, from.killlogdata_},
        monsterkilllogs_{visibility, arena, from.monsterkilllogs_},
        accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        characterclass_(arena, from.characterclass_),
        escapemapname_(arena, from.escapemapname_),
        reason_(arena, from.reason_),
        _cached_size_{0} {}

C2S_GameExitUser_POST::C2S_GameExitUser_POST(
    ::google::protobuf::Arena* arena,
    const C2S_GameExitUser_POST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_GameExitUser_POST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gameid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gameid_),
           offsetof(Impl_, needhwblock_) -
               offsetof(Impl_, gameid_) +
               sizeof(Impl_::needhwblock_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_GameExitUser_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameExitUser_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : items_{visibility, arena},
        guaranteeditems_{visibility, arena},
        advpoints_{visibility, arena},
        exppoints_{visibility, arena},
        killlogdata_{visibility, arena},
        monsterkilllogs_{visibility, arena},
        accountid_(arena),
        characterid_(arena),
        characterclass_(arena),
        escapemapname_(arena),
        reason_(arena),
        _cached_size_{0} {}

inline void C2S_GameExitUser_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gameid_),
           0,
           offsetof(Impl_, needhwblock_) -
               offsetof(Impl_, gameid_) +
               sizeof(Impl_::needhwblock_));
}
C2S_GameExitUser_POST::~C2S_GameExitUser_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_GameExitUser_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_GameExitUser_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.characterclass_.Destroy();
  _impl_.escapemapname_.Destroy();
  _impl_.reason_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_GameExitUser_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_GameExitUser_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_GameExitUser_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_GameExitUser_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_GameExitUser_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_GameExitUser_POST>(), &C2S_GameExitUser_POST::ByteSizeLong,
                &C2S_GameExitUser_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_._cached_size_),
            false,
        },
        &C2S_GameExitUser_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_GameExitUser_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 17, 6, 109, 2> C2S_GameExitUser_POST::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    17, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294836224,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_GameExitUser_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 escape = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_GameExitUser_POST, _impl_.escape_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.escape_)}},
    // string accountId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.accountid_)}},
    // string characterId = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.characterid_)}},
    // uint64 gameId = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(C2S_GameExitUser_POST, _impl_.gameid_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.gameid_)}},
    // repeated .DC.Packet.SItem items = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.items_)}},
    // repeated .DC.Packet.SItem guaranteedItems = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 1, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.guaranteeditems_)}},
    // string characterClass = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.characterclass_)}},
    // uint32 killCount = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_GameExitUser_POST, _impl_.killcount_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.killcount_)}},
    // repeated .DC.Packet.GameExitAdvPoint advPoints = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 2, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.advpoints_)}},
    // string escapeMapName = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.escapemapname_)}},
    // string reason = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.reason_)}},
    // repeated .DC.Packet.GameExitExpPoint expPoints = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 3, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.exppoints_)}},
    // repeated .DC.Packet.Killlog killLogData = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 4, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.killlogdata_)}},
    // repeated .DC.Packet.MonsterKillLog monsterKillLogs = 14;
    {::_pbi::TcParser::FastMtR1,
     {114, 63, 5, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.monsterkilllogs_)}},
    // uint32 gameType = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_GameExitUser_POST, _impl_.gametype_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.gametype_)}},
    // uint32 needBlock = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.needblock_)}},
    // uint32 needHWBlock = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.needhwblock_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 escape = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.escape_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string accountId = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 3;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 gameId = 4;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated .DC.Packet.SItem items = 5;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.items_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SItem guaranteedItems = 6;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.guaranteeditems_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string characterClass = 7;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.characterclass_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 killCount = 8;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.killcount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .DC.Packet.GameExitAdvPoint advPoints = 9;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.advpoints_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string escapeMapName = 10;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.escapemapname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reason = 11;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .DC.Packet.GameExitExpPoint expPoints = 12;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.exppoints_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.Killlog killLogData = 13;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.killlogdata_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.MonsterKillLog monsterKillLogs = 14;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.monsterkilllogs_), 0, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 gameType = 15;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.gametype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 needBlock = 16;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.needblock_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 needHWBlock = 17;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.needhwblock_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::GameExitAdvPoint>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::GameExitExpPoint>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::Killlog>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::MonsterKillLog>()},
  }}, {{
    "\37\0\11\13\0\0\0\16\0\0\15\6\0\0\0\0\0\0\0\0\0\0\0\0"
    "DC.Packet.C2S_GameExitUser_POST"
    "accountId"
    "characterId"
    "characterClass"
    "escapeMapName"
    "reason"
  }},
};

PROTOBUF_NOINLINE void C2S_GameExitUser_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_GameExitUser_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.guaranteeditems_.Clear();
  _impl_.advpoints_.Clear();
  _impl_.exppoints_.Clear();
  _impl_.killlogdata_.Clear();
  _impl_.monsterkilllogs_.Clear();
  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.characterclass_.ClearToEmpty();
  _impl_.escapemapname_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  ::memset(&_impl_.gameid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.needhwblock_) -
      reinterpret_cast<char*>(&_impl_.gameid_)) + sizeof(_impl_.needhwblock_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_GameExitUser_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_GameExitUser_POST& this_ = static_cast<const C2S_GameExitUser_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_GameExitUser_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_GameExitUser_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_GameExitUser_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 escape = 1;
          if (this_._internal_escape() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_escape(), target);
          }

          // string accountId = 2;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_GameExitUser_POST.accountId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string characterId = 3;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_GameExitUser_POST.characterId");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint64 gameId = 4;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_gameid(), target);
          }

          // repeated .DC.Packet.SItem items = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_items_size());
               i < n; i++) {
            const auto& repfield = this_._internal_items().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SItem guaranteedItems = 6;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_guaranteeditems_size());
               i < n; i++) {
            const auto& repfield = this_._internal_guaranteeditems().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string characterClass = 7;
          if (!this_._internal_characterclass().empty()) {
            const std::string& _s = this_._internal_characterclass();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_GameExitUser_POST.characterClass");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // uint32 killCount = 8;
          if (this_._internal_killcount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_killcount(), target);
          }

          // repeated .DC.Packet.GameExitAdvPoint advPoints = 9;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_advpoints_size());
               i < n; i++) {
            const auto& repfield = this_._internal_advpoints().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    9, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string escapeMapName = 10;
          if (!this_._internal_escapemapname().empty()) {
            const std::string& _s = this_._internal_escapemapname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_GameExitUser_POST.escapeMapName");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // string reason = 11;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_GameExitUser_POST.reason");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // repeated .DC.Packet.GameExitExpPoint expPoints = 12;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_exppoints_size());
               i < n; i++) {
            const auto& repfield = this_._internal_exppoints().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    12, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.Killlog killLogData = 13;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_killlogdata_size());
               i < n; i++) {
            const auto& repfield = this_._internal_killlogdata().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    13, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.MonsterKillLog monsterKillLogs = 14;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_monsterkilllogs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_monsterkilllogs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    14, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint32 gameType = 15;
          if (this_._internal_gametype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                15, this_._internal_gametype(), target);
          }

          // uint32 needBlock = 16;
          if (this_._internal_needblock() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                16, this_._internal_needblock(), target);
          }

          // uint32 needHWBlock = 17;
          if (this_._internal_needhwblock() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                17, this_._internal_needhwblock(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_GameExitUser_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_GameExitUser_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_GameExitUser_POST& this_ = static_cast<const C2S_GameExitUser_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_GameExitUser_POST::ByteSizeLong() const {
          const C2S_GameExitUser_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_GameExitUser_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SItem items = 5;
            {
              total_size += 1UL * this_._internal_items_size();
              for (const auto& msg : this_._internal_items()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SItem guaranteedItems = 6;
            {
              total_size += 1UL * this_._internal_guaranteeditems_size();
              for (const auto& msg : this_._internal_guaranteeditems()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.GameExitAdvPoint advPoints = 9;
            {
              total_size += 1UL * this_._internal_advpoints_size();
              for (const auto& msg : this_._internal_advpoints()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.GameExitExpPoint expPoints = 12;
            {
              total_size += 1UL * this_._internal_exppoints_size();
              for (const auto& msg : this_._internal_exppoints()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.Killlog killLogData = 13;
            {
              total_size += 1UL * this_._internal_killlogdata_size();
              for (const auto& msg : this_._internal_killlogdata()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.MonsterKillLog monsterKillLogs = 14;
            {
              total_size += 1UL * this_._internal_monsterkilllogs_size();
              for (const auto& msg : this_._internal_monsterkilllogs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string accountId = 2;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 3;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // string characterClass = 7;
            if (!this_._internal_characterclass().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterclass());
            }
            // string escapeMapName = 10;
            if (!this_._internal_escapemapname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escapemapname());
            }
            // string reason = 11;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // uint64 gameId = 4;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
            // uint32 escape = 1;
            if (this_._internal_escape() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_escape());
            }
            // uint32 killCount = 8;
            if (this_._internal_killcount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_killcount());
            }
            // uint32 gameType = 15;
            if (this_._internal_gametype() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gametype());
            }
            // uint32 needBlock = 16;
            if (this_._internal_needblock() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_needblock());
            }
            // uint32 needHWBlock = 17;
            if (this_._internal_needhwblock() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_needhwblock());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_GameExitUser_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_GameExitUser_POST*>(&to_msg);
  auto& from = static_cast<const C2S_GameExitUser_POST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_GameExitUser_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  _this->_internal_mutable_guaranteeditems()->MergeFrom(
      from._internal_guaranteeditems());
  _this->_internal_mutable_advpoints()->MergeFrom(
      from._internal_advpoints());
  _this->_internal_mutable_exppoints()->MergeFrom(
      from._internal_exppoints());
  _this->_internal_mutable_killlogdata()->MergeFrom(
      from._internal_killlogdata());
  _this->_internal_mutable_monsterkilllogs()->MergeFrom(
      from._internal_monsterkilllogs());
  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (!from._internal_characterclass().empty()) {
    _this->_internal_set_characterclass(from._internal_characterclass());
  }
  if (!from._internal_escapemapname().empty()) {
    _this->_internal_set_escapemapname(from._internal_escapemapname());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  if (from._internal_escape() != 0) {
    _this->_impl_.escape_ = from._impl_.escape_;
  }
  if (from._internal_killcount() != 0) {
    _this->_impl_.killcount_ = from._impl_.killcount_;
  }
  if (from._internal_gametype() != 0) {
    _this->_impl_.gametype_ = from._impl_.gametype_;
  }
  if (from._internal_needblock() != 0) {
    _this->_impl_.needblock_ = from._impl_.needblock_;
  }
  if (from._internal_needhwblock() != 0) {
    _this->_impl_.needhwblock_ = from._impl_.needhwblock_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_GameExitUser_POST::CopyFrom(const C2S_GameExitUser_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_GameExitUser_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_GameExitUser_POST::InternalSwap(C2S_GameExitUser_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  _impl_.guaranteeditems_.InternalSwap(&other->_impl_.guaranteeditems_);
  _impl_.advpoints_.InternalSwap(&other->_impl_.advpoints_);
  _impl_.exppoints_.InternalSwap(&other->_impl_.exppoints_);
  _impl_.killlogdata_.InternalSwap(&other->_impl_.killlogdata_);
  _impl_.monsterkilllogs_.InternalSwap(&other->_impl_.monsterkilllogs_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterclass_, &other->_impl_.characterclass_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escapemapname_, &other->_impl_.escapemapname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.needhwblock_)
      + sizeof(C2S_GameExitUser_POST::_impl_.needhwblock_)
      - PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_POST, _impl_.gameid_)>(
          reinterpret_cast<char*>(&_impl_.gameid_),
          reinterpret_cast<char*>(&other->_impl_.gameid_));
}

::google::protobuf::Metadata C2S_GameExitUser_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_GameEnterUser_Post::_Internal {
 public:
};

C2S_GameEnterUser_Post::C2S_GameEnterUser_Post(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_GameEnterUser_Post)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameEnterUser_Post::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_GameEnterUser_Post& from_msg)
      : accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        _cached_size_{0} {}

C2S_GameEnterUser_Post::C2S_GameEnterUser_Post(
    ::google::protobuf::Arena* arena,
    const C2S_GameEnterUser_Post& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_GameEnterUser_Post* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gameid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gameid_),
           offsetof(Impl_, issuccess_) -
               offsetof(Impl_, gameid_) +
               sizeof(Impl_::issuccess_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_GameEnterUser_Post)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameEnterUser_Post::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accountid_(arena),
        characterid_(arena),
        _cached_size_{0} {}

inline void C2S_GameEnterUser_Post::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gameid_),
           0,
           offsetof(Impl_, issuccess_) -
               offsetof(Impl_, gameid_) +
               sizeof(Impl_::issuccess_));
}
C2S_GameEnterUser_Post::~C2S_GameEnterUser_Post() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_GameEnterUser_Post)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_GameEnterUser_Post::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_GameEnterUser_Post::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_GameEnterUser_Post_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_GameEnterUser_Post::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_GameEnterUser_Post>(),
            ::google::protobuf::Message::GetNewImpl<C2S_GameEnterUser_Post>(),
            ::google::protobuf::Message::GetClearImpl<C2S_GameEnterUser_Post>(), &C2S_GameEnterUser_Post::ByteSizeLong,
                &C2S_GameEnterUser_Post::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_GameEnterUser_Post, _impl_._cached_size_),
            false,
        },
        &C2S_GameEnterUser_Post::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_GameEnterUser_Post::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 61, 2> C2S_GameEnterUser_Post::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_GameEnterUser_Post>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 isSuccess = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_GameEnterUser_Post, _impl_.issuccess_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameEnterUser_Post, _impl_.issuccess_)}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameEnterUser_Post, _impl_.accountid_)}},
    // string characterId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameEnterUser_Post, _impl_.characterid_)}},
    // uint64 gameId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(C2S_GameEnterUser_Post, _impl_.gameid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameEnterUser_Post, _impl_.gameid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_GameEnterUser_Post, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_GameEnterUser_Post, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 gameId = 3;
    {PROTOBUF_FIELD_OFFSET(C2S_GameEnterUser_Post, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 isSuccess = 4;
    {PROTOBUF_FIELD_OFFSET(C2S_GameEnterUser_Post, _impl_.issuccess_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\40\11\13\0\0\0\0\0"
    "DC.Packet.C2S_GameEnterUser_Post"
    "accountId"
    "characterId"
  }},
};

PROTOBUF_NOINLINE void C2S_GameEnterUser_Post::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_GameEnterUser_Post)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  ::memset(&_impl_.gameid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.issuccess_) -
      reinterpret_cast<char*>(&_impl_.gameid_)) + sizeof(_impl_.issuccess_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_GameEnterUser_Post::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_GameEnterUser_Post& this_ = static_cast<const C2S_GameEnterUser_Post&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_GameEnterUser_Post::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_GameEnterUser_Post& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_GameEnterUser_Post)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_GameEnterUser_Post.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string characterId = 2;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_GameEnterUser_Post.characterId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 gameId = 3;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_gameid(), target);
          }

          // uint32 isSuccess = 4;
          if (this_._internal_issuccess() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_issuccess(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_GameEnterUser_Post)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_GameEnterUser_Post::ByteSizeLong(const MessageLite& base) {
          const C2S_GameEnterUser_Post& this_ = static_cast<const C2S_GameEnterUser_Post&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_GameEnterUser_Post::ByteSizeLong() const {
          const C2S_GameEnterUser_Post& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_GameEnterUser_Post)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 2;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // uint64 gameId = 3;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
            // uint32 isSuccess = 4;
            if (this_._internal_issuccess() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_issuccess());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_GameEnterUser_Post::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_GameEnterUser_Post*>(&to_msg);
  auto& from = static_cast<const C2S_GameEnterUser_Post&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_GameEnterUser_Post)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  if (from._internal_issuccess() != 0) {
    _this->_impl_.issuccess_ = from._impl_.issuccess_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_GameEnterUser_Post::CopyFrom(const C2S_GameEnterUser_Post& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_GameEnterUser_Post)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_GameEnterUser_Post::InternalSwap(C2S_GameEnterUser_Post* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_GameEnterUser_Post, _impl_.issuccess_)
      + sizeof(C2S_GameEnterUser_Post::_impl_.issuccess_)
      - PROTOBUF_FIELD_OFFSET(C2S_GameEnterUser_Post, _impl_.gameid_)>(
          reinterpret_cast<char*>(&_impl_.gameid_),
          reinterpret_cast<char*>(&other->_impl_.gameid_));
}

::google::protobuf::Metadata C2S_GameEnterUser_Post::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class S2C_GameStartServer_Json::_Internal {
 public:
};

S2C_GameStartServer_Json::S2C_GameStartServer_Json(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.S2C_GameStartServer_Json)
}
inline PROTOBUF_NDEBUG_INLINE S2C_GameStartServer_Json::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::S2C_GameStartServer_Json& from_msg)
      : dungeonmapids_{visibility, arena, from.dungeonmapids_},
        resturl_(arena, from.resturl_),
        region_(arena, from.region_),
        fleetid_(arena, from.fleetid_),
        dungeonidtag_(arena, from.dungeonidtag_),
        cloudscanurl_(arena, from.cloudscanurl_),
        serverlocate_(arena, from.serverlocate_),
        matchingqueuetype_(arena, from.matchingqueuetype_),
        _cached_size_{0} {}

S2C_GameStartServer_Json::S2C_GameStartServer_Json(
    ::google::protobuf::Arena* arena,
    const S2C_GameStartServer_Json& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  S2C_GameStartServer_Json* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gameid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gameid_),
           offsetof(Impl_, reserveduserwaittimeoutsec_) -
               offsetof(Impl_, gameid_) +
               sizeof(Impl_::reserveduserwaittimeoutsec_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.S2C_GameStartServer_Json)
}
inline PROTOBUF_NDEBUG_INLINE S2C_GameStartServer_Json::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : dungeonmapids_{visibility, arena},
        resturl_(arena),
        region_(arena),
        fleetid_(arena),
        dungeonidtag_(arena),
        cloudscanurl_(arena),
        serverlocate_(arena),
        matchingqueuetype_(arena),
        _cached_size_{0} {}

inline void S2C_GameStartServer_Json::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gameid_),
           0,
           offsetof(Impl_, reserveduserwaittimeoutsec_) -
               offsetof(Impl_, gameid_) +
               sizeof(Impl_::reserveduserwaittimeoutsec_));
}
S2C_GameStartServer_Json::~S2C_GameStartServer_Json() {
  // @@protoc_insertion_point(destructor:DC.Packet.S2C_GameStartServer_Json)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void S2C_GameStartServer_Json::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.resturl_.Destroy();
  _impl_.region_.Destroy();
  _impl_.fleetid_.Destroy();
  _impl_.dungeonidtag_.Destroy();
  _impl_.cloudscanurl_.Destroy();
  _impl_.serverlocate_.Destroy();
  _impl_.matchingqueuetype_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    S2C_GameStartServer_Json::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_S2C_GameStartServer_Json_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &S2C_GameStartServer_Json::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<S2C_GameStartServer_Json>(),
            ::google::protobuf::Message::GetNewImpl<S2C_GameStartServer_Json>(),
            ::google::protobuf::Message::GetClearImpl<S2C_GameStartServer_Json>(), &S2C_GameStartServer_Json::ByteSizeLong,
                &S2C_GameStartServer_Json::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_._cached_size_),
            false,
        },
        &S2C_GameStartServer_Json::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* S2C_GameStartServer_Json::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 25, 0, 153, 2> S2C_GameStartServer_Json::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    27, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4160774144,  // skipmap
    offsetof(decltype(_table_), field_entries),
    25,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::S2C_GameStartServer_Json>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string restUrl = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.resturl_)}},
    // uint64 gameId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(S2C_GameStartServer_Json, _impl_.gameid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.gameid_)}},
    // uint32 maxGameUser = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_GameStartServer_Json, _impl_.maxgameuser_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.maxgameuser_)}},
    // uint32 waitTimeSec = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_GameStartServer_Json, _impl_.waittimesec_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.waittimesec_)}},
    // repeated string dungeonMapIds = 5;
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.dungeonmapids_)}},
    // uint32 gameHackPolicy = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_GameStartServer_Json, _impl_.gamehackpolicy_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.gamehackpolicy_)}},
    // uint32 validPlayerMeleeAttackRange = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_GameStartServer_Json, _impl_.validplayermeleeattackrange_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.validplayermeleeattackrange_)}},
    // uint32 gameType = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_GameStartServer_Json, _impl_.gametype_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.gametype_)}},
    // uint32 shippingLogOnOffPolicy = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_GameStartServer_Json, _impl_.shippinglogonoffpolicy_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.shippinglogonoffpolicy_)}},
    // uint32 shippingLogLevelPolicy = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_GameStartServer_Json, _impl_.shippingloglevelpolicy_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.shippingloglevelpolicy_)}},
    // uint32 gmOnOffPolicy = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_GameStartServer_Json, _impl_.gmonoffpolicy_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.gmonoffpolicy_)}},
    // uint32 shippingLogIronShieldOnOffPolicy = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_GameStartServer_Json, _impl_.shippinglogironshieldonoffpolicy_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.shippinglogironshieldonoffpolicy_)}},
    // uint32 shippingLogIronShieldLevelPolicy = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_GameStartServer_Json, _impl_.shippinglogironshieldlevelpolicy_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.shippinglogironshieldlevelpolicy_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 currentFloor = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.currentfloor_)}},
    // uint32 floorMatchmakingOnOff = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.floormatchmakingonoff_)}},
    // uint32 matchmakingType = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.matchmakingtype_)}},
    // string region = 19;
    {::_pbi::TcParser::FastUS2,
     {410, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.region_)}},
    // string fleetId = 20;
    {::_pbi::TcParser::FastUS2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.fleetid_)}},
    // string dungeonIdTag = 21;
    {::_pbi::TcParser::FastUS2,
     {426, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.dungeonidtag_)}},
    // string cloudScanUrl = 22;
    {::_pbi::TcParser::FastUS2,
     {434, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.cloudscanurl_)}},
    // string serverLocate = 23;
    {::_pbi::TcParser::FastUS2,
     {442, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.serverlocate_)}},
    // string matchingQueueType = 24;
    {::_pbi::TcParser::FastUS2,
     {450, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.matchingqueuetype_)}},
    // uint32 baseCampRemovedPolicy = 25;
    {::_pbi::TcParser::FastV32S2,
     {456, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.basecampremovedpolicy_)}},
    // uint32 numReservedUsers = 26;
    {::_pbi::TcParser::FastV32S2,
     {464, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.numreservedusers_)}},
    // uint32 reservedUserWaitTimeoutSec = 27;
    {::_pbi::TcParser::FastV32S2,
     {472, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.reserveduserwaittimeoutsec_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string restUrl = 1;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.resturl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 gameId = 2;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 maxGameUser = 3;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.maxgameuser_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 waitTimeSec = 4;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.waittimesec_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated string dungeonMapIds = 5;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.dungeonmapids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // uint32 gameHackPolicy = 6;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.gamehackpolicy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 validPlayerMeleeAttackRange = 7;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.validplayermeleeattackrange_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 gameType = 8;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.gametype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 shippingLogOnOffPolicy = 9;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.shippinglogonoffpolicy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 shippingLogLevelPolicy = 10;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.shippingloglevelpolicy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 gmOnOffPolicy = 11;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.gmonoffpolicy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 shippingLogIronShieldOnOffPolicy = 12;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.shippinglogironshieldonoffpolicy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 shippingLogIronShieldLevelPolicy = 13;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.shippinglogironshieldlevelpolicy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 currentFloor = 16;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.currentfloor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 floorMatchmakingOnOff = 17;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.floormatchmakingonoff_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 matchmakingType = 18;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.matchmakingtype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string region = 19;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.region_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string fleetId = 20;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.fleetid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string dungeonIdTag = 21;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.dungeonidtag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cloudScanUrl = 22;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.cloudscanurl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string serverLocate = 23;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.serverlocate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string matchingQueueType = 24;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.matchingqueuetype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 baseCampRemovedPolicy = 25;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.basecampremovedpolicy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 numReservedUsers = 26;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.numreservedusers_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 reservedUserWaitTimeoutSec = 27;
    {PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.reserveduserwaittimeoutsec_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\42\7\0\0\0\15\0\0\0\0\0\0\0\0\0\0\0\6\7\14\14\14\21\0\0\0\0\0\0\0\0\0"
    "DC.Packet.S2C_GameStartServer_Json"
    "restUrl"
    "dungeonMapIds"
    "region"
    "fleetId"
    "dungeonIdTag"
    "cloudScanUrl"
    "serverLocate"
    "matchingQueueType"
  }},
};

PROTOBUF_NOINLINE void S2C_GameStartServer_Json::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.S2C_GameStartServer_Json)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dungeonmapids_.Clear();
  _impl_.resturl_.ClearToEmpty();
  _impl_.region_.ClearToEmpty();
  _impl_.fleetid_.ClearToEmpty();
  _impl_.dungeonidtag_.ClearToEmpty();
  _impl_.cloudscanurl_.ClearToEmpty();
  _impl_.serverlocate_.ClearToEmpty();
  _impl_.matchingqueuetype_.ClearToEmpty();
  ::memset(&_impl_.gameid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.reserveduserwaittimeoutsec_) -
      reinterpret_cast<char*>(&_impl_.gameid_)) + sizeof(_impl_.reserveduserwaittimeoutsec_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* S2C_GameStartServer_Json::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const S2C_GameStartServer_Json& this_ = static_cast<const S2C_GameStartServer_Json&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* S2C_GameStartServer_Json::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const S2C_GameStartServer_Json& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.S2C_GameStartServer_Json)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string restUrl = 1;
          if (!this_._internal_resturl().empty()) {
            const std::string& _s = this_._internal_resturl();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameStartServer_Json.restUrl");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint64 gameId = 2;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_gameid(), target);
          }

          // uint32 maxGameUser = 3;
          if (this_._internal_maxgameuser() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_maxgameuser(), target);
          }

          // uint32 waitTimeSec = 4;
          if (this_._internal_waittimesec() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_waittimesec(), target);
          }

          // repeated string dungeonMapIds = 5;
          for (int i = 0, n = this_._internal_dungeonmapids_size(); i < n; ++i) {
            const auto& s = this_._internal_dungeonmapids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameStartServer_Json.dungeonMapIds");
            target = stream->WriteString(5, s, target);
          }

          // uint32 gameHackPolicy = 6;
          if (this_._internal_gamehackpolicy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_gamehackpolicy(), target);
          }

          // uint32 validPlayerMeleeAttackRange = 7;
          if (this_._internal_validplayermeleeattackrange() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_validplayermeleeattackrange(), target);
          }

          // uint32 gameType = 8;
          if (this_._internal_gametype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_gametype(), target);
          }

          // uint32 shippingLogOnOffPolicy = 9;
          if (this_._internal_shippinglogonoffpolicy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                9, this_._internal_shippinglogonoffpolicy(), target);
          }

          // uint32 shippingLogLevelPolicy = 10;
          if (this_._internal_shippingloglevelpolicy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                10, this_._internal_shippingloglevelpolicy(), target);
          }

          // uint32 gmOnOffPolicy = 11;
          if (this_._internal_gmonoffpolicy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                11, this_._internal_gmonoffpolicy(), target);
          }

          // uint32 shippingLogIronShieldOnOffPolicy = 12;
          if (this_._internal_shippinglogironshieldonoffpolicy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                12, this_._internal_shippinglogironshieldonoffpolicy(), target);
          }

          // uint32 shippingLogIronShieldLevelPolicy = 13;
          if (this_._internal_shippinglogironshieldlevelpolicy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                13, this_._internal_shippinglogironshieldlevelpolicy(), target);
          }

          // uint32 currentFloor = 16;
          if (this_._internal_currentfloor() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                16, this_._internal_currentfloor(), target);
          }

          // uint32 floorMatchmakingOnOff = 17;
          if (this_._internal_floormatchmakingonoff() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                17, this_._internal_floormatchmakingonoff(), target);
          }

          // uint32 matchmakingType = 18;
          if (this_._internal_matchmakingtype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                18, this_._internal_matchmakingtype(), target);
          }

          // string region = 19;
          if (!this_._internal_region().empty()) {
            const std::string& _s = this_._internal_region();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameStartServer_Json.region");
            target = stream->WriteStringMaybeAliased(19, _s, target);
          }

          // string fleetId = 20;
          if (!this_._internal_fleetid().empty()) {
            const std::string& _s = this_._internal_fleetid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameStartServer_Json.fleetId");
            target = stream->WriteStringMaybeAliased(20, _s, target);
          }

          // string dungeonIdTag = 21;
          if (!this_._internal_dungeonidtag().empty()) {
            const std::string& _s = this_._internal_dungeonidtag();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameStartServer_Json.dungeonIdTag");
            target = stream->WriteStringMaybeAliased(21, _s, target);
          }

          // string cloudScanUrl = 22;
          if (!this_._internal_cloudscanurl().empty()) {
            const std::string& _s = this_._internal_cloudscanurl();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameStartServer_Json.cloudScanUrl");
            target = stream->WriteStringMaybeAliased(22, _s, target);
          }

          // string serverLocate = 23;
          if (!this_._internal_serverlocate().empty()) {
            const std::string& _s = this_._internal_serverlocate();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameStartServer_Json.serverLocate");
            target = stream->WriteStringMaybeAliased(23, _s, target);
          }

          // string matchingQueueType = 24;
          if (!this_._internal_matchingqueuetype().empty()) {
            const std::string& _s = this_._internal_matchingqueuetype();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameStartServer_Json.matchingQueueType");
            target = stream->WriteStringMaybeAliased(24, _s, target);
          }

          // uint32 baseCampRemovedPolicy = 25;
          if (this_._internal_basecampremovedpolicy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                25, this_._internal_basecampremovedpolicy(), target);
          }

          // uint32 numReservedUsers = 26;
          if (this_._internal_numreservedusers() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                26, this_._internal_numreservedusers(), target);
          }

          // uint32 reservedUserWaitTimeoutSec = 27;
          if (this_._internal_reserveduserwaittimeoutsec() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                27, this_._internal_reserveduserwaittimeoutsec(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.S2C_GameStartServer_Json)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t S2C_GameStartServer_Json::ByteSizeLong(const MessageLite& base) {
          const S2C_GameStartServer_Json& this_ = static_cast<const S2C_GameStartServer_Json&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t S2C_GameStartServer_Json::ByteSizeLong() const {
          const S2C_GameStartServer_Json& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.S2C_GameStartServer_Json)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string dungeonMapIds = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_dungeonmapids().size());
              for (int i = 0, n = this_._internal_dungeonmapids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_dungeonmapids().Get(i));
              }
            }
          }
           {
            // string restUrl = 1;
            if (!this_._internal_resturl().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_resturl());
            }
            // string region = 19;
            if (!this_._internal_region().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_region());
            }
            // string fleetId = 20;
            if (!this_._internal_fleetid().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_fleetid());
            }
            // string dungeonIdTag = 21;
            if (!this_._internal_dungeonidtag().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_dungeonidtag());
            }
            // string cloudScanUrl = 22;
            if (!this_._internal_cloudscanurl().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cloudscanurl());
            }
            // string serverLocate = 23;
            if (!this_._internal_serverlocate().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_serverlocate());
            }
            // string matchingQueueType = 24;
            if (!this_._internal_matchingqueuetype().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_matchingqueuetype());
            }
            // uint64 gameId = 2;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
            // uint32 maxGameUser = 3;
            if (this_._internal_maxgameuser() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_maxgameuser());
            }
            // uint32 waitTimeSec = 4;
            if (this_._internal_waittimesec() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_waittimesec());
            }
            // uint32 gameHackPolicy = 6;
            if (this_._internal_gamehackpolicy() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gamehackpolicy());
            }
            // uint32 validPlayerMeleeAttackRange = 7;
            if (this_._internal_validplayermeleeattackrange() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_validplayermeleeattackrange());
            }
            // uint32 gameType = 8;
            if (this_._internal_gametype() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gametype());
            }
            // uint32 shippingLogOnOffPolicy = 9;
            if (this_._internal_shippinglogonoffpolicy() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_shippinglogonoffpolicy());
            }
            // uint32 shippingLogLevelPolicy = 10;
            if (this_._internal_shippingloglevelpolicy() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_shippingloglevelpolicy());
            }
            // uint32 gmOnOffPolicy = 11;
            if (this_._internal_gmonoffpolicy() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gmonoffpolicy());
            }
            // uint32 shippingLogIronShieldOnOffPolicy = 12;
            if (this_._internal_shippinglogironshieldonoffpolicy() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_shippinglogironshieldonoffpolicy());
            }
            // uint32 shippingLogIronShieldLevelPolicy = 13;
            if (this_._internal_shippinglogironshieldlevelpolicy() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_shippinglogironshieldlevelpolicy());
            }
            // uint32 currentFloor = 16;
            if (this_._internal_currentfloor() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_currentfloor());
            }
            // uint32 floorMatchmakingOnOff = 17;
            if (this_._internal_floormatchmakingonoff() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_floormatchmakingonoff());
            }
            // uint32 matchmakingType = 18;
            if (this_._internal_matchmakingtype() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_matchmakingtype());
            }
            // uint32 baseCampRemovedPolicy = 25;
            if (this_._internal_basecampremovedpolicy() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_basecampremovedpolicy());
            }
            // uint32 numReservedUsers = 26;
            if (this_._internal_numreservedusers() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_numreservedusers());
            }
            // uint32 reservedUserWaitTimeoutSec = 27;
            if (this_._internal_reserveduserwaittimeoutsec() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_reserveduserwaittimeoutsec());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void S2C_GameStartServer_Json::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<S2C_GameStartServer_Json*>(&to_msg);
  auto& from = static_cast<const S2C_GameStartServer_Json&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.S2C_GameStartServer_Json)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dungeonmapids()->MergeFrom(from._internal_dungeonmapids());
  if (!from._internal_resturl().empty()) {
    _this->_internal_set_resturl(from._internal_resturl());
  }
  if (!from._internal_region().empty()) {
    _this->_internal_set_region(from._internal_region());
  }
  if (!from._internal_fleetid().empty()) {
    _this->_internal_set_fleetid(from._internal_fleetid());
  }
  if (!from._internal_dungeonidtag().empty()) {
    _this->_internal_set_dungeonidtag(from._internal_dungeonidtag());
  }
  if (!from._internal_cloudscanurl().empty()) {
    _this->_internal_set_cloudscanurl(from._internal_cloudscanurl());
  }
  if (!from._internal_serverlocate().empty()) {
    _this->_internal_set_serverlocate(from._internal_serverlocate());
  }
  if (!from._internal_matchingqueuetype().empty()) {
    _this->_internal_set_matchingqueuetype(from._internal_matchingqueuetype());
  }
  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  if (from._internal_maxgameuser() != 0) {
    _this->_impl_.maxgameuser_ = from._impl_.maxgameuser_;
  }
  if (from._internal_waittimesec() != 0) {
    _this->_impl_.waittimesec_ = from._impl_.waittimesec_;
  }
  if (from._internal_gamehackpolicy() != 0) {
    _this->_impl_.gamehackpolicy_ = from._impl_.gamehackpolicy_;
  }
  if (from._internal_validplayermeleeattackrange() != 0) {
    _this->_impl_.validplayermeleeattackrange_ = from._impl_.validplayermeleeattackrange_;
  }
  if (from._internal_gametype() != 0) {
    _this->_impl_.gametype_ = from._impl_.gametype_;
  }
  if (from._internal_shippinglogonoffpolicy() != 0) {
    _this->_impl_.shippinglogonoffpolicy_ = from._impl_.shippinglogonoffpolicy_;
  }
  if (from._internal_shippingloglevelpolicy() != 0) {
    _this->_impl_.shippingloglevelpolicy_ = from._impl_.shippingloglevelpolicy_;
  }
  if (from._internal_gmonoffpolicy() != 0) {
    _this->_impl_.gmonoffpolicy_ = from._impl_.gmonoffpolicy_;
  }
  if (from._internal_shippinglogironshieldonoffpolicy() != 0) {
    _this->_impl_.shippinglogironshieldonoffpolicy_ = from._impl_.shippinglogironshieldonoffpolicy_;
  }
  if (from._internal_shippinglogironshieldlevelpolicy() != 0) {
    _this->_impl_.shippinglogironshieldlevelpolicy_ = from._impl_.shippinglogironshieldlevelpolicy_;
  }
  if (from._internal_currentfloor() != 0) {
    _this->_impl_.currentfloor_ = from._impl_.currentfloor_;
  }
  if (from._internal_floormatchmakingonoff() != 0) {
    _this->_impl_.floormatchmakingonoff_ = from._impl_.floormatchmakingonoff_;
  }
  if (from._internal_matchmakingtype() != 0) {
    _this->_impl_.matchmakingtype_ = from._impl_.matchmakingtype_;
  }
  if (from._internal_basecampremovedpolicy() != 0) {
    _this->_impl_.basecampremovedpolicy_ = from._impl_.basecampremovedpolicy_;
  }
  if (from._internal_numreservedusers() != 0) {
    _this->_impl_.numreservedusers_ = from._impl_.numreservedusers_;
  }
  if (from._internal_reserveduserwaittimeoutsec() != 0) {
    _this->_impl_.reserveduserwaittimeoutsec_ = from._impl_.reserveduserwaittimeoutsec_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_GameStartServer_Json::CopyFrom(const S2C_GameStartServer_Json& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.S2C_GameStartServer_Json)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void S2C_GameStartServer_Json::InternalSwap(S2C_GameStartServer_Json* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dungeonmapids_.InternalSwap(&other->_impl_.dungeonmapids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resturl_, &other->_impl_.resturl_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.region_, &other->_impl_.region_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fleetid_, &other->_impl_.fleetid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dungeonidtag_, &other->_impl_.dungeonidtag_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cloudscanurl_, &other->_impl_.cloudscanurl_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.serverlocate_, &other->_impl_.serverlocate_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.matchingqueuetype_, &other->_impl_.matchingqueuetype_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.reserveduserwaittimeoutsec_)
      + sizeof(S2C_GameStartServer_Json::_impl_.reserveduserwaittimeoutsec_)
      - PROTOBUF_FIELD_OFFSET(S2C_GameStartServer_Json, _impl_.gameid_)>(
          reinterpret_cast<char*>(&_impl_.gameid_),
          reinterpret_cast<char*>(&other->_impl_.gameid_));
}

::google::protobuf::Metadata S2C_GameStartServer_Json::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_GameEndServer_POST::_Internal {
 public:
};

C2S_GameEndServer_POST::C2S_GameEndServer_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_GameEndServer_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameEndServer_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_GameEndServer_POST& from_msg)
      : users_{visibility, arena, from.users_},
        circles_{visibility, arena, from.circles_},
        _cached_size_{0} {}

C2S_GameEndServer_POST::C2S_GameEndServer_POST(
    ::google::protobuf::Arena* arena,
    const C2S_GameEndServer_POST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_GameEndServer_POST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.gameid_ = from._impl_.gameid_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_GameEndServer_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameEndServer_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : users_{visibility, arena},
        circles_{visibility, arena},
        _cached_size_{0} {}

inline void C2S_GameEndServer_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gameid_ = {};
}
C2S_GameEndServer_POST::~C2S_GameEndServer_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_GameEndServer_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_GameEndServer_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_GameEndServer_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_GameEndServer_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_GameEndServer_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_GameEndServer_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_GameEndServer_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_GameEndServer_POST>(), &C2S_GameEndServer_POST::ByteSizeLong,
                &C2S_GameEndServer_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_GameEndServer_POST, _impl_._cached_size_),
            false,
        },
        &C2S_GameEndServer_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_GameEndServer_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> C2S_GameEndServer_POST::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_GameEndServer_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .DC.Packet.GameEndUserInfo users = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameEndServer_POST, _impl_.users_)}},
    // uint64 gameId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(C2S_GameEndServer_POST, _impl_.gameid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameEndServer_POST, _impl_.gameid_)}},
    // repeated .DC.Packet.Circle circles = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(C2S_GameEndServer_POST, _impl_.circles_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.GameEndUserInfo users = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_GameEndServer_POST, _impl_.users_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 gameId = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_GameEndServer_POST, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated .DC.Packet.Circle circles = 3;
    {PROTOBUF_FIELD_OFFSET(C2S_GameEndServer_POST, _impl_.circles_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::GameEndUserInfo>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::Circle>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void C2S_GameEndServer_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_GameEndServer_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.users_.Clear();
  _impl_.circles_.Clear();
  _impl_.gameid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_GameEndServer_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_GameEndServer_POST& this_ = static_cast<const C2S_GameEndServer_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_GameEndServer_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_GameEndServer_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_GameEndServer_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.GameEndUserInfo users = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_users_size());
               i < n; i++) {
            const auto& repfield = this_._internal_users().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint64 gameId = 2;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_gameid(), target);
          }

          // repeated .DC.Packet.Circle circles = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_circles_size());
               i < n; i++) {
            const auto& repfield = this_._internal_circles().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_GameEndServer_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_GameEndServer_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_GameEndServer_POST& this_ = static_cast<const C2S_GameEndServer_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_GameEndServer_POST::ByteSizeLong() const {
          const C2S_GameEndServer_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_GameEndServer_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.GameEndUserInfo users = 1;
            {
              total_size += 1UL * this_._internal_users_size();
              for (const auto& msg : this_._internal_users()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.Circle circles = 3;
            {
              total_size += 1UL * this_._internal_circles_size();
              for (const auto& msg : this_._internal_circles()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint64 gameId = 2;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_GameEndServer_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_GameEndServer_POST*>(&to_msg);
  auto& from = static_cast<const C2S_GameEndServer_POST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_GameEndServer_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_users()->MergeFrom(
      from._internal_users());
  _this->_internal_mutable_circles()->MergeFrom(
      from._internal_circles());
  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_GameEndServer_POST::CopyFrom(const C2S_GameEndServer_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_GameEndServer_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_GameEndServer_POST::InternalSwap(C2S_GameEndServer_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.users_.InternalSwap(&other->_impl_.users_);
  _impl_.circles_.InternalSwap(&other->_impl_.circles_);
        swap(_impl_.gameid_, other->_impl_.gameid_);
}

::google::protobuf::Metadata C2S_GameEndServer_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameEndUserInfo::_Internal {
 public:
};

GameEndUserInfo::GameEndUserInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.GameEndUserInfo)
}
inline PROTOBUF_NDEBUG_INLINE GameEndUserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::GameEndUserInfo& from_msg)
      : accountid_(arena, from.accountid_),
        _cached_size_{0} {}

GameEndUserInfo::GameEndUserInfo(
    ::google::protobuf::Arena* arena,
    const GameEndUserInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameEndUserInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, kill_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, kill_),
           offsetof(Impl_, death_) -
               offsetof(Impl_, kill_) +
               sizeof(Impl_::death_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.GameEndUserInfo)
}
inline PROTOBUF_NDEBUG_INLINE GameEndUserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accountid_(arena),
        _cached_size_{0} {}

inline void GameEndUserInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, kill_),
           0,
           offsetof(Impl_, death_) -
               offsetof(Impl_, kill_) +
               sizeof(Impl_::death_));
}
GameEndUserInfo::~GameEndUserInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.GameEndUserInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameEndUserInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GameEndUserInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GameEndUserInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GameEndUserInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GameEndUserInfo>(),
            ::google::protobuf::Message::GetNewImpl<GameEndUserInfo>(),
            ::google::protobuf::Message::GetClearImpl<GameEndUserInfo>(), &GameEndUserInfo::ByteSizeLong,
                &GameEndUserInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GameEndUserInfo, _impl_._cached_size_),
            false,
        },
        &GameEndUserInfo::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GameEndUserInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 43, 2> GameEndUserInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::GameEndUserInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameEndUserInfo, _impl_.accountid_)}},
    // uint32 kill = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameEndUserInfo, _impl_.kill_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GameEndUserInfo, _impl_.kill_)}},
    // uint32 death = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameEndUserInfo, _impl_.death_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GameEndUserInfo, _impl_.death_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(GameEndUserInfo, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 kill = 2;
    {PROTOBUF_FIELD_OFFSET(GameEndUserInfo, _impl_.kill_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 death = 3;
    {PROTOBUF_FIELD_OFFSET(GameEndUserInfo, _impl_.death_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\31\11\0\0\0\0\0\0"
    "DC.Packet.GameEndUserInfo"
    "accountId"
  }},
};

PROTOBUF_NOINLINE void GameEndUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.GameEndUserInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  ::memset(&_impl_.kill_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.death_) -
      reinterpret_cast<char*>(&_impl_.kill_)) + sizeof(_impl_.death_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameEndUserInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameEndUserInfo& this_ = static_cast<const GameEndUserInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameEndUserInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameEndUserInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.GameEndUserInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameEndUserInfo.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 kill = 2;
          if (this_._internal_kill() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_kill(), target);
          }

          // uint32 death = 3;
          if (this_._internal_death() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_death(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.GameEndUserInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameEndUserInfo::ByteSizeLong(const MessageLite& base) {
          const GameEndUserInfo& this_ = static_cast<const GameEndUserInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameEndUserInfo::ByteSizeLong() const {
          const GameEndUserInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.GameEndUserInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // uint32 kill = 2;
            if (this_._internal_kill() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_kill());
            }
            // uint32 death = 3;
            if (this_._internal_death() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_death());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameEndUserInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameEndUserInfo*>(&to_msg);
  auto& from = static_cast<const GameEndUserInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.GameEndUserInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (from._internal_kill() != 0) {
    _this->_impl_.kill_ = from._impl_.kill_;
  }
  if (from._internal_death() != 0) {
    _this->_impl_.death_ = from._impl_.death_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameEndUserInfo::CopyFrom(const GameEndUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.GameEndUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameEndUserInfo::InternalSwap(GameEndUserInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameEndUserInfo, _impl_.death_)
      + sizeof(GameEndUserInfo::_impl_.death_)
      - PROTOBUF_FIELD_OFFSET(GameEndUserInfo, _impl_.kill_)>(
          reinterpret_cast<char*>(&_impl_.kill_),
          reinterpret_cast<char*>(&other->_impl_.kill_));
}

::google::protobuf::Metadata GameEndUserInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_GameStart_POST::_Internal {
 public:
};

C2S_GameStart_POST::C2S_GameStart_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_GameStart_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameStart_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_GameStart_POST& from_msg)
      : mapnames_{visibility, arena, from.mapnames_},
        _cached_size_{0} {}

C2S_GameStart_POST::C2S_GameStart_POST(
    ::google::protobuf::Arena* arena,
    const C2S_GameStart_POST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_GameStart_POST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.gameid_ = from._impl_.gameid_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_GameStart_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameStart_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : mapnames_{visibility, arena},
        _cached_size_{0} {}

inline void C2S_GameStart_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gameid_ = {};
}
C2S_GameStart_POST::~C2S_GameStart_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_GameStart_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_GameStart_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_GameStart_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_GameStart_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_GameStart_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_GameStart_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_GameStart_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_GameStart_POST>(), &C2S_GameStart_POST::ByteSizeLong,
                &C2S_GameStart_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_GameStart_POST, _impl_._cached_size_),
            false,
        },
        &C2S_GameStart_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_GameStart_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 45, 2> C2S_GameStart_POST::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_GameStart_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string mapNames = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameStart_POST, _impl_.mapnames_)}},
    // uint64 gameId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(C2S_GameStart_POST, _impl_.gameid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameStart_POST, _impl_.gameid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 gameId = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_GameStart_POST, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated string mapNames = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_GameStart_POST, _impl_.mapnames_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\34\0\10\0\0\0\0\0"
    "DC.Packet.C2S_GameStart_POST"
    "mapNames"
  }},
};

PROTOBUF_NOINLINE void C2S_GameStart_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_GameStart_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mapnames_.Clear();
  _impl_.gameid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_GameStart_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_GameStart_POST& this_ = static_cast<const C2S_GameStart_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_GameStart_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_GameStart_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_GameStart_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 gameId = 1;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_gameid(), target);
          }

          // repeated string mapNames = 2;
          for (int i = 0, n = this_._internal_mapnames_size(); i < n; ++i) {
            const auto& s = this_._internal_mapnames().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_GameStart_POST.mapNames");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_GameStart_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_GameStart_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_GameStart_POST& this_ = static_cast<const C2S_GameStart_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_GameStart_POST::ByteSizeLong() const {
          const C2S_GameStart_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_GameStart_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string mapNames = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_mapnames().size());
              for (int i = 0, n = this_._internal_mapnames().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_mapnames().Get(i));
              }
            }
          }
           {
            // uint64 gameId = 1;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_GameStart_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_GameStart_POST*>(&to_msg);
  auto& from = static_cast<const C2S_GameStart_POST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_GameStart_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_mapnames()->MergeFrom(from._internal_mapnames());
  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_GameStart_POST::CopyFrom(const C2S_GameStart_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_GameStart_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_GameStart_POST::InternalSwap(C2S_GameStart_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.mapnames_.InternalSwap(&other->_impl_.mapnames_);
        swap(_impl_.gameid_, other->_impl_.gameid_);
}

::google::protobuf::Metadata C2S_GameStart_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_GameCharacterInfo_Get::_Internal {
 public:
};

C2S_GameCharacterInfo_Get::C2S_GameCharacterInfo_Get(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_GameCharacterInfo_Get)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameCharacterInfo_Get::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_GameCharacterInfo_Get& from_msg)
      : accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        _cached_size_{0} {}

C2S_GameCharacterInfo_Get::C2S_GameCharacterInfo_Get(
    ::google::protobuf::Arena* arena,
    const C2S_GameCharacterInfo_Get& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_GameCharacterInfo_Get* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gameid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gameid_),
           offsetof(Impl_, gametype_) -
               offsetof(Impl_, gameid_) +
               sizeof(Impl_::gametype_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_GameCharacterInfo_Get)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameCharacterInfo_Get::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accountid_(arena),
        characterid_(arena),
        _cached_size_{0} {}

inline void C2S_GameCharacterInfo_Get::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gameid_),
           0,
           offsetof(Impl_, gametype_) -
               offsetof(Impl_, gameid_) +
               sizeof(Impl_::gametype_));
}
C2S_GameCharacterInfo_Get::~C2S_GameCharacterInfo_Get() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_GameCharacterInfo_Get)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_GameCharacterInfo_Get::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_GameCharacterInfo_Get::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_GameCharacterInfo_Get_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_GameCharacterInfo_Get::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_GameCharacterInfo_Get>(),
            ::google::protobuf::Message::GetNewImpl<C2S_GameCharacterInfo_Get>(),
            ::google::protobuf::Message::GetClearImpl<C2S_GameCharacterInfo_Get>(), &C2S_GameCharacterInfo_Get::ByteSizeLong,
                &C2S_GameCharacterInfo_Get::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_GameCharacterInfo_Get, _impl_._cached_size_),
            false,
        },
        &C2S_GameCharacterInfo_Get::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_GameCharacterInfo_Get::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 64, 2> C2S_GameCharacterInfo_Get::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_GameCharacterInfo_Get>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 gameType = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_GameCharacterInfo_Get, _impl_.gametype_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameCharacterInfo_Get, _impl_.gametype_)}},
    // uint64 gameId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(C2S_GameCharacterInfo_Get, _impl_.gameid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameCharacterInfo_Get, _impl_.gameid_)}},
    // string accountId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameCharacterInfo_Get, _impl_.accountid_)}},
    // string characterId = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameCharacterInfo_Get, _impl_.characterid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 gameId = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_GameCharacterInfo_Get, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string accountId = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_GameCharacterInfo_Get, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 3;
    {PROTOBUF_FIELD_OFFSET(C2S_GameCharacterInfo_Get, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 gameType = 4;
    {PROTOBUF_FIELD_OFFSET(C2S_GameCharacterInfo_Get, _impl_.gametype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\43\0\11\13\0\0\0\0"
    "DC.Packet.C2S_GameCharacterInfo_Get"
    "accountId"
    "characterId"
  }},
};

PROTOBUF_NOINLINE void C2S_GameCharacterInfo_Get::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_GameCharacterInfo_Get)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  ::memset(&_impl_.gameid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gametype_) -
      reinterpret_cast<char*>(&_impl_.gameid_)) + sizeof(_impl_.gametype_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_GameCharacterInfo_Get::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_GameCharacterInfo_Get& this_ = static_cast<const C2S_GameCharacterInfo_Get&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_GameCharacterInfo_Get::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_GameCharacterInfo_Get& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_GameCharacterInfo_Get)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 gameId = 1;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_gameid(), target);
          }

          // string accountId = 2;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_GameCharacterInfo_Get.accountId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string characterId = 3;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_GameCharacterInfo_Get.characterId");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint32 gameType = 4;
          if (this_._internal_gametype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_gametype(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_GameCharacterInfo_Get)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_GameCharacterInfo_Get::ByteSizeLong(const MessageLite& base) {
          const C2S_GameCharacterInfo_Get& this_ = static_cast<const C2S_GameCharacterInfo_Get&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_GameCharacterInfo_Get::ByteSizeLong() const {
          const C2S_GameCharacterInfo_Get& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_GameCharacterInfo_Get)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 2;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 3;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // uint64 gameId = 1;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
            // uint32 gameType = 4;
            if (this_._internal_gametype() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gametype());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_GameCharacterInfo_Get::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_GameCharacterInfo_Get*>(&to_msg);
  auto& from = static_cast<const C2S_GameCharacterInfo_Get&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_GameCharacterInfo_Get)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  if (from._internal_gametype() != 0) {
    _this->_impl_.gametype_ = from._impl_.gametype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_GameCharacterInfo_Get::CopyFrom(const C2S_GameCharacterInfo_Get& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_GameCharacterInfo_Get)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_GameCharacterInfo_Get::InternalSwap(C2S_GameCharacterInfo_Get* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_GameCharacterInfo_Get, _impl_.gametype_)
      + sizeof(C2S_GameCharacterInfo_Get::_impl_.gametype_)
      - PROTOBUF_FIELD_OFFSET(C2S_GameCharacterInfo_Get, _impl_.gameid_)>(
          reinterpret_cast<char*>(&_impl_.gameid_),
          reinterpret_cast<char*>(&other->_impl_.gameid_));
}

::google::protobuf::Metadata C2S_GameCharacterInfo_Get::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SRankGameUserInfo::_Internal {
 public:
};

SRankGameUserInfo::SRankGameUserInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SRankGameUserInfo)
}
inline PROTOBUF_NDEBUG_INLINE SRankGameUserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SRankGameUserInfo& from_msg)
      : rankid_(arena, from.rankid_),
        _cached_size_{0} {}

SRankGameUserInfo::SRankGameUserInfo(
    ::google::protobuf::Arena* arena,
    const SRankGameUserInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SRankGameUserInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, currentpoint_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, currentpoint_),
           offsetof(Impl_, currenttotalpoint_) -
               offsetof(Impl_, currentpoint_) +
               sizeof(Impl_::currenttotalpoint_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SRankGameUserInfo)
}
inline PROTOBUF_NDEBUG_INLINE SRankGameUserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rankid_(arena),
        _cached_size_{0} {}

inline void SRankGameUserInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, currentpoint_),
           0,
           offsetof(Impl_, currenttotalpoint_) -
               offsetof(Impl_, currentpoint_) +
               sizeof(Impl_::currenttotalpoint_));
}
SRankGameUserInfo::~SRankGameUserInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.SRankGameUserInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SRankGameUserInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.rankid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SRankGameUserInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SRankGameUserInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SRankGameUserInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SRankGameUserInfo>(),
            ::google::protobuf::Message::GetNewImpl<SRankGameUserInfo>(),
            ::google::protobuf::Message::GetClearImpl<SRankGameUserInfo>(), &SRankGameUserInfo::ByteSizeLong,
                &SRankGameUserInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SRankGameUserInfo, _impl_._cached_size_),
            false,
        },
        &SRankGameUserInfo::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SRankGameUserInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 42, 2> SRankGameUserInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SRankGameUserInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 currentTotalPoint = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SRankGameUserInfo, _impl_.currenttotalpoint_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SRankGameUserInfo, _impl_.currenttotalpoint_)}},
    // string rankId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SRankGameUserInfo, _impl_.rankid_)}},
    // uint32 currentPoint = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SRankGameUserInfo, _impl_.currentpoint_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SRankGameUserInfo, _impl_.currentpoint_)}},
    // uint32 needPoint = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SRankGameUserInfo, _impl_.needpoint_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SRankGameUserInfo, _impl_.needpoint_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string rankId = 1;
    {PROTOBUF_FIELD_OFFSET(SRankGameUserInfo, _impl_.rankid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 currentPoint = 2;
    {PROTOBUF_FIELD_OFFSET(SRankGameUserInfo, _impl_.currentpoint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 needPoint = 3;
    {PROTOBUF_FIELD_OFFSET(SRankGameUserInfo, _impl_.needpoint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 currentTotalPoint = 4;
    {PROTOBUF_FIELD_OFFSET(SRankGameUserInfo, _impl_.currenttotalpoint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\33\6\0\0\0\0\0\0"
    "DC.Packet.SRankGameUserInfo"
    "rankId"
  }},
};

PROTOBUF_NOINLINE void SRankGameUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SRankGameUserInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rankid_.ClearToEmpty();
  ::memset(&_impl_.currentpoint_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.currenttotalpoint_) -
      reinterpret_cast<char*>(&_impl_.currentpoint_)) + sizeof(_impl_.currenttotalpoint_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SRankGameUserInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SRankGameUserInfo& this_ = static_cast<const SRankGameUserInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SRankGameUserInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SRankGameUserInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SRankGameUserInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string rankId = 1;
          if (!this_._internal_rankid().empty()) {
            const std::string& _s = this_._internal_rankid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SRankGameUserInfo.rankId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 currentPoint = 2;
          if (this_._internal_currentpoint() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_currentpoint(), target);
          }

          // uint32 needPoint = 3;
          if (this_._internal_needpoint() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_needpoint(), target);
          }

          // uint32 currentTotalPoint = 4;
          if (this_._internal_currenttotalpoint() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_currenttotalpoint(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SRankGameUserInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SRankGameUserInfo::ByteSizeLong(const MessageLite& base) {
          const SRankGameUserInfo& this_ = static_cast<const SRankGameUserInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SRankGameUserInfo::ByteSizeLong() const {
          const SRankGameUserInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SRankGameUserInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string rankId = 1;
            if (!this_._internal_rankid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_rankid());
            }
            // uint32 currentPoint = 2;
            if (this_._internal_currentpoint() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_currentpoint());
            }
            // uint32 needPoint = 3;
            if (this_._internal_needpoint() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_needpoint());
            }
            // uint32 currentTotalPoint = 4;
            if (this_._internal_currenttotalpoint() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_currenttotalpoint());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SRankGameUserInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SRankGameUserInfo*>(&to_msg);
  auto& from = static_cast<const SRankGameUserInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SRankGameUserInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rankid().empty()) {
    _this->_internal_set_rankid(from._internal_rankid());
  }
  if (from._internal_currentpoint() != 0) {
    _this->_impl_.currentpoint_ = from._impl_.currentpoint_;
  }
  if (from._internal_needpoint() != 0) {
    _this->_impl_.needpoint_ = from._impl_.needpoint_;
  }
  if (from._internal_currenttotalpoint() != 0) {
    _this->_impl_.currenttotalpoint_ = from._impl_.currenttotalpoint_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SRankGameUserInfo::CopyFrom(const SRankGameUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SRankGameUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SRankGameUserInfo::InternalSwap(SRankGameUserInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rankid_, &other->_impl_.rankid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SRankGameUserInfo, _impl_.currenttotalpoint_)
      + sizeof(SRankGameUserInfo::_impl_.currenttotalpoint_)
      - PROTOBUF_FIELD_OFFSET(SRankGameUserInfo, _impl_.currentpoint_)>(
          reinterpret_cast<char*>(&_impl_.currentpoint_),
          reinterpret_cast<char*>(&other->_impl_.currentpoint_));
}

::google::protobuf::Metadata SRankGameUserInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class S2C_GameCharacterInfo_Json::_Internal {
 public:
  using HasBits =
      decltype(std::declval<S2C_GameCharacterInfo_Json>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_._has_bits_);
};

void S2C_GameCharacterInfo_Json::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
void S2C_GameCharacterInfo_Json::clear_perks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.perks_.Clear();
}
void S2C_GameCharacterInfo_Json::clear_skills() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skills_.Clear();
}
void S2C_GameCharacterInfo_Json::clear_spells() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spells_.Clear();
}
void S2C_GameCharacterInfo_Json::clear_emotes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.emotes_.Clear();
}
void S2C_GameCharacterInfo_Json::clear_musics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.musics_.Clear();
}
void S2C_GameCharacterInfo_Json::clear_shapeshifts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shapeshifts_.Clear();
}
S2C_GameCharacterInfo_Json::S2C_GameCharacterInfo_Json(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.S2C_GameCharacterInfo_Json)
}
inline PROTOBUF_NDEBUG_INLINE S2C_GameCharacterInfo_Json::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::S2C_GameCharacterInfo_Json& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        items_{visibility, arena, from.items_},
        perks_{visibility, arena, from.perks_},
        skills_{visibility, arena, from.skills_},
        spells_{visibility, arena, from.spells_},
        characterskinids_{visibility, arena, from.characterskinids_},
        itemskinids_{visibility, arena, from.itemskinids_},
        emotes_{visibility, arena, from.emotes_},
        actionids_{visibility, arena, from.actionids_},
        musics_{visibility, arena, from.musics_},
        shapeshifts_{visibility, arena, from.shapeshifts_},
        quests_{visibility, arena, from.quests_},
        armorskinids_{visibility, arena, from.armorskinids_},
        accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        seasonid_(arena, from.seasonid_) {}

S2C_GameCharacterInfo_Json::S2C_GameCharacterInfo_Json(
    ::google::protobuf::Arena* arena,
    const S2C_GameCharacterInfo_Json& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  S2C_GameCharacterInfo_Json* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rankinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SRankGameUserInfo>(
                              arena, *from._impl_.rankinfo_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gameid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gameid_),
           offsetof(Impl_, gearscore_) -
               offsetof(Impl_, gameid_) +
               sizeof(Impl_::gearscore_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.S2C_GameCharacterInfo_Json)
}
inline PROTOBUF_NDEBUG_INLINE S2C_GameCharacterInfo_Json::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        items_{visibility, arena},
        perks_{visibility, arena},
        skills_{visibility, arena},
        spells_{visibility, arena},
        characterskinids_{visibility, arena},
        itemskinids_{visibility, arena},
        emotes_{visibility, arena},
        actionids_{visibility, arena},
        musics_{visibility, arena},
        shapeshifts_{visibility, arena},
        quests_{visibility, arena},
        armorskinids_{visibility, arena},
        accountid_(arena),
        characterid_(arena),
        seasonid_(arena) {}

inline void S2C_GameCharacterInfo_Json::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rankinfo_),
           0,
           offsetof(Impl_, gearscore_) -
               offsetof(Impl_, rankinfo_) +
               sizeof(Impl_::gearscore_));
}
S2C_GameCharacterInfo_Json::~S2C_GameCharacterInfo_Json() {
  // @@protoc_insertion_point(destructor:DC.Packet.S2C_GameCharacterInfo_Json)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void S2C_GameCharacterInfo_Json::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.seasonid_.Destroy();
  delete _impl_.rankinfo_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    S2C_GameCharacterInfo_Json::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_S2C_GameCharacterInfo_Json_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &S2C_GameCharacterInfo_Json::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<S2C_GameCharacterInfo_Json>(),
            ::google::protobuf::Message::GetNewImpl<S2C_GameCharacterInfo_Json>(),
            ::google::protobuf::Message::GetClearImpl<S2C_GameCharacterInfo_Json>(), &S2C_GameCharacterInfo_Json::ByteSizeLong,
                &S2C_GameCharacterInfo_Json::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_._cached_size_),
            false,
        },
        &S2C_GameCharacterInfo_Json::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* S2C_GameCharacterInfo_Json::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 24, 9, 145, 2> S2C_GameCharacterInfo_Json::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_._has_bits_),
    0, // no _extensions_
    25, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4261429248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    24,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::S2C_GameCharacterInfo_Json>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 gameId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(S2C_GameCharacterInfo_Json, _impl_.gameid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.gameid_)}},
    // string accountId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.accountid_)}},
    // string characterId = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.characterid_)}},
    // repeated .DC.Packet.SItem items = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.items_)}},
    // repeated .DC.Packet.SPerk perks = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.perks_)}},
    // repeated .DC.Packet.SSkill skills = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 2, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.skills_)}},
    // repeated .DC.Packet.SSpell spells = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 3, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.spells_)}},
    // repeated string characterSkinIds = 8;
    {::_pbi::TcParser::FastUR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.characterskinids_)}},
    // repeated string itemSkinIds = 9;
    {::_pbi::TcParser::FastUR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.itemskinids_)}},
    // repeated .DC.Packet.SEMOTE emotes = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 4, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.emotes_)}},
    // repeated string actionIds = 11;
    {::_pbi::TcParser::FastUR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.actionids_)}},
    // repeated .DC.Packet.SMusic musics = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 5, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.musics_)}},
    // repeated .DC.Packet.SShapeShift shapeShifts = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 6, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.shapeshifts_)}},
    // repeated .DC.Packet.SGameQuestInfo quests = 14;
    {::_pbi::TcParser::FastMtR1,
     {114, 63, 7, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.quests_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .DC.Packet.SRankGameUserInfo rankInfo = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 0, 8, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.rankinfo_)}},
    // uint32 entranceFee = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.entrancefee_)}},
    // string seasonId = 18;
    {::_pbi::TcParser::FastUS2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.seasonid_)}},
    // uint32 isSeason = 19;
    {::_pbi::TcParser::FastV32S2,
     {408, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.isseason_)}},
    // repeated string armorSkinIds = 20;
    {::_pbi::TcParser::FastUR2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.armorskinids_)}},
    // int32 totalPlayTimeSec = 21;
    {::_pbi::TcParser::FastV32S2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.totalplaytimesec_)}},
    // int32 level = 22;
    {::_pbi::TcParser::FastV32S2,
     {432, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.level_)}},
    // int32 fame = 23;
    {::_pbi::TcParser::FastV32S2,
     {440, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.fame_)}},
    // int32 isBlackList = 24;
    {::_pbi::TcParser::FastV32S2,
     {448, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.isblacklist_)}},
    // int32 gearScore = 25;
    {::_pbi::TcParser::FastV32S2,
     {456, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.gearscore_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 gameId = 1;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.gameid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string accountId = 2;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.accountid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 3;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.characterid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .DC.Packet.SItem items = 4;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.items_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SPerk perks = 5;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.perks_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SSkill skills = 6;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.skills_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SSpell spells = 7;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.spells_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string characterSkinIds = 8;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.characterskinids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string itemSkinIds = 9;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.itemskinids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .DC.Packet.SEMOTE emotes = 10;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.emotes_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string actionIds = 11;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.actionids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .DC.Packet.SMusic musics = 12;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.musics_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SShapeShift shapeShifts = 13;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.shapeshifts_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SGameQuestInfo quests = 14;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.quests_), -1, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .DC.Packet.SRankGameUserInfo rankInfo = 16;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.rankinfo_), _Internal::kHasBitsOffset + 0, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 entranceFee = 17;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.entrancefee_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string seasonId = 18;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.seasonid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 isSeason = 19;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.isseason_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated string armorSkinIds = 20;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.armorskinids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // int32 totalPlayTimeSec = 21;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.totalplaytimesec_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 level = 22;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 fame = 23;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.fame_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 isBlackList = 24;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.isblacklist_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 gearScore = 25;
    {PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.gearscore_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SPerk>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SSkill>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SSpell>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SEMOTE>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SMusic>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SShapeShift>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SGameQuestInfo>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SRankGameUserInfo>()},
  }}, {{
    "\44\0\11\13\0\0\0\0\20\13\0\11\0\0\0\0\0\10\0\14\0\0\0\0\0\0\0\0\0\0\0\0"
    "DC.Packet.S2C_GameCharacterInfo_Json"
    "accountId"
    "characterId"
    "characterSkinIds"
    "itemSkinIds"
    "actionIds"
    "seasonId"
    "armorSkinIds"
  }},
};

PROTOBUF_NOINLINE void S2C_GameCharacterInfo_Json::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.S2C_GameCharacterInfo_Json)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.perks_.Clear();
  _impl_.skills_.Clear();
  _impl_.spells_.Clear();
  _impl_.characterskinids_.Clear();
  _impl_.itemskinids_.Clear();
  _impl_.emotes_.Clear();
  _impl_.actionids_.Clear();
  _impl_.musics_.Clear();
  _impl_.shapeshifts_.Clear();
  _impl_.quests_.Clear();
  _impl_.armorskinids_.Clear();
  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.seasonid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rankinfo_ != nullptr);
    _impl_.rankinfo_->Clear();
  }
  ::memset(&_impl_.gameid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gearscore_) -
      reinterpret_cast<char*>(&_impl_.gameid_)) + sizeof(_impl_.gearscore_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* S2C_GameCharacterInfo_Json::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const S2C_GameCharacterInfo_Json& this_ = static_cast<const S2C_GameCharacterInfo_Json&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* S2C_GameCharacterInfo_Json::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const S2C_GameCharacterInfo_Json& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.S2C_GameCharacterInfo_Json)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 gameId = 1;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_gameid(), target);
          }

          // string accountId = 2;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameCharacterInfo_Json.accountId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string characterId = 3;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameCharacterInfo_Json.characterId");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated .DC.Packet.SItem items = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_items_size());
               i < n; i++) {
            const auto& repfield = this_._internal_items().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SPerk perks = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_perks_size());
               i < n; i++) {
            const auto& repfield = this_._internal_perks().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SSkill skills = 6;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_skills_size());
               i < n; i++) {
            const auto& repfield = this_._internal_skills().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SSpell spells = 7;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_spells_size());
               i < n; i++) {
            const auto& repfield = this_._internal_spells().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated string characterSkinIds = 8;
          for (int i = 0, n = this_._internal_characterskinids_size(); i < n; ++i) {
            const auto& s = this_._internal_characterskinids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameCharacterInfo_Json.characterSkinIds");
            target = stream->WriteString(8, s, target);
          }

          // repeated string itemSkinIds = 9;
          for (int i = 0, n = this_._internal_itemskinids_size(); i < n; ++i) {
            const auto& s = this_._internal_itemskinids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameCharacterInfo_Json.itemSkinIds");
            target = stream->WriteString(9, s, target);
          }

          // repeated .DC.Packet.SEMOTE emotes = 10;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_emotes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_emotes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    10, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated string actionIds = 11;
          for (int i = 0, n = this_._internal_actionids_size(); i < n; ++i) {
            const auto& s = this_._internal_actionids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameCharacterInfo_Json.actionIds");
            target = stream->WriteString(11, s, target);
          }

          // repeated .DC.Packet.SMusic musics = 12;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_musics_size());
               i < n; i++) {
            const auto& repfield = this_._internal_musics().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    12, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SShapeShift shapeShifts = 13;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_shapeshifts_size());
               i < n; i++) {
            const auto& repfield = this_._internal_shapeshifts().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    13, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SGameQuestInfo quests = 14;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_quests_size());
               i < n; i++) {
            const auto& repfield = this_._internal_quests().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    14, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SRankGameUserInfo rankInfo = 16;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                16, *this_._impl_.rankinfo_, this_._impl_.rankinfo_->GetCachedSize(), target,
                stream);
          }

          // uint32 entranceFee = 17;
          if (this_._internal_entrancefee() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                17, this_._internal_entrancefee(), target);
          }

          // string seasonId = 18;
          if (!this_._internal_seasonid().empty()) {
            const std::string& _s = this_._internal_seasonid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameCharacterInfo_Json.seasonId");
            target = stream->WriteStringMaybeAliased(18, _s, target);
          }

          // uint32 isSeason = 19;
          if (this_._internal_isseason() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                19, this_._internal_isseason(), target);
          }

          // repeated string armorSkinIds = 20;
          for (int i = 0, n = this_._internal_armorskinids_size(); i < n; ++i) {
            const auto& s = this_._internal_armorskinids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameCharacterInfo_Json.armorSkinIds");
            target = stream->WriteString(20, s, target);
          }

          // int32 totalPlayTimeSec = 21;
          if (this_._internal_totalplaytimesec() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                21, this_._internal_totalplaytimesec(), target);
          }

          // int32 level = 22;
          if (this_._internal_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                22, this_._internal_level(), target);
          }

          // int32 fame = 23;
          if (this_._internal_fame() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                23, this_._internal_fame(), target);
          }

          // int32 isBlackList = 24;
          if (this_._internal_isblacklist() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                24, this_._internal_isblacklist(), target);
          }

          // int32 gearScore = 25;
          if (this_._internal_gearscore() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                25, this_._internal_gearscore(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.S2C_GameCharacterInfo_Json)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t S2C_GameCharacterInfo_Json::ByteSizeLong(const MessageLite& base) {
          const S2C_GameCharacterInfo_Json& this_ = static_cast<const S2C_GameCharacterInfo_Json&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t S2C_GameCharacterInfo_Json::ByteSizeLong() const {
          const S2C_GameCharacterInfo_Json& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.S2C_GameCharacterInfo_Json)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SItem items = 4;
            {
              total_size += 1UL * this_._internal_items_size();
              for (const auto& msg : this_._internal_items()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SPerk perks = 5;
            {
              total_size += 1UL * this_._internal_perks_size();
              for (const auto& msg : this_._internal_perks()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SSkill skills = 6;
            {
              total_size += 1UL * this_._internal_skills_size();
              for (const auto& msg : this_._internal_skills()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SSpell spells = 7;
            {
              total_size += 1UL * this_._internal_spells_size();
              for (const auto& msg : this_._internal_spells()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string characterSkinIds = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_characterskinids().size());
              for (int i = 0, n = this_._internal_characterskinids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_characterskinids().Get(i));
              }
            }
            // repeated string itemSkinIds = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_itemskinids().size());
              for (int i = 0, n = this_._internal_itemskinids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_itemskinids().Get(i));
              }
            }
            // repeated .DC.Packet.SEMOTE emotes = 10;
            {
              total_size += 1UL * this_._internal_emotes_size();
              for (const auto& msg : this_._internal_emotes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string actionIds = 11;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_actionids().size());
              for (int i = 0, n = this_._internal_actionids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_actionids().Get(i));
              }
            }
            // repeated .DC.Packet.SMusic musics = 12;
            {
              total_size += 1UL * this_._internal_musics_size();
              for (const auto& msg : this_._internal_musics()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SShapeShift shapeShifts = 13;
            {
              total_size += 1UL * this_._internal_shapeshifts_size();
              for (const auto& msg : this_._internal_shapeshifts()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SGameQuestInfo quests = 14;
            {
              total_size += 1UL * this_._internal_quests_size();
              for (const auto& msg : this_._internal_quests()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string armorSkinIds = 20;
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_armorskinids().size());
              for (int i = 0, n = this_._internal_armorskinids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_armorskinids().Get(i));
              }
            }
          }
           {
            // string accountId = 2;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 3;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // string seasonId = 18;
            if (!this_._internal_seasonid().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_seasonid());
            }
          }
           {
            // .DC.Packet.SRankGameUserInfo rankInfo = 16;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rankinfo_);
            }
          }
           {
            // uint64 gameId = 1;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
            // uint32 entranceFee = 17;
            if (this_._internal_entrancefee() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_entrancefee());
            }
            // uint32 isSeason = 19;
            if (this_._internal_isseason() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_isseason());
            }
            // int32 totalPlayTimeSec = 21;
            if (this_._internal_totalplaytimesec() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_totalplaytimesec());
            }
            // int32 level = 22;
            if (this_._internal_level() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_level());
            }
            // int32 fame = 23;
            if (this_._internal_fame() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_fame());
            }
            // int32 isBlackList = 24;
            if (this_._internal_isblacklist() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_isblacklist());
            }
            // int32 gearScore = 25;
            if (this_._internal_gearscore() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_gearscore());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void S2C_GameCharacterInfo_Json::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<S2C_GameCharacterInfo_Json*>(&to_msg);
  auto& from = static_cast<const S2C_GameCharacterInfo_Json&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.S2C_GameCharacterInfo_Json)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  _this->_internal_mutable_perks()->MergeFrom(
      from._internal_perks());
  _this->_internal_mutable_skills()->MergeFrom(
      from._internal_skills());
  _this->_internal_mutable_spells()->MergeFrom(
      from._internal_spells());
  _this->_internal_mutable_characterskinids()->MergeFrom(from._internal_characterskinids());
  _this->_internal_mutable_itemskinids()->MergeFrom(from._internal_itemskinids());
  _this->_internal_mutable_emotes()->MergeFrom(
      from._internal_emotes());
  _this->_internal_mutable_actionids()->MergeFrom(from._internal_actionids());
  _this->_internal_mutable_musics()->MergeFrom(
      from._internal_musics());
  _this->_internal_mutable_shapeshifts()->MergeFrom(
      from._internal_shapeshifts());
  _this->_internal_mutable_quests()->MergeFrom(
      from._internal_quests());
  _this->_internal_mutable_armorskinids()->MergeFrom(from._internal_armorskinids());
  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (!from._internal_seasonid().empty()) {
    _this->_internal_set_seasonid(from._internal_seasonid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.rankinfo_ != nullptr);
    if (_this->_impl_.rankinfo_ == nullptr) {
      _this->_impl_.rankinfo_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SRankGameUserInfo>(arena, *from._impl_.rankinfo_);
    } else {
      _this->_impl_.rankinfo_->MergeFrom(*from._impl_.rankinfo_);
    }
  }
  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  if (from._internal_entrancefee() != 0) {
    _this->_impl_.entrancefee_ = from._impl_.entrancefee_;
  }
  if (from._internal_isseason() != 0) {
    _this->_impl_.isseason_ = from._impl_.isseason_;
  }
  if (from._internal_totalplaytimesec() != 0) {
    _this->_impl_.totalplaytimesec_ = from._impl_.totalplaytimesec_;
  }
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  if (from._internal_fame() != 0) {
    _this->_impl_.fame_ = from._impl_.fame_;
  }
  if (from._internal_isblacklist() != 0) {
    _this->_impl_.isblacklist_ = from._impl_.isblacklist_;
  }
  if (from._internal_gearscore() != 0) {
    _this->_impl_.gearscore_ = from._impl_.gearscore_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_GameCharacterInfo_Json::CopyFrom(const S2C_GameCharacterInfo_Json& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.S2C_GameCharacterInfo_Json)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void S2C_GameCharacterInfo_Json::InternalSwap(S2C_GameCharacterInfo_Json* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  _impl_.perks_.InternalSwap(&other->_impl_.perks_);
  _impl_.skills_.InternalSwap(&other->_impl_.skills_);
  _impl_.spells_.InternalSwap(&other->_impl_.spells_);
  _impl_.characterskinids_.InternalSwap(&other->_impl_.characterskinids_);
  _impl_.itemskinids_.InternalSwap(&other->_impl_.itemskinids_);
  _impl_.emotes_.InternalSwap(&other->_impl_.emotes_);
  _impl_.actionids_.InternalSwap(&other->_impl_.actionids_);
  _impl_.musics_.InternalSwap(&other->_impl_.musics_);
  _impl_.shapeshifts_.InternalSwap(&other->_impl_.shapeshifts_);
  _impl_.quests_.InternalSwap(&other->_impl_.quests_);
  _impl_.armorskinids_.InternalSwap(&other->_impl_.armorskinids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.seasonid_, &other->_impl_.seasonid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.gearscore_)
      + sizeof(S2C_GameCharacterInfo_Json::_impl_.gearscore_)
      - PROTOBUF_FIELD_OFFSET(S2C_GameCharacterInfo_Json, _impl_.rankinfo_)>(
          reinterpret_cast<char*>(&_impl_.rankinfo_),
          reinterpret_cast<char*>(&other->_impl_.rankinfo_));
}

::google::protobuf::Metadata S2C_GameCharacterInfo_Json::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_GameAliveCheck_GET::_Internal {
 public:
};

C2S_GameAliveCheck_GET::C2S_GameAliveCheck_GET(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_GameAliveCheck_GET)
}
C2S_GameAliveCheck_GET::C2S_GameAliveCheck_GET(
    ::google::protobuf::Arena* arena, const C2S_GameAliveCheck_GET& from)
    : C2S_GameAliveCheck_GET(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameAliveCheck_GET::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void C2S_GameAliveCheck_GET::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gameid_ = {};
}
C2S_GameAliveCheck_GET::~C2S_GameAliveCheck_GET() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_GameAliveCheck_GET)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_GameAliveCheck_GET::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_GameAliveCheck_GET::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_GameAliveCheck_GET_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_GameAliveCheck_GET::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_GameAliveCheck_GET>(),
            ::google::protobuf::Message::GetNewImpl<C2S_GameAliveCheck_GET>(),
            ::google::protobuf::Message::GetClearImpl<C2S_GameAliveCheck_GET>(), &C2S_GameAliveCheck_GET::ByteSizeLong,
                &C2S_GameAliveCheck_GET::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_GameAliveCheck_GET, _impl_._cached_size_),
            false,
        },
        &C2S_GameAliveCheck_GET::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_GameAliveCheck_GET::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> C2S_GameAliveCheck_GET::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_GameAliveCheck_GET>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 gameId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(C2S_GameAliveCheck_GET, _impl_.gameid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameAliveCheck_GET, _impl_.gameid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 gameId = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_GameAliveCheck_GET, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void C2S_GameAliveCheck_GET::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_GameAliveCheck_GET)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gameid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_GameAliveCheck_GET::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_GameAliveCheck_GET& this_ = static_cast<const C2S_GameAliveCheck_GET&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_GameAliveCheck_GET::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_GameAliveCheck_GET& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_GameAliveCheck_GET)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 gameId = 1;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_gameid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_GameAliveCheck_GET)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_GameAliveCheck_GET::ByteSizeLong(const MessageLite& base) {
          const C2S_GameAliveCheck_GET& this_ = static_cast<const C2S_GameAliveCheck_GET&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_GameAliveCheck_GET::ByteSizeLong() const {
          const C2S_GameAliveCheck_GET& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_GameAliveCheck_GET)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 gameId = 1;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_GameAliveCheck_GET::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_GameAliveCheck_GET*>(&to_msg);
  auto& from = static_cast<const C2S_GameAliveCheck_GET&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_GameAliveCheck_GET)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_GameAliveCheck_GET::CopyFrom(const C2S_GameAliveCheck_GET& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_GameAliveCheck_GET)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_GameAliveCheck_GET::InternalSwap(C2S_GameAliveCheck_GET* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.gameid_, other->_impl_.gameid_);
}

::google::protobuf::Metadata C2S_GameAliveCheck_GET::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AliveDataInfo::_Internal {
 public:
};

AliveDataInfo::AliveDataInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.AliveDataInfo)
}
inline PROTOBUF_NDEBUG_INLINE AliveDataInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::AliveDataInfo& from_msg)
      : us_{visibility, arena, from.us_},
        id_(arena, from.id_),
        _cached_size_{0} {}

AliveDataInfo::AliveDataInfo(
    ::google::protobuf::Arena* arena,
    const AliveDataInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AliveDataInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.AliveDataInfo)
}
inline PROTOBUF_NDEBUG_INLINE AliveDataInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : us_{visibility, arena},
        id_(arena),
        _cached_size_{0} {}

inline void AliveDataInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AliveDataInfo::~AliveDataInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.AliveDataInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AliveDataInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    AliveDataInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_AliveDataInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &AliveDataInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<AliveDataInfo>(),
            ::google::protobuf::Message::GetNewImpl<AliveDataInfo>(),
            ::google::protobuf::Message::GetClearImpl<AliveDataInfo>(), &AliveDataInfo::ByteSizeLong,
                &AliveDataInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(AliveDataInfo, _impl_._cached_size_),
            false,
        },
        &AliveDataInfo::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* AliveDataInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 36, 2> AliveDataInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::AliveDataInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string Us = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AliveDataInfo, _impl_.us_)}},
    // string Id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AliveDataInfo, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string Id = 1;
    {PROTOBUF_FIELD_OFFSET(AliveDataInfo, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string Us = 2;
    {PROTOBUF_FIELD_OFFSET(AliveDataInfo, _impl_.us_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\27\2\2\0\0\0\0\0"
    "DC.Packet.AliveDataInfo"
    "Id"
    "Us"
  }},
};

PROTOBUF_NOINLINE void AliveDataInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.AliveDataInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.us_.Clear();
  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AliveDataInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AliveDataInfo& this_ = static_cast<const AliveDataInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AliveDataInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AliveDataInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.AliveDataInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string Id = 1;
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.AliveDataInfo.Id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string Us = 2;
          for (int i = 0, n = this_._internal_us_size(); i < n; ++i) {
            const auto& s = this_._internal_us().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.AliveDataInfo.Us");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.AliveDataInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AliveDataInfo::ByteSizeLong(const MessageLite& base) {
          const AliveDataInfo& this_ = static_cast<const AliveDataInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AliveDataInfo::ByteSizeLong() const {
          const AliveDataInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.AliveDataInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string Us = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_us().size());
              for (int i = 0, n = this_._internal_us().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_us().Get(i));
              }
            }
          }
           {
            // string Id = 1;
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AliveDataInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AliveDataInfo*>(&to_msg);
  auto& from = static_cast<const AliveDataInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.AliveDataInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_us()->MergeFrom(from._internal_us());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AliveDataInfo::CopyFrom(const AliveDataInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.AliveDataInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AliveDataInfo::InternalSwap(AliveDataInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.us_.InternalSwap(&other->_impl_.us_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata AliveDataInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_AliveAppendData_GET::_Internal {
 public:
};

C2S_AliveAppendData_GET::C2S_AliveAppendData_GET(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_AliveAppendData_GET)
}
inline PROTOBUF_NDEBUG_INLINE C2S_AliveAppendData_GET::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_AliveAppendData_GET& from_msg)
      : infos_{visibility, arena, from.infos_},
        gs_(arena, from.gs_),
        _cached_size_{0} {}

C2S_AliveAppendData_GET::C2S_AliveAppendData_GET(
    ::google::protobuf::Arena* arena,
    const C2S_AliveAppendData_GET& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_AliveAppendData_GET* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_AliveAppendData_GET)
}
inline PROTOBUF_NDEBUG_INLINE C2S_AliveAppendData_GET::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : infos_{visibility, arena},
        gs_(arena),
        _cached_size_{0} {}

inline void C2S_AliveAppendData_GET::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
C2S_AliveAppendData_GET::~C2S_AliveAppendData_GET() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_AliveAppendData_GET)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_AliveAppendData_GET::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.gs_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_AliveAppendData_GET::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_AliveAppendData_GET_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_AliveAppendData_GET::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_AliveAppendData_GET>(),
            ::google::protobuf::Message::GetNewImpl<C2S_AliveAppendData_GET>(),
            ::google::protobuf::Message::GetClearImpl<C2S_AliveAppendData_GET>(), &C2S_AliveAppendData_GET::ByteSizeLong,
                &C2S_AliveAppendData_GET::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_AliveAppendData_GET, _impl_._cached_size_),
            false,
        },
        &C2S_AliveAppendData_GET::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_AliveAppendData_GET::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 44, 2> C2S_AliveAppendData_GET::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_AliveAppendData_GET>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.AliveDataInfo infos = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_AliveAppendData_GET, _impl_.infos_)}},
    // string Gs = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_AliveAppendData_GET, _impl_.gs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string Gs = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_AliveAppendData_GET, _impl_.gs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .DC.Packet.AliveDataInfo infos = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_AliveAppendData_GET, _impl_.infos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::AliveDataInfo>()},
  }}, {{
    "\41\2\0\0\0\0\0\0"
    "DC.Packet.C2S_AliveAppendData_GET"
    "Gs"
  }},
};

PROTOBUF_NOINLINE void C2S_AliveAppendData_GET::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_AliveAppendData_GET)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.infos_.Clear();
  _impl_.gs_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_AliveAppendData_GET::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_AliveAppendData_GET& this_ = static_cast<const C2S_AliveAppendData_GET&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_AliveAppendData_GET::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_AliveAppendData_GET& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_AliveAppendData_GET)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string Gs = 1;
          if (!this_._internal_gs().empty()) {
            const std::string& _s = this_._internal_gs();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_AliveAppendData_GET.Gs");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .DC.Packet.AliveDataInfo infos = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_infos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_infos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_AliveAppendData_GET)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_AliveAppendData_GET::ByteSizeLong(const MessageLite& base) {
          const C2S_AliveAppendData_GET& this_ = static_cast<const C2S_AliveAppendData_GET&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_AliveAppendData_GET::ByteSizeLong() const {
          const C2S_AliveAppendData_GET& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_AliveAppendData_GET)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.AliveDataInfo infos = 2;
            {
              total_size += 1UL * this_._internal_infos_size();
              for (const auto& msg : this_._internal_infos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string Gs = 1;
            if (!this_._internal_gs().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_gs());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_AliveAppendData_GET::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_AliveAppendData_GET*>(&to_msg);
  auto& from = static_cast<const C2S_AliveAppendData_GET&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_AliveAppendData_GET)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infos()->MergeFrom(
      from._internal_infos());
  if (!from._internal_gs().empty()) {
    _this->_internal_set_gs(from._internal_gs());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_AliveAppendData_GET::CopyFrom(const C2S_AliveAppendData_GET& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_AliveAppendData_GET)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_AliveAppendData_GET::InternalSwap(C2S_AliveAppendData_GET* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.infos_.InternalSwap(&other->_impl_.infos_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gs_, &other->_impl_.gs_, arena);
}

::google::protobuf::Metadata C2S_AliveAppendData_GET::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_GameInterrupt_POST::_Internal {
 public:
};

C2S_GameInterrupt_POST::C2S_GameInterrupt_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_GameInterrupt_POST)
}
C2S_GameInterrupt_POST::C2S_GameInterrupt_POST(
    ::google::protobuf::Arena* arena, const C2S_GameInterrupt_POST& from)
    : C2S_GameInterrupt_POST(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameInterrupt_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void C2S_GameInterrupt_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gameid_ = {};
}
C2S_GameInterrupt_POST::~C2S_GameInterrupt_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_GameInterrupt_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_GameInterrupt_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_GameInterrupt_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_GameInterrupt_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_GameInterrupt_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_GameInterrupt_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_GameInterrupt_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_GameInterrupt_POST>(), &C2S_GameInterrupt_POST::ByteSizeLong,
                &C2S_GameInterrupt_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_GameInterrupt_POST, _impl_._cached_size_),
            false,
        },
        &C2S_GameInterrupt_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_GameInterrupt_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> C2S_GameInterrupt_POST::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_GameInterrupt_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 gameId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(C2S_GameInterrupt_POST, _impl_.gameid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameInterrupt_POST, _impl_.gameid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 gameId = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_GameInterrupt_POST, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void C2S_GameInterrupt_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_GameInterrupt_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gameid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_GameInterrupt_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_GameInterrupt_POST& this_ = static_cast<const C2S_GameInterrupt_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_GameInterrupt_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_GameInterrupt_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_GameInterrupt_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 gameId = 1;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_gameid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_GameInterrupt_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_GameInterrupt_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_GameInterrupt_POST& this_ = static_cast<const C2S_GameInterrupt_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_GameInterrupt_POST::ByteSizeLong() const {
          const C2S_GameInterrupt_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_GameInterrupt_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 gameId = 1;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_GameInterrupt_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_GameInterrupt_POST*>(&to_msg);
  auto& from = static_cast<const C2S_GameInterrupt_POST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_GameInterrupt_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_GameInterrupt_POST::CopyFrom(const C2S_GameInterrupt_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_GameInterrupt_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_GameInterrupt_POST::InternalSwap(C2S_GameInterrupt_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.gameid_, other->_impl_.gameid_);
}

::google::protobuf::Metadata C2S_GameInterrupt_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_UserReport_POST::_Internal {
 public:
  using HasBits =
      decltype(std::declval<C2S_UserReport_POST>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_._has_bits_);
};

void C2S_UserReport_POST::clear_targetnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.targetnickname_ != nullptr) _impl_.targetnickname_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
C2S_UserReport_POST::C2S_UserReport_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_UserReport_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_UserReport_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_UserReport_POST& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_{visibility, arena, from.category_},
        _category_cached_byte_size_{0},
        reportaccountid_(arena, from.reportaccountid_),
        targetaccountid_(arena, from.targetaccountid_),
        targetcharacterid_(arena, from.targetcharacterid_),
        reportcontent_(arena, from.reportcontent_) {}

C2S_UserReport_POST::C2S_UserReport_POST(
    ::google::protobuf::Arena* arena,
    const C2S_UserReport_POST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_UserReport_POST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.targetnickname_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(
                              arena, *from._impl_.targetnickname_)
                        : nullptr;
  _impl_.gameid_ = from._impl_.gameid_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_UserReport_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_UserReport_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_{visibility, arena},
        _category_cached_byte_size_{0},
        reportaccountid_(arena),
        targetaccountid_(arena),
        targetcharacterid_(arena),
        reportcontent_(arena) {}

inline void C2S_UserReport_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, targetnickname_),
           0,
           offsetof(Impl_, gameid_) -
               offsetof(Impl_, targetnickname_) +
               sizeof(Impl_::gameid_));
}
C2S_UserReport_POST::~C2S_UserReport_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_UserReport_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_UserReport_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.reportaccountid_.Destroy();
  _impl_.targetaccountid_.Destroy();
  _impl_.targetcharacterid_.Destroy();
  _impl_.reportcontent_.Destroy();
  delete _impl_.targetnickname_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_UserReport_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_UserReport_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_UserReport_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_UserReport_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_UserReport_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_UserReport_POST>(), &C2S_UserReport_POST::ByteSizeLong,
                &C2S_UserReport_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_._cached_size_),
            false,
        },
        &C2S_UserReport_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_UserReport_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 98, 2> C2S_UserReport_POST::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_UserReport_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 gameId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(C2S_UserReport_POST, _impl_.gameid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_.gameid_)}},
    // string reportAccountId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_.reportaccountid_)}},
    // repeated uint32 category = 3;
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_.category_)}},
    // string targetAccountId = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_.targetaccountid_)}},
    // .DC.Packet.SACCOUNT_NICKNAME targetNickName = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_.targetnickname_)}},
    // string targetCharacterId = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_.targetcharacterid_)}},
    // string reportContent = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_.reportcontent_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 gameId = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_.gameid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string reportAccountId = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_.reportaccountid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated uint32 category = 3;
    {PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // string targetAccountId = 4;
    {PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_.targetaccountid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .DC.Packet.SACCOUNT_NICKNAME targetNickName = 5;
    {PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_.targetnickname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string targetCharacterId = 6;
    {PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_.targetcharacterid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reportContent = 7;
    {PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_.reportcontent_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SACCOUNT_NICKNAME>()},
  }}, {{
    "\35\0\17\0\17\0\21\15"
    "DC.Packet.C2S_UserReport_POST"
    "reportAccountId"
    "targetAccountId"
    "targetCharacterId"
    "reportContent"
  }},
};

PROTOBUF_NOINLINE void C2S_UserReport_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_UserReport_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.Clear();
  _impl_.reportaccountid_.ClearToEmpty();
  _impl_.targetaccountid_.ClearToEmpty();
  _impl_.targetcharacterid_.ClearToEmpty();
  _impl_.reportcontent_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.targetnickname_ != nullptr);
    _impl_.targetnickname_->Clear();
  }
  _impl_.gameid_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_UserReport_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_UserReport_POST& this_ = static_cast<const C2S_UserReport_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_UserReport_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_UserReport_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_UserReport_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 gameId = 1;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_gameid(), target);
          }

          // string reportAccountId = 2;
          if (!this_._internal_reportaccountid().empty()) {
            const std::string& _s = this_._internal_reportaccountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_UserReport_POST.reportAccountId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated uint32 category = 3;
          {
            int byte_size = this_._impl_._category_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  3, this_._internal_category(), byte_size, target);
            }
          }

          // string targetAccountId = 4;
          if (!this_._internal_targetaccountid().empty()) {
            const std::string& _s = this_._internal_targetaccountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_UserReport_POST.targetAccountId");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SACCOUNT_NICKNAME targetNickName = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.targetnickname_, this_._impl_.targetnickname_->GetCachedSize(), target,
                stream);
          }

          // string targetCharacterId = 6;
          if (!this_._internal_targetcharacterid().empty()) {
            const std::string& _s = this_._internal_targetcharacterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_UserReport_POST.targetCharacterId");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string reportContent = 7;
          if (!this_._internal_reportcontent().empty()) {
            const std::string& _s = this_._internal_reportcontent();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_UserReport_POST.reportContent");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_UserReport_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_UserReport_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_UserReport_POST& this_ = static_cast<const C2S_UserReport_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_UserReport_POST::ByteSizeLong() const {
          const C2S_UserReport_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_UserReport_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated uint32 category = 3;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_category(), 1,
                      this_._impl_._category_cached_byte_size_);
            }
          }
           {
            // string reportAccountId = 2;
            if (!this_._internal_reportaccountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reportaccountid());
            }
            // string targetAccountId = 4;
            if (!this_._internal_targetaccountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_targetaccountid());
            }
            // string targetCharacterId = 6;
            if (!this_._internal_targetcharacterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_targetcharacterid());
            }
            // string reportContent = 7;
            if (!this_._internal_reportcontent().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reportcontent());
            }
          }
           {
            // .DC.Packet.SACCOUNT_NICKNAME targetNickName = 5;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.targetnickname_);
            }
          }
           {
            // uint64 gameId = 1;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_UserReport_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_UserReport_POST*>(&to_msg);
  auto& from = static_cast<const C2S_UserReport_POST&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_UserReport_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_category()->MergeFrom(from._internal_category());
  if (!from._internal_reportaccountid().empty()) {
    _this->_internal_set_reportaccountid(from._internal_reportaccountid());
  }
  if (!from._internal_targetaccountid().empty()) {
    _this->_internal_set_targetaccountid(from._internal_targetaccountid());
  }
  if (!from._internal_targetcharacterid().empty()) {
    _this->_internal_set_targetcharacterid(from._internal_targetcharacterid());
  }
  if (!from._internal_reportcontent().empty()) {
    _this->_internal_set_reportcontent(from._internal_reportcontent());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.targetnickname_ != nullptr);
    if (_this->_impl_.targetnickname_ == nullptr) {
      _this->_impl_.targetnickname_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(arena, *from._impl_.targetnickname_);
    } else {
      _this->_impl_.targetnickname_->MergeFrom(*from._impl_.targetnickname_);
    }
  }
  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_UserReport_POST::CopyFrom(const C2S_UserReport_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_UserReport_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_UserReport_POST::InternalSwap(C2S_UserReport_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.category_.InternalSwap(&other->_impl_.category_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reportaccountid_, &other->_impl_.reportaccountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.targetaccountid_, &other->_impl_.targetaccountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.targetcharacterid_, &other->_impl_.targetcharacterid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reportcontent_, &other->_impl_.reportcontent_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_.gameid_)
      + sizeof(C2S_UserReport_POST::_impl_.gameid_)
      - PROTOBUF_FIELD_OFFSET(C2S_UserReport_POST, _impl_.targetnickname_)>(
          reinterpret_cast<char*>(&_impl_.targetnickname_),
          reinterpret_cast<char*>(&other->_impl_.targetnickname_));
}

::google::protobuf::Metadata C2S_UserReport_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class S2C_UserReport_POST_Response::_Internal {
 public:
};

S2C_UserReport_POST_Response::S2C_UserReport_POST_Response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.S2C_UserReport_POST_Response)
}
inline PROTOBUF_NDEBUG_INLINE S2C_UserReport_POST_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::S2C_UserReport_POST_Response& from_msg)
      : reportaccountid_(arena, from.reportaccountid_),
        targetaccountid_(arena, from.targetaccountid_),
        reportkey_(arena, from.reportkey_),
        _cached_size_{0} {}

S2C_UserReport_POST_Response::S2C_UserReport_POST_Response(
    ::google::protobuf::Arena* arena,
    const S2C_UserReport_POST_Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  S2C_UserReport_POST_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.category_ = from._impl_.category_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.S2C_UserReport_POST_Response)
}
inline PROTOBUF_NDEBUG_INLINE S2C_UserReport_POST_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : reportaccountid_(arena),
        targetaccountid_(arena),
        reportkey_(arena),
        _cached_size_{0} {}

inline void S2C_UserReport_POST_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.category_ = {};
}
S2C_UserReport_POST_Response::~S2C_UserReport_POST_Response() {
  // @@protoc_insertion_point(destructor:DC.Packet.S2C_UserReport_POST_Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void S2C_UserReport_POST_Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.reportaccountid_.Destroy();
  _impl_.targetaccountid_.Destroy();
  _impl_.reportkey_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    S2C_UserReport_POST_Response::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_S2C_UserReport_POST_Response_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &S2C_UserReport_POST_Response::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<S2C_UserReport_POST_Response>(),
            ::google::protobuf::Message::GetNewImpl<S2C_UserReport_POST_Response>(),
            ::google::protobuf::Message::GetClearImpl<S2C_UserReport_POST_Response>(), &S2C_UserReport_POST_Response::ByteSizeLong,
                &S2C_UserReport_POST_Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(S2C_UserReport_POST_Response, _impl_._cached_size_),
            false,
        },
        &S2C_UserReport_POST_Response::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* S2C_UserReport_POST_Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 86, 2> S2C_UserReport_POST_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::S2C_UserReport_POST_Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 category = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_UserReport_POST_Response, _impl_.category_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_UserReport_POST_Response, _impl_.category_)}},
    // string reportAccountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_UserReport_POST_Response, _impl_.reportaccountid_)}},
    // string targetAccountId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_UserReport_POST_Response, _impl_.targetaccountid_)}},
    // string reportKey = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_UserReport_POST_Response, _impl_.reportkey_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string reportAccountId = 1;
    {PROTOBUF_FIELD_OFFSET(S2C_UserReport_POST_Response, _impl_.reportaccountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string targetAccountId = 2;
    {PROTOBUF_FIELD_OFFSET(S2C_UserReport_POST_Response, _impl_.targetaccountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reportKey = 3;
    {PROTOBUF_FIELD_OFFSET(S2C_UserReport_POST_Response, _impl_.reportkey_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 category = 4;
    {PROTOBUF_FIELD_OFFSET(S2C_UserReport_POST_Response, _impl_.category_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\46\17\17\11\0\0\0\0"
    "DC.Packet.S2C_UserReport_POST_Response"
    "reportAccountId"
    "targetAccountId"
    "reportKey"
  }},
};

PROTOBUF_NOINLINE void S2C_UserReport_POST_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.S2C_UserReport_POST_Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reportaccountid_.ClearToEmpty();
  _impl_.targetaccountid_.ClearToEmpty();
  _impl_.reportkey_.ClearToEmpty();
  _impl_.category_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* S2C_UserReport_POST_Response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const S2C_UserReport_POST_Response& this_ = static_cast<const S2C_UserReport_POST_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* S2C_UserReport_POST_Response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const S2C_UserReport_POST_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.S2C_UserReport_POST_Response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string reportAccountId = 1;
          if (!this_._internal_reportaccountid().empty()) {
            const std::string& _s = this_._internal_reportaccountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_UserReport_POST_Response.reportAccountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string targetAccountId = 2;
          if (!this_._internal_targetaccountid().empty()) {
            const std::string& _s = this_._internal_targetaccountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_UserReport_POST_Response.targetAccountId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string reportKey = 3;
          if (!this_._internal_reportkey().empty()) {
            const std::string& _s = this_._internal_reportkey();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_UserReport_POST_Response.reportKey");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint32 category = 4;
          if (this_._internal_category() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_category(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.S2C_UserReport_POST_Response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t S2C_UserReport_POST_Response::ByteSizeLong(const MessageLite& base) {
          const S2C_UserReport_POST_Response& this_ = static_cast<const S2C_UserReport_POST_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t S2C_UserReport_POST_Response::ByteSizeLong() const {
          const S2C_UserReport_POST_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.S2C_UserReport_POST_Response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string reportAccountId = 1;
            if (!this_._internal_reportaccountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reportaccountid());
            }
            // string targetAccountId = 2;
            if (!this_._internal_targetaccountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_targetaccountid());
            }
            // string reportKey = 3;
            if (!this_._internal_reportkey().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reportkey());
            }
            // uint32 category = 4;
            if (this_._internal_category() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_category());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void S2C_UserReport_POST_Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<S2C_UserReport_POST_Response*>(&to_msg);
  auto& from = static_cast<const S2C_UserReport_POST_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.S2C_UserReport_POST_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reportaccountid().empty()) {
    _this->_internal_set_reportaccountid(from._internal_reportaccountid());
  }
  if (!from._internal_targetaccountid().empty()) {
    _this->_internal_set_targetaccountid(from._internal_targetaccountid());
  }
  if (!from._internal_reportkey().empty()) {
    _this->_internal_set_reportkey(from._internal_reportkey());
  }
  if (from._internal_category() != 0) {
    _this->_impl_.category_ = from._impl_.category_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_UserReport_POST_Response::CopyFrom(const S2C_UserReport_POST_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.S2C_UserReport_POST_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void S2C_UserReport_POST_Response::InternalSwap(S2C_UserReport_POST_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reportaccountid_, &other->_impl_.reportaccountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.targetaccountid_, &other->_impl_.targetaccountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reportkey_, &other->_impl_.reportkey_, arena);
        swap(_impl_.category_, other->_impl_.category_);
}

::google::protobuf::Metadata S2C_UserReport_POST_Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Location::_Internal {
 public:
};

Location::Location(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Location)
}
Location::Location(
    ::google::protobuf::Arena* arena, const Location& from)
    : Location(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Location::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Location::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Location::~Location() {
  // @@protoc_insertion_point(destructor:DC.Packet.Location)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Location::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Location::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Location_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Location::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Location>(),
            ::google::protobuf::Message::GetNewImpl<Location>(),
            ::google::protobuf::Message::GetClearImpl<Location>(), &Location::ByteSizeLong,
                &Location::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Location, _impl_._cached_size_),
            false,
        },
        &Location::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Location::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Location::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Location>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Location, _impl_.x_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.x_)}},
    // int32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Location, _impl_.y_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.y_)}},
    // int32 z = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Location, _impl_.z_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 x = 1;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 y = 2;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 z = 3;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Location)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Location::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Location& this_ = static_cast<const Location&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Location::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Location& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Location)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 x = 1;
          if (this_._internal_x() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_x(), target);
          }

          // int32 y = 2;
          if (this_._internal_y() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_y(), target);
          }

          // int32 z = 3;
          if (this_._internal_z() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_z(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Location)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Location::ByteSizeLong(const MessageLite& base) {
          const Location& this_ = static_cast<const Location&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Location::ByteSizeLong() const {
          const Location& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Location)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 x = 1;
            if (this_._internal_x() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_x());
            }
            // int32 y = 2;
            if (this_._internal_y() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_y());
            }
            // int32 z = 3;
            if (this_._internal_z() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_z());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Location::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Location*>(&to_msg);
  auto& from = static_cast<const Location&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Location)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x() != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (from._internal_y() != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (from._internal_z() != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Location::InternalSwap(Location* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Location, _impl_.z_)
      + sizeof(Location::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Location, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Location::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Circle::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Circle>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Circle, _impl_._has_bits_);
};

Circle::Circle(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Circle)
}
inline PROTOBUF_NDEBUG_INLINE Circle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Circle& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Circle::Circle(
    ::google::protobuf::Arena* arena,
    const Circle& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Circle* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pos_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::Location>(
                              arena, *from._impl_.pos_)
                        : nullptr;
  _impl_.radius_ = from._impl_.radius_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Circle)
}
inline PROTOBUF_NDEBUG_INLINE Circle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Circle::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pos_),
           0,
           offsetof(Impl_, radius_) -
               offsetof(Impl_, pos_) +
               sizeof(Impl_::radius_));
}
Circle::~Circle() {
  // @@protoc_insertion_point(destructor:DC.Packet.Circle)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Circle::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.pos_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Circle::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Circle_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Circle::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Circle>(),
            ::google::protobuf::Message::GetNewImpl<Circle>(),
            ::google::protobuf::Message::GetClearImpl<Circle>(), &Circle::ByteSizeLong,
                &Circle::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Circle, _impl_._cached_size_),
            false,
        },
        &Circle::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Circle::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Circle::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Circle, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Circle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float radius = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Circle, _impl_.radius_)}},
    // .DC.Packet.Location pos = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Circle, _impl_.pos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.Location pos = 1;
    {PROTOBUF_FIELD_OFFSET(Circle, _impl_.pos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float radius = 2;
    {PROTOBUF_FIELD_OFFSET(Circle, _impl_.radius_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::Location>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Circle::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Circle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pos_ != nullptr);
    _impl_.pos_->Clear();
  }
  _impl_.radius_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Circle::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Circle& this_ = static_cast<const Circle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Circle::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Circle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Circle)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.Location pos = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.pos_, this_._impl_.pos_->GetCachedSize(), target,
                stream);
          }

          // float radius = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_radius()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_radius(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Circle)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Circle::ByteSizeLong(const MessageLite& base) {
          const Circle& this_ = static_cast<const Circle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Circle::ByteSizeLong() const {
          const Circle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Circle)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .DC.Packet.Location pos = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pos_);
            }
          }
           {
            // float radius = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_radius()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Circle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Circle*>(&to_msg);
  auto& from = static_cast<const Circle&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Circle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pos_ != nullptr);
    if (_this->_impl_.pos_ == nullptr) {
      _this->_impl_.pos_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::Location>(arena, *from._impl_.pos_);
    } else {
      _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
    }
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_radius()) != 0) {
    _this->_impl_.radius_ = from._impl_.radius_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Circle::CopyFrom(const Circle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Circle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Circle::InternalSwap(Circle* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Circle, _impl_.radius_)
      + sizeof(Circle::_impl_.radius_)
      - PROTOBUF_FIELD_OFFSET(Circle, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::google::protobuf::Metadata Circle::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NewItemLog::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NewItemLog>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NewItemLog, _impl_._has_bits_);
};

NewItemLog::NewItemLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.NewItemLog)
}
inline PROTOBUF_NDEBUG_INLINE NewItemLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::NewItemLog& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        itemid_(arena, from.itemid_) {}

NewItemLog::NewItemLog(
    ::google::protobuf::Arena* arena,
    const NewItemLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NewItemLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pos_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::Location>(
                              arena, *from._impl_.pos_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.NewItemLog)
}
inline PROTOBUF_NDEBUG_INLINE NewItemLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        itemid_(arena) {}

inline void NewItemLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pos_ = {};
}
NewItemLog::~NewItemLog() {
  // @@protoc_insertion_point(destructor:DC.Packet.NewItemLog)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NewItemLog::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.itemid_.Destroy();
  delete _impl_.pos_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    NewItemLog::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_NewItemLog_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &NewItemLog::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<NewItemLog>(),
            ::google::protobuf::Message::GetNewImpl<NewItemLog>(),
            ::google::protobuf::Message::GetClearImpl<NewItemLog>(), &NewItemLog::ByteSizeLong,
                &NewItemLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(NewItemLog, _impl_._cached_size_),
            false,
        },
        &NewItemLog::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* NewItemLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 35, 2> NewItemLog::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NewItemLog, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::NewItemLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string itemId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NewItemLog, _impl_.itemid_)}},
    // .DC.Packet.Location pos = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NewItemLog, _impl_.pos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.Location pos = 1;
    {PROTOBUF_FIELD_OFFSET(NewItemLog, _impl_.pos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string itemId = 2;
    {PROTOBUF_FIELD_OFFSET(NewItemLog, _impl_.itemid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::Location>()},
  }}, {{
    "\24\0\6\0\0\0\0\0"
    "DC.Packet.NewItemLog"
    "itemId"
  }},
};

PROTOBUF_NOINLINE void NewItemLog::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.NewItemLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.itemid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pos_ != nullptr);
    _impl_.pos_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NewItemLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NewItemLog& this_ = static_cast<const NewItemLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NewItemLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NewItemLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.NewItemLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.Location pos = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.pos_, this_._impl_.pos_->GetCachedSize(), target,
                stream);
          }

          // string itemId = 2;
          if (!this_._internal_itemid().empty()) {
            const std::string& _s = this_._internal_itemid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.NewItemLog.itemId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.NewItemLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NewItemLog::ByteSizeLong(const MessageLite& base) {
          const NewItemLog& this_ = static_cast<const NewItemLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NewItemLog::ByteSizeLong() const {
          const NewItemLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.NewItemLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string itemId = 2;
            if (!this_._internal_itemid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_itemid());
            }
          }
           {
            // .DC.Packet.Location pos = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pos_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NewItemLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NewItemLog*>(&to_msg);
  auto& from = static_cast<const NewItemLog&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.NewItemLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_itemid().empty()) {
    _this->_internal_set_itemid(from._internal_itemid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pos_ != nullptr);
    if (_this->_impl_.pos_ == nullptr) {
      _this->_impl_.pos_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::Location>(arena, *from._impl_.pos_);
    } else {
      _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NewItemLog::CopyFrom(const NewItemLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.NewItemLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NewItemLog::InternalSwap(NewItemLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.itemid_, &other->_impl_.itemid_, arena);
  swap(_impl_.pos_, other->_impl_.pos_);
}

::google::protobuf::Metadata NewItemLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameResultInfo::_Internal {
 public:
};

void GameResultInfo::clear_gamestats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gamestats_.Clear();
}
GameResultInfo::GameResultInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.GameResultInfo)
}
inline PROTOBUF_NDEBUG_INLINE GameResultInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::GameResultInfo& from_msg)
      : advpoints_{visibility, arena, from.advpoints_},
        exppoints_{visibility, arena, from.exppoints_},
        killlogdata_{visibility, arena, from.killlogdata_},
        monsterkilllogs_{visibility, arena, from.monsterkilllogs_},
        locations_{visibility, arena, from.locations_},
        newitemlogs_{visibility, arena, from.newitemlogs_},
        quests_{visibility, arena, from.quests_},
        gamestats_{visibility, arena, from.gamestats_},
        accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        characterclass_(arena, from.characterclass_),
        escapemapname_(arena, from.escapemapname_),
        reason_(arena, from.reason_),
        seasonid_(arena, from.seasonid_),
        dungeonidtag_(arena, from.dungeonidtag_),
        userpclanguagecode_(arena, from.userpclanguagecode_),
        _cached_size_{0} {}

GameResultInfo::GameResultInfo(
    ::google::protobuf::Arena* arena,
    const GameResultInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameResultInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gameid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gameid_),
           offsetof(Impl_, isbasecamp_) -
               offsetof(Impl_, gameid_) +
               sizeof(Impl_::isbasecamp_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.GameResultInfo)
}
inline PROTOBUF_NDEBUG_INLINE GameResultInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : advpoints_{visibility, arena},
        exppoints_{visibility, arena},
        killlogdata_{visibility, arena},
        monsterkilllogs_{visibility, arena},
        locations_{visibility, arena},
        newitemlogs_{visibility, arena},
        quests_{visibility, arena},
        gamestats_{visibility, arena},
        accountid_(arena),
        characterid_(arena),
        characterclass_(arena),
        escapemapname_(arena),
        reason_(arena),
        seasonid_(arena),
        dungeonidtag_(arena),
        userpclanguagecode_(arena),
        _cached_size_{0} {}

inline void GameResultInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gameid_),
           0,
           offsetof(Impl_, isbasecamp_) -
               offsetof(Impl_, gameid_) +
               sizeof(Impl_::isbasecamp_));
}
GameResultInfo::~GameResultInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.GameResultInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameResultInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.characterclass_.Destroy();
  _impl_.escapemapname_.Destroy();
  _impl_.reason_.Destroy();
  _impl_.seasonid_.Destroy();
  _impl_.dungeonidtag_.Destroy();
  _impl_.userpclanguagecode_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GameResultInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GameResultInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GameResultInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GameResultInfo>(),
            ::google::protobuf::Message::GetNewImpl<GameResultInfo>(),
            ::google::protobuf::Message::GetClearImpl<GameResultInfo>(), &GameResultInfo::ByteSizeLong,
                &GameResultInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_._cached_size_),
            false,
        },
        &GameResultInfo::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GameResultInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 25, 8, 148, 2> GameResultInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    25, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4261412864,  // skipmap
    offsetof(decltype(_table_), field_entries),
    25,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::GameResultInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.accountid_)}},
    // string characterId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.characterid_)}},
    // uint64 gameId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameResultInfo, _impl_.gameid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.gameid_)}},
    // string characterClass = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.characterclass_)}},
    // uint32 killCount = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameResultInfo, _impl_.killcount_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.killcount_)}},
    // repeated .DC.Packet.GameExitAdvPoint advPoints = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.advpoints_)}},
    // string escapeMapName = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.escapemapname_)}},
    // string reason = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.reason_)}},
    // repeated .DC.Packet.GameExitExpPoint expPoints = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 1, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.exppoints_)}},
    // repeated .DC.Packet.Killlog killLogData = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 2, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.killlogdata_)}},
    // repeated .DC.Packet.MonsterKillLog monsterKillLogs = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 3, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.monsterkilllogs_)}},
    // uint32 gameType = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameResultInfo, _impl_.gametype_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.gametype_)}},
    // uint32 needBlock = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameResultInfo, _impl_.needblock_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.needblock_)}},
    // uint32 needHWBlock = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameResultInfo, _impl_.needhwblock_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.needhwblock_)}},
    // uint32 blockTime_min = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameResultInfo, _impl_.blocktime_min_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.blocktime_min_)}},
    // int32 addTriumphExpValue = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.addtriumphexpvalue_)}},
    // repeated .DC.Packet.Location locations = 17;
    {::_pbi::TcParser::FastMtR2,
     {394, 63, 4, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.locations_)}},
    // repeated .DC.Packet.NewItemLog newItemLogs = 18;
    {::_pbi::TcParser::FastMtR2,
     {402, 63, 5, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.newitemlogs_)}},
    // repeated .DC.Packet.SGameQuestInfo quests = 19;
    {::_pbi::TcParser::FastMtR2,
     {410, 63, 6, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.quests_)}},
    // repeated .DC.Packet.SGameStat gameStats = 20;
    {::_pbi::TcParser::FastMtR2,
     {418, 63, 7, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.gamestats_)}},
    // string seasonId = 21;
    {::_pbi::TcParser::FastUS2,
     {426, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.seasonid_)}},
    // uint32 isSeason = 22;
    {::_pbi::TcParser::FastV32S2,
     {432, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.isseason_)}},
    // string dungeonIdTag = 23;
    {::_pbi::TcParser::FastUS2,
     {442, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.dungeonidtag_)}},
    // uint32 isBasecamp = 24;
    {::_pbi::TcParser::FastV32S2,
     {448, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.isbasecamp_)}},
    // string userPcLanguageCode = 25;
    {::_pbi::TcParser::FastUS2,
     {458, 63, 0, PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.userpclanguagecode_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 2;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 gameId = 3;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string characterClass = 4;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.characterclass_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 killCount = 5;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.killcount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .DC.Packet.GameExitAdvPoint advPoints = 6;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.advpoints_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string escapeMapName = 7;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.escapemapname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reason = 8;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .DC.Packet.GameExitExpPoint expPoints = 9;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.exppoints_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.Killlog killLogData = 10;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.killlogdata_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.MonsterKillLog monsterKillLogs = 11;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.monsterkilllogs_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 gameType = 12;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.gametype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 needBlock = 13;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.needblock_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 needHWBlock = 14;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.needhwblock_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 blockTime_min = 15;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.blocktime_min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // int32 addTriumphExpValue = 16;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.addtriumphexpvalue_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .DC.Packet.Location locations = 17;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.locations_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.NewItemLog newItemLogs = 18;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.newitemlogs_), 0, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SGameQuestInfo quests = 19;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.quests_), 0, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SGameStat gameStats = 20;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.gamestats_), 0, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string seasonId = 21;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.seasonid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 isSeason = 22;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.isseason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string dungeonIdTag = 23;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.dungeonidtag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 isBasecamp = 24;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.isbasecamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string userPcLanguageCode = 25;
    {PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.userpclanguagecode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::GameExitAdvPoint>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::GameExitExpPoint>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::Killlog>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::MonsterKillLog>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::Location>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::NewItemLog>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SGameQuestInfo>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SGameStat>()},
  }}, {{
    "\30\11\13\0\16\0\0\15\6\0\0\0\0\0\0\0\0\0\0\0\0\10\0\14\0\22\0\0\0\0\0\0"
    "DC.Packet.GameResultInfo"
    "accountId"
    "characterId"
    "characterClass"
    "escapeMapName"
    "reason"
    "seasonId"
    "dungeonIdTag"
    "userPcLanguageCode"
  }},
};

PROTOBUF_NOINLINE void GameResultInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.GameResultInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.advpoints_.Clear();
  _impl_.exppoints_.Clear();
  _impl_.killlogdata_.Clear();
  _impl_.monsterkilllogs_.Clear();
  _impl_.locations_.Clear();
  _impl_.newitemlogs_.Clear();
  _impl_.quests_.Clear();
  _impl_.gamestats_.Clear();
  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.characterclass_.ClearToEmpty();
  _impl_.escapemapname_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  _impl_.seasonid_.ClearToEmpty();
  _impl_.dungeonidtag_.ClearToEmpty();
  _impl_.userpclanguagecode_.ClearToEmpty();
  ::memset(&_impl_.gameid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.isbasecamp_) -
      reinterpret_cast<char*>(&_impl_.gameid_)) + sizeof(_impl_.isbasecamp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameResultInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameResultInfo& this_ = static_cast<const GameResultInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameResultInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameResultInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.GameResultInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameResultInfo.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string characterId = 2;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameResultInfo.characterId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 gameId = 3;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_gameid(), target);
          }

          // string characterClass = 4;
          if (!this_._internal_characterclass().empty()) {
            const std::string& _s = this_._internal_characterclass();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameResultInfo.characterClass");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // uint32 killCount = 5;
          if (this_._internal_killcount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_killcount(), target);
          }

          // repeated .DC.Packet.GameExitAdvPoint advPoints = 6;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_advpoints_size());
               i < n; i++) {
            const auto& repfield = this_._internal_advpoints().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string escapeMapName = 7;
          if (!this_._internal_escapemapname().empty()) {
            const std::string& _s = this_._internal_escapemapname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameResultInfo.escapeMapName");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string reason = 8;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameResultInfo.reason");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // repeated .DC.Packet.GameExitExpPoint expPoints = 9;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_exppoints_size());
               i < n; i++) {
            const auto& repfield = this_._internal_exppoints().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    9, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.Killlog killLogData = 10;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_killlogdata_size());
               i < n; i++) {
            const auto& repfield = this_._internal_killlogdata().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    10, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.MonsterKillLog monsterKillLogs = 11;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_monsterkilllogs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_monsterkilllogs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    11, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint32 gameType = 12;
          if (this_._internal_gametype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                12, this_._internal_gametype(), target);
          }

          // uint32 needBlock = 13;
          if (this_._internal_needblock() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                13, this_._internal_needblock(), target);
          }

          // uint32 needHWBlock = 14;
          if (this_._internal_needhwblock() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                14, this_._internal_needhwblock(), target);
          }

          // uint32 blockTime_min = 15;
          if (this_._internal_blocktime_min() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                15, this_._internal_blocktime_min(), target);
          }

          // int32 addTriumphExpValue = 16;
          if (this_._internal_addtriumphexpvalue() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                16, this_._internal_addtriumphexpvalue(), target);
          }

          // repeated .DC.Packet.Location locations = 17;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_locations_size());
               i < n; i++) {
            const auto& repfield = this_._internal_locations().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    17, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.NewItemLog newItemLogs = 18;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_newitemlogs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_newitemlogs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    18, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SGameQuestInfo quests = 19;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_quests_size());
               i < n; i++) {
            const auto& repfield = this_._internal_quests().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    19, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SGameStat gameStats = 20;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_gamestats_size());
               i < n; i++) {
            const auto& repfield = this_._internal_gamestats().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    20, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string seasonId = 21;
          if (!this_._internal_seasonid().empty()) {
            const std::string& _s = this_._internal_seasonid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameResultInfo.seasonId");
            target = stream->WriteStringMaybeAliased(21, _s, target);
          }

          // uint32 isSeason = 22;
          if (this_._internal_isseason() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                22, this_._internal_isseason(), target);
          }

          // string dungeonIdTag = 23;
          if (!this_._internal_dungeonidtag().empty()) {
            const std::string& _s = this_._internal_dungeonidtag();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameResultInfo.dungeonIdTag");
            target = stream->WriteStringMaybeAliased(23, _s, target);
          }

          // uint32 isBasecamp = 24;
          if (this_._internal_isbasecamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                24, this_._internal_isbasecamp(), target);
          }

          // string userPcLanguageCode = 25;
          if (!this_._internal_userpclanguagecode().empty()) {
            const std::string& _s = this_._internal_userpclanguagecode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameResultInfo.userPcLanguageCode");
            target = stream->WriteStringMaybeAliased(25, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.GameResultInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameResultInfo::ByteSizeLong(const MessageLite& base) {
          const GameResultInfo& this_ = static_cast<const GameResultInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameResultInfo::ByteSizeLong() const {
          const GameResultInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.GameResultInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.GameExitAdvPoint advPoints = 6;
            {
              total_size += 1UL * this_._internal_advpoints_size();
              for (const auto& msg : this_._internal_advpoints()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.GameExitExpPoint expPoints = 9;
            {
              total_size += 1UL * this_._internal_exppoints_size();
              for (const auto& msg : this_._internal_exppoints()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.Killlog killLogData = 10;
            {
              total_size += 1UL * this_._internal_killlogdata_size();
              for (const auto& msg : this_._internal_killlogdata()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.MonsterKillLog monsterKillLogs = 11;
            {
              total_size += 1UL * this_._internal_monsterkilllogs_size();
              for (const auto& msg : this_._internal_monsterkilllogs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.Location locations = 17;
            {
              total_size += 2UL * this_._internal_locations_size();
              for (const auto& msg : this_._internal_locations()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.NewItemLog newItemLogs = 18;
            {
              total_size += 2UL * this_._internal_newitemlogs_size();
              for (const auto& msg : this_._internal_newitemlogs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SGameQuestInfo quests = 19;
            {
              total_size += 2UL * this_._internal_quests_size();
              for (const auto& msg : this_._internal_quests()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SGameStat gameStats = 20;
            {
              total_size += 2UL * this_._internal_gamestats_size();
              for (const auto& msg : this_._internal_gamestats()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 2;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // string characterClass = 4;
            if (!this_._internal_characterclass().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterclass());
            }
            // string escapeMapName = 7;
            if (!this_._internal_escapemapname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escapemapname());
            }
            // string reason = 8;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // string seasonId = 21;
            if (!this_._internal_seasonid().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_seasonid());
            }
            // string dungeonIdTag = 23;
            if (!this_._internal_dungeonidtag().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_dungeonidtag());
            }
            // string userPcLanguageCode = 25;
            if (!this_._internal_userpclanguagecode().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_userpclanguagecode());
            }
            // uint64 gameId = 3;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
            // uint32 killCount = 5;
            if (this_._internal_killcount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_killcount());
            }
            // uint32 gameType = 12;
            if (this_._internal_gametype() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gametype());
            }
            // uint32 needBlock = 13;
            if (this_._internal_needblock() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_needblock());
            }
            // uint32 needHWBlock = 14;
            if (this_._internal_needhwblock() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_needhwblock());
            }
            // uint32 blockTime_min = 15;
            if (this_._internal_blocktime_min() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_blocktime_min());
            }
            // int32 addTriumphExpValue = 16;
            if (this_._internal_addtriumphexpvalue() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_addtriumphexpvalue());
            }
            // uint32 isSeason = 22;
            if (this_._internal_isseason() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_isseason());
            }
            // uint32 isBasecamp = 24;
            if (this_._internal_isbasecamp() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_isbasecamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameResultInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameResultInfo*>(&to_msg);
  auto& from = static_cast<const GameResultInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.GameResultInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_advpoints()->MergeFrom(
      from._internal_advpoints());
  _this->_internal_mutable_exppoints()->MergeFrom(
      from._internal_exppoints());
  _this->_internal_mutable_killlogdata()->MergeFrom(
      from._internal_killlogdata());
  _this->_internal_mutable_monsterkilllogs()->MergeFrom(
      from._internal_monsterkilllogs());
  _this->_internal_mutable_locations()->MergeFrom(
      from._internal_locations());
  _this->_internal_mutable_newitemlogs()->MergeFrom(
      from._internal_newitemlogs());
  _this->_internal_mutable_quests()->MergeFrom(
      from._internal_quests());
  _this->_internal_mutable_gamestats()->MergeFrom(
      from._internal_gamestats());
  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (!from._internal_characterclass().empty()) {
    _this->_internal_set_characterclass(from._internal_characterclass());
  }
  if (!from._internal_escapemapname().empty()) {
    _this->_internal_set_escapemapname(from._internal_escapemapname());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (!from._internal_seasonid().empty()) {
    _this->_internal_set_seasonid(from._internal_seasonid());
  }
  if (!from._internal_dungeonidtag().empty()) {
    _this->_internal_set_dungeonidtag(from._internal_dungeonidtag());
  }
  if (!from._internal_userpclanguagecode().empty()) {
    _this->_internal_set_userpclanguagecode(from._internal_userpclanguagecode());
  }
  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  if (from._internal_killcount() != 0) {
    _this->_impl_.killcount_ = from._impl_.killcount_;
  }
  if (from._internal_gametype() != 0) {
    _this->_impl_.gametype_ = from._impl_.gametype_;
  }
  if (from._internal_needblock() != 0) {
    _this->_impl_.needblock_ = from._impl_.needblock_;
  }
  if (from._internal_needhwblock() != 0) {
    _this->_impl_.needhwblock_ = from._impl_.needhwblock_;
  }
  if (from._internal_blocktime_min() != 0) {
    _this->_impl_.blocktime_min_ = from._impl_.blocktime_min_;
  }
  if (from._internal_addtriumphexpvalue() != 0) {
    _this->_impl_.addtriumphexpvalue_ = from._impl_.addtriumphexpvalue_;
  }
  if (from._internal_isseason() != 0) {
    _this->_impl_.isseason_ = from._impl_.isseason_;
  }
  if (from._internal_isbasecamp() != 0) {
    _this->_impl_.isbasecamp_ = from._impl_.isbasecamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameResultInfo::CopyFrom(const GameResultInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.GameResultInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameResultInfo::InternalSwap(GameResultInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.advpoints_.InternalSwap(&other->_impl_.advpoints_);
  _impl_.exppoints_.InternalSwap(&other->_impl_.exppoints_);
  _impl_.killlogdata_.InternalSwap(&other->_impl_.killlogdata_);
  _impl_.monsterkilllogs_.InternalSwap(&other->_impl_.monsterkilllogs_);
  _impl_.locations_.InternalSwap(&other->_impl_.locations_);
  _impl_.newitemlogs_.InternalSwap(&other->_impl_.newitemlogs_);
  _impl_.quests_.InternalSwap(&other->_impl_.quests_);
  _impl_.gamestats_.InternalSwap(&other->_impl_.gamestats_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterclass_, &other->_impl_.characterclass_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escapemapname_, &other->_impl_.escapemapname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.seasonid_, &other->_impl_.seasonid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dungeonidtag_, &other->_impl_.dungeonidtag_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.userpclanguagecode_, &other->_impl_.userpclanguagecode_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.isbasecamp_)
      + sizeof(GameResultInfo::_impl_.isbasecamp_)
      - PROTOBUF_FIELD_OFFSET(GameResultInfo, _impl_.gameid_)>(
          reinterpret_cast<char*>(&_impl_.gameid_),
          reinterpret_cast<char*>(&other->_impl_.gameid_));
}

::google::protobuf::Metadata GameResultInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_GameEscapeUser_POST::_Internal {
 public:
  using HasBits =
      decltype(std::declval<C2S_GameEscapeUser_POST>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(C2S_GameEscapeUser_POST, _impl_._has_bits_);
};

void C2S_GameEscapeUser_POST::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
void C2S_GameEscapeUser_POST::clear_frienditemrecoveryinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frienditemrecoveryinfos_.Clear();
}
C2S_GameEscapeUser_POST::C2S_GameEscapeUser_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_GameEscapeUser_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameEscapeUser_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_GameEscapeUser_POST& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        items_{visibility, arena, from.items_},
        frienditemrecoveryinfos_{visibility, arena, from.frienditemrecoveryinfos_},
        secretid_(arena, from.secretid_) {}

C2S_GameEscapeUser_POST::C2S_GameEscapeUser_POST(
    ::google::protobuf::Arena* arena,
    const C2S_GameEscapeUser_POST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_GameEscapeUser_POST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.resultinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::GameResultInfo>(
                              arena, *from._impl_.resultinfo_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_GameEscapeUser_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameEscapeUser_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        items_{visibility, arena},
        frienditemrecoveryinfos_{visibility, arena},
        secretid_(arena) {}

inline void C2S_GameEscapeUser_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.resultinfo_ = {};
}
C2S_GameEscapeUser_POST::~C2S_GameEscapeUser_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_GameEscapeUser_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_GameEscapeUser_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.secretid_.Destroy();
  delete _impl_.resultinfo_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_GameEscapeUser_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_GameEscapeUser_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_GameEscapeUser_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_GameEscapeUser_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_GameEscapeUser_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_GameEscapeUser_POST>(), &C2S_GameEscapeUser_POST::ByteSizeLong,
                &C2S_GameEscapeUser_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_GameEscapeUser_POST, _impl_._cached_size_),
            false,
        },
        &C2S_GameEscapeUser_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_GameEscapeUser_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 50, 2> C2S_GameEscapeUser_POST::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(C2S_GameEscapeUser_POST, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_GameEscapeUser_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.SFriendItemRecoveryInfo friendItemRecoveryInfos = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(C2S_GameEscapeUser_POST, _impl_.frienditemrecoveryinfos_)}},
    // .DC.Packet.GameResultInfo resultInfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(C2S_GameEscapeUser_POST, _impl_.resultinfo_)}},
    // repeated .DC.Packet.SItem items = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(C2S_GameEscapeUser_POST, _impl_.items_)}},
    // string secretId = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameEscapeUser_POST, _impl_.secretid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.GameResultInfo resultInfo = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_GameEscapeUser_POST, _impl_.resultinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SItem items = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_GameEscapeUser_POST, _impl_.items_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string secretId = 3;
    {PROTOBUF_FIELD_OFFSET(C2S_GameEscapeUser_POST, _impl_.secretid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .DC.Packet.SFriendItemRecoveryInfo friendItemRecoveryInfos = 4;
    {PROTOBUF_FIELD_OFFSET(C2S_GameEscapeUser_POST, _impl_.frienditemrecoveryinfos_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::GameResultInfo>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SFriendItemRecoveryInfo>()},
  }}, {{
    "\41\0\0\10\0\0\0\0"
    "DC.Packet.C2S_GameEscapeUser_POST"
    "secretId"
  }},
};

PROTOBUF_NOINLINE void C2S_GameEscapeUser_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_GameEscapeUser_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.frienditemrecoveryinfos_.Clear();
  _impl_.secretid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.resultinfo_ != nullptr);
    _impl_.resultinfo_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_GameEscapeUser_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_GameEscapeUser_POST& this_ = static_cast<const C2S_GameEscapeUser_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_GameEscapeUser_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_GameEscapeUser_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_GameEscapeUser_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.GameResultInfo resultInfo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.resultinfo_, this_._impl_.resultinfo_->GetCachedSize(), target,
                stream);
          }

          // repeated .DC.Packet.SItem items = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_items_size());
               i < n; i++) {
            const auto& repfield = this_._internal_items().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string secretId = 3;
          if (!this_._internal_secretid().empty()) {
            const std::string& _s = this_._internal_secretid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_GameEscapeUser_POST.secretId");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated .DC.Packet.SFriendItemRecoveryInfo friendItemRecoveryInfos = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_frienditemrecoveryinfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_frienditemrecoveryinfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_GameEscapeUser_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_GameEscapeUser_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_GameEscapeUser_POST& this_ = static_cast<const C2S_GameEscapeUser_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_GameEscapeUser_POST::ByteSizeLong() const {
          const C2S_GameEscapeUser_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_GameEscapeUser_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SItem items = 2;
            {
              total_size += 1UL * this_._internal_items_size();
              for (const auto& msg : this_._internal_items()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SFriendItemRecoveryInfo friendItemRecoveryInfos = 4;
            {
              total_size += 1UL * this_._internal_frienditemrecoveryinfos_size();
              for (const auto& msg : this_._internal_frienditemrecoveryinfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string secretId = 3;
            if (!this_._internal_secretid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_secretid());
            }
          }
           {
            // .DC.Packet.GameResultInfo resultInfo = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.resultinfo_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_GameEscapeUser_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_GameEscapeUser_POST*>(&to_msg);
  auto& from = static_cast<const C2S_GameEscapeUser_POST&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_GameEscapeUser_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  _this->_internal_mutable_frienditemrecoveryinfos()->MergeFrom(
      from._internal_frienditemrecoveryinfos());
  if (!from._internal_secretid().empty()) {
    _this->_internal_set_secretid(from._internal_secretid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.resultinfo_ != nullptr);
    if (_this->_impl_.resultinfo_ == nullptr) {
      _this->_impl_.resultinfo_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::GameResultInfo>(arena, *from._impl_.resultinfo_);
    } else {
      _this->_impl_.resultinfo_->MergeFrom(*from._impl_.resultinfo_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_GameEscapeUser_POST::CopyFrom(const C2S_GameEscapeUser_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_GameEscapeUser_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_GameEscapeUser_POST::InternalSwap(C2S_GameEscapeUser_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  _impl_.frienditemrecoveryinfos_.InternalSwap(&other->_impl_.frienditemrecoveryinfos_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.secretid_, &other->_impl_.secretid_, arena);
  swap(_impl_.resultinfo_, other->_impl_.resultinfo_);
}

::google::protobuf::Metadata C2S_GameEscapeUser_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_GameExitUser_V2_POST::_Internal {
 public:
  using HasBits =
      decltype(std::declval<C2S_GameExitUser_V2_POST>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_V2_POST, _impl_._has_bits_);
};

C2S_GameExitUser_V2_POST::C2S_GameExitUser_V2_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_GameExitUser_V2_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameExitUser_V2_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_GameExitUser_V2_POST& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

C2S_GameExitUser_V2_POST::C2S_GameExitUser_V2_POST(
    ::google::protobuf::Arena* arena,
    const C2S_GameExitUser_V2_POST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_GameExitUser_V2_POST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.resultinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::GameResultInfo>(
                              arena, *from._impl_.resultinfo_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_GameExitUser_V2_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameExitUser_V2_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void C2S_GameExitUser_V2_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.resultinfo_ = {};
}
C2S_GameExitUser_V2_POST::~C2S_GameExitUser_V2_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_GameExitUser_V2_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_GameExitUser_V2_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.resultinfo_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_GameExitUser_V2_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_GameExitUser_V2_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_GameExitUser_V2_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_GameExitUser_V2_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_GameExitUser_V2_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_GameExitUser_V2_POST>(), &C2S_GameExitUser_V2_POST::ByteSizeLong,
                &C2S_GameExitUser_V2_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_V2_POST, _impl_._cached_size_),
            false,
        },
        &C2S_GameExitUser_V2_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_GameExitUser_V2_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> C2S_GameExitUser_V2_POST::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_V2_POST, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_GameExitUser_V2_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .DC.Packet.GameResultInfo resultInfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_V2_POST, _impl_.resultinfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.GameResultInfo resultInfo = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitUser_V2_POST, _impl_.resultinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::GameResultInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void C2S_GameExitUser_V2_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_GameExitUser_V2_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.resultinfo_ != nullptr);
    _impl_.resultinfo_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_GameExitUser_V2_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_GameExitUser_V2_POST& this_ = static_cast<const C2S_GameExitUser_V2_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_GameExitUser_V2_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_GameExitUser_V2_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_GameExitUser_V2_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.GameResultInfo resultInfo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.resultinfo_, this_._impl_.resultinfo_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_GameExitUser_V2_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_GameExitUser_V2_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_GameExitUser_V2_POST& this_ = static_cast<const C2S_GameExitUser_V2_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_GameExitUser_V2_POST::ByteSizeLong() const {
          const C2S_GameExitUser_V2_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_GameExitUser_V2_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .DC.Packet.GameResultInfo resultInfo = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.resultinfo_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_GameExitUser_V2_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_GameExitUser_V2_POST*>(&to_msg);
  auto& from = static_cast<const C2S_GameExitUser_V2_POST&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_GameExitUser_V2_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.resultinfo_ != nullptr);
    if (_this->_impl_.resultinfo_ == nullptr) {
      _this->_impl_.resultinfo_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::GameResultInfo>(arena, *from._impl_.resultinfo_);
    } else {
      _this->_impl_.resultinfo_->MergeFrom(*from._impl_.resultinfo_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_GameExitUser_V2_POST::CopyFrom(const C2S_GameExitUser_V2_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_GameExitUser_V2_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_GameExitUser_V2_POST::InternalSwap(C2S_GameExitUser_V2_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.resultinfo_, other->_impl_.resultinfo_);
}

::google::protobuf::Metadata C2S_GameExitUser_V2_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_GameExitEscapedUser_POST::_Internal {
 public:
};

C2S_GameExitEscapedUser_POST::C2S_GameExitEscapedUser_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_GameExitEscapedUser_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameExitEscapedUser_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_GameExitEscapedUser_POST& from_msg)
      : accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        _cached_size_{0} {}

C2S_GameExitEscapedUser_POST::C2S_GameExitEscapedUser_POST(
    ::google::protobuf::Arena* arena,
    const C2S_GameExitEscapedUser_POST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_GameExitEscapedUser_POST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.gameid_ = from._impl_.gameid_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_GameExitEscapedUser_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameExitEscapedUser_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accountid_(arena),
        characterid_(arena),
        _cached_size_{0} {}

inline void C2S_GameExitEscapedUser_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gameid_ = {};
}
C2S_GameExitEscapedUser_POST::~C2S_GameExitEscapedUser_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_GameExitEscapedUser_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_GameExitEscapedUser_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_GameExitEscapedUser_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_GameExitEscapedUser_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_GameExitEscapedUser_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_GameExitEscapedUser_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_GameExitEscapedUser_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_GameExitEscapedUser_POST>(), &C2S_GameExitEscapedUser_POST::ByteSizeLong,
                &C2S_GameExitEscapedUser_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_GameExitEscapedUser_POST, _impl_._cached_size_),
            false,
        },
        &C2S_GameExitEscapedUser_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_GameExitEscapedUser_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 67, 2> C2S_GameExitEscapedUser_POST::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_GameExitEscapedUser_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameExitEscapedUser_POST, _impl_.accountid_)}},
    // string characterId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameExitEscapedUser_POST, _impl_.characterid_)}},
    // uint64 gameId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(C2S_GameExitEscapedUser_POST, _impl_.gameid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameExitEscapedUser_POST, _impl_.gameid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitEscapedUser_POST, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitEscapedUser_POST, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 gameId = 3;
    {PROTOBUF_FIELD_OFFSET(C2S_GameExitEscapedUser_POST, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\46\11\13\0\0\0\0\0"
    "DC.Packet.C2S_GameExitEscapedUser_POST"
    "accountId"
    "characterId"
  }},
};

PROTOBUF_NOINLINE void C2S_GameExitEscapedUser_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_GameExitEscapedUser_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.gameid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_GameExitEscapedUser_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_GameExitEscapedUser_POST& this_ = static_cast<const C2S_GameExitEscapedUser_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_GameExitEscapedUser_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_GameExitEscapedUser_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_GameExitEscapedUser_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_GameExitEscapedUser_POST.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string characterId = 2;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_GameExitEscapedUser_POST.characterId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 gameId = 3;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_gameid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_GameExitEscapedUser_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_GameExitEscapedUser_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_GameExitEscapedUser_POST& this_ = static_cast<const C2S_GameExitEscapedUser_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_GameExitEscapedUser_POST::ByteSizeLong() const {
          const C2S_GameExitEscapedUser_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_GameExitEscapedUser_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 2;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // uint64 gameId = 3;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_GameExitEscapedUser_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_GameExitEscapedUser_POST*>(&to_msg);
  auto& from = static_cast<const C2S_GameExitEscapedUser_POST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_GameExitEscapedUser_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_GameExitEscapedUser_POST::CopyFrom(const C2S_GameExitEscapedUser_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_GameExitEscapedUser_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_GameExitEscapedUser_POST::InternalSwap(C2S_GameExitEscapedUser_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
        swap(_impl_.gameid_, other->_impl_.gameid_);
}

::google::protobuf::Metadata C2S_GameExitEscapedUser_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SSkill_Floor::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SSkill_Floor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SSkill_Floor, _impl_._has_bits_);
};

void SSkill_Floor::clear_skill() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.skill_ != nullptr) _impl_.skill_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SSkill_Floor::SSkill_Floor(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SSkill_Floor)
}
inline PROTOBUF_NDEBUG_INLINE SSkill_Floor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SSkill_Floor& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SSkill_Floor::SSkill_Floor(
    ::google::protobuf::Arena* arena,
    const SSkill_Floor& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SSkill_Floor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.skill_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SSkill>(
                              arena, *from._impl_.skill_)
                        : nullptr;
  _impl_.count_ = from._impl_.count_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SSkill_Floor)
}
inline PROTOBUF_NDEBUG_INLINE SSkill_Floor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SSkill_Floor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, skill_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, skill_) +
               sizeof(Impl_::count_));
}
SSkill_Floor::~SSkill_Floor() {
  // @@protoc_insertion_point(destructor:DC.Packet.SSkill_Floor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SSkill_Floor::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.skill_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SSkill_Floor::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SSkill_Floor_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SSkill_Floor::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SSkill_Floor>(),
            ::google::protobuf::Message::GetNewImpl<SSkill_Floor>(),
            ::google::protobuf::Message::GetClearImpl<SSkill_Floor>(), &SSkill_Floor::ByteSizeLong,
                &SSkill_Floor::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SSkill_Floor, _impl_._cached_size_),
            false,
        },
        &SSkill_Floor::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SSkill_Floor::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SSkill_Floor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SSkill_Floor, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SSkill_Floor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SSkill_Floor, _impl_.count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SSkill_Floor, _impl_.count_)}},
    // .DC.Packet.SSkill skill = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SSkill_Floor, _impl_.skill_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.SSkill skill = 1;
    {PROTOBUF_FIELD_OFFSET(SSkill_Floor, _impl_.skill_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 count = 2;
    {PROTOBUF_FIELD_OFFSET(SSkill_Floor, _impl_.count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SSkill>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SSkill_Floor::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SSkill_Floor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.skill_ != nullptr);
    _impl_.skill_->Clear();
  }
  _impl_.count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SSkill_Floor::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SSkill_Floor& this_ = static_cast<const SSkill_Floor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SSkill_Floor::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SSkill_Floor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SSkill_Floor)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SSkill skill = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.skill_, this_._impl_.skill_->GetCachedSize(), target,
                stream);
          }

          // int32 count = 2;
          if (this_._internal_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SSkill_Floor)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SSkill_Floor::ByteSizeLong(const MessageLite& base) {
          const SSkill_Floor& this_ = static_cast<const SSkill_Floor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SSkill_Floor::ByteSizeLong() const {
          const SSkill_Floor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SSkill_Floor)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .DC.Packet.SSkill skill = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.skill_);
            }
          }
           {
            // int32 count = 2;
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SSkill_Floor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SSkill_Floor*>(&to_msg);
  auto& from = static_cast<const SSkill_Floor&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SSkill_Floor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.skill_ != nullptr);
    if (_this->_impl_.skill_ == nullptr) {
      _this->_impl_.skill_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SSkill>(arena, *from._impl_.skill_);
    } else {
      _this->_impl_.skill_->MergeFrom(*from._impl_.skill_);
    }
  }
  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SSkill_Floor::CopyFrom(const SSkill_Floor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SSkill_Floor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SSkill_Floor::InternalSwap(SSkill_Floor* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSkill_Floor, _impl_.count_)
      + sizeof(SSkill_Floor::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(SSkill_Floor, _impl_.skill_)>(
          reinterpret_cast<char*>(&_impl_.skill_),
          reinterpret_cast<char*>(&other->_impl_.skill_));
}

::google::protobuf::Metadata SSkill_Floor::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SSpell_Floor::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SSpell_Floor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SSpell_Floor, _impl_._has_bits_);
};

void SSpell_Floor::clear_spell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.spell_ != nullptr) _impl_.spell_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SSpell_Floor::SSpell_Floor(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SSpell_Floor)
}
inline PROTOBUF_NDEBUG_INLINE SSpell_Floor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SSpell_Floor& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SSpell_Floor::SSpell_Floor(
    ::google::protobuf::Arena* arena,
    const SSpell_Floor& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SSpell_Floor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.spell_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SSpell>(
                              arena, *from._impl_.spell_)
                        : nullptr;
  _impl_.count_ = from._impl_.count_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SSpell_Floor)
}
inline PROTOBUF_NDEBUG_INLINE SSpell_Floor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SSpell_Floor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, spell_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, spell_) +
               sizeof(Impl_::count_));
}
SSpell_Floor::~SSpell_Floor() {
  // @@protoc_insertion_point(destructor:DC.Packet.SSpell_Floor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SSpell_Floor::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.spell_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SSpell_Floor::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SSpell_Floor_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SSpell_Floor::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SSpell_Floor>(),
            ::google::protobuf::Message::GetNewImpl<SSpell_Floor>(),
            ::google::protobuf::Message::GetClearImpl<SSpell_Floor>(), &SSpell_Floor::ByteSizeLong,
                &SSpell_Floor::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SSpell_Floor, _impl_._cached_size_),
            false,
        },
        &SSpell_Floor::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SSpell_Floor::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SSpell_Floor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SSpell_Floor, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SSpell_Floor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SSpell_Floor, _impl_.count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SSpell_Floor, _impl_.count_)}},
    // .DC.Packet.SSpell spell = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SSpell_Floor, _impl_.spell_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.SSpell spell = 1;
    {PROTOBUF_FIELD_OFFSET(SSpell_Floor, _impl_.spell_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 count = 2;
    {PROTOBUF_FIELD_OFFSET(SSpell_Floor, _impl_.count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SSpell>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SSpell_Floor::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SSpell_Floor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.spell_ != nullptr);
    _impl_.spell_->Clear();
  }
  _impl_.count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SSpell_Floor::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SSpell_Floor& this_ = static_cast<const SSpell_Floor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SSpell_Floor::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SSpell_Floor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SSpell_Floor)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SSpell spell = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.spell_, this_._impl_.spell_->GetCachedSize(), target,
                stream);
          }

          // int32 count = 2;
          if (this_._internal_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SSpell_Floor)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SSpell_Floor::ByteSizeLong(const MessageLite& base) {
          const SSpell_Floor& this_ = static_cast<const SSpell_Floor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SSpell_Floor::ByteSizeLong() const {
          const SSpell_Floor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SSpell_Floor)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .DC.Packet.SSpell spell = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.spell_);
            }
          }
           {
            // int32 count = 2;
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SSpell_Floor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SSpell_Floor*>(&to_msg);
  auto& from = static_cast<const SSpell_Floor&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SSpell_Floor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.spell_ != nullptr);
    if (_this->_impl_.spell_ == nullptr) {
      _this->_impl_.spell_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SSpell>(arena, *from._impl_.spell_);
    } else {
      _this->_impl_.spell_->MergeFrom(*from._impl_.spell_);
    }
  }
  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SSpell_Floor::CopyFrom(const SSpell_Floor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SSpell_Floor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SSpell_Floor::InternalSwap(SSpell_Floor* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSpell_Floor, _impl_.count_)
      + sizeof(SSpell_Floor::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(SSpell_Floor, _impl_.spell_)>(
          reinterpret_cast<char*>(&_impl_.spell_),
          reinterpret_cast<char*>(&other->_impl_.spell_));
}

::google::protobuf::Metadata SSpell_Floor::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SMusic_Floor::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SMusic_Floor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SMusic_Floor, _impl_._has_bits_);
};

void SMusic_Floor::clear_music() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.music_ != nullptr) _impl_.music_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SMusic_Floor::SMusic_Floor(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SMusic_Floor)
}
inline PROTOBUF_NDEBUG_INLINE SMusic_Floor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SMusic_Floor& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SMusic_Floor::SMusic_Floor(
    ::google::protobuf::Arena* arena,
    const SMusic_Floor& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SMusic_Floor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.music_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SMusic>(
                              arena, *from._impl_.music_)
                        : nullptr;
  _impl_.count_ = from._impl_.count_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SMusic_Floor)
}
inline PROTOBUF_NDEBUG_INLINE SMusic_Floor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SMusic_Floor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, music_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, music_) +
               sizeof(Impl_::count_));
}
SMusic_Floor::~SMusic_Floor() {
  // @@protoc_insertion_point(destructor:DC.Packet.SMusic_Floor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SMusic_Floor::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.music_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SMusic_Floor::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SMusic_Floor_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SMusic_Floor::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SMusic_Floor>(),
            ::google::protobuf::Message::GetNewImpl<SMusic_Floor>(),
            ::google::protobuf::Message::GetClearImpl<SMusic_Floor>(), &SMusic_Floor::ByteSizeLong,
                &SMusic_Floor::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SMusic_Floor, _impl_._cached_size_),
            false,
        },
        &SMusic_Floor::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SMusic_Floor::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SMusic_Floor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SMusic_Floor, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SMusic_Floor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SMusic_Floor, _impl_.count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SMusic_Floor, _impl_.count_)}},
    // .DC.Packet.SMusic music = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SMusic_Floor, _impl_.music_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.SMusic music = 1;
    {PROTOBUF_FIELD_OFFSET(SMusic_Floor, _impl_.music_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 count = 2;
    {PROTOBUF_FIELD_OFFSET(SMusic_Floor, _impl_.count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SMusic>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SMusic_Floor::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SMusic_Floor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.music_ != nullptr);
    _impl_.music_->Clear();
  }
  _impl_.count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SMusic_Floor::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SMusic_Floor& this_ = static_cast<const SMusic_Floor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SMusic_Floor::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SMusic_Floor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SMusic_Floor)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SMusic music = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.music_, this_._impl_.music_->GetCachedSize(), target,
                stream);
          }

          // int32 count = 2;
          if (this_._internal_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SMusic_Floor)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SMusic_Floor::ByteSizeLong(const MessageLite& base) {
          const SMusic_Floor& this_ = static_cast<const SMusic_Floor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SMusic_Floor::ByteSizeLong() const {
          const SMusic_Floor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SMusic_Floor)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .DC.Packet.SMusic music = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.music_);
            }
          }
           {
            // int32 count = 2;
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SMusic_Floor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SMusic_Floor*>(&to_msg);
  auto& from = static_cast<const SMusic_Floor&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SMusic_Floor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.music_ != nullptr);
    if (_this->_impl_.music_ == nullptr) {
      _this->_impl_.music_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SMusic>(arena, *from._impl_.music_);
    } else {
      _this->_impl_.music_->MergeFrom(*from._impl_.music_);
    }
  }
  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SMusic_Floor::CopyFrom(const SMusic_Floor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SMusic_Floor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SMusic_Floor::InternalSwap(SMusic_Floor* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SMusic_Floor, _impl_.count_)
      + sizeof(SMusic_Floor::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(SMusic_Floor, _impl_.music_)>(
          reinterpret_cast<char*>(&_impl_.music_),
          reinterpret_cast<char*>(&other->_impl_.music_));
}

::google::protobuf::Metadata SMusic_Floor::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SShapeShift_Floor::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SShapeShift_Floor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SShapeShift_Floor, _impl_._has_bits_);
};

void SShapeShift_Floor::clear_shapeshift() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.shapeshift_ != nullptr) _impl_.shapeshift_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SShapeShift_Floor::SShapeShift_Floor(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SShapeShift_Floor)
}
inline PROTOBUF_NDEBUG_INLINE SShapeShift_Floor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SShapeShift_Floor& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SShapeShift_Floor::SShapeShift_Floor(
    ::google::protobuf::Arena* arena,
    const SShapeShift_Floor& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SShapeShift_Floor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.shapeshift_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SShapeShift>(
                              arena, *from._impl_.shapeshift_)
                        : nullptr;
  _impl_.count_ = from._impl_.count_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SShapeShift_Floor)
}
inline PROTOBUF_NDEBUG_INLINE SShapeShift_Floor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SShapeShift_Floor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, shapeshift_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, shapeshift_) +
               sizeof(Impl_::count_));
}
SShapeShift_Floor::~SShapeShift_Floor() {
  // @@protoc_insertion_point(destructor:DC.Packet.SShapeShift_Floor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SShapeShift_Floor::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.shapeshift_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SShapeShift_Floor::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SShapeShift_Floor_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SShapeShift_Floor::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SShapeShift_Floor>(),
            ::google::protobuf::Message::GetNewImpl<SShapeShift_Floor>(),
            ::google::protobuf::Message::GetClearImpl<SShapeShift_Floor>(), &SShapeShift_Floor::ByteSizeLong,
                &SShapeShift_Floor::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SShapeShift_Floor, _impl_._cached_size_),
            false,
        },
        &SShapeShift_Floor::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SShapeShift_Floor::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SShapeShift_Floor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SShapeShift_Floor, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SShapeShift_Floor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SShapeShift_Floor, _impl_.count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SShapeShift_Floor, _impl_.count_)}},
    // .DC.Packet.SShapeShift shapeShift = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SShapeShift_Floor, _impl_.shapeshift_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.SShapeShift shapeShift = 1;
    {PROTOBUF_FIELD_OFFSET(SShapeShift_Floor, _impl_.shapeshift_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 count = 2;
    {PROTOBUF_FIELD_OFFSET(SShapeShift_Floor, _impl_.count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SShapeShift>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SShapeShift_Floor::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SShapeShift_Floor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.shapeshift_ != nullptr);
    _impl_.shapeshift_->Clear();
  }
  _impl_.count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SShapeShift_Floor::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SShapeShift_Floor& this_ = static_cast<const SShapeShift_Floor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SShapeShift_Floor::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SShapeShift_Floor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SShapeShift_Floor)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SShapeShift shapeShift = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.shapeshift_, this_._impl_.shapeshift_->GetCachedSize(), target,
                stream);
          }

          // int32 count = 2;
          if (this_._internal_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SShapeShift_Floor)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SShapeShift_Floor::ByteSizeLong(const MessageLite& base) {
          const SShapeShift_Floor& this_ = static_cast<const SShapeShift_Floor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SShapeShift_Floor::ByteSizeLong() const {
          const SShapeShift_Floor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SShapeShift_Floor)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .DC.Packet.SShapeShift shapeShift = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shapeshift_);
            }
          }
           {
            // int32 count = 2;
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SShapeShift_Floor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SShapeShift_Floor*>(&to_msg);
  auto& from = static_cast<const SShapeShift_Floor&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SShapeShift_Floor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.shapeshift_ != nullptr);
    if (_this->_impl_.shapeshift_ == nullptr) {
      _this->_impl_.shapeshift_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SShapeShift>(arena, *from._impl_.shapeshift_);
    } else {
      _this->_impl_.shapeshift_->MergeFrom(*from._impl_.shapeshift_);
    }
  }
  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SShapeShift_Floor::CopyFrom(const SShapeShift_Floor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SShapeShift_Floor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SShapeShift_Floor::InternalSwap(SShapeShift_Floor* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SShapeShift_Floor, _impl_.count_)
      + sizeof(SShapeShift_Floor::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(SShapeShift_Floor, _impl_.shapeshift_)>(
          reinterpret_cast<char*>(&_impl_.shapeshift_),
          reinterpret_cast<char*>(&other->_impl_.shapeshift_));
}

::google::protobuf::Metadata SShapeShift_Floor::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FloorMatchMaking_CharacterInfo::_Internal {
 public:
};

void FloorMatchMaking_CharacterInfo::clear_downitems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.downitems_.Clear();
}
void FloorMatchMaking_CharacterInfo::clear_perks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.perks_.Clear();
}
void FloorMatchMaking_CharacterInfo::clear_emotes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.emotes_.Clear();
}
FloorMatchMaking_CharacterInfo::FloorMatchMaking_CharacterInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.FloorMatchMaking_CharacterInfo)
}
inline PROTOBUF_NDEBUG_INLINE FloorMatchMaking_CharacterInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::FloorMatchMaking_CharacterInfo& from_msg)
      : downitems_{visibility, arena, from.downitems_},
        perks_{visibility, arena, from.perks_},
        skills_{visibility, arena, from.skills_},
        spells_{visibility, arena, from.spells_},
        musics_{visibility, arena, from.musics_},
        shapeshifts_{visibility, arena, from.shapeshifts_},
        characterskinids_{visibility, arena, from.characterskinids_},
        itemskinids_{visibility, arena, from.itemskinids_},
        emotes_{visibility, arena, from.emotes_},
        accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        _cached_size_{0} {}

FloorMatchMaking_CharacterInfo::FloorMatchMaking_CharacterInfo(
    ::google::protobuf::Arena* arena,
    const FloorMatchMaking_CharacterInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FloorMatchMaking_CharacterInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.hp_ = from._impl_.hp_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.FloorMatchMaking_CharacterInfo)
}
inline PROTOBUF_NDEBUG_INLINE FloorMatchMaking_CharacterInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : downitems_{visibility, arena},
        perks_{visibility, arena},
        skills_{visibility, arena},
        spells_{visibility, arena},
        musics_{visibility, arena},
        shapeshifts_{visibility, arena},
        characterskinids_{visibility, arena},
        itemskinids_{visibility, arena},
        emotes_{visibility, arena},
        accountid_(arena),
        characterid_(arena),
        _cached_size_{0} {}

inline void FloorMatchMaking_CharacterInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.hp_ = {};
}
FloorMatchMaking_CharacterInfo::~FloorMatchMaking_CharacterInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.FloorMatchMaking_CharacterInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FloorMatchMaking_CharacterInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    FloorMatchMaking_CharacterInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_FloorMatchMaking_CharacterInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &FloorMatchMaking_CharacterInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<FloorMatchMaking_CharacterInfo>(),
            ::google::protobuf::Message::GetNewImpl<FloorMatchMaking_CharacterInfo>(),
            ::google::protobuf::Message::GetClearImpl<FloorMatchMaking_CharacterInfo>(), &FloorMatchMaking_CharacterInfo::ByteSizeLong,
                &FloorMatchMaking_CharacterInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_._cached_size_),
            false,
        },
        &FloorMatchMaking_CharacterInfo::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* FloorMatchMaking_CharacterInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 7, 104, 2> FloorMatchMaking_CharacterInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::FloorMatchMaking_CharacterInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.accountid_)}},
    // string characterId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.characterid_)}},
    // repeated .DC.Packet.SDownItem downItems = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.downitems_)}},
    // repeated .DC.Packet.SPerk perks = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.perks_)}},
    // repeated .DC.Packet.SSkill_Floor skills = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.skills_)}},
    // repeated .DC.Packet.SSpell_Floor spells = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 3, PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.spells_)}},
    // repeated .DC.Packet.SMusic_Floor musics = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 4, PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.musics_)}},
    // repeated .DC.Packet.SShapeShift_Floor shapeShifts = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 5, PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.shapeshifts_)}},
    // repeated string characterSkinIds = 9;
    {::_pbi::TcParser::FastUR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.characterskinids_)}},
    // repeated string itemSkinIds = 10;
    {::_pbi::TcParser::FastUR1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.itemskinids_)}},
    // repeated .DC.Packet.SEMOTE emotes = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 6, PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.emotes_)}},
    // int32 hp = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FloorMatchMaking_CharacterInfo, _impl_.hp_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.hp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 2;
    {PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .DC.Packet.SDownItem downItems = 3;
    {PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.downitems_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SPerk perks = 4;
    {PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.perks_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SSkill_Floor skills = 5;
    {PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.skills_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SSpell_Floor spells = 6;
    {PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.spells_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SMusic_Floor musics = 7;
    {PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.musics_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SShapeShift_Floor shapeShifts = 8;
    {PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.shapeshifts_), 0, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string characterSkinIds = 9;
    {PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.characterskinids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string itemSkinIds = 10;
    {PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.itemskinids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .DC.Packet.SEMOTE emotes = 11;
    {PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.emotes_), 0, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 hp = 12;
    {PROTOBUF_FIELD_OFFSET(FloorMatchMaking_CharacterInfo, _impl_.hp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SDownItem>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SPerk>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SSkill_Floor>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SSpell_Floor>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SMusic_Floor>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SShapeShift_Floor>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SEMOTE>()},
  }}, {{
    "\50\11\13\0\0\0\0\0\0\20\13\0\0\0\0\0"
    "DC.Packet.FloorMatchMaking_CharacterInfo"
    "accountId"
    "characterId"
    "characterSkinIds"
    "itemSkinIds"
  }},
};

PROTOBUF_NOINLINE void FloorMatchMaking_CharacterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.FloorMatchMaking_CharacterInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.downitems_.Clear();
  _impl_.perks_.Clear();
  _impl_.skills_.Clear();
  _impl_.spells_.Clear();
  _impl_.musics_.Clear();
  _impl_.shapeshifts_.Clear();
  _impl_.characterskinids_.Clear();
  _impl_.itemskinids_.Clear();
  _impl_.emotes_.Clear();
  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.hp_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FloorMatchMaking_CharacterInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FloorMatchMaking_CharacterInfo& this_ = static_cast<const FloorMatchMaking_CharacterInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FloorMatchMaking_CharacterInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FloorMatchMaking_CharacterInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.FloorMatchMaking_CharacterInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.FloorMatchMaking_CharacterInfo.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string characterId = 2;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.FloorMatchMaking_CharacterInfo.characterId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .DC.Packet.SDownItem downItems = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_downitems_size());
               i < n; i++) {
            const auto& repfield = this_._internal_downitems().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SPerk perks = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_perks_size());
               i < n; i++) {
            const auto& repfield = this_._internal_perks().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SSkill_Floor skills = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_skills_size());
               i < n; i++) {
            const auto& repfield = this_._internal_skills().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SSpell_Floor spells = 6;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_spells_size());
               i < n; i++) {
            const auto& repfield = this_._internal_spells().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SMusic_Floor musics = 7;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_musics_size());
               i < n; i++) {
            const auto& repfield = this_._internal_musics().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SShapeShift_Floor shapeShifts = 8;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_shapeshifts_size());
               i < n; i++) {
            const auto& repfield = this_._internal_shapeshifts().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    8, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated string characterSkinIds = 9;
          for (int i = 0, n = this_._internal_characterskinids_size(); i < n; ++i) {
            const auto& s = this_._internal_characterskinids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.FloorMatchMaking_CharacterInfo.characterSkinIds");
            target = stream->WriteString(9, s, target);
          }

          // repeated string itemSkinIds = 10;
          for (int i = 0, n = this_._internal_itemskinids_size(); i < n; ++i) {
            const auto& s = this_._internal_itemskinids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.FloorMatchMaking_CharacterInfo.itemSkinIds");
            target = stream->WriteString(10, s, target);
          }

          // repeated .DC.Packet.SEMOTE emotes = 11;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_emotes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_emotes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    11, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int32 hp = 12;
          if (this_._internal_hp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<12>(
                    stream, this_._internal_hp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.FloorMatchMaking_CharacterInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FloorMatchMaking_CharacterInfo::ByteSizeLong(const MessageLite& base) {
          const FloorMatchMaking_CharacterInfo& this_ = static_cast<const FloorMatchMaking_CharacterInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FloorMatchMaking_CharacterInfo::ByteSizeLong() const {
          const FloorMatchMaking_CharacterInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.FloorMatchMaking_CharacterInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SDownItem downItems = 3;
            {
              total_size += 1UL * this_._internal_downitems_size();
              for (const auto& msg : this_._internal_downitems()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SPerk perks = 4;
            {
              total_size += 1UL * this_._internal_perks_size();
              for (const auto& msg : this_._internal_perks()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SSkill_Floor skills = 5;
            {
              total_size += 1UL * this_._internal_skills_size();
              for (const auto& msg : this_._internal_skills()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SSpell_Floor spells = 6;
            {
              total_size += 1UL * this_._internal_spells_size();
              for (const auto& msg : this_._internal_spells()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SMusic_Floor musics = 7;
            {
              total_size += 1UL * this_._internal_musics_size();
              for (const auto& msg : this_._internal_musics()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SShapeShift_Floor shapeShifts = 8;
            {
              total_size += 1UL * this_._internal_shapeshifts_size();
              for (const auto& msg : this_._internal_shapeshifts()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string characterSkinIds = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_characterskinids().size());
              for (int i = 0, n = this_._internal_characterskinids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_characterskinids().Get(i));
              }
            }
            // repeated string itemSkinIds = 10;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_itemskinids().size());
              for (int i = 0, n = this_._internal_itemskinids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_itemskinids().Get(i));
              }
            }
            // repeated .DC.Packet.SEMOTE emotes = 11;
            {
              total_size += 1UL * this_._internal_emotes_size();
              for (const auto& msg : this_._internal_emotes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 2;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // int32 hp = 12;
            if (this_._internal_hp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_hp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FloorMatchMaking_CharacterInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FloorMatchMaking_CharacterInfo*>(&to_msg);
  auto& from = static_cast<const FloorMatchMaking_CharacterInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.FloorMatchMaking_CharacterInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_downitems()->MergeFrom(
      from._internal_downitems());
  _this->_internal_mutable_perks()->MergeFrom(
      from._internal_perks());
  _this->_internal_mutable_skills()->MergeFrom(
      from._internal_skills());
  _this->_internal_mutable_spells()->MergeFrom(
      from._internal_spells());
  _this->_internal_mutable_musics()->MergeFrom(
      from._internal_musics());
  _this->_internal_mutable_shapeshifts()->MergeFrom(
      from._internal_shapeshifts());
  _this->_internal_mutable_characterskinids()->MergeFrom(from._internal_characterskinids());
  _this->_internal_mutable_itemskinids()->MergeFrom(from._internal_itemskinids());
  _this->_internal_mutable_emotes()->MergeFrom(
      from._internal_emotes());
  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (from._internal_hp() != 0) {
    _this->_impl_.hp_ = from._impl_.hp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FloorMatchMaking_CharacterInfo::CopyFrom(const FloorMatchMaking_CharacterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.FloorMatchMaking_CharacterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FloorMatchMaking_CharacterInfo::InternalSwap(FloorMatchMaking_CharacterInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.downitems_.InternalSwap(&other->_impl_.downitems_);
  _impl_.perks_.InternalSwap(&other->_impl_.perks_);
  _impl_.skills_.InternalSwap(&other->_impl_.skills_);
  _impl_.spells_.InternalSwap(&other->_impl_.spells_);
  _impl_.musics_.InternalSwap(&other->_impl_.musics_);
  _impl_.shapeshifts_.InternalSwap(&other->_impl_.shapeshifts_);
  _impl_.characterskinids_.InternalSwap(&other->_impl_.characterskinids_);
  _impl_.itemskinids_.InternalSwap(&other->_impl_.itemskinids_);
  _impl_.emotes_.InternalSwap(&other->_impl_.emotes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
        swap(_impl_.hp_, other->_impl_.hp_);
}

::google::protobuf::Metadata FloorMatchMaking_CharacterInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_Prepare_FloorMatchMaking::_Internal {
 public:
  using HasBits =
      decltype(std::declval<C2S_Prepare_FloorMatchMaking>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(C2S_Prepare_FloorMatchMaking, _impl_._has_bits_);
};

C2S_Prepare_FloorMatchMaking::C2S_Prepare_FloorMatchMaking(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_Prepare_FloorMatchMaking)
}
inline PROTOBUF_NDEBUG_INLINE C2S_Prepare_FloorMatchMaking::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_Prepare_FloorMatchMaking& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

C2S_Prepare_FloorMatchMaking::C2S_Prepare_FloorMatchMaking(
    ::google::protobuf::Arena* arena,
    const C2S_Prepare_FloorMatchMaking& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_Prepare_FloorMatchMaking* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::FloorMatchMaking_CharacterInfo>(
                              arena, *from._impl_.info_)
                        : nullptr;
  _impl_.resultinfo_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::GameResultInfo>(
                              arena, *from._impl_.resultinfo_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_Prepare_FloorMatchMaking)
}
inline PROTOBUF_NDEBUG_INLINE C2S_Prepare_FloorMatchMaking::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void C2S_Prepare_FloorMatchMaking::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, info_),
           0,
           offsetof(Impl_, resultinfo_) -
               offsetof(Impl_, info_) +
               sizeof(Impl_::resultinfo_));
}
C2S_Prepare_FloorMatchMaking::~C2S_Prepare_FloorMatchMaking() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_Prepare_FloorMatchMaking)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_Prepare_FloorMatchMaking::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.info_;
  delete _impl_.resultinfo_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_Prepare_FloorMatchMaking::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_Prepare_FloorMatchMaking_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_Prepare_FloorMatchMaking::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_Prepare_FloorMatchMaking>(),
            ::google::protobuf::Message::GetNewImpl<C2S_Prepare_FloorMatchMaking>(),
            ::google::protobuf::Message::GetClearImpl<C2S_Prepare_FloorMatchMaking>(), &C2S_Prepare_FloorMatchMaking::ByteSizeLong,
                &C2S_Prepare_FloorMatchMaking::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_Prepare_FloorMatchMaking, _impl_._cached_size_),
            false,
        },
        &C2S_Prepare_FloorMatchMaking::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_Prepare_FloorMatchMaking::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> C2S_Prepare_FloorMatchMaking::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(C2S_Prepare_FloorMatchMaking, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_Prepare_FloorMatchMaking>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .DC.Packet.GameResultInfo resultInfo = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(C2S_Prepare_FloorMatchMaking, _impl_.resultinfo_)}},
    // .DC.Packet.FloorMatchMaking_CharacterInfo info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(C2S_Prepare_FloorMatchMaking, _impl_.info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.FloorMatchMaking_CharacterInfo info = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_Prepare_FloorMatchMaking, _impl_.info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .DC.Packet.GameResultInfo resultInfo = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_Prepare_FloorMatchMaking, _impl_.resultinfo_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::FloorMatchMaking_CharacterInfo>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::GameResultInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void C2S_Prepare_FloorMatchMaking::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_Prepare_FloorMatchMaking)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.info_ != nullptr);
      _impl_.info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.resultinfo_ != nullptr);
      _impl_.resultinfo_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_Prepare_FloorMatchMaking::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_Prepare_FloorMatchMaking& this_ = static_cast<const C2S_Prepare_FloorMatchMaking&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_Prepare_FloorMatchMaking::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_Prepare_FloorMatchMaking& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_Prepare_FloorMatchMaking)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.FloorMatchMaking_CharacterInfo info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.info_, this_._impl_.info_->GetCachedSize(), target,
                stream);
          }

          // .DC.Packet.GameResultInfo resultInfo = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.resultinfo_, this_._impl_.resultinfo_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_Prepare_FloorMatchMaking)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_Prepare_FloorMatchMaking::ByteSizeLong(const MessageLite& base) {
          const C2S_Prepare_FloorMatchMaking& this_ = static_cast<const C2S_Prepare_FloorMatchMaking&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_Prepare_FloorMatchMaking::ByteSizeLong() const {
          const C2S_Prepare_FloorMatchMaking& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_Prepare_FloorMatchMaking)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .DC.Packet.FloorMatchMaking_CharacterInfo info = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.info_);
            }
            // .DC.Packet.GameResultInfo resultInfo = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.resultinfo_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_Prepare_FloorMatchMaking::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_Prepare_FloorMatchMaking*>(&to_msg);
  auto& from = static_cast<const C2S_Prepare_FloorMatchMaking&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_Prepare_FloorMatchMaking)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.info_ != nullptr);
      if (_this->_impl_.info_ == nullptr) {
        _this->_impl_.info_ =
            ::google::protobuf::Message::CopyConstruct<::DC::Packet::FloorMatchMaking_CharacterInfo>(arena, *from._impl_.info_);
      } else {
        _this->_impl_.info_->MergeFrom(*from._impl_.info_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.resultinfo_ != nullptr);
      if (_this->_impl_.resultinfo_ == nullptr) {
        _this->_impl_.resultinfo_ =
            ::google::protobuf::Message::CopyConstruct<::DC::Packet::GameResultInfo>(arena, *from._impl_.resultinfo_);
      } else {
        _this->_impl_.resultinfo_->MergeFrom(*from._impl_.resultinfo_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_Prepare_FloorMatchMaking::CopyFrom(const C2S_Prepare_FloorMatchMaking& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_Prepare_FloorMatchMaking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_Prepare_FloorMatchMaking::InternalSwap(C2S_Prepare_FloorMatchMaking* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_Prepare_FloorMatchMaking, _impl_.resultinfo_)
      + sizeof(C2S_Prepare_FloorMatchMaking::_impl_.resultinfo_)
      - PROTOBUF_FIELD_OFFSET(C2S_Prepare_FloorMatchMaking, _impl_.info_)>(
          reinterpret_cast<char*>(&_impl_.info_),
          reinterpret_cast<char*>(&other->_impl_.info_));
}

::google::protobuf::Metadata C2S_Prepare_FloorMatchMaking::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class S2C_GamePolicy_GET::_Internal {
 public:
};

S2C_GamePolicy_GET::S2C_GamePolicy_GET(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.S2C_GamePolicy_GET)
}
inline PROTOBUF_NDEBUG_INLINE S2C_GamePolicy_GET::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::S2C_GamePolicy_GET& from_msg)
      : apphash_{visibility, arena, from.apphash_},
        policyjson_(arena, from.policyjson_),
        _cached_size_{0} {}

S2C_GamePolicy_GET::S2C_GamePolicy_GET(
    ::google::protobuf::Arena* arena,
    const S2C_GamePolicy_GET& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  S2C_GamePolicy_GET* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.S2C_GamePolicy_GET)
}
inline PROTOBUF_NDEBUG_INLINE S2C_GamePolicy_GET::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : apphash_{visibility, arena},
        policyjson_(arena),
        _cached_size_{0} {}

inline void S2C_GamePolicy_GET::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
S2C_GamePolicy_GET::~S2C_GamePolicy_GET() {
  // @@protoc_insertion_point(destructor:DC.Packet.S2C_GamePolicy_GET)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void S2C_GamePolicy_GET::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.policyjson_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    S2C_GamePolicy_GET::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_S2C_GamePolicy_GET_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &S2C_GamePolicy_GET::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<S2C_GamePolicy_GET>(),
            ::google::protobuf::Message::GetNewImpl<S2C_GamePolicy_GET>(),
            ::google::protobuf::Message::GetClearImpl<S2C_GamePolicy_GET>(), &S2C_GamePolicy_GET::ByteSizeLong,
                &S2C_GamePolicy_GET::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(S2C_GamePolicy_GET, _impl_._cached_size_),
            false,
        },
        &S2C_GamePolicy_GET::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* S2C_GamePolicy_GET::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 54, 2> S2C_GamePolicy_GET::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::S2C_GamePolicy_GET>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string policyJson = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GamePolicy_GET, _impl_.policyjson_)}},
    // repeated string appHash = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GamePolicy_GET, _impl_.apphash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string appHash = 1;
    {PROTOBUF_FIELD_OFFSET(S2C_GamePolicy_GET, _impl_.apphash_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string policyJson = 2;
    {PROTOBUF_FIELD_OFFSET(S2C_GamePolicy_GET, _impl_.policyjson_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\7\12\0\0\0\0\0"
    "DC.Packet.S2C_GamePolicy_GET"
    "appHash"
    "policyJson"
  }},
};

PROTOBUF_NOINLINE void S2C_GamePolicy_GET::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.S2C_GamePolicy_GET)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.apphash_.Clear();
  _impl_.policyjson_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* S2C_GamePolicy_GET::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const S2C_GamePolicy_GET& this_ = static_cast<const S2C_GamePolicy_GET&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* S2C_GamePolicy_GET::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const S2C_GamePolicy_GET& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.S2C_GamePolicy_GET)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string appHash = 1;
          for (int i = 0, n = this_._internal_apphash_size(); i < n; ++i) {
            const auto& s = this_._internal_apphash().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GamePolicy_GET.appHash");
            target = stream->WriteString(1, s, target);
          }

          // string policyJson = 2;
          if (!this_._internal_policyjson().empty()) {
            const std::string& _s = this_._internal_policyjson();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GamePolicy_GET.policyJson");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.S2C_GamePolicy_GET)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t S2C_GamePolicy_GET::ByteSizeLong(const MessageLite& base) {
          const S2C_GamePolicy_GET& this_ = static_cast<const S2C_GamePolicy_GET&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t S2C_GamePolicy_GET::ByteSizeLong() const {
          const S2C_GamePolicy_GET& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.S2C_GamePolicy_GET)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string appHash = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_apphash().size());
              for (int i = 0, n = this_._internal_apphash().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_apphash().Get(i));
              }
            }
          }
           {
            // string policyJson = 2;
            if (!this_._internal_policyjson().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_policyjson());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void S2C_GamePolicy_GET::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<S2C_GamePolicy_GET*>(&to_msg);
  auto& from = static_cast<const S2C_GamePolicy_GET&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.S2C_GamePolicy_GET)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_apphash()->MergeFrom(from._internal_apphash());
  if (!from._internal_policyjson().empty()) {
    _this->_internal_set_policyjson(from._internal_policyjson());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_GamePolicy_GET::CopyFrom(const S2C_GamePolicy_GET& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.S2C_GamePolicy_GET)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void S2C_GamePolicy_GET::InternalSwap(S2C_GamePolicy_GET* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.apphash_.InternalSwap(&other->_impl_.apphash_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.policyjson_, &other->_impl_.policyjson_, arena);
}

::google::protobuf::Metadata S2C_GamePolicy_GET::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class S2C_GameFileDB_GET::_Internal {
 public:
};

S2C_GameFileDB_GET::S2C_GameFileDB_GET(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.S2C_GameFileDB_GET)
}
inline PROTOBUF_NDEBUG_INLINE S2C_GameFileDB_GET::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::S2C_GameFileDB_GET& from_msg)
      : filedbjson_(arena, from.filedbjson_),
        _cached_size_{0} {}

S2C_GameFileDB_GET::S2C_GameFileDB_GET(
    ::google::protobuf::Arena* arena,
    const S2C_GameFileDB_GET& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  S2C_GameFileDB_GET* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.S2C_GameFileDB_GET)
}
inline PROTOBUF_NDEBUG_INLINE S2C_GameFileDB_GET::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : filedbjson_(arena),
        _cached_size_{0} {}

inline void S2C_GameFileDB_GET::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
S2C_GameFileDB_GET::~S2C_GameFileDB_GET() {
  // @@protoc_insertion_point(destructor:DC.Packet.S2C_GameFileDB_GET)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void S2C_GameFileDB_GET::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.filedbjson_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    S2C_GameFileDB_GET::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_S2C_GameFileDB_GET_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &S2C_GameFileDB_GET::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<S2C_GameFileDB_GET>(),
            ::google::protobuf::Message::GetNewImpl<S2C_GameFileDB_GET>(),
            ::google::protobuf::Message::GetClearImpl<S2C_GameFileDB_GET>(), &S2C_GameFileDB_GET::ByteSizeLong,
                &S2C_GameFileDB_GET::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(S2C_GameFileDB_GET, _impl_._cached_size_),
            false,
        },
        &S2C_GameFileDB_GET::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* S2C_GameFileDB_GET::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 47, 2> S2C_GameFileDB_GET::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::S2C_GameFileDB_GET>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string fileDBJson = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameFileDB_GET, _impl_.filedbjson_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string fileDBJson = 1;
    {PROTOBUF_FIELD_OFFSET(S2C_GameFileDB_GET, _impl_.filedbjson_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\12\0\0\0\0\0\0"
    "DC.Packet.S2C_GameFileDB_GET"
    "fileDBJson"
  }},
};

PROTOBUF_NOINLINE void S2C_GameFileDB_GET::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.S2C_GameFileDB_GET)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filedbjson_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* S2C_GameFileDB_GET::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const S2C_GameFileDB_GET& this_ = static_cast<const S2C_GameFileDB_GET&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* S2C_GameFileDB_GET::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const S2C_GameFileDB_GET& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.S2C_GameFileDB_GET)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string fileDBJson = 1;
          if (!this_._internal_filedbjson().empty()) {
            const std::string& _s = this_._internal_filedbjson();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_GameFileDB_GET.fileDBJson");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.S2C_GameFileDB_GET)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t S2C_GameFileDB_GET::ByteSizeLong(const MessageLite& base) {
          const S2C_GameFileDB_GET& this_ = static_cast<const S2C_GameFileDB_GET&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t S2C_GameFileDB_GET::ByteSizeLong() const {
          const S2C_GameFileDB_GET& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.S2C_GameFileDB_GET)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string fileDBJson = 1;
            if (!this_._internal_filedbjson().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_filedbjson());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void S2C_GameFileDB_GET::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<S2C_GameFileDB_GET*>(&to_msg);
  auto& from = static_cast<const S2C_GameFileDB_GET&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.S2C_GameFileDB_GET)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_filedbjson().empty()) {
    _this->_internal_set_filedbjson(from._internal_filedbjson());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_GameFileDB_GET::CopyFrom(const S2C_GameFileDB_GET& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.S2C_GameFileDB_GET)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void S2C_GameFileDB_GET::InternalSwap(S2C_GameFileDB_GET* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filedbjson_, &other->_impl_.filedbjson_, arena);
}

::google::protobuf::Metadata S2C_GameFileDB_GET::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_GameSpectator_Check_POST::_Internal {
 public:
};

C2S_GameSpectator_Check_POST::C2S_GameSpectator_Check_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_GameSpectator_Check_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameSpectator_Check_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_GameSpectator_Check_POST& from_msg)
      : accountid_(arena, from.accountid_),
        token_(arena, from.token_),
        _cached_size_{0} {}

C2S_GameSpectator_Check_POST::C2S_GameSpectator_Check_POST(
    ::google::protobuf::Arena* arena,
    const C2S_GameSpectator_Check_POST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_GameSpectator_Check_POST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_GameSpectator_Check_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameSpectator_Check_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accountid_(arena),
        token_(arena),
        _cached_size_{0} {}

inline void C2S_GameSpectator_Check_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
C2S_GameSpectator_Check_POST::~C2S_GameSpectator_Check_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_GameSpectator_Check_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_GameSpectator_Check_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.token_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_GameSpectator_Check_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_GameSpectator_Check_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_GameSpectator_Check_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_GameSpectator_Check_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_GameSpectator_Check_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_GameSpectator_Check_POST>(), &C2S_GameSpectator_Check_POST::ByteSizeLong,
                &C2S_GameSpectator_Check_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_GameSpectator_Check_POST, _impl_._cached_size_),
            false,
        },
        &C2S_GameSpectator_Check_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_GameSpectator_Check_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2> C2S_GameSpectator_Check_POST::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_GameSpectator_Check_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameSpectator_Check_POST, _impl_.token_)}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameSpectator_Check_POST, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_GameSpectator_Check_POST, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string token = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_GameSpectator_Check_POST, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\11\5\0\0\0\0\0"
    "DC.Packet.C2S_GameSpectator_Check_POST"
    "accountId"
    "token"
  }},
};

PROTOBUF_NOINLINE void C2S_GameSpectator_Check_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_GameSpectator_Check_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.token_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_GameSpectator_Check_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_GameSpectator_Check_POST& this_ = static_cast<const C2S_GameSpectator_Check_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_GameSpectator_Check_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_GameSpectator_Check_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_GameSpectator_Check_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_GameSpectator_Check_POST.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string token = 2;
          if (!this_._internal_token().empty()) {
            const std::string& _s = this_._internal_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_GameSpectator_Check_POST.token");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_GameSpectator_Check_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_GameSpectator_Check_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_GameSpectator_Check_POST& this_ = static_cast<const C2S_GameSpectator_Check_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_GameSpectator_Check_POST::ByteSizeLong() const {
          const C2S_GameSpectator_Check_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_GameSpectator_Check_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string token = 2;
            if (!this_._internal_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_GameSpectator_Check_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_GameSpectator_Check_POST*>(&to_msg);
  auto& from = static_cast<const C2S_GameSpectator_Check_POST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_GameSpectator_Check_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_GameSpectator_Check_POST::CopyFrom(const C2S_GameSpectator_Check_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_GameSpectator_Check_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_GameSpectator_Check_POST::InternalSwap(C2S_GameSpectator_Check_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
}

::google::protobuf::Metadata C2S_GameSpectator_Check_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class S2C_GameSpectator_Check_Json::_Internal {
 public:
};

S2C_GameSpectator_Check_Json::S2C_GameSpectator_Check_Json(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.S2C_GameSpectator_Check_Json)
}
S2C_GameSpectator_Check_Json::S2C_GameSpectator_Check_Json(
    ::google::protobuf::Arena* arena, const S2C_GameSpectator_Check_Json& from)
    : S2C_GameSpectator_Check_Json(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE S2C_GameSpectator_Check_Json::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void S2C_GameSpectator_Check_Json::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.issuccess_ = {};
}
S2C_GameSpectator_Check_Json::~S2C_GameSpectator_Check_Json() {
  // @@protoc_insertion_point(destructor:DC.Packet.S2C_GameSpectator_Check_Json)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void S2C_GameSpectator_Check_Json::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    S2C_GameSpectator_Check_Json::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_S2C_GameSpectator_Check_Json_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &S2C_GameSpectator_Check_Json::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<S2C_GameSpectator_Check_Json>(),
            ::google::protobuf::Message::GetNewImpl<S2C_GameSpectator_Check_Json>(),
            ::google::protobuf::Message::GetClearImpl<S2C_GameSpectator_Check_Json>(), &S2C_GameSpectator_Check_Json::ByteSizeLong,
                &S2C_GameSpectator_Check_Json::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(S2C_GameSpectator_Check_Json, _impl_._cached_size_),
            false,
        },
        &S2C_GameSpectator_Check_Json::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* S2C_GameSpectator_Check_Json::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> S2C_GameSpectator_Check_Json::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::S2C_GameSpectator_Check_Json>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 isSuccess = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_GameSpectator_Check_Json, _impl_.issuccess_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameSpectator_Check_Json, _impl_.issuccess_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 isSuccess = 1;
    {PROTOBUF_FIELD_OFFSET(S2C_GameSpectator_Check_Json, _impl_.issuccess_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void S2C_GameSpectator_Check_Json::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.S2C_GameSpectator_Check_Json)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.issuccess_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* S2C_GameSpectator_Check_Json::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const S2C_GameSpectator_Check_Json& this_ = static_cast<const S2C_GameSpectator_Check_Json&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* S2C_GameSpectator_Check_Json::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const S2C_GameSpectator_Check_Json& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.S2C_GameSpectator_Check_Json)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 isSuccess = 1;
          if (this_._internal_issuccess() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_issuccess(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.S2C_GameSpectator_Check_Json)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t S2C_GameSpectator_Check_Json::ByteSizeLong(const MessageLite& base) {
          const S2C_GameSpectator_Check_Json& this_ = static_cast<const S2C_GameSpectator_Check_Json&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t S2C_GameSpectator_Check_Json::ByteSizeLong() const {
          const S2C_GameSpectator_Check_Json& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.S2C_GameSpectator_Check_Json)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint32 isSuccess = 1;
            if (this_._internal_issuccess() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_issuccess());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void S2C_GameSpectator_Check_Json::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<S2C_GameSpectator_Check_Json*>(&to_msg);
  auto& from = static_cast<const S2C_GameSpectator_Check_Json&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.S2C_GameSpectator_Check_Json)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_issuccess() != 0) {
    _this->_impl_.issuccess_ = from._impl_.issuccess_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_GameSpectator_Check_Json::CopyFrom(const S2C_GameSpectator_Check_Json& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.S2C_GameSpectator_Check_Json)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void S2C_GameSpectator_Check_Json::InternalSwap(S2C_GameSpectator_Check_Json* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.issuccess_, other->_impl_.issuccess_);
}

::google::protobuf::Metadata S2C_GameSpectator_Check_Json::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameDown_UserPartyInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GameDown_UserPartyInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GameDown_UserPartyInfo, _impl_._has_bits_);
};

void GameDown_UserPartyInfo::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ != nullptr) _impl_.nickname_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GameDown_UserPartyInfo::GameDown_UserPartyInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.GameDown_UserPartyInfo)
}
inline PROTOBUF_NDEBUG_INLINE GameDown_UserPartyInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::GameDown_UserPartyInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        accountid_(arena, from.accountid_),
        characterclass_(arena, from.characterclass_) {}

GameDown_UserPartyInfo::GameDown_UserPartyInfo(
    ::google::protobuf::Arena* arena,
    const GameDown_UserPartyInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameDown_UserPartyInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.nickname_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(
                              arena, *from._impl_.nickname_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gender_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gender_),
           offsetof(Impl_, level_) -
               offsetof(Impl_, gender_) +
               sizeof(Impl_::level_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.GameDown_UserPartyInfo)
}
inline PROTOBUF_NDEBUG_INLINE GameDown_UserPartyInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        accountid_(arena),
        characterclass_(arena) {}

inline void GameDown_UserPartyInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nickname_),
           0,
           offsetof(Impl_, level_) -
               offsetof(Impl_, nickname_) +
               sizeof(Impl_::level_));
}
GameDown_UserPartyInfo::~GameDown_UserPartyInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.GameDown_UserPartyInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameDown_UserPartyInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.characterclass_.Destroy();
  delete _impl_.nickname_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GameDown_UserPartyInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GameDown_UserPartyInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GameDown_UserPartyInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GameDown_UserPartyInfo>(),
            ::google::protobuf::Message::GetNewImpl<GameDown_UserPartyInfo>(),
            ::google::protobuf::Message::GetClearImpl<GameDown_UserPartyInfo>(), &GameDown_UserPartyInfo::ByteSizeLong,
                &GameDown_UserPartyInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GameDown_UserPartyInfo, _impl_._cached_size_),
            false,
        },
        &GameDown_UserPartyInfo::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GameDown_UserPartyInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 64, 2> GameDown_UserPartyInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GameDown_UserPartyInfo, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::GameDown_UserPartyInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameDown_UserPartyInfo, _impl_.accountid_)}},
    // .DC.Packet.SACCOUNT_NICKNAME nickname = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GameDown_UserPartyInfo, _impl_.nickname_)}},
    // string characterClass = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GameDown_UserPartyInfo, _impl_.characterclass_)}},
    // uint32 gender = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameDown_UserPartyInfo, _impl_.gender_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GameDown_UserPartyInfo, _impl_.gender_)}},
    // uint32 level = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameDown_UserPartyInfo, _impl_.level_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(GameDown_UserPartyInfo, _impl_.level_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(GameDown_UserPartyInfo, _impl_.accountid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .DC.Packet.SACCOUNT_NICKNAME nickname = 2;
    {PROTOBUF_FIELD_OFFSET(GameDown_UserPartyInfo, _impl_.nickname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string characterClass = 3;
    {PROTOBUF_FIELD_OFFSET(GameDown_UserPartyInfo, _impl_.characterclass_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 gender = 4;
    {PROTOBUF_FIELD_OFFSET(GameDown_UserPartyInfo, _impl_.gender_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 level = 5;
    {PROTOBUF_FIELD_OFFSET(GameDown_UserPartyInfo, _impl_.level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SACCOUNT_NICKNAME>()},
  }}, {{
    "\40\11\0\16\0\0\0\0"
    "DC.Packet.GameDown_UserPartyInfo"
    "accountId"
    "characterClass"
  }},
};

PROTOBUF_NOINLINE void GameDown_UserPartyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.GameDown_UserPartyInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.characterclass_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.nickname_ != nullptr);
    _impl_.nickname_->Clear();
  }
  ::memset(&_impl_.gender_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.level_) -
      reinterpret_cast<char*>(&_impl_.gender_)) + sizeof(_impl_.level_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameDown_UserPartyInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameDown_UserPartyInfo& this_ = static_cast<const GameDown_UserPartyInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameDown_UserPartyInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameDown_UserPartyInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.GameDown_UserPartyInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameDown_UserPartyInfo.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SACCOUNT_NICKNAME nickname = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.nickname_, this_._impl_.nickname_->GetCachedSize(), target,
                stream);
          }

          // string characterClass = 3;
          if (!this_._internal_characterclass().empty()) {
            const std::string& _s = this_._internal_characterclass();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameDown_UserPartyInfo.characterClass");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint32 gender = 4;
          if (this_._internal_gender() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_gender(), target);
          }

          // uint32 level = 5;
          if (this_._internal_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_level(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.GameDown_UserPartyInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameDown_UserPartyInfo::ByteSizeLong(const MessageLite& base) {
          const GameDown_UserPartyInfo& this_ = static_cast<const GameDown_UserPartyInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameDown_UserPartyInfo::ByteSizeLong() const {
          const GameDown_UserPartyInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.GameDown_UserPartyInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterClass = 3;
            if (!this_._internal_characterclass().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterclass());
            }
          }
           {
            // .DC.Packet.SACCOUNT_NICKNAME nickname = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.nickname_);
            }
          }
           {
            // uint32 gender = 4;
            if (this_._internal_gender() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gender());
            }
            // uint32 level = 5;
            if (this_._internal_level() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_level());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameDown_UserPartyInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameDown_UserPartyInfo*>(&to_msg);
  auto& from = static_cast<const GameDown_UserPartyInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.GameDown_UserPartyInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterclass().empty()) {
    _this->_internal_set_characterclass(from._internal_characterclass());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.nickname_ != nullptr);
    if (_this->_impl_.nickname_ == nullptr) {
      _this->_impl_.nickname_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(arena, *from._impl_.nickname_);
    } else {
      _this->_impl_.nickname_->MergeFrom(*from._impl_.nickname_);
    }
  }
  if (from._internal_gender() != 0) {
    _this->_impl_.gender_ = from._impl_.gender_;
  }
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameDown_UserPartyInfo::CopyFrom(const GameDown_UserPartyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.GameDown_UserPartyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameDown_UserPartyInfo::InternalSwap(GameDown_UserPartyInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterclass_, &other->_impl_.characterclass_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameDown_UserPartyInfo, _impl_.level_)
      + sizeof(GameDown_UserPartyInfo::_impl_.level_)
      - PROTOBUF_FIELD_OFFSET(GameDown_UserPartyInfo, _impl_.nickname_)>(
          reinterpret_cast<char*>(&_impl_.nickname_),
          reinterpret_cast<char*>(&other->_impl_.nickname_));
}

::google::protobuf::Metadata GameDown_UserPartyInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class S2C_GameDown_UserParty_GET::_Internal {
 public:
};

S2C_GameDown_UserParty_GET::S2C_GameDown_UserParty_GET(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.S2C_GameDown_UserParty_GET)
}
inline PROTOBUF_NDEBUG_INLINE S2C_GameDown_UserParty_GET::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::S2C_GameDown_UserParty_GET& from_msg)
      : partymember_{visibility, arena, from.partymember_},
        _cached_size_{0} {}

S2C_GameDown_UserParty_GET::S2C_GameDown_UserParty_GET(
    ::google::protobuf::Arena* arena,
    const S2C_GameDown_UserParty_GET& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  S2C_GameDown_UserParty_GET* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.S2C_GameDown_UserParty_GET)
}
inline PROTOBUF_NDEBUG_INLINE S2C_GameDown_UserParty_GET::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : partymember_{visibility, arena},
        _cached_size_{0} {}

inline void S2C_GameDown_UserParty_GET::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
S2C_GameDown_UserParty_GET::~S2C_GameDown_UserParty_GET() {
  // @@protoc_insertion_point(destructor:DC.Packet.S2C_GameDown_UserParty_GET)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void S2C_GameDown_UserParty_GET::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    S2C_GameDown_UserParty_GET::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_S2C_GameDown_UserParty_GET_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &S2C_GameDown_UserParty_GET::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<S2C_GameDown_UserParty_GET>(),
            ::google::protobuf::Message::GetNewImpl<S2C_GameDown_UserParty_GET>(),
            ::google::protobuf::Message::GetClearImpl<S2C_GameDown_UserParty_GET>(), &S2C_GameDown_UserParty_GET::ByteSizeLong,
                &S2C_GameDown_UserParty_GET::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(S2C_GameDown_UserParty_GET, _impl_._cached_size_),
            false,
        },
        &S2C_GameDown_UserParty_GET::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* S2C_GameDown_UserParty_GET::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> S2C_GameDown_UserParty_GET::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::S2C_GameDown_UserParty_GET>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.GameDown_UserPartyInfo partyMember = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameDown_UserParty_GET, _impl_.partymember_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.GameDown_UserPartyInfo partyMember = 1;
    {PROTOBUF_FIELD_OFFSET(S2C_GameDown_UserParty_GET, _impl_.partymember_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::GameDown_UserPartyInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void S2C_GameDown_UserParty_GET::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.S2C_GameDown_UserParty_GET)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.partymember_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* S2C_GameDown_UserParty_GET::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const S2C_GameDown_UserParty_GET& this_ = static_cast<const S2C_GameDown_UserParty_GET&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* S2C_GameDown_UserParty_GET::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const S2C_GameDown_UserParty_GET& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.S2C_GameDown_UserParty_GET)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.GameDown_UserPartyInfo partyMember = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_partymember_size());
               i < n; i++) {
            const auto& repfield = this_._internal_partymember().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.S2C_GameDown_UserParty_GET)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t S2C_GameDown_UserParty_GET::ByteSizeLong(const MessageLite& base) {
          const S2C_GameDown_UserParty_GET& this_ = static_cast<const S2C_GameDown_UserParty_GET&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t S2C_GameDown_UserParty_GET::ByteSizeLong() const {
          const S2C_GameDown_UserParty_GET& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.S2C_GameDown_UserParty_GET)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.GameDown_UserPartyInfo partyMember = 1;
            {
              total_size += 1UL * this_._internal_partymember_size();
              for (const auto& msg : this_._internal_partymember()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void S2C_GameDown_UserParty_GET::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<S2C_GameDown_UserParty_GET*>(&to_msg);
  auto& from = static_cast<const S2C_GameDown_UserParty_GET&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.S2C_GameDown_UserParty_GET)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_partymember()->MergeFrom(
      from._internal_partymember());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_GameDown_UserParty_GET::CopyFrom(const S2C_GameDown_UserParty_GET& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.S2C_GameDown_UserParty_GET)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void S2C_GameDown_UserParty_GET::InternalSwap(S2C_GameDown_UserParty_GET* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.partymember_.InternalSwap(&other->_impl_.partymember_);
}

::google::protobuf::Metadata S2C_GameDown_UserParty_GET::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_GameReady_POST::_Internal {
 public:
};

C2S_GameReady_POST::C2S_GameReady_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_GameReady_POST)
}
C2S_GameReady_POST::C2S_GameReady_POST(
    ::google::protobuf::Arena* arena, const C2S_GameReady_POST& from)
    : C2S_GameReady_POST(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE C2S_GameReady_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void C2S_GameReady_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gameid_ = {};
}
C2S_GameReady_POST::~C2S_GameReady_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_GameReady_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_GameReady_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_GameReady_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_GameReady_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_GameReady_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_GameReady_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_GameReady_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_GameReady_POST>(), &C2S_GameReady_POST::ByteSizeLong,
                &C2S_GameReady_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_GameReady_POST, _impl_._cached_size_),
            false,
        },
        &C2S_GameReady_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_GameReady_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> C2S_GameReady_POST::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_GameReady_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 gameId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(C2S_GameReady_POST, _impl_.gameid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_GameReady_POST, _impl_.gameid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 gameId = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_GameReady_POST, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void C2S_GameReady_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_GameReady_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gameid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_GameReady_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_GameReady_POST& this_ = static_cast<const C2S_GameReady_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_GameReady_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_GameReady_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_GameReady_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 gameId = 1;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_gameid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_GameReady_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_GameReady_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_GameReady_POST& this_ = static_cast<const C2S_GameReady_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_GameReady_POST::ByteSizeLong() const {
          const C2S_GameReady_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_GameReady_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 gameId = 1;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_GameReady_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_GameReady_POST*>(&to_msg);
  auto& from = static_cast<const C2S_GameReady_POST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_GameReady_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_GameReady_POST::CopyFrom(const C2S_GameReady_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_GameReady_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_GameReady_POST::InternalSwap(C2S_GameReady_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.gameid_, other->_impl_.gameid_);
}

::google::protobuf::Metadata C2S_GameReady_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameFloorMatchMaking_UserInfo::_Internal {
 public:
};

GameFloorMatchMaking_UserInfo::GameFloorMatchMaking_UserInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.GameFloorMatchMaking_UserInfo)
}
inline PROTOBUF_NDEBUG_INLINE GameFloorMatchMaking_UserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::GameFloorMatchMaking_UserInfo& from_msg)
      : accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        partyid_(arena, from.partyid_),
        _cached_size_{0} {}

GameFloorMatchMaking_UserInfo::GameFloorMatchMaking_UserInfo(
    ::google::protobuf::Arena* arena,
    const GameFloorMatchMaking_UserInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameFloorMatchMaking_UserInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.GameFloorMatchMaking_UserInfo)
}
inline PROTOBUF_NDEBUG_INLINE GameFloorMatchMaking_UserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accountid_(arena),
        characterid_(arena),
        partyid_(arena),
        _cached_size_{0} {}

inline void GameFloorMatchMaking_UserInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GameFloorMatchMaking_UserInfo::~GameFloorMatchMaking_UserInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.GameFloorMatchMaking_UserInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameFloorMatchMaking_UserInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.partyid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GameFloorMatchMaking_UserInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GameFloorMatchMaking_UserInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GameFloorMatchMaking_UserInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GameFloorMatchMaking_UserInfo>(),
            ::google::protobuf::Message::GetNewImpl<GameFloorMatchMaking_UserInfo>(),
            ::google::protobuf::Message::GetClearImpl<GameFloorMatchMaking_UserInfo>(), &GameFloorMatchMaking_UserInfo::ByteSizeLong,
                &GameFloorMatchMaking_UserInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfo, _impl_._cached_size_),
            false,
        },
        &GameFloorMatchMaking_UserInfo::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GameFloorMatchMaking_UserInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 75, 2> GameFloorMatchMaking_UserInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::GameFloorMatchMaking_UserInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfo, _impl_.accountid_)}},
    // string characterId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfo, _impl_.characterid_)}},
    // string partyId = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfo, _impl_.partyid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfo, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 2;
    {PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfo, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string partyId = 3;
    {PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfo, _impl_.partyid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\11\13\7\0\0\0\0"
    "DC.Packet.GameFloorMatchMaking_UserInfo"
    "accountId"
    "characterId"
    "partyId"
  }},
};

PROTOBUF_NOINLINE void GameFloorMatchMaking_UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.GameFloorMatchMaking_UserInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.partyid_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameFloorMatchMaking_UserInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameFloorMatchMaking_UserInfo& this_ = static_cast<const GameFloorMatchMaking_UserInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameFloorMatchMaking_UserInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameFloorMatchMaking_UserInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.GameFloorMatchMaking_UserInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameFloorMatchMaking_UserInfo.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string characterId = 2;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameFloorMatchMaking_UserInfo.characterId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string partyId = 3;
          if (!this_._internal_partyid().empty()) {
            const std::string& _s = this_._internal_partyid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameFloorMatchMaking_UserInfo.partyId");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.GameFloorMatchMaking_UserInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameFloorMatchMaking_UserInfo::ByteSizeLong(const MessageLite& base) {
          const GameFloorMatchMaking_UserInfo& this_ = static_cast<const GameFloorMatchMaking_UserInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameFloorMatchMaking_UserInfo::ByteSizeLong() const {
          const GameFloorMatchMaking_UserInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.GameFloorMatchMaking_UserInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 2;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // string partyId = 3;
            if (!this_._internal_partyid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_partyid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameFloorMatchMaking_UserInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameFloorMatchMaking_UserInfo*>(&to_msg);
  auto& from = static_cast<const GameFloorMatchMaking_UserInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.GameFloorMatchMaking_UserInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (!from._internal_partyid().empty()) {
    _this->_internal_set_partyid(from._internal_partyid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameFloorMatchMaking_UserInfo::CopyFrom(const GameFloorMatchMaking_UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.GameFloorMatchMaking_UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameFloorMatchMaking_UserInfo::InternalSwap(GameFloorMatchMaking_UserInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.partyid_, &other->_impl_.partyid_, arena);
}

::google::protobuf::Metadata GameFloorMatchMaking_UserInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_FloorMatchMaking_POST::_Internal {
 public:
};

C2S_FloorMatchMaking_POST::C2S_FloorMatchMaking_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_FloorMatchMaking_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_FloorMatchMaking_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_FloorMatchMaking_POST& from_msg)
      : infos_{visibility, arena, from.infos_},
        dungeonid_(arena, from.dungeonid_),
        _cached_size_{0} {}

C2S_FloorMatchMaking_POST::C2S_FloorMatchMaking_POST(
    ::google::protobuf::Arena* arena,
    const C2S_FloorMatchMaking_POST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_FloorMatchMaking_POST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gameid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gameid_),
           offsetof(Impl_, currentfloor_) -
               offsetof(Impl_, gameid_) +
               sizeof(Impl_::currentfloor_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_FloorMatchMaking_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_FloorMatchMaking_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : infos_{visibility, arena},
        dungeonid_(arena),
        _cached_size_{0} {}

inline void C2S_FloorMatchMaking_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gameid_),
           0,
           offsetof(Impl_, currentfloor_) -
               offsetof(Impl_, gameid_) +
               sizeof(Impl_::currentfloor_));
}
C2S_FloorMatchMaking_POST::~C2S_FloorMatchMaking_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_FloorMatchMaking_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_FloorMatchMaking_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.dungeonid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_FloorMatchMaking_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_FloorMatchMaking_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_FloorMatchMaking_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_FloorMatchMaking_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_FloorMatchMaking_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_FloorMatchMaking_POST>(), &C2S_FloorMatchMaking_POST::ByteSizeLong,
                &C2S_FloorMatchMaking_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_FloorMatchMaking_POST, _impl_._cached_size_),
            false,
        },
        &C2S_FloorMatchMaking_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_FloorMatchMaking_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 53, 2> C2S_FloorMatchMaking_POST::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_FloorMatchMaking_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string dungeonId = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_FloorMatchMaking_POST, _impl_.dungeonid_)}},
    // repeated .DC.Packet.GameFloorMatchMaking_UserInfo infos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_FloorMatchMaking_POST, _impl_.infos_)}},
    // uint64 gameId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(C2S_FloorMatchMaking_POST, _impl_.gameid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_FloorMatchMaking_POST, _impl_.gameid_)}},
    // uint32 currentFloor = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_FloorMatchMaking_POST, _impl_.currentfloor_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_FloorMatchMaking_POST, _impl_.currentfloor_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.GameFloorMatchMaking_UserInfo infos = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_FloorMatchMaking_POST, _impl_.infos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 gameId = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_FloorMatchMaking_POST, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 currentFloor = 3;
    {PROTOBUF_FIELD_OFFSET(C2S_FloorMatchMaking_POST, _impl_.currentfloor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string dungeonId = 4;
    {PROTOBUF_FIELD_OFFSET(C2S_FloorMatchMaking_POST, _impl_.dungeonid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::GameFloorMatchMaking_UserInfo>()},
  }}, {{
    "\43\0\0\0\11\0\0\0"
    "DC.Packet.C2S_FloorMatchMaking_POST"
    "dungeonId"
  }},
};

PROTOBUF_NOINLINE void C2S_FloorMatchMaking_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_FloorMatchMaking_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.infos_.Clear();
  _impl_.dungeonid_.ClearToEmpty();
  ::memset(&_impl_.gameid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.currentfloor_) -
      reinterpret_cast<char*>(&_impl_.gameid_)) + sizeof(_impl_.currentfloor_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_FloorMatchMaking_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_FloorMatchMaking_POST& this_ = static_cast<const C2S_FloorMatchMaking_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_FloorMatchMaking_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_FloorMatchMaking_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_FloorMatchMaking_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.GameFloorMatchMaking_UserInfo infos = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_infos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_infos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint64 gameId = 2;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_gameid(), target);
          }

          // uint32 currentFloor = 3;
          if (this_._internal_currentfloor() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_currentfloor(), target);
          }

          // string dungeonId = 4;
          if (!this_._internal_dungeonid().empty()) {
            const std::string& _s = this_._internal_dungeonid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_FloorMatchMaking_POST.dungeonId");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_FloorMatchMaking_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_FloorMatchMaking_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_FloorMatchMaking_POST& this_ = static_cast<const C2S_FloorMatchMaking_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_FloorMatchMaking_POST::ByteSizeLong() const {
          const C2S_FloorMatchMaking_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_FloorMatchMaking_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.GameFloorMatchMaking_UserInfo infos = 1;
            {
              total_size += 1UL * this_._internal_infos_size();
              for (const auto& msg : this_._internal_infos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string dungeonId = 4;
            if (!this_._internal_dungeonid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_dungeonid());
            }
            // uint64 gameId = 2;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
            // uint32 currentFloor = 3;
            if (this_._internal_currentfloor() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_currentfloor());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_FloorMatchMaking_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_FloorMatchMaking_POST*>(&to_msg);
  auto& from = static_cast<const C2S_FloorMatchMaking_POST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_FloorMatchMaking_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infos()->MergeFrom(
      from._internal_infos());
  if (!from._internal_dungeonid().empty()) {
    _this->_internal_set_dungeonid(from._internal_dungeonid());
  }
  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  if (from._internal_currentfloor() != 0) {
    _this->_impl_.currentfloor_ = from._impl_.currentfloor_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_FloorMatchMaking_POST::CopyFrom(const C2S_FloorMatchMaking_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_FloorMatchMaking_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_FloorMatchMaking_POST::InternalSwap(C2S_FloorMatchMaking_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.infos_.InternalSwap(&other->_impl_.infos_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dungeonid_, &other->_impl_.dungeonid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_FloorMatchMaking_POST, _impl_.currentfloor_)
      + sizeof(C2S_FloorMatchMaking_POST::_impl_.currentfloor_)
      - PROTOBUF_FIELD_OFFSET(C2S_FloorMatchMaking_POST, _impl_.gameid_)>(
          reinterpret_cast<char*>(&_impl_.gameid_),
          reinterpret_cast<char*>(&other->_impl_.gameid_));
}

::google::protobuf::Metadata C2S_FloorMatchMaking_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameFloorMatchMaking_UserInfoResponse::_Internal {
 public:
};

GameFloorMatchMaking_UserInfoResponse::GameFloorMatchMaking_UserInfoResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.GameFloorMatchMaking_UserInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE GameFloorMatchMaking_UserInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::GameFloorMatchMaking_UserInfoResponse& from_msg)
      : accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        ip_(arena, from.ip_),
        sessionid_(arena, from.sessionid_),
        _cached_size_{0} {}

GameFloorMatchMaking_UserInfoResponse::GameFloorMatchMaking_UserInfoResponse(
    ::google::protobuf::Arena* arena,
    const GameFloorMatchMaking_UserInfoResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameFloorMatchMaking_UserInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.port_ = from._impl_.port_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.GameFloorMatchMaking_UserInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE GameFloorMatchMaking_UserInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accountid_(arena),
        characterid_(arena),
        ip_(arena),
        sessionid_(arena),
        _cached_size_{0} {}

inline void GameFloorMatchMaking_UserInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.port_ = {};
}
GameFloorMatchMaking_UserInfoResponse::~GameFloorMatchMaking_UserInfoResponse() {
  // @@protoc_insertion_point(destructor:DC.Packet.GameFloorMatchMaking_UserInfoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameFloorMatchMaking_UserInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.ip_.Destroy();
  _impl_.sessionid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GameFloorMatchMaking_UserInfoResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GameFloorMatchMaking_UserInfoResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GameFloorMatchMaking_UserInfoResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GameFloorMatchMaking_UserInfoResponse>(),
            ::google::protobuf::Message::GetNewImpl<GameFloorMatchMaking_UserInfoResponse>(),
            ::google::protobuf::Message::GetClearImpl<GameFloorMatchMaking_UserInfoResponse>(), &GameFloorMatchMaking_UserInfoResponse::ByteSizeLong,
                &GameFloorMatchMaking_UserInfoResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfoResponse, _impl_._cached_size_),
            false,
        },
        &GameFloorMatchMaking_UserInfoResponse::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GameFloorMatchMaking_UserInfoResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 87, 2> GameFloorMatchMaking_UserInfoResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::GameFloorMatchMaking_UserInfoResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfoResponse, _impl_.accountid_)}},
    // string characterId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfoResponse, _impl_.characterid_)}},
    // string ip = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfoResponse, _impl_.ip_)}},
    // int32 port = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameFloorMatchMaking_UserInfoResponse, _impl_.port_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfoResponse, _impl_.port_)}},
    // string sessionId = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfoResponse, _impl_.sessionid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfoResponse, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 2;
    {PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfoResponse, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ip = 3;
    {PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfoResponse, _impl_.ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 port = 4;
    {PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfoResponse, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string sessionId = 5;
    {PROTOBUF_FIELD_OFFSET(GameFloorMatchMaking_UserInfoResponse, _impl_.sessionid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\11\13\2\0\11\0\0"
    "DC.Packet.GameFloorMatchMaking_UserInfoResponse"
    "accountId"
    "characterId"
    "ip"
    "sessionId"
  }},
};

PROTOBUF_NOINLINE void GameFloorMatchMaking_UserInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.GameFloorMatchMaking_UserInfoResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.ip_.ClearToEmpty();
  _impl_.sessionid_.ClearToEmpty();
  _impl_.port_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameFloorMatchMaking_UserInfoResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameFloorMatchMaking_UserInfoResponse& this_ = static_cast<const GameFloorMatchMaking_UserInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameFloorMatchMaking_UserInfoResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameFloorMatchMaking_UserInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.GameFloorMatchMaking_UserInfoResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameFloorMatchMaking_UserInfoResponse.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string characterId = 2;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameFloorMatchMaking_UserInfoResponse.characterId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string ip = 3;
          if (!this_._internal_ip().empty()) {
            const std::string& _s = this_._internal_ip();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameFloorMatchMaking_UserInfoResponse.ip");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // int32 port = 4;
          if (this_._internal_port() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_port(), target);
          }

          // string sessionId = 5;
          if (!this_._internal_sessionid().empty()) {
            const std::string& _s = this_._internal_sessionid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.GameFloorMatchMaking_UserInfoResponse.sessionId");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.GameFloorMatchMaking_UserInfoResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameFloorMatchMaking_UserInfoResponse::ByteSizeLong(const MessageLite& base) {
          const GameFloorMatchMaking_UserInfoResponse& this_ = static_cast<const GameFloorMatchMaking_UserInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameFloorMatchMaking_UserInfoResponse::ByteSizeLong() const {
          const GameFloorMatchMaking_UserInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.GameFloorMatchMaking_UserInfoResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 2;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // string ip = 3;
            if (!this_._internal_ip().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ip());
            }
            // string sessionId = 5;
            if (!this_._internal_sessionid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sessionid());
            }
            // int32 port = 4;
            if (this_._internal_port() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_port());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameFloorMatchMaking_UserInfoResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameFloorMatchMaking_UserInfoResponse*>(&to_msg);
  auto& from = static_cast<const GameFloorMatchMaking_UserInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.GameFloorMatchMaking_UserInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (!from._internal_sessionid().empty()) {
    _this->_internal_set_sessionid(from._internal_sessionid());
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameFloorMatchMaking_UserInfoResponse::CopyFrom(const GameFloorMatchMaking_UserInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.GameFloorMatchMaking_UserInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameFloorMatchMaking_UserInfoResponse::InternalSwap(GameFloorMatchMaking_UserInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sessionid_, &other->_impl_.sessionid_, arena);
        swap(_impl_.port_, other->_impl_.port_);
}

::google::protobuf::Metadata GameFloorMatchMaking_UserInfoResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class S2C_FloorMatchMaking_POST_Response::_Internal {
 public:
};

S2C_FloorMatchMaking_POST_Response::S2C_FloorMatchMaking_POST_Response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.S2C_FloorMatchMaking_POST_Response)
}
inline PROTOBUF_NDEBUG_INLINE S2C_FloorMatchMaking_POST_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::S2C_FloorMatchMaking_POST_Response& from_msg)
      : infos_{visibility, arena, from.infos_},
        _cached_size_{0} {}

S2C_FloorMatchMaking_POST_Response::S2C_FloorMatchMaking_POST_Response(
    ::google::protobuf::Arena* arena,
    const S2C_FloorMatchMaking_POST_Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  S2C_FloorMatchMaking_POST_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.S2C_FloorMatchMaking_POST_Response)
}
inline PROTOBUF_NDEBUG_INLINE S2C_FloorMatchMaking_POST_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : infos_{visibility, arena},
        _cached_size_{0} {}

inline void S2C_FloorMatchMaking_POST_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
S2C_FloorMatchMaking_POST_Response::~S2C_FloorMatchMaking_POST_Response() {
  // @@protoc_insertion_point(destructor:DC.Packet.S2C_FloorMatchMaking_POST_Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void S2C_FloorMatchMaking_POST_Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    S2C_FloorMatchMaking_POST_Response::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_S2C_FloorMatchMaking_POST_Response_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &S2C_FloorMatchMaking_POST_Response::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<S2C_FloorMatchMaking_POST_Response>(),
            ::google::protobuf::Message::GetNewImpl<S2C_FloorMatchMaking_POST_Response>(),
            ::google::protobuf::Message::GetClearImpl<S2C_FloorMatchMaking_POST_Response>(), &S2C_FloorMatchMaking_POST_Response::ByteSizeLong,
                &S2C_FloorMatchMaking_POST_Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(S2C_FloorMatchMaking_POST_Response, _impl_._cached_size_),
            false,
        },
        &S2C_FloorMatchMaking_POST_Response::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* S2C_FloorMatchMaking_POST_Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> S2C_FloorMatchMaking_POST_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::S2C_FloorMatchMaking_POST_Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.GameFloorMatchMaking_UserInfoResponse infos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_FloorMatchMaking_POST_Response, _impl_.infos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.GameFloorMatchMaking_UserInfoResponse infos = 1;
    {PROTOBUF_FIELD_OFFSET(S2C_FloorMatchMaking_POST_Response, _impl_.infos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::GameFloorMatchMaking_UserInfoResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void S2C_FloorMatchMaking_POST_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.S2C_FloorMatchMaking_POST_Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.infos_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* S2C_FloorMatchMaking_POST_Response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const S2C_FloorMatchMaking_POST_Response& this_ = static_cast<const S2C_FloorMatchMaking_POST_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* S2C_FloorMatchMaking_POST_Response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const S2C_FloorMatchMaking_POST_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.S2C_FloorMatchMaking_POST_Response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.GameFloorMatchMaking_UserInfoResponse infos = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_infos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_infos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.S2C_FloorMatchMaking_POST_Response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t S2C_FloorMatchMaking_POST_Response::ByteSizeLong(const MessageLite& base) {
          const S2C_FloorMatchMaking_POST_Response& this_ = static_cast<const S2C_FloorMatchMaking_POST_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t S2C_FloorMatchMaking_POST_Response::ByteSizeLong() const {
          const S2C_FloorMatchMaking_POST_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.S2C_FloorMatchMaking_POST_Response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.GameFloorMatchMaking_UserInfoResponse infos = 1;
            {
              total_size += 1UL * this_._internal_infos_size();
              for (const auto& msg : this_._internal_infos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void S2C_FloorMatchMaking_POST_Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<S2C_FloorMatchMaking_POST_Response*>(&to_msg);
  auto& from = static_cast<const S2C_FloorMatchMaking_POST_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.S2C_FloorMatchMaking_POST_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infos()->MergeFrom(
      from._internal_infos());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_FloorMatchMaking_POST_Response::CopyFrom(const S2C_FloorMatchMaking_POST_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.S2C_FloorMatchMaking_POST_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void S2C_FloorMatchMaking_POST_Response::InternalSwap(S2C_FloorMatchMaking_POST_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.infos_.InternalSwap(&other->_impl_.infos_);
}

::google::protobuf::Metadata S2C_FloorMatchMaking_POST_Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_IronShield_Report_POST::_Internal {
 public:
};

C2S_IronShield_Report_POST::C2S_IronShield_Report_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_IronShield_Report_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_IronShield_Report_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_IronShield_Report_POST& from_msg)
      : hids_{visibility, arena, from.hids_},
        blob_{visibility, arena, from.blob_},
        _blob_cached_byte_size_{0},
        reportid_(arena, from.reportid_),
        accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        originnickname_(arena, from.originnickname_),
        reason_(arena, from.reason_),
        blobnametag_(arena, from.blobnametag_),
        _cached_size_{0} {}

C2S_IronShield_Report_POST::C2S_IronShield_Report_POST(
    ::google::protobuf::Arena* arena,
    const C2S_IronShield_Report_POST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_IronShield_Report_POST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, callbacktype_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, callbacktype_),
           offsetof(Impl_, blobtype_) -
               offsetof(Impl_, callbacktype_) +
               sizeof(Impl_::blobtype_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_IronShield_Report_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_IronShield_Report_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hids_{visibility, arena},
        blob_{visibility, arena},
        _blob_cached_byte_size_{0},
        reportid_(arena),
        accountid_(arena),
        characterid_(arena),
        originnickname_(arena),
        reason_(arena),
        blobnametag_(arena),
        _cached_size_{0} {}

inline void C2S_IronShield_Report_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, callbacktype_),
           0,
           offsetof(Impl_, blobtype_) -
               offsetof(Impl_, callbacktype_) +
               sizeof(Impl_::blobtype_));
}
C2S_IronShield_Report_POST::~C2S_IronShield_Report_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_IronShield_Report_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_IronShield_Report_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.reportid_.Destroy();
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.originnickname_.Destroy();
  _impl_.reason_.Destroy();
  _impl_.blobnametag_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_IronShield_Report_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_IronShield_Report_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_IronShield_Report_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_IronShield_Report_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_IronShield_Report_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_IronShield_Report_POST>(), &C2S_IronShield_Report_POST::ByteSizeLong,
                &C2S_IronShield_Report_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_._cached_size_),
            false,
        },
        &C2S_IronShield_Report_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_IronShield_Report_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 0, 116, 2> C2S_IronShield_Report_POST::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_IronShield_Report_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 callbackType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_IronShield_Report_POST, _impl_.callbacktype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.callbacktype_)}},
    // string reportId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.reportid_)}},
    // repeated string hIds = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.hids_)}},
    // repeated uint32 blob = 4;
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.blob_)}},
    // string accountId = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.accountid_)}},
    // string characterId = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.characterid_)}},
    // string originNickname = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.originnickname_)}},
    // string reason = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.reason_)}},
    // uint32 needBlock = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_IronShield_Report_POST, _impl_.needblock_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.needblock_)}},
    // uint32 needHWBlock = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_IronShield_Report_POST, _impl_.needhwblock_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.needhwblock_)}},
    // uint32 blockTime_min = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_IronShield_Report_POST, _impl_.blocktime_min_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.blocktime_min_)}},
    // uint32 banType = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_IronShield_Report_POST, _impl_.bantype_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.bantype_)}},
    // int32 blobType = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_IronShield_Report_POST, _impl_.blobtype_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.blobtype_)}},
    // string blobNameTag = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.blobnametag_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 callbackType = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.callbacktype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string reportId = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.reportid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string hIds = 3;
    {PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.hids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated uint32 blob = 4;
    {PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.blob_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // string accountId = 5;
    {PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 6;
    {PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string originNickname = 7;
    {PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.originnickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reason = 8;
    {PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 needBlock = 9;
    {PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.needblock_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 needHWBlock = 10;
    {PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.needhwblock_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 blockTime_min = 11;
    {PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.blocktime_min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 banType = 12;
    {PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.bantype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // int32 blobType = 13;
    {PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.blobtype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string blobNameTag = 14;
    {PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.blobnametag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\0\10\4\0\11\13\16\6\0\0\0\0\0\13\0"
    "DC.Packet.C2S_IronShield_Report_POST"
    "reportId"
    "hIds"
    "accountId"
    "characterId"
    "originNickname"
    "reason"
    "blobNameTag"
  }},
};

PROTOBUF_NOINLINE void C2S_IronShield_Report_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_IronShield_Report_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hids_.Clear();
  _impl_.blob_.Clear();
  _impl_.reportid_.ClearToEmpty();
  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.originnickname_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  _impl_.blobnametag_.ClearToEmpty();
  ::memset(&_impl_.callbacktype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.blobtype_) -
      reinterpret_cast<char*>(&_impl_.callbacktype_)) + sizeof(_impl_.blobtype_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_IronShield_Report_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_IronShield_Report_POST& this_ = static_cast<const C2S_IronShield_Report_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_IronShield_Report_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_IronShield_Report_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_IronShield_Report_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 callbackType = 1;
          if (this_._internal_callbacktype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_callbacktype(), target);
          }

          // string reportId = 2;
          if (!this_._internal_reportid().empty()) {
            const std::string& _s = this_._internal_reportid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_IronShield_Report_POST.reportId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated string hIds = 3;
          for (int i = 0, n = this_._internal_hids_size(); i < n; ++i) {
            const auto& s = this_._internal_hids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_IronShield_Report_POST.hIds");
            target = stream->WriteString(3, s, target);
          }

          // repeated uint32 blob = 4;
          {
            int byte_size = this_._impl_._blob_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  4, this_._internal_blob(), byte_size, target);
            }
          }

          // string accountId = 5;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_IronShield_Report_POST.accountId");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string characterId = 6;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_IronShield_Report_POST.characterId");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string originNickname = 7;
          if (!this_._internal_originnickname().empty()) {
            const std::string& _s = this_._internal_originnickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_IronShield_Report_POST.originNickname");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string reason = 8;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_IronShield_Report_POST.reason");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // uint32 needBlock = 9;
          if (this_._internal_needblock() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                9, this_._internal_needblock(), target);
          }

          // uint32 needHWBlock = 10;
          if (this_._internal_needhwblock() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                10, this_._internal_needhwblock(), target);
          }

          // uint32 blockTime_min = 11;
          if (this_._internal_blocktime_min() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                11, this_._internal_blocktime_min(), target);
          }

          // uint32 banType = 12;
          if (this_._internal_bantype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                12, this_._internal_bantype(), target);
          }

          // int32 blobType = 13;
          if (this_._internal_blobtype() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<13>(
                    stream, this_._internal_blobtype(), target);
          }

          // string blobNameTag = 14;
          if (!this_._internal_blobnametag().empty()) {
            const std::string& _s = this_._internal_blobnametag();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_IronShield_Report_POST.blobNameTag");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_IronShield_Report_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_IronShield_Report_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_IronShield_Report_POST& this_ = static_cast<const C2S_IronShield_Report_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_IronShield_Report_POST::ByteSizeLong() const {
          const C2S_IronShield_Report_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_IronShield_Report_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string hIds = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_hids().size());
              for (int i = 0, n = this_._internal_hids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_hids().Get(i));
              }
            }
            // repeated uint32 blob = 4;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_blob(), 1,
                      this_._impl_._blob_cached_byte_size_);
            }
          }
           {
            // string reportId = 2;
            if (!this_._internal_reportid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reportid());
            }
            // string accountId = 5;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 6;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // string originNickname = 7;
            if (!this_._internal_originnickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_originnickname());
            }
            // string reason = 8;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // string blobNameTag = 14;
            if (!this_._internal_blobnametag().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_blobnametag());
            }
            // uint32 callbackType = 1;
            if (this_._internal_callbacktype() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_callbacktype());
            }
            // uint32 needBlock = 9;
            if (this_._internal_needblock() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_needblock());
            }
            // uint32 needHWBlock = 10;
            if (this_._internal_needhwblock() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_needhwblock());
            }
            // uint32 blockTime_min = 11;
            if (this_._internal_blocktime_min() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_blocktime_min());
            }
            // uint32 banType = 12;
            if (this_._internal_bantype() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_bantype());
            }
            // int32 blobType = 13;
            if (this_._internal_blobtype() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_blobtype());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_IronShield_Report_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_IronShield_Report_POST*>(&to_msg);
  auto& from = static_cast<const C2S_IronShield_Report_POST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_IronShield_Report_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_hids()->MergeFrom(from._internal_hids());
  _this->_internal_mutable_blob()->MergeFrom(from._internal_blob());
  if (!from._internal_reportid().empty()) {
    _this->_internal_set_reportid(from._internal_reportid());
  }
  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (!from._internal_originnickname().empty()) {
    _this->_internal_set_originnickname(from._internal_originnickname());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (!from._internal_blobnametag().empty()) {
    _this->_internal_set_blobnametag(from._internal_blobnametag());
  }
  if (from._internal_callbacktype() != 0) {
    _this->_impl_.callbacktype_ = from._impl_.callbacktype_;
  }
  if (from._internal_needblock() != 0) {
    _this->_impl_.needblock_ = from._impl_.needblock_;
  }
  if (from._internal_needhwblock() != 0) {
    _this->_impl_.needhwblock_ = from._impl_.needhwblock_;
  }
  if (from._internal_blocktime_min() != 0) {
    _this->_impl_.blocktime_min_ = from._impl_.blocktime_min_;
  }
  if (from._internal_bantype() != 0) {
    _this->_impl_.bantype_ = from._impl_.bantype_;
  }
  if (from._internal_blobtype() != 0) {
    _this->_impl_.blobtype_ = from._impl_.blobtype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_IronShield_Report_POST::CopyFrom(const C2S_IronShield_Report_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_IronShield_Report_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_IronShield_Report_POST::InternalSwap(C2S_IronShield_Report_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hids_.InternalSwap(&other->_impl_.hids_);
  _impl_.blob_.InternalSwap(&other->_impl_.blob_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reportid_, &other->_impl_.reportid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.originnickname_, &other->_impl_.originnickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.blobnametag_, &other->_impl_.blobnametag_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.blobtype_)
      + sizeof(C2S_IronShield_Report_POST::_impl_.blobtype_)
      - PROTOBUF_FIELD_OFFSET(C2S_IronShield_Report_POST, _impl_.callbacktype_)>(
          reinterpret_cast<char*>(&_impl_.callbacktype_),
          reinterpret_cast<char*>(&other->_impl_.callbacktype_));
}

::google::protobuf::Metadata C2S_IronShield_Report_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_BanCheck_Hardware_POST::_Internal {
 public:
};

C2S_BanCheck_Hardware_POST::C2S_BanCheck_Hardware_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_BanCheck_Hardware_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_BanCheck_Hardware_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_BanCheck_Hardware_POST& from_msg)
      : hids_{visibility, arena, from.hids_},
        accountid_(arena, from.accountid_),
        _cached_size_{0} {}

C2S_BanCheck_Hardware_POST::C2S_BanCheck_Hardware_POST(
    ::google::protobuf::Arena* arena,
    const C2S_BanCheck_Hardware_POST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_BanCheck_Hardware_POST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_BanCheck_Hardware_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_BanCheck_Hardware_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hids_{visibility, arena},
        accountid_(arena),
        _cached_size_{0} {}

inline void C2S_BanCheck_Hardware_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
C2S_BanCheck_Hardware_POST::~C2S_BanCheck_Hardware_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_BanCheck_Hardware_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_BanCheck_Hardware_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_BanCheck_Hardware_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_BanCheck_Hardware_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_BanCheck_Hardware_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_BanCheck_Hardware_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_BanCheck_Hardware_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_BanCheck_Hardware_POST>(), &C2S_BanCheck_Hardware_POST::ByteSizeLong,
                &C2S_BanCheck_Hardware_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_BanCheck_Hardware_POST, _impl_._cached_size_),
            false,
        },
        &C2S_BanCheck_Hardware_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_BanCheck_Hardware_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> C2S_BanCheck_Hardware_POST::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_BanCheck_Hardware_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string hIds = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_BanCheck_Hardware_POST, _impl_.hids_)}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_BanCheck_Hardware_POST, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_BanCheck_Hardware_POST, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string hIds = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_BanCheck_Hardware_POST, _impl_.hids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\44\11\4\0\0\0\0\0"
    "DC.Packet.C2S_BanCheck_Hardware_POST"
    "accountId"
    "hIds"
  }},
};

PROTOBUF_NOINLINE void C2S_BanCheck_Hardware_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_BanCheck_Hardware_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hids_.Clear();
  _impl_.accountid_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_BanCheck_Hardware_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_BanCheck_Hardware_POST& this_ = static_cast<const C2S_BanCheck_Hardware_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_BanCheck_Hardware_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_BanCheck_Hardware_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_BanCheck_Hardware_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_BanCheck_Hardware_POST.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string hIds = 2;
          for (int i = 0, n = this_._internal_hids_size(); i < n; ++i) {
            const auto& s = this_._internal_hids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_BanCheck_Hardware_POST.hIds");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_BanCheck_Hardware_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_BanCheck_Hardware_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_BanCheck_Hardware_POST& this_ = static_cast<const C2S_BanCheck_Hardware_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_BanCheck_Hardware_POST::ByteSizeLong() const {
          const C2S_BanCheck_Hardware_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_BanCheck_Hardware_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string hIds = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_hids().size());
              for (int i = 0, n = this_._internal_hids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_hids().Get(i));
              }
            }
          }
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_BanCheck_Hardware_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_BanCheck_Hardware_POST*>(&to_msg);
  auto& from = static_cast<const C2S_BanCheck_Hardware_POST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_BanCheck_Hardware_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_hids()->MergeFrom(from._internal_hids());
  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_BanCheck_Hardware_POST::CopyFrom(const C2S_BanCheck_Hardware_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_BanCheck_Hardware_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_BanCheck_Hardware_POST::InternalSwap(C2S_BanCheck_Hardware_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hids_.InternalSwap(&other->_impl_.hids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
}

::google::protobuf::Metadata C2S_BanCheck_Hardware_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class S2C_BanCheck_Hardware_POST_Response::_Internal {
 public:
};

S2C_BanCheck_Hardware_POST_Response::S2C_BanCheck_Hardware_POST_Response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.S2C_BanCheck_Hardware_POST_Response)
}
inline PROTOBUF_NDEBUG_INLINE S2C_BanCheck_Hardware_POST_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::S2C_BanCheck_Hardware_POST_Response& from_msg)
      : banhids_{visibility, arena, from.banhids_},
        loginhids_{visibility, arena, from.loginhids_},
        accountid_(arena, from.accountid_),
        _cached_size_{0} {}

S2C_BanCheck_Hardware_POST_Response::S2C_BanCheck_Hardware_POST_Response(
    ::google::protobuf::Arena* arena,
    const S2C_BanCheck_Hardware_POST_Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  S2C_BanCheck_Hardware_POST_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.isban_ = from._impl_.isban_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.S2C_BanCheck_Hardware_POST_Response)
}
inline PROTOBUF_NDEBUG_INLINE S2C_BanCheck_Hardware_POST_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : banhids_{visibility, arena},
        loginhids_{visibility, arena},
        accountid_(arena),
        _cached_size_{0} {}

inline void S2C_BanCheck_Hardware_POST_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.isban_ = {};
}
S2C_BanCheck_Hardware_POST_Response::~S2C_BanCheck_Hardware_POST_Response() {
  // @@protoc_insertion_point(destructor:DC.Packet.S2C_BanCheck_Hardware_POST_Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void S2C_BanCheck_Hardware_POST_Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    S2C_BanCheck_Hardware_POST_Response::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_S2C_BanCheck_Hardware_POST_Response_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &S2C_BanCheck_Hardware_POST_Response::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<S2C_BanCheck_Hardware_POST_Response>(),
            ::google::protobuf::Message::GetNewImpl<S2C_BanCheck_Hardware_POST_Response>(),
            ::google::protobuf::Message::GetClearImpl<S2C_BanCheck_Hardware_POST_Response>(), &S2C_BanCheck_Hardware_POST_Response::ByteSizeLong,
                &S2C_BanCheck_Hardware_POST_Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(S2C_BanCheck_Hardware_POST_Response, _impl_._cached_size_),
            false,
        },
        &S2C_BanCheck_Hardware_POST_Response::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* S2C_BanCheck_Hardware_POST_Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 79, 2> S2C_BanCheck_Hardware_POST_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::S2C_BanCheck_Hardware_POST_Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string loginHIds = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_BanCheck_Hardware_POST_Response, _impl_.loginhids_)}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_BanCheck_Hardware_POST_Response, _impl_.accountid_)}},
    // uint32 isBan = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_BanCheck_Hardware_POST_Response, _impl_.isban_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_BanCheck_Hardware_POST_Response, _impl_.isban_)}},
    // repeated string banHIds = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_BanCheck_Hardware_POST_Response, _impl_.banhids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(S2C_BanCheck_Hardware_POST_Response, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 isBan = 2;
    {PROTOBUF_FIELD_OFFSET(S2C_BanCheck_Hardware_POST_Response, _impl_.isban_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated string banHIds = 3;
    {PROTOBUF_FIELD_OFFSET(S2C_BanCheck_Hardware_POST_Response, _impl_.banhids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string loginHIds = 4;
    {PROTOBUF_FIELD_OFFSET(S2C_BanCheck_Hardware_POST_Response, _impl_.loginhids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\55\11\0\7\11\0\0\0"
    "DC.Packet.S2C_BanCheck_Hardware_POST_Response"
    "accountId"
    "banHIds"
    "loginHIds"
  }},
};

PROTOBUF_NOINLINE void S2C_BanCheck_Hardware_POST_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.S2C_BanCheck_Hardware_POST_Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.banhids_.Clear();
  _impl_.loginhids_.Clear();
  _impl_.accountid_.ClearToEmpty();
  _impl_.isban_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* S2C_BanCheck_Hardware_POST_Response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const S2C_BanCheck_Hardware_POST_Response& this_ = static_cast<const S2C_BanCheck_Hardware_POST_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* S2C_BanCheck_Hardware_POST_Response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const S2C_BanCheck_Hardware_POST_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.S2C_BanCheck_Hardware_POST_Response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_BanCheck_Hardware_POST_Response.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 isBan = 2;
          if (this_._internal_isban() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_isban(), target);
          }

          // repeated string banHIds = 3;
          for (int i = 0, n = this_._internal_banhids_size(); i < n; ++i) {
            const auto& s = this_._internal_banhids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_BanCheck_Hardware_POST_Response.banHIds");
            target = stream->WriteString(3, s, target);
          }

          // repeated string loginHIds = 4;
          for (int i = 0, n = this_._internal_loginhids_size(); i < n; ++i) {
            const auto& s = this_._internal_loginhids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.S2C_BanCheck_Hardware_POST_Response.loginHIds");
            target = stream->WriteString(4, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.S2C_BanCheck_Hardware_POST_Response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t S2C_BanCheck_Hardware_POST_Response::ByteSizeLong(const MessageLite& base) {
          const S2C_BanCheck_Hardware_POST_Response& this_ = static_cast<const S2C_BanCheck_Hardware_POST_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t S2C_BanCheck_Hardware_POST_Response::ByteSizeLong() const {
          const S2C_BanCheck_Hardware_POST_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.S2C_BanCheck_Hardware_POST_Response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string banHIds = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_banhids().size());
              for (int i = 0, n = this_._internal_banhids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_banhids().Get(i));
              }
            }
            // repeated string loginHIds = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_loginhids().size());
              for (int i = 0, n = this_._internal_loginhids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_loginhids().Get(i));
              }
            }
          }
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // uint32 isBan = 2;
            if (this_._internal_isban() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_isban());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void S2C_BanCheck_Hardware_POST_Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<S2C_BanCheck_Hardware_POST_Response*>(&to_msg);
  auto& from = static_cast<const S2C_BanCheck_Hardware_POST_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.S2C_BanCheck_Hardware_POST_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_banhids()->MergeFrom(from._internal_banhids());
  _this->_internal_mutable_loginhids()->MergeFrom(from._internal_loginhids());
  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (from._internal_isban() != 0) {
    _this->_impl_.isban_ = from._impl_.isban_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_BanCheck_Hardware_POST_Response::CopyFrom(const S2C_BanCheck_Hardware_POST_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.S2C_BanCheck_Hardware_POST_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void S2C_BanCheck_Hardware_POST_Response::InternalSwap(S2C_BanCheck_Hardware_POST_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.banhids_.InternalSwap(&other->_impl_.banhids_);
  _impl_.loginhids_.InternalSwap(&other->_impl_.loginhids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
        swap(_impl_.isban_, other->_impl_.isban_);
}

::google::protobuf::Metadata S2C_BanCheck_Hardware_POST_Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_Dirty_Item_POST::_Internal {
 public:
};

void C2S_Dirty_Item_POST::clear_upsertitems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.upsertitems_.Clear();
}
C2S_Dirty_Item_POST::C2S_Dirty_Item_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_Dirty_Item_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_Dirty_Item_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_Dirty_Item_POST& from_msg)
      : upsertitems_{visibility, arena, from.upsertitems_},
        deleteitemuniqueids_{visibility, arena, from.deleteitemuniqueids_},
        _deleteitemuniqueids_cached_byte_size_{0},
        accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        _cached_size_{0} {}

C2S_Dirty_Item_POST::C2S_Dirty_Item_POST(
    ::google::protobuf::Arena* arena,
    const C2S_Dirty_Item_POST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_Dirty_Item_POST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.gameid_ = from._impl_.gameid_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_Dirty_Item_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_Dirty_Item_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : upsertitems_{visibility, arena},
        deleteitemuniqueids_{visibility, arena},
        _deleteitemuniqueids_cached_byte_size_{0},
        accountid_(arena),
        characterid_(arena),
        _cached_size_{0} {}

inline void C2S_Dirty_Item_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gameid_ = {};
}
C2S_Dirty_Item_POST::~C2S_Dirty_Item_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_Dirty_Item_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_Dirty_Item_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_Dirty_Item_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_Dirty_Item_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_Dirty_Item_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_Dirty_Item_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_Dirty_Item_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_Dirty_Item_POST>(), &C2S_Dirty_Item_POST::ByteSizeLong,
                &C2S_Dirty_Item_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_Dirty_Item_POST, _impl_._cached_size_),
            false,
        },
        &C2S_Dirty_Item_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_Dirty_Item_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 58, 2> C2S_Dirty_Item_POST::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_Dirty_Item_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_Dirty_Item_POST, _impl_.accountid_)}},
    // string characterId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_Dirty_Item_POST, _impl_.characterid_)}},
    // uint64 gameId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(C2S_Dirty_Item_POST, _impl_.gameid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_Dirty_Item_POST, _impl_.gameid_)}},
    // repeated .DC.Packet.SItem upsertItems = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_Dirty_Item_POST, _impl_.upsertitems_)}},
    // repeated uint64 deleteItemUniqueIds = 5;
    {::_pbi::TcParser::FastV64P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_Dirty_Item_POST, _impl_.deleteitemuniqueids_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_Dirty_Item_POST, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_Dirty_Item_POST, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 gameId = 3;
    {PROTOBUF_FIELD_OFFSET(C2S_Dirty_Item_POST, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated .DC.Packet.SItem upsertItems = 4;
    {PROTOBUF_FIELD_OFFSET(C2S_Dirty_Item_POST, _impl_.upsertitems_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint64 deleteItemUniqueIds = 5;
    {PROTOBUF_FIELD_OFFSET(C2S_Dirty_Item_POST, _impl_.deleteitemuniqueids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
  }}, {{
    "\35\11\13\0\0\0\0\0"
    "DC.Packet.C2S_Dirty_Item_POST"
    "accountId"
    "characterId"
  }},
};

PROTOBUF_NOINLINE void C2S_Dirty_Item_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_Dirty_Item_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.upsertitems_.Clear();
  _impl_.deleteitemuniqueids_.Clear();
  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.gameid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_Dirty_Item_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_Dirty_Item_POST& this_ = static_cast<const C2S_Dirty_Item_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_Dirty_Item_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_Dirty_Item_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_Dirty_Item_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_Dirty_Item_POST.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string characterId = 2;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_Dirty_Item_POST.characterId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 gameId = 3;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_gameid(), target);
          }

          // repeated .DC.Packet.SItem upsertItems = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_upsertitems_size());
               i < n; i++) {
            const auto& repfield = this_._internal_upsertitems().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated uint64 deleteItemUniqueIds = 5;
          {
            int byte_size = this_._impl_._deleteitemuniqueids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt64Packed(
                  5, this_._internal_deleteitemuniqueids(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_Dirty_Item_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_Dirty_Item_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_Dirty_Item_POST& this_ = static_cast<const C2S_Dirty_Item_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_Dirty_Item_POST::ByteSizeLong() const {
          const C2S_Dirty_Item_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_Dirty_Item_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SItem upsertItems = 4;
            {
              total_size += 1UL * this_._internal_upsertitems_size();
              for (const auto& msg : this_._internal_upsertitems()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated uint64 deleteItemUniqueIds = 5;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt64SizeWithPackedTagSize(
                      this_._internal_deleteitemuniqueids(), 1,
                      this_._impl_._deleteitemuniqueids_cached_byte_size_);
            }
          }
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 2;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // uint64 gameId = 3;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_Dirty_Item_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_Dirty_Item_POST*>(&to_msg);
  auto& from = static_cast<const C2S_Dirty_Item_POST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_Dirty_Item_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_upsertitems()->MergeFrom(
      from._internal_upsertitems());
  _this->_internal_mutable_deleteitemuniqueids()->MergeFrom(from._internal_deleteitemuniqueids());
  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_Dirty_Item_POST::CopyFrom(const C2S_Dirty_Item_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_Dirty_Item_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_Dirty_Item_POST::InternalSwap(C2S_Dirty_Item_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.upsertitems_.InternalSwap(&other->_impl_.upsertitems_);
  _impl_.deleteitemuniqueids_.InternalSwap(&other->_impl_.deleteitemuniqueids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
        swap(_impl_.gameid_, other->_impl_.gameid_);
}

::google::protobuf::Metadata C2S_Dirty_Item_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_IronShield_Isolation_POST::_Internal {
 public:
};

C2S_IronShield_Isolation_POST::C2S_IronShield_Isolation_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_IronShield_Isolation_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_IronShield_Isolation_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_IronShield_Isolation_POST& from_msg)
      : accountid_(arena, from.accountid_),
        _cached_size_{0} {}

C2S_IronShield_Isolation_POST::C2S_IronShield_Isolation_POST(
    ::google::protobuf::Arena* arena,
    const C2S_IronShield_Isolation_POST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_IronShield_Isolation_POST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.isolationhours_ = from._impl_.isolationhours_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_IronShield_Isolation_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_IronShield_Isolation_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accountid_(arena),
        _cached_size_{0} {}

inline void C2S_IronShield_Isolation_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.isolationhours_ = {};
}
C2S_IronShield_Isolation_POST::~C2S_IronShield_Isolation_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_IronShield_Isolation_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_IronShield_Isolation_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_IronShield_Isolation_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_IronShield_Isolation_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_IronShield_Isolation_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_IronShield_Isolation_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_IronShield_Isolation_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_IronShield_Isolation_POST>(), &C2S_IronShield_Isolation_POST::ByteSizeLong,
                &C2S_IronShield_Isolation_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_IronShield_Isolation_POST, _impl_._cached_size_),
            false,
        },
        &C2S_IronShield_Isolation_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_IronShield_Isolation_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2> C2S_IronShield_Isolation_POST::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_IronShield_Isolation_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 isolationHours = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_IronShield_Isolation_POST, _impl_.isolationhours_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_IronShield_Isolation_POST, _impl_.isolationhours_)}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_IronShield_Isolation_POST, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_IronShield_Isolation_POST, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 isolationHours = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_IronShield_Isolation_POST, _impl_.isolationhours_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\47\11\0\0\0\0\0\0"
    "DC.Packet.C2S_IronShield_Isolation_POST"
    "accountId"
  }},
};

PROTOBUF_NOINLINE void C2S_IronShield_Isolation_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_IronShield_Isolation_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.isolationhours_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_IronShield_Isolation_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_IronShield_Isolation_POST& this_ = static_cast<const C2S_IronShield_Isolation_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_IronShield_Isolation_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_IronShield_Isolation_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_IronShield_Isolation_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_IronShield_Isolation_POST.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 isolationHours = 2;
          if (this_._internal_isolationhours() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_isolationhours(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_IronShield_Isolation_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_IronShield_Isolation_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_IronShield_Isolation_POST& this_ = static_cast<const C2S_IronShield_Isolation_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_IronShield_Isolation_POST::ByteSizeLong() const {
          const C2S_IronShield_Isolation_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_IronShield_Isolation_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // int32 isolationHours = 2;
            if (this_._internal_isolationhours() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_isolationhours());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_IronShield_Isolation_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_IronShield_Isolation_POST*>(&to_msg);
  auto& from = static_cast<const C2S_IronShield_Isolation_POST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_IronShield_Isolation_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (from._internal_isolationhours() != 0) {
    _this->_impl_.isolationhours_ = from._impl_.isolationhours_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_IronShield_Isolation_POST::CopyFrom(const C2S_IronShield_Isolation_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_IronShield_Isolation_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_IronShield_Isolation_POST::InternalSwap(C2S_IronShield_Isolation_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
        swap(_impl_.isolationhours_, other->_impl_.isolationhours_);
}

::google::protobuf::Metadata C2S_IronShield_Isolation_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_Arena_Result_POST::_Internal {
 public:
  using HasBits =
      decltype(std::declval<C2S_Arena_Result_POST>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(C2S_Arena_Result_POST, _impl_._has_bits_);
};

void C2S_Arena_Result_POST::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
C2S_Arena_Result_POST::C2S_Arena_Result_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_Arena_Result_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_Arena_Result_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_Arena_Result_POST& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        items_{visibility, arena, from.items_},
        secretid_(arena, from.secretid_) {}

C2S_Arena_Result_POST::C2S_Arena_Result_POST(
    ::google::protobuf::Arena* arena,
    const C2S_Arena_Result_POST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_Arena_Result_POST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.resultinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::GameResultInfo>(
                              arena, *from._impl_.resultinfo_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_Arena_Result_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_Arena_Result_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        items_{visibility, arena},
        secretid_(arena) {}

inline void C2S_Arena_Result_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.resultinfo_ = {};
}
C2S_Arena_Result_POST::~C2S_Arena_Result_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_Arena_Result_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_Arena_Result_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.secretid_.Destroy();
  delete _impl_.resultinfo_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_Arena_Result_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_Arena_Result_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_Arena_Result_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_Arena_Result_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_Arena_Result_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_Arena_Result_POST>(), &C2S_Arena_Result_POST::ByteSizeLong,
                &C2S_Arena_Result_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_Arena_Result_POST, _impl_._cached_size_),
            false,
        },
        &C2S_Arena_Result_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_Arena_Result_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 48, 2> C2S_Arena_Result_POST::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(C2S_Arena_Result_POST, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_Arena_Result_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .DC.Packet.GameResultInfo resultInfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(C2S_Arena_Result_POST, _impl_.resultinfo_)}},
    // repeated .DC.Packet.SItem items = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(C2S_Arena_Result_POST, _impl_.items_)}},
    // string secretId = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_Arena_Result_POST, _impl_.secretid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.GameResultInfo resultInfo = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_Arena_Result_POST, _impl_.resultinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SItem items = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_Arena_Result_POST, _impl_.items_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string secretId = 3;
    {PROTOBUF_FIELD_OFFSET(C2S_Arena_Result_POST, _impl_.secretid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::GameResultInfo>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
  }}, {{
    "\37\0\0\10\0\0\0\0"
    "DC.Packet.C2S_Arena_Result_POST"
    "secretId"
  }},
};

PROTOBUF_NOINLINE void C2S_Arena_Result_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_Arena_Result_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.secretid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.resultinfo_ != nullptr);
    _impl_.resultinfo_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_Arena_Result_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_Arena_Result_POST& this_ = static_cast<const C2S_Arena_Result_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_Arena_Result_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_Arena_Result_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_Arena_Result_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.GameResultInfo resultInfo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.resultinfo_, this_._impl_.resultinfo_->GetCachedSize(), target,
                stream);
          }

          // repeated .DC.Packet.SItem items = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_items_size());
               i < n; i++) {
            const auto& repfield = this_._internal_items().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string secretId = 3;
          if (!this_._internal_secretid().empty()) {
            const std::string& _s = this_._internal_secretid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_Arena_Result_POST.secretId");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_Arena_Result_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_Arena_Result_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_Arena_Result_POST& this_ = static_cast<const C2S_Arena_Result_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_Arena_Result_POST::ByteSizeLong() const {
          const C2S_Arena_Result_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_Arena_Result_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SItem items = 2;
            {
              total_size += 1UL * this_._internal_items_size();
              for (const auto& msg : this_._internal_items()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string secretId = 3;
            if (!this_._internal_secretid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_secretid());
            }
          }
           {
            // .DC.Packet.GameResultInfo resultInfo = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.resultinfo_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_Arena_Result_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_Arena_Result_POST*>(&to_msg);
  auto& from = static_cast<const C2S_Arena_Result_POST&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_Arena_Result_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  if (!from._internal_secretid().empty()) {
    _this->_internal_set_secretid(from._internal_secretid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.resultinfo_ != nullptr);
    if (_this->_impl_.resultinfo_ == nullptr) {
      _this->_impl_.resultinfo_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::GameResultInfo>(arena, *from._impl_.resultinfo_);
    } else {
      _this->_impl_.resultinfo_->MergeFrom(*from._impl_.resultinfo_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_Arena_Result_POST::CopyFrom(const C2S_Arena_Result_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_Arena_Result_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_Arena_Result_POST::InternalSwap(C2S_Arena_Result_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.secretid_, &other->_impl_.secretid_, arena);
  swap(_impl_.resultinfo_, other->_impl_.resultinfo_);
}

::google::protobuf::Metadata C2S_Arena_Result_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_Arena_Exit_POST::_Internal {
 public:
};

C2S_Arena_Exit_POST::C2S_Arena_Exit_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_Arena_Exit_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_Arena_Exit_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_Arena_Exit_POST& from_msg)
      : accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        secretid_(arena, from.secretid_),
        _cached_size_{0} {}

C2S_Arena_Exit_POST::C2S_Arena_Exit_POST(
    ::google::protobuf::Arena* arena,
    const C2S_Arena_Exit_POST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_Arena_Exit_POST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.gameid_ = from._impl_.gameid_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_Arena_Exit_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_Arena_Exit_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accountid_(arena),
        characterid_(arena),
        secretid_(arena),
        _cached_size_{0} {}

inline void C2S_Arena_Exit_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gameid_ = {};
}
C2S_Arena_Exit_POST::~C2S_Arena_Exit_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_Arena_Exit_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_Arena_Exit_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.secretid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_Arena_Exit_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_Arena_Exit_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_Arena_Exit_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_Arena_Exit_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_Arena_Exit_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_Arena_Exit_POST>(), &C2S_Arena_Exit_POST::ByteSizeLong,
                &C2S_Arena_Exit_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_Arena_Exit_POST, _impl_._cached_size_),
            false,
        },
        &C2S_Arena_Exit_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_Arena_Exit_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 66, 2> C2S_Arena_Exit_POST::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_Arena_Exit_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string secretId = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_Arena_Exit_POST, _impl_.secretid_)}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_Arena_Exit_POST, _impl_.accountid_)}},
    // string characterId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_Arena_Exit_POST, _impl_.characterid_)}},
    // uint64 gameId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(C2S_Arena_Exit_POST, _impl_.gameid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_Arena_Exit_POST, _impl_.gameid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_Arena_Exit_POST, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_Arena_Exit_POST, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 gameId = 3;
    {PROTOBUF_FIELD_OFFSET(C2S_Arena_Exit_POST, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string secretId = 4;
    {PROTOBUF_FIELD_OFFSET(C2S_Arena_Exit_POST, _impl_.secretid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\11\13\0\10\0\0\0"
    "DC.Packet.C2S_Arena_Exit_POST"
    "accountId"
    "characterId"
    "secretId"
  }},
};

PROTOBUF_NOINLINE void C2S_Arena_Exit_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_Arena_Exit_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.secretid_.ClearToEmpty();
  _impl_.gameid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_Arena_Exit_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_Arena_Exit_POST& this_ = static_cast<const C2S_Arena_Exit_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_Arena_Exit_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_Arena_Exit_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_Arena_Exit_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_Arena_Exit_POST.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string characterId = 2;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_Arena_Exit_POST.characterId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 gameId = 3;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_gameid(), target);
          }

          // string secretId = 4;
          if (!this_._internal_secretid().empty()) {
            const std::string& _s = this_._internal_secretid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_Arena_Exit_POST.secretId");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_Arena_Exit_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_Arena_Exit_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_Arena_Exit_POST& this_ = static_cast<const C2S_Arena_Exit_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_Arena_Exit_POST::ByteSizeLong() const {
          const C2S_Arena_Exit_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_Arena_Exit_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 2;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // string secretId = 4;
            if (!this_._internal_secretid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_secretid());
            }
            // uint64 gameId = 3;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_Arena_Exit_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_Arena_Exit_POST*>(&to_msg);
  auto& from = static_cast<const C2S_Arena_Exit_POST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_Arena_Exit_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (!from._internal_secretid().empty()) {
    _this->_internal_set_secretid(from._internal_secretid());
  }
  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_Arena_Exit_POST::CopyFrom(const C2S_Arena_Exit_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_Arena_Exit_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_Arena_Exit_POST::InternalSwap(C2S_Arena_Exit_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.secretid_, &other->_impl_.secretid_, arena);
        swap(_impl_.gameid_, other->_impl_.gameid_);
}

::google::protobuf::Metadata C2S_Arena_Exit_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_Game_Finalize_Session_POST::_Internal {
 public:
};

void C2S_Game_Finalize_Session_POST::clear_recoveryitems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recoveryitems_.Clear();
}
C2S_Game_Finalize_Session_POST::C2S_Game_Finalize_Session_POST(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.C2S_Game_Finalize_Session_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_Game_Finalize_Session_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::C2S_Game_Finalize_Session_POST& from_msg)
      : recoveryitems_{visibility, arena, from.recoveryitems_},
        accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        _cached_size_{0} {}

C2S_Game_Finalize_Session_POST::C2S_Game_Finalize_Session_POST(
    ::google::protobuf::Arena* arena,
    const C2S_Game_Finalize_Session_POST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_Game_Finalize_Session_POST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.gameid_ = from._impl_.gameid_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.C2S_Game_Finalize_Session_POST)
}
inline PROTOBUF_NDEBUG_INLINE C2S_Game_Finalize_Session_POST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : recoveryitems_{visibility, arena},
        accountid_(arena),
        characterid_(arena),
        _cached_size_{0} {}

inline void C2S_Game_Finalize_Session_POST::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gameid_ = {};
}
C2S_Game_Finalize_Session_POST::~C2S_Game_Finalize_Session_POST() {
  // @@protoc_insertion_point(destructor:DC.Packet.C2S_Game_Finalize_Session_POST)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void C2S_Game_Finalize_Session_POST::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    C2S_Game_Finalize_Session_POST::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_C2S_Game_Finalize_Session_POST_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &C2S_Game_Finalize_Session_POST::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<C2S_Game_Finalize_Session_POST>(),
            ::google::protobuf::Message::GetNewImpl<C2S_Game_Finalize_Session_POST>(),
            ::google::protobuf::Message::GetClearImpl<C2S_Game_Finalize_Session_POST>(), &C2S_Game_Finalize_Session_POST::ByteSizeLong,
                &C2S_Game_Finalize_Session_POST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(C2S_Game_Finalize_Session_POST, _impl_._cached_size_),
            false,
        },
        &C2S_Game_Finalize_Session_POST::kDescriptorMethods,
        &descriptor_table_DediServer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* C2S_Game_Finalize_Session_POST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 69, 2> C2S_Game_Finalize_Session_POST::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::C2S_Game_Finalize_Session_POST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.SItem recoveryItems = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_Game_Finalize_Session_POST, _impl_.recoveryitems_)}},
    // uint64 gameId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(C2S_Game_Finalize_Session_POST, _impl_.gameid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_Game_Finalize_Session_POST, _impl_.gameid_)}},
    // string accountId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_Game_Finalize_Session_POST, _impl_.accountid_)}},
    // string characterId = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_Game_Finalize_Session_POST, _impl_.characterid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 gameId = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_Game_Finalize_Session_POST, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string accountId = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_Game_Finalize_Session_POST, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 3;
    {PROTOBUF_FIELD_OFFSET(C2S_Game_Finalize_Session_POST, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .DC.Packet.SItem recoveryItems = 4;
    {PROTOBUF_FIELD_OFFSET(C2S_Game_Finalize_Session_POST, _impl_.recoveryitems_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
  }}, {{
    "\50\0\11\13\0\0\0\0"
    "DC.Packet.C2S_Game_Finalize_Session_POST"
    "accountId"
    "characterId"
  }},
};

PROTOBUF_NOINLINE void C2S_Game_Finalize_Session_POST::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.C2S_Game_Finalize_Session_POST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.recoveryitems_.Clear();
  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.gameid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_Game_Finalize_Session_POST::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_Game_Finalize_Session_POST& this_ = static_cast<const C2S_Game_Finalize_Session_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_Game_Finalize_Session_POST::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_Game_Finalize_Session_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.C2S_Game_Finalize_Session_POST)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 gameId = 1;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_gameid(), target);
          }

          // string accountId = 2;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_Game_Finalize_Session_POST.accountId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string characterId = 3;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.C2S_Game_Finalize_Session_POST.characterId");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated .DC.Packet.SItem recoveryItems = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_recoveryitems_size());
               i < n; i++) {
            const auto& repfield = this_._internal_recoveryitems().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.C2S_Game_Finalize_Session_POST)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_Game_Finalize_Session_POST::ByteSizeLong(const MessageLite& base) {
          const C2S_Game_Finalize_Session_POST& this_ = static_cast<const C2S_Game_Finalize_Session_POST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_Game_Finalize_Session_POST::ByteSizeLong() const {
          const C2S_Game_Finalize_Session_POST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.C2S_Game_Finalize_Session_POST)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SItem recoveryItems = 4;
            {
              total_size += 1UL * this_._internal_recoveryitems_size();
              for (const auto& msg : this_._internal_recoveryitems()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string accountId = 2;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 3;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // uint64 gameId = 1;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_Game_Finalize_Session_POST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_Game_Finalize_Session_POST*>(&to_msg);
  auto& from = static_cast<const C2S_Game_Finalize_Session_POST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.C2S_Game_Finalize_Session_POST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_recoveryitems()->MergeFrom(
      from._internal_recoveryitems());
  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_Game_Finalize_Session_POST::CopyFrom(const C2S_Game_Finalize_Session_POST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.C2S_Game_Finalize_Session_POST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_Game_Finalize_Session_POST::InternalSwap(C2S_Game_Finalize_Session_POST* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.recoveryitems_.InternalSwap(&other->_impl_.recoveryitems_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
        swap(_impl_.gameid_, other->_impl_.gameid_);
}

::google::protobuf::Metadata C2S_Game_Finalize_Session_POST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Packet
}  // namespace DC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_DediServer_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
