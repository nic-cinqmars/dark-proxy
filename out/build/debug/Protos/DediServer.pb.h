// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: DediServer.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_DediServer_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_DediServer_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "_Item.pb.h"
#include "_Character.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_DediServer_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_DediServer_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_DediServer_2eproto;
namespace DC {
namespace Packet {
class AliveDataInfo;
struct AliveDataInfoDefaultTypeInternal;
extern AliveDataInfoDefaultTypeInternal _AliveDataInfo_default_instance_;
class C2S_AliveAppendData_GET;
struct C2S_AliveAppendData_GETDefaultTypeInternal;
extern C2S_AliveAppendData_GETDefaultTypeInternal _C2S_AliveAppendData_GET_default_instance_;
class C2S_Arena_Exit_POST;
struct C2S_Arena_Exit_POSTDefaultTypeInternal;
extern C2S_Arena_Exit_POSTDefaultTypeInternal _C2S_Arena_Exit_POST_default_instance_;
class C2S_Arena_Result_POST;
struct C2S_Arena_Result_POSTDefaultTypeInternal;
extern C2S_Arena_Result_POSTDefaultTypeInternal _C2S_Arena_Result_POST_default_instance_;
class C2S_BanCheck_Hardware_POST;
struct C2S_BanCheck_Hardware_POSTDefaultTypeInternal;
extern C2S_BanCheck_Hardware_POSTDefaultTypeInternal _C2S_BanCheck_Hardware_POST_default_instance_;
class C2S_Dirty_Item_POST;
struct C2S_Dirty_Item_POSTDefaultTypeInternal;
extern C2S_Dirty_Item_POSTDefaultTypeInternal _C2S_Dirty_Item_POST_default_instance_;
class C2S_FloorMatchMaking_POST;
struct C2S_FloorMatchMaking_POSTDefaultTypeInternal;
extern C2S_FloorMatchMaking_POSTDefaultTypeInternal _C2S_FloorMatchMaking_POST_default_instance_;
class C2S_GameAliveCheck_GET;
struct C2S_GameAliveCheck_GETDefaultTypeInternal;
extern C2S_GameAliveCheck_GETDefaultTypeInternal _C2S_GameAliveCheck_GET_default_instance_;
class C2S_GameCharacterInfo_Get;
struct C2S_GameCharacterInfo_GetDefaultTypeInternal;
extern C2S_GameCharacterInfo_GetDefaultTypeInternal _C2S_GameCharacterInfo_Get_default_instance_;
class C2S_GameEndServer_POST;
struct C2S_GameEndServer_POSTDefaultTypeInternal;
extern C2S_GameEndServer_POSTDefaultTypeInternal _C2S_GameEndServer_POST_default_instance_;
class C2S_GameEnterUser_Post;
struct C2S_GameEnterUser_PostDefaultTypeInternal;
extern C2S_GameEnterUser_PostDefaultTypeInternal _C2S_GameEnterUser_Post_default_instance_;
class C2S_GameEscapeUser_POST;
struct C2S_GameEscapeUser_POSTDefaultTypeInternal;
extern C2S_GameEscapeUser_POSTDefaultTypeInternal _C2S_GameEscapeUser_POST_default_instance_;
class C2S_GameExitEscapedUser_POST;
struct C2S_GameExitEscapedUser_POSTDefaultTypeInternal;
extern C2S_GameExitEscapedUser_POSTDefaultTypeInternal _C2S_GameExitEscapedUser_POST_default_instance_;
class C2S_GameExitUser_POST;
struct C2S_GameExitUser_POSTDefaultTypeInternal;
extern C2S_GameExitUser_POSTDefaultTypeInternal _C2S_GameExitUser_POST_default_instance_;
class C2S_GameExitUser_V2_POST;
struct C2S_GameExitUser_V2_POSTDefaultTypeInternal;
extern C2S_GameExitUser_V2_POSTDefaultTypeInternal _C2S_GameExitUser_V2_POST_default_instance_;
class C2S_GameInterrupt_POST;
struct C2S_GameInterrupt_POSTDefaultTypeInternal;
extern C2S_GameInterrupt_POSTDefaultTypeInternal _C2S_GameInterrupt_POST_default_instance_;
class C2S_GameReady_POST;
struct C2S_GameReady_POSTDefaultTypeInternal;
extern C2S_GameReady_POSTDefaultTypeInternal _C2S_GameReady_POST_default_instance_;
class C2S_GameSpectator_Check_POST;
struct C2S_GameSpectator_Check_POSTDefaultTypeInternal;
extern C2S_GameSpectator_Check_POSTDefaultTypeInternal _C2S_GameSpectator_Check_POST_default_instance_;
class C2S_GameStart_POST;
struct C2S_GameStart_POSTDefaultTypeInternal;
extern C2S_GameStart_POSTDefaultTypeInternal _C2S_GameStart_POST_default_instance_;
class C2S_Game_Finalize_Session_POST;
struct C2S_Game_Finalize_Session_POSTDefaultTypeInternal;
extern C2S_Game_Finalize_Session_POSTDefaultTypeInternal _C2S_Game_Finalize_Session_POST_default_instance_;
class C2S_IronShield_Isolation_POST;
struct C2S_IronShield_Isolation_POSTDefaultTypeInternal;
extern C2S_IronShield_Isolation_POSTDefaultTypeInternal _C2S_IronShield_Isolation_POST_default_instance_;
class C2S_IronShield_Report_POST;
struct C2S_IronShield_Report_POSTDefaultTypeInternal;
extern C2S_IronShield_Report_POSTDefaultTypeInternal _C2S_IronShield_Report_POST_default_instance_;
class C2S_Prepare_FloorMatchMaking;
struct C2S_Prepare_FloorMatchMakingDefaultTypeInternal;
extern C2S_Prepare_FloorMatchMakingDefaultTypeInternal _C2S_Prepare_FloorMatchMaking_default_instance_;
class C2S_UserReport_POST;
struct C2S_UserReport_POSTDefaultTypeInternal;
extern C2S_UserReport_POSTDefaultTypeInternal _C2S_UserReport_POST_default_instance_;
class Circle;
struct CircleDefaultTypeInternal;
extern CircleDefaultTypeInternal _Circle_default_instance_;
class FloorMatchMaking_CharacterInfo;
struct FloorMatchMaking_CharacterInfoDefaultTypeInternal;
extern FloorMatchMaking_CharacterInfoDefaultTypeInternal _FloorMatchMaking_CharacterInfo_default_instance_;
class GameDown_UserPartyInfo;
struct GameDown_UserPartyInfoDefaultTypeInternal;
extern GameDown_UserPartyInfoDefaultTypeInternal _GameDown_UserPartyInfo_default_instance_;
class GameEndUserInfo;
struct GameEndUserInfoDefaultTypeInternal;
extern GameEndUserInfoDefaultTypeInternal _GameEndUserInfo_default_instance_;
class GameExitAdvPoint;
struct GameExitAdvPointDefaultTypeInternal;
extern GameExitAdvPointDefaultTypeInternal _GameExitAdvPoint_default_instance_;
class GameExitExpPoint;
struct GameExitExpPointDefaultTypeInternal;
extern GameExitExpPointDefaultTypeInternal _GameExitExpPoint_default_instance_;
class GameFloorMatchMaking_UserInfo;
struct GameFloorMatchMaking_UserInfoDefaultTypeInternal;
extern GameFloorMatchMaking_UserInfoDefaultTypeInternal _GameFloorMatchMaking_UserInfo_default_instance_;
class GameFloorMatchMaking_UserInfoResponse;
struct GameFloorMatchMaking_UserInfoResponseDefaultTypeInternal;
extern GameFloorMatchMaking_UserInfoResponseDefaultTypeInternal _GameFloorMatchMaking_UserInfoResponse_default_instance_;
class GameResultInfo;
struct GameResultInfoDefaultTypeInternal;
extern GameResultInfoDefaultTypeInternal _GameResultInfo_default_instance_;
class Killlog;
struct KilllogDefaultTypeInternal;
extern KilllogDefaultTypeInternal _Killlog_default_instance_;
class Location;
struct LocationDefaultTypeInternal;
extern LocationDefaultTypeInternal _Location_default_instance_;
class MonsterKillLog;
struct MonsterKillLogDefaultTypeInternal;
extern MonsterKillLogDefaultTypeInternal _MonsterKillLog_default_instance_;
class NewItemLog;
struct NewItemLogDefaultTypeInternal;
extern NewItemLogDefaultTypeInternal _NewItemLog_default_instance_;
class S2C_BanCheck_Hardware_POST_Response;
struct S2C_BanCheck_Hardware_POST_ResponseDefaultTypeInternal;
extern S2C_BanCheck_Hardware_POST_ResponseDefaultTypeInternal _S2C_BanCheck_Hardware_POST_Response_default_instance_;
class S2C_FloorMatchMaking_POST_Response;
struct S2C_FloorMatchMaking_POST_ResponseDefaultTypeInternal;
extern S2C_FloorMatchMaking_POST_ResponseDefaultTypeInternal _S2C_FloorMatchMaking_POST_Response_default_instance_;
class S2C_GameCharacterInfo_Json;
struct S2C_GameCharacterInfo_JsonDefaultTypeInternal;
extern S2C_GameCharacterInfo_JsonDefaultTypeInternal _S2C_GameCharacterInfo_Json_default_instance_;
class S2C_GameDown_UserParty_GET;
struct S2C_GameDown_UserParty_GETDefaultTypeInternal;
extern S2C_GameDown_UserParty_GETDefaultTypeInternal _S2C_GameDown_UserParty_GET_default_instance_;
class S2C_GameEnterUser_Json;
struct S2C_GameEnterUser_JsonDefaultTypeInternal;
extern S2C_GameEnterUser_JsonDefaultTypeInternal _S2C_GameEnterUser_Json_default_instance_;
class S2C_GameFileDB_GET;
struct S2C_GameFileDB_GETDefaultTypeInternal;
extern S2C_GameFileDB_GETDefaultTypeInternal _S2C_GameFileDB_GET_default_instance_;
class S2C_GamePolicy_GET;
struct S2C_GamePolicy_GETDefaultTypeInternal;
extern S2C_GamePolicy_GETDefaultTypeInternal _S2C_GamePolicy_GET_default_instance_;
class S2C_GameSpectator_Check_Json;
struct S2C_GameSpectator_Check_JsonDefaultTypeInternal;
extern S2C_GameSpectator_Check_JsonDefaultTypeInternal _S2C_GameSpectator_Check_Json_default_instance_;
class S2C_GameStartServer_Json;
struct S2C_GameStartServer_JsonDefaultTypeInternal;
extern S2C_GameStartServer_JsonDefaultTypeInternal _S2C_GameStartServer_Json_default_instance_;
class S2C_UserReport_POST_Response;
struct S2C_UserReport_POST_ResponseDefaultTypeInternal;
extern S2C_UserReport_POST_ResponseDefaultTypeInternal _S2C_UserReport_POST_Response_default_instance_;
class SGameQuestContentInfo;
struct SGameQuestContentInfoDefaultTypeInternal;
extern SGameQuestContentInfoDefaultTypeInternal _SGameQuestContentInfo_default_instance_;
class SGameQuestInfo;
struct SGameQuestInfoDefaultTypeInternal;
extern SGameQuestInfoDefaultTypeInternal _SGameQuestInfo_default_instance_;
class SMusic_Floor;
struct SMusic_FloorDefaultTypeInternal;
extern SMusic_FloorDefaultTypeInternal _SMusic_Floor_default_instance_;
class SRankGameUserInfo;
struct SRankGameUserInfoDefaultTypeInternal;
extern SRankGameUserInfoDefaultTypeInternal _SRankGameUserInfo_default_instance_;
class SShapeShift_Floor;
struct SShapeShift_FloorDefaultTypeInternal;
extern SShapeShift_FloorDefaultTypeInternal _SShapeShift_Floor_default_instance_;
class SSkill_Floor;
struct SSkill_FloorDefaultTypeInternal;
extern SSkill_FloorDefaultTypeInternal _SSkill_Floor_default_instance_;
class SSpell_Floor;
struct SSpell_FloorDefaultTypeInternal;
extern SSpell_FloorDefaultTypeInternal _SSpell_Floor_default_instance_;
}  // namespace Packet
}  // namespace DC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace DC {
namespace Packet {
enum C2S_GameExitUser_POST_ESCAPE : int {
  C2S_GameExitUser_POST_ESCAPE_NONE = 0,
  C2S_GameExitUser_POST_ESCAPE_SUCCESS = 1,
  C2S_GameExitUser_POST_ESCAPE_FAIL = 2,
  C2S_GameExitUser_POST_ESCAPE_C2S_GameExitUser_POST_ESCAPE_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  C2S_GameExitUser_POST_ESCAPE_C2S_GameExitUser_POST_ESCAPE_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool C2S_GameExitUser_POST_ESCAPE_IsValid(int value);
extern const uint32_t C2S_GameExitUser_POST_ESCAPE_internal_data_[];
constexpr C2S_GameExitUser_POST_ESCAPE C2S_GameExitUser_POST_ESCAPE_ESCAPE_MIN = static_cast<C2S_GameExitUser_POST_ESCAPE>(0);
constexpr C2S_GameExitUser_POST_ESCAPE C2S_GameExitUser_POST_ESCAPE_ESCAPE_MAX = static_cast<C2S_GameExitUser_POST_ESCAPE>(2);
constexpr int C2S_GameExitUser_POST_ESCAPE_ESCAPE_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
C2S_GameExitUser_POST_ESCAPE_descriptor();
template <typename T>
const std::string& C2S_GameExitUser_POST_ESCAPE_Name(T value) {
  static_assert(std::is_same<T, C2S_GameExitUser_POST_ESCAPE>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ESCAPE_Name().");
  return C2S_GameExitUser_POST_ESCAPE_Name(static_cast<C2S_GameExitUser_POST_ESCAPE>(value));
}
template <>
inline const std::string& C2S_GameExitUser_POST_ESCAPE_Name(C2S_GameExitUser_POST_ESCAPE value) {
  return ::google::protobuf::internal::NameOfDenseEnum<C2S_GameExitUser_POST_ESCAPE_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool C2S_GameExitUser_POST_ESCAPE_Parse(absl::string_view name, C2S_GameExitUser_POST_ESCAPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<C2S_GameExitUser_POST_ESCAPE>(
      C2S_GameExitUser_POST_ESCAPE_descriptor(), name, value);
}
enum S2C_GameStartServer_Json_MATCH_MAKE : int {
  S2C_GameStartServer_Json_MATCH_MAKE_NONE = 0,
  S2C_GameStartServer_Json_MATCH_MAKE_NORMAL = 1,
  S2C_GameStartServer_Json_MATCH_MAKE_FLOOR = 2,
  S2C_GameStartServer_Json_MATCH_MAKE_S2C_GameStartServer_Json_MATCH_MAKE_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  S2C_GameStartServer_Json_MATCH_MAKE_S2C_GameStartServer_Json_MATCH_MAKE_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool S2C_GameStartServer_Json_MATCH_MAKE_IsValid(int value);
extern const uint32_t S2C_GameStartServer_Json_MATCH_MAKE_internal_data_[];
constexpr S2C_GameStartServer_Json_MATCH_MAKE S2C_GameStartServer_Json_MATCH_MAKE_MATCH_MAKE_MIN = static_cast<S2C_GameStartServer_Json_MATCH_MAKE>(0);
constexpr S2C_GameStartServer_Json_MATCH_MAKE S2C_GameStartServer_Json_MATCH_MAKE_MATCH_MAKE_MAX = static_cast<S2C_GameStartServer_Json_MATCH_MAKE>(2);
constexpr int S2C_GameStartServer_Json_MATCH_MAKE_MATCH_MAKE_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
S2C_GameStartServer_Json_MATCH_MAKE_descriptor();
template <typename T>
const std::string& S2C_GameStartServer_Json_MATCH_MAKE_Name(T value) {
  static_assert(std::is_same<T, S2C_GameStartServer_Json_MATCH_MAKE>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MATCH_MAKE_Name().");
  return S2C_GameStartServer_Json_MATCH_MAKE_Name(static_cast<S2C_GameStartServer_Json_MATCH_MAKE>(value));
}
template <>
inline const std::string& S2C_GameStartServer_Json_MATCH_MAKE_Name(S2C_GameStartServer_Json_MATCH_MAKE value) {
  return ::google::protobuf::internal::NameOfDenseEnum<S2C_GameStartServer_Json_MATCH_MAKE_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool S2C_GameStartServer_Json_MATCH_MAKE_Parse(absl::string_view name, S2C_GameStartServer_Json_MATCH_MAKE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S2C_GameStartServer_Json_MATCH_MAKE>(
      S2C_GameStartServer_Json_MATCH_MAKE_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SRankGameUserInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SRankGameUserInfo) */ {
 public:
  inline SRankGameUserInfo() : SRankGameUserInfo(nullptr) {}
  ~SRankGameUserInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SRankGameUserInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline SRankGameUserInfo(const SRankGameUserInfo& from) : SRankGameUserInfo(nullptr, from) {}
  inline SRankGameUserInfo(SRankGameUserInfo&& from) noexcept
      : SRankGameUserInfo(nullptr, std::move(from)) {}
  inline SRankGameUserInfo& operator=(const SRankGameUserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRankGameUserInfo& operator=(SRankGameUserInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SRankGameUserInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const SRankGameUserInfo* internal_default_instance() {
    return reinterpret_cast<const SRankGameUserInfo*>(
        &_SRankGameUserInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(SRankGameUserInfo& a, SRankGameUserInfo& b) { a.Swap(&b); }
  inline void Swap(SRankGameUserInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SRankGameUserInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SRankGameUserInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SRankGameUserInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SRankGameUserInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SRankGameUserInfo& from) { SRankGameUserInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SRankGameUserInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SRankGameUserInfo"; }

 protected:
  explicit SRankGameUserInfo(::google::protobuf::Arena* arena);
  SRankGameUserInfo(::google::protobuf::Arena* arena, const SRankGameUserInfo& from);
  SRankGameUserInfo(::google::protobuf::Arena* arena, SRankGameUserInfo&& from) noexcept
      : SRankGameUserInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRankIdFieldNumber = 1,
    kCurrentPointFieldNumber = 2,
    kNeedPointFieldNumber = 3,
    kCurrentTotalPointFieldNumber = 4,
  };
  // string rankId = 1;
  void clear_rankid() ;
  const std::string& rankid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rankid(Arg_&& arg, Args_... args);
  std::string* mutable_rankid();
  PROTOBUF_NODISCARD std::string* release_rankid();
  void set_allocated_rankid(std::string* value);

  private:
  const std::string& _internal_rankid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rankid(
      const std::string& value);
  std::string* _internal_mutable_rankid();

  public:
  // uint32 currentPoint = 2;
  void clear_currentpoint() ;
  ::uint32_t currentpoint() const;
  void set_currentpoint(::uint32_t value);

  private:
  ::uint32_t _internal_currentpoint() const;
  void _internal_set_currentpoint(::uint32_t value);

  public:
  // uint32 needPoint = 3;
  void clear_needpoint() ;
  ::uint32_t needpoint() const;
  void set_needpoint(::uint32_t value);

  private:
  ::uint32_t _internal_needpoint() const;
  void _internal_set_needpoint(::uint32_t value);

  public:
  // uint32 currentTotalPoint = 4;
  void clear_currenttotalpoint() ;
  ::uint32_t currenttotalpoint() const;
  void set_currenttotalpoint(::uint32_t value);

  private:
  ::uint32_t _internal_currenttotalpoint() const;
  void _internal_set_currenttotalpoint(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SRankGameUserInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SRankGameUserInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SRankGameUserInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr rankid_;
    ::uint32_t currentpoint_;
    ::uint32_t needpoint_;
    ::uint32_t currenttotalpoint_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class SGameQuestContentInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SGameQuestContentInfo) */ {
 public:
  inline SGameQuestContentInfo() : SGameQuestContentInfo(nullptr) {}
  ~SGameQuestContentInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SGameQuestContentInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline SGameQuestContentInfo(const SGameQuestContentInfo& from) : SGameQuestContentInfo(nullptr, from) {}
  inline SGameQuestContentInfo(SGameQuestContentInfo&& from) noexcept
      : SGameQuestContentInfo(nullptr, std::move(from)) {}
  inline SGameQuestContentInfo& operator=(const SGameQuestContentInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SGameQuestContentInfo& operator=(SGameQuestContentInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SGameQuestContentInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const SGameQuestContentInfo* internal_default_instance() {
    return reinterpret_cast<const SGameQuestContentInfo*>(
        &_SGameQuestContentInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SGameQuestContentInfo& a, SGameQuestContentInfo& b) { a.Swap(&b); }
  inline void Swap(SGameQuestContentInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SGameQuestContentInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SGameQuestContentInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SGameQuestContentInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SGameQuestContentInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SGameQuestContentInfo& from) { SGameQuestContentInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SGameQuestContentInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SGameQuestContentInfo"; }

 protected:
  explicit SGameQuestContentInfo(::google::protobuf::Arena* arena);
  SGameQuestContentInfo(::google::protobuf::Arena* arena, const SGameQuestContentInfo& from);
  SGameQuestContentInfo(::google::protobuf::Arena* arena, SGameQuestContentInfo&& from) noexcept
      : SGameQuestContentInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContentIdFieldNumber = 2,
    kContentValueFieldNumber = 3,
  };
  // string contentId = 2;
  void clear_contentid() ;
  const std::string& contentid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contentid(Arg_&& arg, Args_... args);
  std::string* mutable_contentid();
  PROTOBUF_NODISCARD std::string* release_contentid();
  void set_allocated_contentid(std::string* value);

  private:
  const std::string& _internal_contentid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contentid(
      const std::string& value);
  std::string* _internal_mutable_contentid();

  public:
  // int32 contentValue = 3;
  void clear_contentvalue() ;
  ::int32_t contentvalue() const;
  void set_contentvalue(::int32_t value);

  private:
  ::int32_t _internal_contentvalue() const;
  void _internal_set_contentvalue(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SGameQuestContentInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      49, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SGameQuestContentInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SGameQuestContentInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr contentid_;
    ::int32_t contentvalue_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class S2C_UserReport_POST_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.S2C_UserReport_POST_Response) */ {
 public:
  inline S2C_UserReport_POST_Response() : S2C_UserReport_POST_Response(nullptr) {}
  ~S2C_UserReport_POST_Response() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S2C_UserReport_POST_Response(
      ::google::protobuf::internal::ConstantInitialized);

  inline S2C_UserReport_POST_Response(const S2C_UserReport_POST_Response& from) : S2C_UserReport_POST_Response(nullptr, from) {}
  inline S2C_UserReport_POST_Response(S2C_UserReport_POST_Response&& from) noexcept
      : S2C_UserReport_POST_Response(nullptr, std::move(from)) {}
  inline S2C_UserReport_POST_Response& operator=(const S2C_UserReport_POST_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline S2C_UserReport_POST_Response& operator=(S2C_UserReport_POST_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S2C_UserReport_POST_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const S2C_UserReport_POST_Response* internal_default_instance() {
    return reinterpret_cast<const S2C_UserReport_POST_Response*>(
        &_S2C_UserReport_POST_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(S2C_UserReport_POST_Response& a, S2C_UserReport_POST_Response& b) { a.Swap(&b); }
  inline void Swap(S2C_UserReport_POST_Response* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S2C_UserReport_POST_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S2C_UserReport_POST_Response* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<S2C_UserReport_POST_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S2C_UserReport_POST_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S2C_UserReport_POST_Response& from) { S2C_UserReport_POST_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(S2C_UserReport_POST_Response* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.S2C_UserReport_POST_Response"; }

 protected:
  explicit S2C_UserReport_POST_Response(::google::protobuf::Arena* arena);
  S2C_UserReport_POST_Response(::google::protobuf::Arena* arena, const S2C_UserReport_POST_Response& from);
  S2C_UserReport_POST_Response(::google::protobuf::Arena* arena, S2C_UserReport_POST_Response&& from) noexcept
      : S2C_UserReport_POST_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReportAccountIdFieldNumber = 1,
    kTargetAccountIdFieldNumber = 2,
    kReportKeyFieldNumber = 3,
    kCategoryFieldNumber = 4,
  };
  // string reportAccountId = 1;
  void clear_reportaccountid() ;
  const std::string& reportaccountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reportaccountid(Arg_&& arg, Args_... args);
  std::string* mutable_reportaccountid();
  PROTOBUF_NODISCARD std::string* release_reportaccountid();
  void set_allocated_reportaccountid(std::string* value);

  private:
  const std::string& _internal_reportaccountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reportaccountid(
      const std::string& value);
  std::string* _internal_mutable_reportaccountid();

  public:
  // string targetAccountId = 2;
  void clear_targetaccountid() ;
  const std::string& targetaccountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_targetaccountid(Arg_&& arg, Args_... args);
  std::string* mutable_targetaccountid();
  PROTOBUF_NODISCARD std::string* release_targetaccountid();
  void set_allocated_targetaccountid(std::string* value);

  private:
  const std::string& _internal_targetaccountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_targetaccountid(
      const std::string& value);
  std::string* _internal_mutable_targetaccountid();

  public:
  // string reportKey = 3;
  void clear_reportkey() ;
  const std::string& reportkey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reportkey(Arg_&& arg, Args_... args);
  std::string* mutable_reportkey();
  PROTOBUF_NODISCARD std::string* release_reportkey();
  void set_allocated_reportkey(std::string* value);

  private:
  const std::string& _internal_reportkey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reportkey(
      const std::string& value);
  std::string* _internal_mutable_reportkey();

  public:
  // uint32 category = 4;
  void clear_category() ;
  ::uint32_t category() const;
  void set_category(::uint32_t value);

  private:
  ::uint32_t _internal_category() const;
  void _internal_set_category(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.S2C_UserReport_POST_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      86, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_S2C_UserReport_POST_Response_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S2C_UserReport_POST_Response& from_msg);
    ::google::protobuf::internal::ArenaStringPtr reportaccountid_;
    ::google::protobuf::internal::ArenaStringPtr targetaccountid_;
    ::google::protobuf::internal::ArenaStringPtr reportkey_;
    ::uint32_t category_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class S2C_GameStartServer_Json final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.S2C_GameStartServer_Json) */ {
 public:
  inline S2C_GameStartServer_Json() : S2C_GameStartServer_Json(nullptr) {}
  ~S2C_GameStartServer_Json() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S2C_GameStartServer_Json(
      ::google::protobuf::internal::ConstantInitialized);

  inline S2C_GameStartServer_Json(const S2C_GameStartServer_Json& from) : S2C_GameStartServer_Json(nullptr, from) {}
  inline S2C_GameStartServer_Json(S2C_GameStartServer_Json&& from) noexcept
      : S2C_GameStartServer_Json(nullptr, std::move(from)) {}
  inline S2C_GameStartServer_Json& operator=(const S2C_GameStartServer_Json& from) {
    CopyFrom(from);
    return *this;
  }
  inline S2C_GameStartServer_Json& operator=(S2C_GameStartServer_Json&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S2C_GameStartServer_Json& default_instance() {
    return *internal_default_instance();
  }
  static inline const S2C_GameStartServer_Json* internal_default_instance() {
    return reinterpret_cast<const S2C_GameStartServer_Json*>(
        &_S2C_GameStartServer_Json_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(S2C_GameStartServer_Json& a, S2C_GameStartServer_Json& b) { a.Swap(&b); }
  inline void Swap(S2C_GameStartServer_Json* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S2C_GameStartServer_Json* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S2C_GameStartServer_Json* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<S2C_GameStartServer_Json>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S2C_GameStartServer_Json& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S2C_GameStartServer_Json& from) { S2C_GameStartServer_Json::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(S2C_GameStartServer_Json* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.S2C_GameStartServer_Json"; }

 protected:
  explicit S2C_GameStartServer_Json(::google::protobuf::Arena* arena);
  S2C_GameStartServer_Json(::google::protobuf::Arena* arena, const S2C_GameStartServer_Json& from);
  S2C_GameStartServer_Json(::google::protobuf::Arena* arena, S2C_GameStartServer_Json&& from) noexcept
      : S2C_GameStartServer_Json(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using MATCH_MAKE = S2C_GameStartServer_Json_MATCH_MAKE;
  static constexpr MATCH_MAKE NONE = S2C_GameStartServer_Json_MATCH_MAKE_NONE;
  static constexpr MATCH_MAKE NORMAL = S2C_GameStartServer_Json_MATCH_MAKE_NORMAL;
  static constexpr MATCH_MAKE FLOOR = S2C_GameStartServer_Json_MATCH_MAKE_FLOOR;
  static inline bool MATCH_MAKE_IsValid(int value) {
    return S2C_GameStartServer_Json_MATCH_MAKE_IsValid(value);
  }
  static constexpr MATCH_MAKE MATCH_MAKE_MIN = S2C_GameStartServer_Json_MATCH_MAKE_MATCH_MAKE_MIN;
  static constexpr MATCH_MAKE MATCH_MAKE_MAX = S2C_GameStartServer_Json_MATCH_MAKE_MATCH_MAKE_MAX;
  static constexpr int MATCH_MAKE_ARRAYSIZE = S2C_GameStartServer_Json_MATCH_MAKE_MATCH_MAKE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* MATCH_MAKE_descriptor() {
    return S2C_GameStartServer_Json_MATCH_MAKE_descriptor();
  }
  template <typename T>
  static inline const std::string& MATCH_MAKE_Name(T value) {
    return S2C_GameStartServer_Json_MATCH_MAKE_Name(value);
  }
  static inline bool MATCH_MAKE_Parse(absl::string_view name, MATCH_MAKE* value) {
    return S2C_GameStartServer_Json_MATCH_MAKE_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kDungeonMapIdsFieldNumber = 5,
    kRestUrlFieldNumber = 1,
    kRegionFieldNumber = 19,
    kFleetIdFieldNumber = 20,
    kDungeonIdTagFieldNumber = 21,
    kCloudScanUrlFieldNumber = 22,
    kServerLocateFieldNumber = 23,
    kMatchingQueueTypeFieldNumber = 24,
    kGameIdFieldNumber = 2,
    kMaxGameUserFieldNumber = 3,
    kWaitTimeSecFieldNumber = 4,
    kGameHackPolicyFieldNumber = 6,
    kValidPlayerMeleeAttackRangeFieldNumber = 7,
    kGameTypeFieldNumber = 8,
    kShippingLogOnOffPolicyFieldNumber = 9,
    kShippingLogLevelPolicyFieldNumber = 10,
    kGmOnOffPolicyFieldNumber = 11,
    kShippingLogIronShieldOnOffPolicyFieldNumber = 12,
    kShippingLogIronShieldLevelPolicyFieldNumber = 13,
    kCurrentFloorFieldNumber = 16,
    kFloorMatchmakingOnOffFieldNumber = 17,
    kMatchmakingTypeFieldNumber = 18,
    kBaseCampRemovedPolicyFieldNumber = 25,
    kNumReservedUsersFieldNumber = 26,
    kReservedUserWaitTimeoutSecFieldNumber = 27,
  };
  // repeated string dungeonMapIds = 5;
  int dungeonmapids_size() const;
  private:
  int _internal_dungeonmapids_size() const;

  public:
  void clear_dungeonmapids() ;
  const std::string& dungeonmapids(int index) const;
  std::string* mutable_dungeonmapids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dungeonmapids(int index, Arg_&& value, Args_... args);
  std::string* add_dungeonmapids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_dungeonmapids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& dungeonmapids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_dungeonmapids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_dungeonmapids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_dungeonmapids();

  public:
  // string restUrl = 1;
  void clear_resturl() ;
  const std::string& resturl() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resturl(Arg_&& arg, Args_... args);
  std::string* mutable_resturl();
  PROTOBUF_NODISCARD std::string* release_resturl();
  void set_allocated_resturl(std::string* value);

  private:
  const std::string& _internal_resturl() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resturl(
      const std::string& value);
  std::string* _internal_mutable_resturl();

  public:
  // string region = 19;
  void clear_region() ;
  const std::string& region() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_region(Arg_&& arg, Args_... args);
  std::string* mutable_region();
  PROTOBUF_NODISCARD std::string* release_region();
  void set_allocated_region(std::string* value);

  private:
  const std::string& _internal_region() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_region(
      const std::string& value);
  std::string* _internal_mutable_region();

  public:
  // string fleetId = 20;
  void clear_fleetid() ;
  const std::string& fleetid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fleetid(Arg_&& arg, Args_... args);
  std::string* mutable_fleetid();
  PROTOBUF_NODISCARD std::string* release_fleetid();
  void set_allocated_fleetid(std::string* value);

  private:
  const std::string& _internal_fleetid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fleetid(
      const std::string& value);
  std::string* _internal_mutable_fleetid();

  public:
  // string dungeonIdTag = 21;
  void clear_dungeonidtag() ;
  const std::string& dungeonidtag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dungeonidtag(Arg_&& arg, Args_... args);
  std::string* mutable_dungeonidtag();
  PROTOBUF_NODISCARD std::string* release_dungeonidtag();
  void set_allocated_dungeonidtag(std::string* value);

  private:
  const std::string& _internal_dungeonidtag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dungeonidtag(
      const std::string& value);
  std::string* _internal_mutable_dungeonidtag();

  public:
  // string cloudScanUrl = 22;
  void clear_cloudscanurl() ;
  const std::string& cloudscanurl() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cloudscanurl(Arg_&& arg, Args_... args);
  std::string* mutable_cloudscanurl();
  PROTOBUF_NODISCARD std::string* release_cloudscanurl();
  void set_allocated_cloudscanurl(std::string* value);

  private:
  const std::string& _internal_cloudscanurl() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cloudscanurl(
      const std::string& value);
  std::string* _internal_mutable_cloudscanurl();

  public:
  // string serverLocate = 23;
  void clear_serverlocate() ;
  const std::string& serverlocate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_serverlocate(Arg_&& arg, Args_... args);
  std::string* mutable_serverlocate();
  PROTOBUF_NODISCARD std::string* release_serverlocate();
  void set_allocated_serverlocate(std::string* value);

  private:
  const std::string& _internal_serverlocate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_serverlocate(
      const std::string& value);
  std::string* _internal_mutable_serverlocate();

  public:
  // string matchingQueueType = 24;
  void clear_matchingqueuetype() ;
  const std::string& matchingqueuetype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_matchingqueuetype(Arg_&& arg, Args_... args);
  std::string* mutable_matchingqueuetype();
  PROTOBUF_NODISCARD std::string* release_matchingqueuetype();
  void set_allocated_matchingqueuetype(std::string* value);

  private:
  const std::string& _internal_matchingqueuetype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_matchingqueuetype(
      const std::string& value);
  std::string* _internal_mutable_matchingqueuetype();

  public:
  // uint64 gameId = 2;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // uint32 maxGameUser = 3;
  void clear_maxgameuser() ;
  ::uint32_t maxgameuser() const;
  void set_maxgameuser(::uint32_t value);

  private:
  ::uint32_t _internal_maxgameuser() const;
  void _internal_set_maxgameuser(::uint32_t value);

  public:
  // uint32 waitTimeSec = 4;
  void clear_waittimesec() ;
  ::uint32_t waittimesec() const;
  void set_waittimesec(::uint32_t value);

  private:
  ::uint32_t _internal_waittimesec() const;
  void _internal_set_waittimesec(::uint32_t value);

  public:
  // uint32 gameHackPolicy = 6;
  void clear_gamehackpolicy() ;
  ::uint32_t gamehackpolicy() const;
  void set_gamehackpolicy(::uint32_t value);

  private:
  ::uint32_t _internal_gamehackpolicy() const;
  void _internal_set_gamehackpolicy(::uint32_t value);

  public:
  // uint32 validPlayerMeleeAttackRange = 7;
  void clear_validplayermeleeattackrange() ;
  ::uint32_t validplayermeleeattackrange() const;
  void set_validplayermeleeattackrange(::uint32_t value);

  private:
  ::uint32_t _internal_validplayermeleeattackrange() const;
  void _internal_set_validplayermeleeattackrange(::uint32_t value);

  public:
  // uint32 gameType = 8;
  void clear_gametype() ;
  ::uint32_t gametype() const;
  void set_gametype(::uint32_t value);

  private:
  ::uint32_t _internal_gametype() const;
  void _internal_set_gametype(::uint32_t value);

  public:
  // uint32 shippingLogOnOffPolicy = 9;
  void clear_shippinglogonoffpolicy() ;
  ::uint32_t shippinglogonoffpolicy() const;
  void set_shippinglogonoffpolicy(::uint32_t value);

  private:
  ::uint32_t _internal_shippinglogonoffpolicy() const;
  void _internal_set_shippinglogonoffpolicy(::uint32_t value);

  public:
  // uint32 shippingLogLevelPolicy = 10;
  void clear_shippingloglevelpolicy() ;
  ::uint32_t shippingloglevelpolicy() const;
  void set_shippingloglevelpolicy(::uint32_t value);

  private:
  ::uint32_t _internal_shippingloglevelpolicy() const;
  void _internal_set_shippingloglevelpolicy(::uint32_t value);

  public:
  // uint32 gmOnOffPolicy = 11;
  void clear_gmonoffpolicy() ;
  ::uint32_t gmonoffpolicy() const;
  void set_gmonoffpolicy(::uint32_t value);

  private:
  ::uint32_t _internal_gmonoffpolicy() const;
  void _internal_set_gmonoffpolicy(::uint32_t value);

  public:
  // uint32 shippingLogIronShieldOnOffPolicy = 12;
  void clear_shippinglogironshieldonoffpolicy() ;
  ::uint32_t shippinglogironshieldonoffpolicy() const;
  void set_shippinglogironshieldonoffpolicy(::uint32_t value);

  private:
  ::uint32_t _internal_shippinglogironshieldonoffpolicy() const;
  void _internal_set_shippinglogironshieldonoffpolicy(::uint32_t value);

  public:
  // uint32 shippingLogIronShieldLevelPolicy = 13;
  void clear_shippinglogironshieldlevelpolicy() ;
  ::uint32_t shippinglogironshieldlevelpolicy() const;
  void set_shippinglogironshieldlevelpolicy(::uint32_t value);

  private:
  ::uint32_t _internal_shippinglogironshieldlevelpolicy() const;
  void _internal_set_shippinglogironshieldlevelpolicy(::uint32_t value);

  public:
  // uint32 currentFloor = 16;
  void clear_currentfloor() ;
  ::uint32_t currentfloor() const;
  void set_currentfloor(::uint32_t value);

  private:
  ::uint32_t _internal_currentfloor() const;
  void _internal_set_currentfloor(::uint32_t value);

  public:
  // uint32 floorMatchmakingOnOff = 17;
  void clear_floormatchmakingonoff() ;
  ::uint32_t floormatchmakingonoff() const;
  void set_floormatchmakingonoff(::uint32_t value);

  private:
  ::uint32_t _internal_floormatchmakingonoff() const;
  void _internal_set_floormatchmakingonoff(::uint32_t value);

  public:
  // uint32 matchmakingType = 18;
  void clear_matchmakingtype() ;
  ::uint32_t matchmakingtype() const;
  void set_matchmakingtype(::uint32_t value);

  private:
  ::uint32_t _internal_matchmakingtype() const;
  void _internal_set_matchmakingtype(::uint32_t value);

  public:
  // uint32 baseCampRemovedPolicy = 25;
  void clear_basecampremovedpolicy() ;
  ::uint32_t basecampremovedpolicy() const;
  void set_basecampremovedpolicy(::uint32_t value);

  private:
  ::uint32_t _internal_basecampremovedpolicy() const;
  void _internal_set_basecampremovedpolicy(::uint32_t value);

  public:
  // uint32 numReservedUsers = 26;
  void clear_numreservedusers() ;
  ::uint32_t numreservedusers() const;
  void set_numreservedusers(::uint32_t value);

  private:
  ::uint32_t _internal_numreservedusers() const;
  void _internal_set_numreservedusers(::uint32_t value);

  public:
  // uint32 reservedUserWaitTimeoutSec = 27;
  void clear_reserveduserwaittimeoutsec() ;
  ::uint32_t reserveduserwaittimeoutsec() const;
  void set_reserveduserwaittimeoutsec(::uint32_t value);

  private:
  ::uint32_t _internal_reserveduserwaittimeoutsec() const;
  void _internal_set_reserveduserwaittimeoutsec(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.S2C_GameStartServer_Json)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 25, 0,
      153, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_S2C_GameStartServer_Json_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S2C_GameStartServer_Json& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> dungeonmapids_;
    ::google::protobuf::internal::ArenaStringPtr resturl_;
    ::google::protobuf::internal::ArenaStringPtr region_;
    ::google::protobuf::internal::ArenaStringPtr fleetid_;
    ::google::protobuf::internal::ArenaStringPtr dungeonidtag_;
    ::google::protobuf::internal::ArenaStringPtr cloudscanurl_;
    ::google::protobuf::internal::ArenaStringPtr serverlocate_;
    ::google::protobuf::internal::ArenaStringPtr matchingqueuetype_;
    ::uint64_t gameid_;
    ::uint32_t maxgameuser_;
    ::uint32_t waittimesec_;
    ::uint32_t gamehackpolicy_;
    ::uint32_t validplayermeleeattackrange_;
    ::uint32_t gametype_;
    ::uint32_t shippinglogonoffpolicy_;
    ::uint32_t shippingloglevelpolicy_;
    ::uint32_t gmonoffpolicy_;
    ::uint32_t shippinglogironshieldonoffpolicy_;
    ::uint32_t shippinglogironshieldlevelpolicy_;
    ::uint32_t currentfloor_;
    ::uint32_t floormatchmakingonoff_;
    ::uint32_t matchmakingtype_;
    ::uint32_t basecampremovedpolicy_;
    ::uint32_t numreservedusers_;
    ::uint32_t reserveduserwaittimeoutsec_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class S2C_GameSpectator_Check_Json final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.S2C_GameSpectator_Check_Json) */ {
 public:
  inline S2C_GameSpectator_Check_Json() : S2C_GameSpectator_Check_Json(nullptr) {}
  ~S2C_GameSpectator_Check_Json() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S2C_GameSpectator_Check_Json(
      ::google::protobuf::internal::ConstantInitialized);

  inline S2C_GameSpectator_Check_Json(const S2C_GameSpectator_Check_Json& from) : S2C_GameSpectator_Check_Json(nullptr, from) {}
  inline S2C_GameSpectator_Check_Json(S2C_GameSpectator_Check_Json&& from) noexcept
      : S2C_GameSpectator_Check_Json(nullptr, std::move(from)) {}
  inline S2C_GameSpectator_Check_Json& operator=(const S2C_GameSpectator_Check_Json& from) {
    CopyFrom(from);
    return *this;
  }
  inline S2C_GameSpectator_Check_Json& operator=(S2C_GameSpectator_Check_Json&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S2C_GameSpectator_Check_Json& default_instance() {
    return *internal_default_instance();
  }
  static inline const S2C_GameSpectator_Check_Json* internal_default_instance() {
    return reinterpret_cast<const S2C_GameSpectator_Check_Json*>(
        &_S2C_GameSpectator_Check_Json_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(S2C_GameSpectator_Check_Json& a, S2C_GameSpectator_Check_Json& b) { a.Swap(&b); }
  inline void Swap(S2C_GameSpectator_Check_Json* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S2C_GameSpectator_Check_Json* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S2C_GameSpectator_Check_Json* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<S2C_GameSpectator_Check_Json>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S2C_GameSpectator_Check_Json& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S2C_GameSpectator_Check_Json& from) { S2C_GameSpectator_Check_Json::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(S2C_GameSpectator_Check_Json* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.S2C_GameSpectator_Check_Json"; }

 protected:
  explicit S2C_GameSpectator_Check_Json(::google::protobuf::Arena* arena);
  S2C_GameSpectator_Check_Json(::google::protobuf::Arena* arena, const S2C_GameSpectator_Check_Json& from);
  S2C_GameSpectator_Check_Json(::google::protobuf::Arena* arena, S2C_GameSpectator_Check_Json&& from) noexcept
      : S2C_GameSpectator_Check_Json(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsSuccessFieldNumber = 1,
  };
  // uint32 isSuccess = 1;
  void clear_issuccess() ;
  ::uint32_t issuccess() const;
  void set_issuccess(::uint32_t value);

  private:
  ::uint32_t _internal_issuccess() const;
  void _internal_set_issuccess(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.S2C_GameSpectator_Check_Json)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_S2C_GameSpectator_Check_Json_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S2C_GameSpectator_Check_Json& from_msg);
    ::uint32_t issuccess_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class S2C_GamePolicy_GET final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.S2C_GamePolicy_GET) */ {
 public:
  inline S2C_GamePolicy_GET() : S2C_GamePolicy_GET(nullptr) {}
  ~S2C_GamePolicy_GET() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S2C_GamePolicy_GET(
      ::google::protobuf::internal::ConstantInitialized);

  inline S2C_GamePolicy_GET(const S2C_GamePolicy_GET& from) : S2C_GamePolicy_GET(nullptr, from) {}
  inline S2C_GamePolicy_GET(S2C_GamePolicy_GET&& from) noexcept
      : S2C_GamePolicy_GET(nullptr, std::move(from)) {}
  inline S2C_GamePolicy_GET& operator=(const S2C_GamePolicy_GET& from) {
    CopyFrom(from);
    return *this;
  }
  inline S2C_GamePolicy_GET& operator=(S2C_GamePolicy_GET&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S2C_GamePolicy_GET& default_instance() {
    return *internal_default_instance();
  }
  static inline const S2C_GamePolicy_GET* internal_default_instance() {
    return reinterpret_cast<const S2C_GamePolicy_GET*>(
        &_S2C_GamePolicy_GET_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(S2C_GamePolicy_GET& a, S2C_GamePolicy_GET& b) { a.Swap(&b); }
  inline void Swap(S2C_GamePolicy_GET* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S2C_GamePolicy_GET* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S2C_GamePolicy_GET* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<S2C_GamePolicy_GET>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S2C_GamePolicy_GET& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S2C_GamePolicy_GET& from) { S2C_GamePolicy_GET::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(S2C_GamePolicy_GET* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.S2C_GamePolicy_GET"; }

 protected:
  explicit S2C_GamePolicy_GET(::google::protobuf::Arena* arena);
  S2C_GamePolicy_GET(::google::protobuf::Arena* arena, const S2C_GamePolicy_GET& from);
  S2C_GamePolicy_GET(::google::protobuf::Arena* arena, S2C_GamePolicy_GET&& from) noexcept
      : S2C_GamePolicy_GET(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAppHashFieldNumber = 1,
    kPolicyJsonFieldNumber = 2,
  };
  // repeated string appHash = 1;
  int apphash_size() const;
  private:
  int _internal_apphash_size() const;

  public:
  void clear_apphash() ;
  const std::string& apphash(int index) const;
  std::string* mutable_apphash(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_apphash(int index, Arg_&& value, Args_... args);
  std::string* add_apphash();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_apphash(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& apphash() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_apphash();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_apphash() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_apphash();

  public:
  // string policyJson = 2;
  void clear_policyjson() ;
  const std::string& policyjson() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_policyjson(Arg_&& arg, Args_... args);
  std::string* mutable_policyjson();
  PROTOBUF_NODISCARD std::string* release_policyjson();
  void set_allocated_policyjson(std::string* value);

  private:
  const std::string& _internal_policyjson() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_policyjson(
      const std::string& value);
  std::string* _internal_mutable_policyjson();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.S2C_GamePolicy_GET)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_S2C_GamePolicy_GET_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S2C_GamePolicy_GET& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> apphash_;
    ::google::protobuf::internal::ArenaStringPtr policyjson_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class S2C_GameFileDB_GET final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.S2C_GameFileDB_GET) */ {
 public:
  inline S2C_GameFileDB_GET() : S2C_GameFileDB_GET(nullptr) {}
  ~S2C_GameFileDB_GET() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S2C_GameFileDB_GET(
      ::google::protobuf::internal::ConstantInitialized);

  inline S2C_GameFileDB_GET(const S2C_GameFileDB_GET& from) : S2C_GameFileDB_GET(nullptr, from) {}
  inline S2C_GameFileDB_GET(S2C_GameFileDB_GET&& from) noexcept
      : S2C_GameFileDB_GET(nullptr, std::move(from)) {}
  inline S2C_GameFileDB_GET& operator=(const S2C_GameFileDB_GET& from) {
    CopyFrom(from);
    return *this;
  }
  inline S2C_GameFileDB_GET& operator=(S2C_GameFileDB_GET&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S2C_GameFileDB_GET& default_instance() {
    return *internal_default_instance();
  }
  static inline const S2C_GameFileDB_GET* internal_default_instance() {
    return reinterpret_cast<const S2C_GameFileDB_GET*>(
        &_S2C_GameFileDB_GET_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(S2C_GameFileDB_GET& a, S2C_GameFileDB_GET& b) { a.Swap(&b); }
  inline void Swap(S2C_GameFileDB_GET* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S2C_GameFileDB_GET* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S2C_GameFileDB_GET* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<S2C_GameFileDB_GET>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S2C_GameFileDB_GET& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S2C_GameFileDB_GET& from) { S2C_GameFileDB_GET::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(S2C_GameFileDB_GET* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.S2C_GameFileDB_GET"; }

 protected:
  explicit S2C_GameFileDB_GET(::google::protobuf::Arena* arena);
  S2C_GameFileDB_GET(::google::protobuf::Arena* arena, const S2C_GameFileDB_GET& from);
  S2C_GameFileDB_GET(::google::protobuf::Arena* arena, S2C_GameFileDB_GET&& from) noexcept
      : S2C_GameFileDB_GET(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileDBJsonFieldNumber = 1,
  };
  // string fileDBJson = 1;
  void clear_filedbjson() ;
  const std::string& filedbjson() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_filedbjson(Arg_&& arg, Args_... args);
  std::string* mutable_filedbjson();
  PROTOBUF_NODISCARD std::string* release_filedbjson();
  void set_allocated_filedbjson(std::string* value);

  private:
  const std::string& _internal_filedbjson() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_filedbjson(
      const std::string& value);
  std::string* _internal_mutable_filedbjson();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.S2C_GameFileDB_GET)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      47, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_S2C_GameFileDB_GET_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S2C_GameFileDB_GET& from_msg);
    ::google::protobuf::internal::ArenaStringPtr filedbjson_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class S2C_GameEnterUser_Json final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.S2C_GameEnterUser_Json) */ {
 public:
  inline S2C_GameEnterUser_Json() : S2C_GameEnterUser_Json(nullptr) {}
  ~S2C_GameEnterUser_Json() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S2C_GameEnterUser_Json(
      ::google::protobuf::internal::ConstantInitialized);

  inline S2C_GameEnterUser_Json(const S2C_GameEnterUser_Json& from) : S2C_GameEnterUser_Json(nullptr, from) {}
  inline S2C_GameEnterUser_Json(S2C_GameEnterUser_Json&& from) noexcept
      : S2C_GameEnterUser_Json(nullptr, std::move(from)) {}
  inline S2C_GameEnterUser_Json& operator=(const S2C_GameEnterUser_Json& from) {
    CopyFrom(from);
    return *this;
  }
  inline S2C_GameEnterUser_Json& operator=(S2C_GameEnterUser_Json&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S2C_GameEnterUser_Json& default_instance() {
    return *internal_default_instance();
  }
  static inline const S2C_GameEnterUser_Json* internal_default_instance() {
    return reinterpret_cast<const S2C_GameEnterUser_Json*>(
        &_S2C_GameEnterUser_Json_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(S2C_GameEnterUser_Json& a, S2C_GameEnterUser_Json& b) { a.Swap(&b); }
  inline void Swap(S2C_GameEnterUser_Json* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S2C_GameEnterUser_Json* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S2C_GameEnterUser_Json* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<S2C_GameEnterUser_Json>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S2C_GameEnterUser_Json& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S2C_GameEnterUser_Json& from) { S2C_GameEnterUser_Json::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(S2C_GameEnterUser_Json* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.S2C_GameEnterUser_Json"; }

 protected:
  explicit S2C_GameEnterUser_Json(::google::protobuf::Arena* arena);
  S2C_GameEnterUser_Json(::google::protobuf::Arena* arena, const S2C_GameEnterUser_Json& from);
  S2C_GameEnterUser_Json(::google::protobuf::Arena* arena, S2C_GameEnterUser_Json&& from) noexcept
      : S2C_GameEnterUser_Json(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRestUrlFieldNumber = 1,
    kNickNameFieldNumber = 2,
    kStreamingNickNameFieldNumber = 3,
    kCharacterClassFieldNumber = 4,
    kCharacterIdFieldNumber = 5,
    kPartyIdFieldNumber = 8,
    kGenderFieldNumber = 6,
    kLevelFieldNumber = 7,
    kKarmaRatingFieldNumber = 9,
  };
  // string restUrl = 1;
  void clear_resturl() ;
  const std::string& resturl() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resturl(Arg_&& arg, Args_... args);
  std::string* mutable_resturl();
  PROTOBUF_NODISCARD std::string* release_resturl();
  void set_allocated_resturl(std::string* value);

  private:
  const std::string& _internal_resturl() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resturl(
      const std::string& value);
  std::string* _internal_mutable_resturl();

  public:
  // bytes nickName = 2;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // bytes streamingNickName = 3;
  void clear_streamingnickname() ;
  const std::string& streamingnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_streamingnickname(Arg_&& arg, Args_... args);
  std::string* mutable_streamingnickname();
  PROTOBUF_NODISCARD std::string* release_streamingnickname();
  void set_allocated_streamingnickname(std::string* value);

  private:
  const std::string& _internal_streamingnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_streamingnickname(
      const std::string& value);
  std::string* _internal_mutable_streamingnickname();

  public:
  // string characterClass = 4;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // string characterId = 5;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string partyId = 8;
  void clear_partyid() ;
  const std::string& partyid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_partyid(Arg_&& arg, Args_... args);
  std::string* mutable_partyid();
  PROTOBUF_NODISCARD std::string* release_partyid();
  void set_allocated_partyid(std::string* value);

  private:
  const std::string& _internal_partyid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_partyid(
      const std::string& value);
  std::string* _internal_mutable_partyid();

  public:
  // uint32 gender = 6;
  void clear_gender() ;
  ::uint32_t gender() const;
  void set_gender(::uint32_t value);

  private:
  ::uint32_t _internal_gender() const;
  void _internal_set_gender(::uint32_t value);

  public:
  // uint32 level = 7;
  void clear_level() ;
  ::uint32_t level() const;
  void set_level(::uint32_t value);

  private:
  ::uint32_t _internal_level() const;
  void _internal_set_level(::uint32_t value);

  public:
  // int32 karmaRating = 9;
  void clear_karmarating() ;
  ::int32_t karmarating() const;
  void set_karmarating(::int32_t value);

  private:
  ::int32_t _internal_karmarating() const;
  void _internal_set_karmarating(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.S2C_GameEnterUser_Json)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      88, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_S2C_GameEnterUser_Json_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S2C_GameEnterUser_Json& from_msg);
    ::google::protobuf::internal::ArenaStringPtr resturl_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr streamingnickname_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr partyid_;
    ::uint32_t gender_;
    ::uint32_t level_;
    ::int32_t karmarating_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class S2C_BanCheck_Hardware_POST_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.S2C_BanCheck_Hardware_POST_Response) */ {
 public:
  inline S2C_BanCheck_Hardware_POST_Response() : S2C_BanCheck_Hardware_POST_Response(nullptr) {}
  ~S2C_BanCheck_Hardware_POST_Response() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S2C_BanCheck_Hardware_POST_Response(
      ::google::protobuf::internal::ConstantInitialized);

  inline S2C_BanCheck_Hardware_POST_Response(const S2C_BanCheck_Hardware_POST_Response& from) : S2C_BanCheck_Hardware_POST_Response(nullptr, from) {}
  inline S2C_BanCheck_Hardware_POST_Response(S2C_BanCheck_Hardware_POST_Response&& from) noexcept
      : S2C_BanCheck_Hardware_POST_Response(nullptr, std::move(from)) {}
  inline S2C_BanCheck_Hardware_POST_Response& operator=(const S2C_BanCheck_Hardware_POST_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline S2C_BanCheck_Hardware_POST_Response& operator=(S2C_BanCheck_Hardware_POST_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S2C_BanCheck_Hardware_POST_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const S2C_BanCheck_Hardware_POST_Response* internal_default_instance() {
    return reinterpret_cast<const S2C_BanCheck_Hardware_POST_Response*>(
        &_S2C_BanCheck_Hardware_POST_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(S2C_BanCheck_Hardware_POST_Response& a, S2C_BanCheck_Hardware_POST_Response& b) { a.Swap(&b); }
  inline void Swap(S2C_BanCheck_Hardware_POST_Response* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S2C_BanCheck_Hardware_POST_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S2C_BanCheck_Hardware_POST_Response* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<S2C_BanCheck_Hardware_POST_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S2C_BanCheck_Hardware_POST_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S2C_BanCheck_Hardware_POST_Response& from) { S2C_BanCheck_Hardware_POST_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(S2C_BanCheck_Hardware_POST_Response* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.S2C_BanCheck_Hardware_POST_Response"; }

 protected:
  explicit S2C_BanCheck_Hardware_POST_Response(::google::protobuf::Arena* arena);
  S2C_BanCheck_Hardware_POST_Response(::google::protobuf::Arena* arena, const S2C_BanCheck_Hardware_POST_Response& from);
  S2C_BanCheck_Hardware_POST_Response(::google::protobuf::Arena* arena, S2C_BanCheck_Hardware_POST_Response&& from) noexcept
      : S2C_BanCheck_Hardware_POST_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBanHIdsFieldNumber = 3,
    kLoginHIdsFieldNumber = 4,
    kAccountIdFieldNumber = 1,
    kIsBanFieldNumber = 2,
  };
  // repeated string banHIds = 3;
  int banhids_size() const;
  private:
  int _internal_banhids_size() const;

  public:
  void clear_banhids() ;
  const std::string& banhids(int index) const;
  std::string* mutable_banhids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_banhids(int index, Arg_&& value, Args_... args);
  std::string* add_banhids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_banhids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& banhids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_banhids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_banhids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_banhids();

  public:
  // repeated string loginHIds = 4;
  int loginhids_size() const;
  private:
  int _internal_loginhids_size() const;

  public:
  void clear_loginhids() ;
  const std::string& loginhids(int index) const;
  std::string* mutable_loginhids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_loginhids(int index, Arg_&& value, Args_... args);
  std::string* add_loginhids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_loginhids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& loginhids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_loginhids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_loginhids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_loginhids();

  public:
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // uint32 isBan = 2;
  void clear_isban() ;
  ::uint32_t isban() const;
  void set_isban(::uint32_t value);

  private:
  ::uint32_t _internal_isban() const;
  void _internal_set_isban(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.S2C_BanCheck_Hardware_POST_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      79, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_S2C_BanCheck_Hardware_POST_Response_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S2C_BanCheck_Hardware_POST_Response& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> banhids_;
    ::google::protobuf::RepeatedPtrField<std::string> loginhids_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::uint32_t isban_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class MonsterKillLog final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.MonsterKillLog) */ {
 public:
  inline MonsterKillLog() : MonsterKillLog(nullptr) {}
  ~MonsterKillLog() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MonsterKillLog(
      ::google::protobuf::internal::ConstantInitialized);

  inline MonsterKillLog(const MonsterKillLog& from) : MonsterKillLog(nullptr, from) {}
  inline MonsterKillLog(MonsterKillLog&& from) noexcept
      : MonsterKillLog(nullptr, std::move(from)) {}
  inline MonsterKillLog& operator=(const MonsterKillLog& from) {
    CopyFrom(from);
    return *this;
  }
  inline MonsterKillLog& operator=(MonsterKillLog&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MonsterKillLog& default_instance() {
    return *internal_default_instance();
  }
  static inline const MonsterKillLog* internal_default_instance() {
    return reinterpret_cast<const MonsterKillLog*>(
        &_MonsterKillLog_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(MonsterKillLog& a, MonsterKillLog& b) { a.Swap(&b); }
  inline void Swap(MonsterKillLog* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MonsterKillLog* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MonsterKillLog* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MonsterKillLog>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MonsterKillLog& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MonsterKillLog& from) { MonsterKillLog::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MonsterKillLog* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.MonsterKillLog"; }

 protected:
  explicit MonsterKillLog(::google::protobuf::Arena* arena);
  MonsterKillLog(::google::protobuf::Arena* arena, const MonsterKillLog& from);
  MonsterKillLog(::google::protobuf::Arena* arena, MonsterKillLog&& from) noexcept
      : MonsterKillLog(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMonsterNameFieldNumber = 1,
    kMonsterKillCountFieldNumber = 2,
  };
  // string monsterName = 1;
  void clear_monstername() ;
  const std::string& monstername() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_monstername(Arg_&& arg, Args_... args);
  std::string* mutable_monstername();
  PROTOBUF_NODISCARD std::string* release_monstername();
  void set_allocated_monstername(std::string* value);

  private:
  const std::string& _internal_monstername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_monstername(
      const std::string& value);
  std::string* _internal_mutable_monstername();

  public:
  // uint32 monsterKillCount = 2;
  void clear_monsterkillcount() ;
  ::uint32_t monsterkillcount() const;
  void set_monsterkillcount(::uint32_t value);

  private:
  ::uint32_t _internal_monsterkillcount() const;
  void _internal_set_monsterkillcount(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.MonsterKillLog)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MonsterKillLog_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MonsterKillLog& from_msg);
    ::google::protobuf::internal::ArenaStringPtr monstername_;
    ::uint32_t monsterkillcount_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class Location final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Location) */ {
 public:
  inline Location() : Location(nullptr) {}
  ~Location() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Location(
      ::google::protobuf::internal::ConstantInitialized);

  inline Location(const Location& from) : Location(nullptr, from) {}
  inline Location(Location&& from) noexcept
      : Location(nullptr, std::move(from)) {}
  inline Location& operator=(const Location& from) {
    CopyFrom(from);
    return *this;
  }
  inline Location& operator=(Location&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Location& default_instance() {
    return *internal_default_instance();
  }
  static inline const Location* internal_default_instance() {
    return reinterpret_cast<const Location*>(
        &_Location_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(Location& a, Location& b) { a.Swap(&b); }
  inline void Swap(Location* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Location* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Location* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Location>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Location& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Location& from) { Location::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Location* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Location"; }

 protected:
  explicit Location(::google::protobuf::Arena* arena);
  Location(::google::protobuf::Arena* arena, const Location& from);
  Location(::google::protobuf::Arena* arena, Location&& from) noexcept
      : Location(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // int32 x = 1;
  void clear_x() ;
  ::int32_t x() const;
  void set_x(::int32_t value);

  private:
  ::int32_t _internal_x() const;
  void _internal_set_x(::int32_t value);

  public:
  // int32 y = 2;
  void clear_y() ;
  ::int32_t y() const;
  void set_y(::int32_t value);

  private:
  ::int32_t _internal_y() const;
  void _internal_set_y(::int32_t value);

  public:
  // int32 z = 3;
  void clear_z() ;
  ::int32_t z() const;
  void set_z(::int32_t value);

  private:
  ::int32_t _internal_z() const;
  void _internal_set_z(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Location)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Location_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Location& from_msg);
    ::int32_t x_;
    ::int32_t y_;
    ::int32_t z_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class Killlog final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Killlog) */ {
 public:
  inline Killlog() : Killlog(nullptr) {}
  ~Killlog() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Killlog(
      ::google::protobuf::internal::ConstantInitialized);

  inline Killlog(const Killlog& from) : Killlog(nullptr, from) {}
  inline Killlog(Killlog&& from) noexcept
      : Killlog(nullptr, std::move(from)) {}
  inline Killlog& operator=(const Killlog& from) {
    CopyFrom(from);
    return *this;
  }
  inline Killlog& operator=(Killlog&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Killlog& default_instance() {
    return *internal_default_instance();
  }
  static inline const Killlog* internal_default_instance() {
    return reinterpret_cast<const Killlog*>(
        &_Killlog_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Killlog& a, Killlog& b) { a.Swap(&b); }
  inline void Swap(Killlog* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Killlog* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Killlog* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Killlog>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Killlog& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Killlog& from) { Killlog::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Killlog* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Killlog"; }

 protected:
  explicit Killlog(::google::protobuf::Arena* arena);
  Killlog(::google::protobuf::Arena* arena, const Killlog& from);
  Killlog(::google::protobuf::Arena* arena, Killlog&& from) noexcept
      : Killlog(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInstigatorAccountIdFieldNumber = 1,
    kInstigatorNameFieldNumber = 2,
    kEffectCauserNameFieldNumber = 3,
    kHitBoxTypeFieldNumber = 4,
    kAdvPointFieldNumber = 5,
  };
  // string instigatorAccountId = 1;
  void clear_instigatoraccountid() ;
  const std::string& instigatoraccountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instigatoraccountid(Arg_&& arg, Args_... args);
  std::string* mutable_instigatoraccountid();
  PROTOBUF_NODISCARD std::string* release_instigatoraccountid();
  void set_allocated_instigatoraccountid(std::string* value);

  private:
  const std::string& _internal_instigatoraccountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instigatoraccountid(
      const std::string& value);
  std::string* _internal_mutable_instigatoraccountid();

  public:
  // string instigatorName = 2;
  void clear_instigatorname() ;
  const std::string& instigatorname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instigatorname(Arg_&& arg, Args_... args);
  std::string* mutable_instigatorname();
  PROTOBUF_NODISCARD std::string* release_instigatorname();
  void set_allocated_instigatorname(std::string* value);

  private:
  const std::string& _internal_instigatorname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instigatorname(
      const std::string& value);
  std::string* _internal_mutable_instigatorname();

  public:
  // string effectCauserName = 3;
  void clear_effectcausername() ;
  const std::string& effectcausername() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_effectcausername(Arg_&& arg, Args_... args);
  std::string* mutable_effectcausername();
  PROTOBUF_NODISCARD std::string* release_effectcausername();
  void set_allocated_effectcausername(std::string* value);

  private:
  const std::string& _internal_effectcausername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_effectcausername(
      const std::string& value);
  std::string* _internal_mutable_effectcausername();

  public:
  // uint32 hitBoxType = 4;
  void clear_hitboxtype() ;
  ::uint32_t hitboxtype() const;
  void set_hitboxtype(::uint32_t value);

  private:
  ::uint32_t _internal_hitboxtype() const;
  void _internal_set_hitboxtype(::uint32_t value);

  public:
  // int32 advPoint = 5;
  void clear_advpoint() ;
  ::int32_t advpoint() const;
  void set_advpoint(::int32_t value);

  private:
  ::int32_t _internal_advpoint() const;
  void _internal_set_advpoint(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Killlog)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      75, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Killlog_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Killlog& from_msg);
    ::google::protobuf::internal::ArenaStringPtr instigatoraccountid_;
    ::google::protobuf::internal::ArenaStringPtr instigatorname_;
    ::google::protobuf::internal::ArenaStringPtr effectcausername_;
    ::uint32_t hitboxtype_;
    ::int32_t advpoint_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class GameFloorMatchMaking_UserInfoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.GameFloorMatchMaking_UserInfoResponse) */ {
 public:
  inline GameFloorMatchMaking_UserInfoResponse() : GameFloorMatchMaking_UserInfoResponse(nullptr) {}
  ~GameFloorMatchMaking_UserInfoResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameFloorMatchMaking_UserInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameFloorMatchMaking_UserInfoResponse(const GameFloorMatchMaking_UserInfoResponse& from) : GameFloorMatchMaking_UserInfoResponse(nullptr, from) {}
  inline GameFloorMatchMaking_UserInfoResponse(GameFloorMatchMaking_UserInfoResponse&& from) noexcept
      : GameFloorMatchMaking_UserInfoResponse(nullptr, std::move(from)) {}
  inline GameFloorMatchMaking_UserInfoResponse& operator=(const GameFloorMatchMaking_UserInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameFloorMatchMaking_UserInfoResponse& operator=(GameFloorMatchMaking_UserInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameFloorMatchMaking_UserInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameFloorMatchMaking_UserInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GameFloorMatchMaking_UserInfoResponse*>(
        &_GameFloorMatchMaking_UserInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(GameFloorMatchMaking_UserInfoResponse& a, GameFloorMatchMaking_UserInfoResponse& b) { a.Swap(&b); }
  inline void Swap(GameFloorMatchMaking_UserInfoResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameFloorMatchMaking_UserInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameFloorMatchMaking_UserInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GameFloorMatchMaking_UserInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameFloorMatchMaking_UserInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameFloorMatchMaking_UserInfoResponse& from) { GameFloorMatchMaking_UserInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GameFloorMatchMaking_UserInfoResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.GameFloorMatchMaking_UserInfoResponse"; }

 protected:
  explicit GameFloorMatchMaking_UserInfoResponse(::google::protobuf::Arena* arena);
  GameFloorMatchMaking_UserInfoResponse(::google::protobuf::Arena* arena, const GameFloorMatchMaking_UserInfoResponse& from);
  GameFloorMatchMaking_UserInfoResponse(::google::protobuf::Arena* arena, GameFloorMatchMaking_UserInfoResponse&& from) noexcept
      : GameFloorMatchMaking_UserInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kIpFieldNumber = 3,
    kSessionIdFieldNumber = 5,
    kPortFieldNumber = 4,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string ip = 3;
  void clear_ip() ;
  const std::string& ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ip(Arg_&& arg, Args_... args);
  std::string* mutable_ip();
  PROTOBUF_NODISCARD std::string* release_ip();
  void set_allocated_ip(std::string* value);

  private:
  const std::string& _internal_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ip(
      const std::string& value);
  std::string* _internal_mutable_ip();

  public:
  // string sessionId = 5;
  void clear_sessionid() ;
  const std::string& sessionid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sessionid(Arg_&& arg, Args_... args);
  std::string* mutable_sessionid();
  PROTOBUF_NODISCARD std::string* release_sessionid();
  void set_allocated_sessionid(std::string* value);

  private:
  const std::string& _internal_sessionid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sessionid(
      const std::string& value);
  std::string* _internal_mutable_sessionid();

  public:
  // int32 port = 4;
  void clear_port() ;
  ::int32_t port() const;
  void set_port(::int32_t value);

  private:
  ::int32_t _internal_port() const;
  void _internal_set_port(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.GameFloorMatchMaking_UserInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      87, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GameFloorMatchMaking_UserInfoResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameFloorMatchMaking_UserInfoResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr ip_;
    ::google::protobuf::internal::ArenaStringPtr sessionid_;
    ::int32_t port_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class GameFloorMatchMaking_UserInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.GameFloorMatchMaking_UserInfo) */ {
 public:
  inline GameFloorMatchMaking_UserInfo() : GameFloorMatchMaking_UserInfo(nullptr) {}
  ~GameFloorMatchMaking_UserInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameFloorMatchMaking_UserInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameFloorMatchMaking_UserInfo(const GameFloorMatchMaking_UserInfo& from) : GameFloorMatchMaking_UserInfo(nullptr, from) {}
  inline GameFloorMatchMaking_UserInfo(GameFloorMatchMaking_UserInfo&& from) noexcept
      : GameFloorMatchMaking_UserInfo(nullptr, std::move(from)) {}
  inline GameFloorMatchMaking_UserInfo& operator=(const GameFloorMatchMaking_UserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameFloorMatchMaking_UserInfo& operator=(GameFloorMatchMaking_UserInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameFloorMatchMaking_UserInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameFloorMatchMaking_UserInfo* internal_default_instance() {
    return reinterpret_cast<const GameFloorMatchMaking_UserInfo*>(
        &_GameFloorMatchMaking_UserInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(GameFloorMatchMaking_UserInfo& a, GameFloorMatchMaking_UserInfo& b) { a.Swap(&b); }
  inline void Swap(GameFloorMatchMaking_UserInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameFloorMatchMaking_UserInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameFloorMatchMaking_UserInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GameFloorMatchMaking_UserInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameFloorMatchMaking_UserInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameFloorMatchMaking_UserInfo& from) { GameFloorMatchMaking_UserInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GameFloorMatchMaking_UserInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.GameFloorMatchMaking_UserInfo"; }

 protected:
  explicit GameFloorMatchMaking_UserInfo(::google::protobuf::Arena* arena);
  GameFloorMatchMaking_UserInfo(::google::protobuf::Arena* arena, const GameFloorMatchMaking_UserInfo& from);
  GameFloorMatchMaking_UserInfo(::google::protobuf::Arena* arena, GameFloorMatchMaking_UserInfo&& from) noexcept
      : GameFloorMatchMaking_UserInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kPartyIdFieldNumber = 3,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string partyId = 3;
  void clear_partyid() ;
  const std::string& partyid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_partyid(Arg_&& arg, Args_... args);
  std::string* mutable_partyid();
  PROTOBUF_NODISCARD std::string* release_partyid();
  void set_allocated_partyid(std::string* value);

  private:
  const std::string& _internal_partyid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_partyid(
      const std::string& value);
  std::string* _internal_mutable_partyid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.GameFloorMatchMaking_UserInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      75, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GameFloorMatchMaking_UserInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameFloorMatchMaking_UserInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr partyid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class GameExitExpPoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.GameExitExpPoint) */ {
 public:
  inline GameExitExpPoint() : GameExitExpPoint(nullptr) {}
  ~GameExitExpPoint() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameExitExpPoint(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameExitExpPoint(const GameExitExpPoint& from) : GameExitExpPoint(nullptr, from) {}
  inline GameExitExpPoint(GameExitExpPoint&& from) noexcept
      : GameExitExpPoint(nullptr, std::move(from)) {}
  inline GameExitExpPoint& operator=(const GameExitExpPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameExitExpPoint& operator=(GameExitExpPoint&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameExitExpPoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameExitExpPoint* internal_default_instance() {
    return reinterpret_cast<const GameExitExpPoint*>(
        &_GameExitExpPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GameExitExpPoint& a, GameExitExpPoint& b) { a.Swap(&b); }
  inline void Swap(GameExitExpPoint* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameExitExpPoint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameExitExpPoint* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GameExitExpPoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameExitExpPoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameExitExpPoint& from) { GameExitExpPoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GameExitExpPoint* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.GameExitExpPoint"; }

 protected:
  explicit GameExitExpPoint(::google::protobuf::Arena* arena);
  GameExitExpPoint(::google::protobuf::Arena* arena, const GameExitExpPoint& from);
  GameExitExpPoint(::google::protobuf::Arena* arena, GameExitExpPoint&& from) noexcept
      : GameExitExpPoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExpPointTypeFieldNumber = 1,
    kExpPointFieldNumber = 2,
  };
  // uint32 expPointType = 1;
  void clear_exppointtype() ;
  ::uint32_t exppointtype() const;
  void set_exppointtype(::uint32_t value);

  private:
  ::uint32_t _internal_exppointtype() const;
  void _internal_set_exppointtype(::uint32_t value);

  public:
  // uint32 expPoint = 2;
  void clear_exppoint() ;
  ::uint32_t exppoint() const;
  void set_exppoint(::uint32_t value);

  private:
  ::uint32_t _internal_exppoint() const;
  void _internal_set_exppoint(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.GameExitExpPoint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GameExitExpPoint_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameExitExpPoint& from_msg);
    ::uint32_t exppointtype_;
    ::uint32_t exppoint_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class GameExitAdvPoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.GameExitAdvPoint) */ {
 public:
  inline GameExitAdvPoint() : GameExitAdvPoint(nullptr) {}
  ~GameExitAdvPoint() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameExitAdvPoint(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameExitAdvPoint(const GameExitAdvPoint& from) : GameExitAdvPoint(nullptr, from) {}
  inline GameExitAdvPoint(GameExitAdvPoint&& from) noexcept
      : GameExitAdvPoint(nullptr, std::move(from)) {}
  inline GameExitAdvPoint& operator=(const GameExitAdvPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameExitAdvPoint& operator=(GameExitAdvPoint&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameExitAdvPoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameExitAdvPoint* internal_default_instance() {
    return reinterpret_cast<const GameExitAdvPoint*>(
        &_GameExitAdvPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GameExitAdvPoint& a, GameExitAdvPoint& b) { a.Swap(&b); }
  inline void Swap(GameExitAdvPoint* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameExitAdvPoint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameExitAdvPoint* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GameExitAdvPoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameExitAdvPoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameExitAdvPoint& from) { GameExitAdvPoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GameExitAdvPoint* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.GameExitAdvPoint"; }

 protected:
  explicit GameExitAdvPoint(::google::protobuf::Arena* arena);
  GameExitAdvPoint(::google::protobuf::Arena* arena, const GameExitAdvPoint& from);
  GameExitAdvPoint(::google::protobuf::Arena* arena, GameExitAdvPoint&& from) noexcept
      : GameExitAdvPoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAdvPointTypeFieldNumber = 1,
    kAdvPointFieldNumber = 2,
  };
  // int32 advPointType = 1;
  void clear_advpointtype() ;
  ::int32_t advpointtype() const;
  void set_advpointtype(::int32_t value);

  private:
  ::int32_t _internal_advpointtype() const;
  void _internal_set_advpointtype(::int32_t value);

  public:
  // int32 advPoint = 2;
  void clear_advpoint() ;
  ::int32_t advpoint() const;
  void set_advpoint(::int32_t value);

  private:
  ::int32_t _internal_advpoint() const;
  void _internal_set_advpoint(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.GameExitAdvPoint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GameExitAdvPoint_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameExitAdvPoint& from_msg);
    ::int32_t advpointtype_;
    ::int32_t advpoint_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class GameEndUserInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.GameEndUserInfo) */ {
 public:
  inline GameEndUserInfo() : GameEndUserInfo(nullptr) {}
  ~GameEndUserInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameEndUserInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameEndUserInfo(const GameEndUserInfo& from) : GameEndUserInfo(nullptr, from) {}
  inline GameEndUserInfo(GameEndUserInfo&& from) noexcept
      : GameEndUserInfo(nullptr, std::move(from)) {}
  inline GameEndUserInfo& operator=(const GameEndUserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameEndUserInfo& operator=(GameEndUserInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameEndUserInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameEndUserInfo* internal_default_instance() {
    return reinterpret_cast<const GameEndUserInfo*>(
        &_GameEndUserInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(GameEndUserInfo& a, GameEndUserInfo& b) { a.Swap(&b); }
  inline void Swap(GameEndUserInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameEndUserInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameEndUserInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GameEndUserInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameEndUserInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameEndUserInfo& from) { GameEndUserInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GameEndUserInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.GameEndUserInfo"; }

 protected:
  explicit GameEndUserInfo(::google::protobuf::Arena* arena);
  GameEndUserInfo(::google::protobuf::Arena* arena, const GameEndUserInfo& from);
  GameEndUserInfo(::google::protobuf::Arena* arena, GameEndUserInfo&& from) noexcept
      : GameEndUserInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kKillFieldNumber = 2,
    kDeathFieldNumber = 3,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // uint32 kill = 2;
  void clear_kill() ;
  ::uint32_t kill() const;
  void set_kill(::uint32_t value);

  private:
  ::uint32_t _internal_kill() const;
  void _internal_set_kill(::uint32_t value);

  public:
  // uint32 death = 3;
  void clear_death() ;
  ::uint32_t death() const;
  void set_death(::uint32_t value);

  private:
  ::uint32_t _internal_death() const;
  void _internal_set_death(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.GameEndUserInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      43, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GameEndUserInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameEndUserInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::uint32_t kill_;
    ::uint32_t death_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_IronShield_Report_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_IronShield_Report_POST) */ {
 public:
  inline C2S_IronShield_Report_POST() : C2S_IronShield_Report_POST(nullptr) {}
  ~C2S_IronShield_Report_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_IronShield_Report_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_IronShield_Report_POST(const C2S_IronShield_Report_POST& from) : C2S_IronShield_Report_POST(nullptr, from) {}
  inline C2S_IronShield_Report_POST(C2S_IronShield_Report_POST&& from) noexcept
      : C2S_IronShield_Report_POST(nullptr, std::move(from)) {}
  inline C2S_IronShield_Report_POST& operator=(const C2S_IronShield_Report_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_IronShield_Report_POST& operator=(C2S_IronShield_Report_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_IronShield_Report_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_IronShield_Report_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_IronShield_Report_POST*>(
        &_C2S_IronShield_Report_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(C2S_IronShield_Report_POST& a, C2S_IronShield_Report_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_IronShield_Report_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_IronShield_Report_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_IronShield_Report_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_IronShield_Report_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_IronShield_Report_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_IronShield_Report_POST& from) { C2S_IronShield_Report_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_IronShield_Report_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_IronShield_Report_POST"; }

 protected:
  explicit C2S_IronShield_Report_POST(::google::protobuf::Arena* arena);
  C2S_IronShield_Report_POST(::google::protobuf::Arena* arena, const C2S_IronShield_Report_POST& from);
  C2S_IronShield_Report_POST(::google::protobuf::Arena* arena, C2S_IronShield_Report_POST&& from) noexcept
      : C2S_IronShield_Report_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHIdsFieldNumber = 3,
    kBlobFieldNumber = 4,
    kReportIdFieldNumber = 2,
    kAccountIdFieldNumber = 5,
    kCharacterIdFieldNumber = 6,
    kOriginNicknameFieldNumber = 7,
    kReasonFieldNumber = 8,
    kBlobNameTagFieldNumber = 14,
    kCallbackTypeFieldNumber = 1,
    kNeedBlockFieldNumber = 9,
    kNeedHWBlockFieldNumber = 10,
    kBlockTimeMinFieldNumber = 11,
    kBanTypeFieldNumber = 12,
    kBlobTypeFieldNumber = 13,
  };
  // repeated string hIds = 3;
  int hids_size() const;
  private:
  int _internal_hids_size() const;

  public:
  void clear_hids() ;
  const std::string& hids(int index) const;
  std::string* mutable_hids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hids(int index, Arg_&& value, Args_... args);
  std::string* add_hids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_hids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& hids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_hids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_hids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_hids();

  public:
  // repeated uint32 blob = 4;
  int blob_size() const;
  private:
  int _internal_blob_size() const;

  public:
  void clear_blob() ;
  ::uint32_t blob(int index) const;
  void set_blob(int index, ::uint32_t value);
  void add_blob(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& blob() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_blob();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_blob() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_blob();

  public:
  // string reportId = 2;
  void clear_reportid() ;
  const std::string& reportid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reportid(Arg_&& arg, Args_... args);
  std::string* mutable_reportid();
  PROTOBUF_NODISCARD std::string* release_reportid();
  void set_allocated_reportid(std::string* value);

  private:
  const std::string& _internal_reportid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reportid(
      const std::string& value);
  std::string* _internal_mutable_reportid();

  public:
  // string accountId = 5;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 6;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string originNickname = 7;
  void clear_originnickname() ;
  const std::string& originnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_originnickname(Arg_&& arg, Args_... args);
  std::string* mutable_originnickname();
  PROTOBUF_NODISCARD std::string* release_originnickname();
  void set_allocated_originnickname(std::string* value);

  private:
  const std::string& _internal_originnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_originnickname(
      const std::string& value);
  std::string* _internal_mutable_originnickname();

  public:
  // string reason = 8;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // string blobNameTag = 14;
  void clear_blobnametag() ;
  const std::string& blobnametag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_blobnametag(Arg_&& arg, Args_... args);
  std::string* mutable_blobnametag();
  PROTOBUF_NODISCARD std::string* release_blobnametag();
  void set_allocated_blobnametag(std::string* value);

  private:
  const std::string& _internal_blobnametag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_blobnametag(
      const std::string& value);
  std::string* _internal_mutable_blobnametag();

  public:
  // uint32 callbackType = 1;
  void clear_callbacktype() ;
  ::uint32_t callbacktype() const;
  void set_callbacktype(::uint32_t value);

  private:
  ::uint32_t _internal_callbacktype() const;
  void _internal_set_callbacktype(::uint32_t value);

  public:
  // uint32 needBlock = 9;
  void clear_needblock() ;
  ::uint32_t needblock() const;
  void set_needblock(::uint32_t value);

  private:
  ::uint32_t _internal_needblock() const;
  void _internal_set_needblock(::uint32_t value);

  public:
  // uint32 needHWBlock = 10;
  void clear_needhwblock() ;
  ::uint32_t needhwblock() const;
  void set_needhwblock(::uint32_t value);

  private:
  ::uint32_t _internal_needhwblock() const;
  void _internal_set_needhwblock(::uint32_t value);

  public:
  // uint32 blockTime_min = 11;
  void clear_blocktime_min() ;
  ::uint32_t blocktime_min() const;
  void set_blocktime_min(::uint32_t value);

  private:
  ::uint32_t _internal_blocktime_min() const;
  void _internal_set_blocktime_min(::uint32_t value);

  public:
  // uint32 banType = 12;
  void clear_bantype() ;
  ::uint32_t bantype() const;
  void set_bantype(::uint32_t value);

  private:
  ::uint32_t _internal_bantype() const;
  void _internal_set_bantype(::uint32_t value);

  public:
  // int32 blobType = 13;
  void clear_blobtype() ;
  ::int32_t blobtype() const;
  void set_blobtype(::int32_t value);

  private:
  ::int32_t _internal_blobtype() const;
  void _internal_set_blobtype(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_IronShield_Report_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 0,
      116, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_IronShield_Report_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_IronShield_Report_POST& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> hids_;
    ::google::protobuf::RepeatedField<::uint32_t> blob_;
    ::google::protobuf::internal::CachedSize _blob_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr reportid_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr originnickname_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::google::protobuf::internal::ArenaStringPtr blobnametag_;
    ::uint32_t callbacktype_;
    ::uint32_t needblock_;
    ::uint32_t needhwblock_;
    ::uint32_t blocktime_min_;
    ::uint32_t bantype_;
    ::int32_t blobtype_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_IronShield_Isolation_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_IronShield_Isolation_POST) */ {
 public:
  inline C2S_IronShield_Isolation_POST() : C2S_IronShield_Isolation_POST(nullptr) {}
  ~C2S_IronShield_Isolation_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_IronShield_Isolation_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_IronShield_Isolation_POST(const C2S_IronShield_Isolation_POST& from) : C2S_IronShield_Isolation_POST(nullptr, from) {}
  inline C2S_IronShield_Isolation_POST(C2S_IronShield_Isolation_POST&& from) noexcept
      : C2S_IronShield_Isolation_POST(nullptr, std::move(from)) {}
  inline C2S_IronShield_Isolation_POST& operator=(const C2S_IronShield_Isolation_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_IronShield_Isolation_POST& operator=(C2S_IronShield_Isolation_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_IronShield_Isolation_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_IronShield_Isolation_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_IronShield_Isolation_POST*>(
        &_C2S_IronShield_Isolation_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 50;
  friend void swap(C2S_IronShield_Isolation_POST& a, C2S_IronShield_Isolation_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_IronShield_Isolation_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_IronShield_Isolation_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_IronShield_Isolation_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_IronShield_Isolation_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_IronShield_Isolation_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_IronShield_Isolation_POST& from) { C2S_IronShield_Isolation_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_IronShield_Isolation_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_IronShield_Isolation_POST"; }

 protected:
  explicit C2S_IronShield_Isolation_POST(::google::protobuf::Arena* arena);
  C2S_IronShield_Isolation_POST(::google::protobuf::Arena* arena, const C2S_IronShield_Isolation_POST& from);
  C2S_IronShield_Isolation_POST(::google::protobuf::Arena* arena, C2S_IronShield_Isolation_POST&& from) noexcept
      : C2S_IronShield_Isolation_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kIsolationHoursFieldNumber = 2,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // int32 isolationHours = 2;
  void clear_isolationhours() ;
  ::int32_t isolationhours() const;
  void set_isolationhours(::int32_t value);

  private:
  ::int32_t _internal_isolationhours() const;
  void _internal_set_isolationhours(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_IronShield_Isolation_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_IronShield_Isolation_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_IronShield_Isolation_POST& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::int32_t isolationhours_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_GameStart_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_GameStart_POST) */ {
 public:
  inline C2S_GameStart_POST() : C2S_GameStart_POST(nullptr) {}
  ~C2S_GameStart_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_GameStart_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_GameStart_POST(const C2S_GameStart_POST& from) : C2S_GameStart_POST(nullptr, from) {}
  inline C2S_GameStart_POST(C2S_GameStart_POST&& from) noexcept
      : C2S_GameStart_POST(nullptr, std::move(from)) {}
  inline C2S_GameStart_POST& operator=(const C2S_GameStart_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_GameStart_POST& operator=(C2S_GameStart_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_GameStart_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_GameStart_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_GameStart_POST*>(
        &_C2S_GameStart_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(C2S_GameStart_POST& a, C2S_GameStart_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_GameStart_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_GameStart_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_GameStart_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_GameStart_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_GameStart_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_GameStart_POST& from) { C2S_GameStart_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_GameStart_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_GameStart_POST"; }

 protected:
  explicit C2S_GameStart_POST(::google::protobuf::Arena* arena);
  C2S_GameStart_POST(::google::protobuf::Arena* arena, const C2S_GameStart_POST& from);
  C2S_GameStart_POST(::google::protobuf::Arena* arena, C2S_GameStart_POST&& from) noexcept
      : C2S_GameStart_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMapNamesFieldNumber = 2,
    kGameIdFieldNumber = 1,
  };
  // repeated string mapNames = 2;
  int mapnames_size() const;
  private:
  int _internal_mapnames_size() const;

  public:
  void clear_mapnames() ;
  const std::string& mapnames(int index) const;
  std::string* mutable_mapnames(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mapnames(int index, Arg_&& value, Args_... args);
  std::string* add_mapnames();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_mapnames(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& mapnames() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_mapnames();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_mapnames() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_mapnames();

  public:
  // uint64 gameId = 1;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_GameStart_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      45, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_GameStart_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_GameStart_POST& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> mapnames_;
    ::uint64_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_GameSpectator_Check_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_GameSpectator_Check_POST) */ {
 public:
  inline C2S_GameSpectator_Check_POST() : C2S_GameSpectator_Check_POST(nullptr) {}
  ~C2S_GameSpectator_Check_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_GameSpectator_Check_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_GameSpectator_Check_POST(const C2S_GameSpectator_Check_POST& from) : C2S_GameSpectator_Check_POST(nullptr, from) {}
  inline C2S_GameSpectator_Check_POST(C2S_GameSpectator_Check_POST&& from) noexcept
      : C2S_GameSpectator_Check_POST(nullptr, std::move(from)) {}
  inline C2S_GameSpectator_Check_POST& operator=(const C2S_GameSpectator_Check_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_GameSpectator_Check_POST& operator=(C2S_GameSpectator_Check_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_GameSpectator_Check_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_GameSpectator_Check_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_GameSpectator_Check_POST*>(
        &_C2S_GameSpectator_Check_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(C2S_GameSpectator_Check_POST& a, C2S_GameSpectator_Check_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_GameSpectator_Check_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_GameSpectator_Check_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_GameSpectator_Check_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_GameSpectator_Check_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_GameSpectator_Check_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_GameSpectator_Check_POST& from) { C2S_GameSpectator_Check_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_GameSpectator_Check_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_GameSpectator_Check_POST"; }

 protected:
  explicit C2S_GameSpectator_Check_POST(::google::protobuf::Arena* arena);
  C2S_GameSpectator_Check_POST(::google::protobuf::Arena* arena, const C2S_GameSpectator_Check_POST& from);
  C2S_GameSpectator_Check_POST(::google::protobuf::Arena* arena, C2S_GameSpectator_Check_POST&& from) noexcept
      : C2S_GameSpectator_Check_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kTokenFieldNumber = 2,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string token = 2;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_GameSpectator_Check_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      61, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_GameSpectator_Check_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_GameSpectator_Check_POST& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_GameReady_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_GameReady_POST) */ {
 public:
  inline C2S_GameReady_POST() : C2S_GameReady_POST(nullptr) {}
  ~C2S_GameReady_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_GameReady_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_GameReady_POST(const C2S_GameReady_POST& from) : C2S_GameReady_POST(nullptr, from) {}
  inline C2S_GameReady_POST(C2S_GameReady_POST&& from) noexcept
      : C2S_GameReady_POST(nullptr, std::move(from)) {}
  inline C2S_GameReady_POST& operator=(const C2S_GameReady_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_GameReady_POST& operator=(C2S_GameReady_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_GameReady_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_GameReady_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_GameReady_POST*>(
        &_C2S_GameReady_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(C2S_GameReady_POST& a, C2S_GameReady_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_GameReady_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_GameReady_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_GameReady_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_GameReady_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_GameReady_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_GameReady_POST& from) { C2S_GameReady_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_GameReady_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_GameReady_POST"; }

 protected:
  explicit C2S_GameReady_POST(::google::protobuf::Arena* arena);
  C2S_GameReady_POST(::google::protobuf::Arena* arena, const C2S_GameReady_POST& from);
  C2S_GameReady_POST(::google::protobuf::Arena* arena, C2S_GameReady_POST&& from) noexcept
      : C2S_GameReady_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameIdFieldNumber = 1,
  };
  // uint64 gameId = 1;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_GameReady_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_GameReady_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_GameReady_POST& from_msg);
    ::uint64_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_GameInterrupt_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_GameInterrupt_POST) */ {
 public:
  inline C2S_GameInterrupt_POST() : C2S_GameInterrupt_POST(nullptr) {}
  ~C2S_GameInterrupt_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_GameInterrupt_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_GameInterrupt_POST(const C2S_GameInterrupt_POST& from) : C2S_GameInterrupt_POST(nullptr, from) {}
  inline C2S_GameInterrupt_POST(C2S_GameInterrupt_POST&& from) noexcept
      : C2S_GameInterrupt_POST(nullptr, std::move(from)) {}
  inline C2S_GameInterrupt_POST& operator=(const C2S_GameInterrupt_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_GameInterrupt_POST& operator=(C2S_GameInterrupt_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_GameInterrupt_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_GameInterrupt_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_GameInterrupt_POST*>(
        &_C2S_GameInterrupt_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(C2S_GameInterrupt_POST& a, C2S_GameInterrupt_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_GameInterrupt_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_GameInterrupt_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_GameInterrupt_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_GameInterrupt_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_GameInterrupt_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_GameInterrupt_POST& from) { C2S_GameInterrupt_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_GameInterrupt_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_GameInterrupt_POST"; }

 protected:
  explicit C2S_GameInterrupt_POST(::google::protobuf::Arena* arena);
  C2S_GameInterrupt_POST(::google::protobuf::Arena* arena, const C2S_GameInterrupt_POST& from);
  C2S_GameInterrupt_POST(::google::protobuf::Arena* arena, C2S_GameInterrupt_POST&& from) noexcept
      : C2S_GameInterrupt_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameIdFieldNumber = 1,
  };
  // uint64 gameId = 1;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_GameInterrupt_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_GameInterrupt_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_GameInterrupt_POST& from_msg);
    ::uint64_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_GameExitEscapedUser_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_GameExitEscapedUser_POST) */ {
 public:
  inline C2S_GameExitEscapedUser_POST() : C2S_GameExitEscapedUser_POST(nullptr) {}
  ~C2S_GameExitEscapedUser_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_GameExitEscapedUser_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_GameExitEscapedUser_POST(const C2S_GameExitEscapedUser_POST& from) : C2S_GameExitEscapedUser_POST(nullptr, from) {}
  inline C2S_GameExitEscapedUser_POST(C2S_GameExitEscapedUser_POST&& from) noexcept
      : C2S_GameExitEscapedUser_POST(nullptr, std::move(from)) {}
  inline C2S_GameExitEscapedUser_POST& operator=(const C2S_GameExitEscapedUser_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_GameExitEscapedUser_POST& operator=(C2S_GameExitEscapedUser_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_GameExitEscapedUser_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_GameExitEscapedUser_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_GameExitEscapedUser_POST*>(
        &_C2S_GameExitEscapedUser_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(C2S_GameExitEscapedUser_POST& a, C2S_GameExitEscapedUser_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_GameExitEscapedUser_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_GameExitEscapedUser_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_GameExitEscapedUser_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_GameExitEscapedUser_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_GameExitEscapedUser_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_GameExitEscapedUser_POST& from) { C2S_GameExitEscapedUser_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_GameExitEscapedUser_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_GameExitEscapedUser_POST"; }

 protected:
  explicit C2S_GameExitEscapedUser_POST(::google::protobuf::Arena* arena);
  C2S_GameExitEscapedUser_POST(::google::protobuf::Arena* arena, const C2S_GameExitEscapedUser_POST& from);
  C2S_GameExitEscapedUser_POST(::google::protobuf::Arena* arena, C2S_GameExitEscapedUser_POST&& from) noexcept
      : C2S_GameExitEscapedUser_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kGameIdFieldNumber = 3,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // uint64 gameId = 3;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_GameExitEscapedUser_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      67, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_GameExitEscapedUser_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_GameExitEscapedUser_POST& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::uint64_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_GameEnterUser_Post final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_GameEnterUser_Post) */ {
 public:
  inline C2S_GameEnterUser_Post() : C2S_GameEnterUser_Post(nullptr) {}
  ~C2S_GameEnterUser_Post() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_GameEnterUser_Post(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_GameEnterUser_Post(const C2S_GameEnterUser_Post& from) : C2S_GameEnterUser_Post(nullptr, from) {}
  inline C2S_GameEnterUser_Post(C2S_GameEnterUser_Post&& from) noexcept
      : C2S_GameEnterUser_Post(nullptr, std::move(from)) {}
  inline C2S_GameEnterUser_Post& operator=(const C2S_GameEnterUser_Post& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_GameEnterUser_Post& operator=(C2S_GameEnterUser_Post&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_GameEnterUser_Post& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_GameEnterUser_Post* internal_default_instance() {
    return reinterpret_cast<const C2S_GameEnterUser_Post*>(
        &_C2S_GameEnterUser_Post_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(C2S_GameEnterUser_Post& a, C2S_GameEnterUser_Post& b) { a.Swap(&b); }
  inline void Swap(C2S_GameEnterUser_Post* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_GameEnterUser_Post* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_GameEnterUser_Post* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_GameEnterUser_Post>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_GameEnterUser_Post& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_GameEnterUser_Post& from) { C2S_GameEnterUser_Post::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_GameEnterUser_Post* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_GameEnterUser_Post"; }

 protected:
  explicit C2S_GameEnterUser_Post(::google::protobuf::Arena* arena);
  C2S_GameEnterUser_Post(::google::protobuf::Arena* arena, const C2S_GameEnterUser_Post& from);
  C2S_GameEnterUser_Post(::google::protobuf::Arena* arena, C2S_GameEnterUser_Post&& from) noexcept
      : C2S_GameEnterUser_Post(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kGameIdFieldNumber = 3,
    kIsSuccessFieldNumber = 4,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // uint64 gameId = 3;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // uint32 isSuccess = 4;
  void clear_issuccess() ;
  ::uint32_t issuccess() const;
  void set_issuccess(::uint32_t value);

  private:
  ::uint32_t _internal_issuccess() const;
  void _internal_set_issuccess(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_GameEnterUser_Post)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      61, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_GameEnterUser_Post_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_GameEnterUser_Post& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::uint64_t gameid_;
    ::uint32_t issuccess_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_GameCharacterInfo_Get final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_GameCharacterInfo_Get) */ {
 public:
  inline C2S_GameCharacterInfo_Get() : C2S_GameCharacterInfo_Get(nullptr) {}
  ~C2S_GameCharacterInfo_Get() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_GameCharacterInfo_Get(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_GameCharacterInfo_Get(const C2S_GameCharacterInfo_Get& from) : C2S_GameCharacterInfo_Get(nullptr, from) {}
  inline C2S_GameCharacterInfo_Get(C2S_GameCharacterInfo_Get&& from) noexcept
      : C2S_GameCharacterInfo_Get(nullptr, std::move(from)) {}
  inline C2S_GameCharacterInfo_Get& operator=(const C2S_GameCharacterInfo_Get& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_GameCharacterInfo_Get& operator=(C2S_GameCharacterInfo_Get&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_GameCharacterInfo_Get& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_GameCharacterInfo_Get* internal_default_instance() {
    return reinterpret_cast<const C2S_GameCharacterInfo_Get*>(
        &_C2S_GameCharacterInfo_Get_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(C2S_GameCharacterInfo_Get& a, C2S_GameCharacterInfo_Get& b) { a.Swap(&b); }
  inline void Swap(C2S_GameCharacterInfo_Get* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_GameCharacterInfo_Get* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_GameCharacterInfo_Get* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_GameCharacterInfo_Get>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_GameCharacterInfo_Get& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_GameCharacterInfo_Get& from) { C2S_GameCharacterInfo_Get::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_GameCharacterInfo_Get* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_GameCharacterInfo_Get"; }

 protected:
  explicit C2S_GameCharacterInfo_Get(::google::protobuf::Arena* arena);
  C2S_GameCharacterInfo_Get(::google::protobuf::Arena* arena, const C2S_GameCharacterInfo_Get& from);
  C2S_GameCharacterInfo_Get(::google::protobuf::Arena* arena, C2S_GameCharacterInfo_Get&& from) noexcept
      : C2S_GameCharacterInfo_Get(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 2,
    kCharacterIdFieldNumber = 3,
    kGameIdFieldNumber = 1,
    kGameTypeFieldNumber = 4,
  };
  // string accountId = 2;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 3;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // uint64 gameId = 1;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // uint32 gameType = 4;
  void clear_gametype() ;
  ::uint32_t gametype() const;
  void set_gametype(::uint32_t value);

  private:
  ::uint32_t _internal_gametype() const;
  void _internal_set_gametype(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_GameCharacterInfo_Get)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_GameCharacterInfo_Get_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_GameCharacterInfo_Get& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::uint64_t gameid_;
    ::uint32_t gametype_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_GameAliveCheck_GET final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_GameAliveCheck_GET) */ {
 public:
  inline C2S_GameAliveCheck_GET() : C2S_GameAliveCheck_GET(nullptr) {}
  ~C2S_GameAliveCheck_GET() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_GameAliveCheck_GET(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_GameAliveCheck_GET(const C2S_GameAliveCheck_GET& from) : C2S_GameAliveCheck_GET(nullptr, from) {}
  inline C2S_GameAliveCheck_GET(C2S_GameAliveCheck_GET&& from) noexcept
      : C2S_GameAliveCheck_GET(nullptr, std::move(from)) {}
  inline C2S_GameAliveCheck_GET& operator=(const C2S_GameAliveCheck_GET& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_GameAliveCheck_GET& operator=(C2S_GameAliveCheck_GET&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_GameAliveCheck_GET& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_GameAliveCheck_GET* internal_default_instance() {
    return reinterpret_cast<const C2S_GameAliveCheck_GET*>(
        &_C2S_GameAliveCheck_GET_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(C2S_GameAliveCheck_GET& a, C2S_GameAliveCheck_GET& b) { a.Swap(&b); }
  inline void Swap(C2S_GameAliveCheck_GET* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_GameAliveCheck_GET* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_GameAliveCheck_GET* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_GameAliveCheck_GET>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_GameAliveCheck_GET& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_GameAliveCheck_GET& from) { C2S_GameAliveCheck_GET::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_GameAliveCheck_GET* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_GameAliveCheck_GET"; }

 protected:
  explicit C2S_GameAliveCheck_GET(::google::protobuf::Arena* arena);
  C2S_GameAliveCheck_GET(::google::protobuf::Arena* arena, const C2S_GameAliveCheck_GET& from);
  C2S_GameAliveCheck_GET(::google::protobuf::Arena* arena, C2S_GameAliveCheck_GET&& from) noexcept
      : C2S_GameAliveCheck_GET(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameIdFieldNumber = 1,
  };
  // uint64 gameId = 1;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_GameAliveCheck_GET)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_GameAliveCheck_GET_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_GameAliveCheck_GET& from_msg);
    ::uint64_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_BanCheck_Hardware_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_BanCheck_Hardware_POST) */ {
 public:
  inline C2S_BanCheck_Hardware_POST() : C2S_BanCheck_Hardware_POST(nullptr) {}
  ~C2S_BanCheck_Hardware_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_BanCheck_Hardware_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_BanCheck_Hardware_POST(const C2S_BanCheck_Hardware_POST& from) : C2S_BanCheck_Hardware_POST(nullptr, from) {}
  inline C2S_BanCheck_Hardware_POST(C2S_BanCheck_Hardware_POST&& from) noexcept
      : C2S_BanCheck_Hardware_POST(nullptr, std::move(from)) {}
  inline C2S_BanCheck_Hardware_POST& operator=(const C2S_BanCheck_Hardware_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_BanCheck_Hardware_POST& operator=(C2S_BanCheck_Hardware_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_BanCheck_Hardware_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_BanCheck_Hardware_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_BanCheck_Hardware_POST*>(
        &_C2S_BanCheck_Hardware_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 47;
  friend void swap(C2S_BanCheck_Hardware_POST& a, C2S_BanCheck_Hardware_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_BanCheck_Hardware_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_BanCheck_Hardware_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_BanCheck_Hardware_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_BanCheck_Hardware_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_BanCheck_Hardware_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_BanCheck_Hardware_POST& from) { C2S_BanCheck_Hardware_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_BanCheck_Hardware_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_BanCheck_Hardware_POST"; }

 protected:
  explicit C2S_BanCheck_Hardware_POST(::google::protobuf::Arena* arena);
  C2S_BanCheck_Hardware_POST(::google::protobuf::Arena* arena, const C2S_BanCheck_Hardware_POST& from);
  C2S_BanCheck_Hardware_POST(::google::protobuf::Arena* arena, C2S_BanCheck_Hardware_POST&& from) noexcept
      : C2S_BanCheck_Hardware_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHIdsFieldNumber = 2,
    kAccountIdFieldNumber = 1,
  };
  // repeated string hIds = 2;
  int hids_size() const;
  private:
  int _internal_hids_size() const;

  public:
  void clear_hids() ;
  const std::string& hids(int index) const;
  std::string* mutable_hids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hids(int index, Arg_&& value, Args_... args);
  std::string* add_hids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_hids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& hids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_hids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_hids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_hids();

  public:
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_BanCheck_Hardware_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      58, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_BanCheck_Hardware_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_BanCheck_Hardware_POST& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> hids_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_Arena_Exit_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_Arena_Exit_POST) */ {
 public:
  inline C2S_Arena_Exit_POST() : C2S_Arena_Exit_POST(nullptr) {}
  ~C2S_Arena_Exit_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_Arena_Exit_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_Arena_Exit_POST(const C2S_Arena_Exit_POST& from) : C2S_Arena_Exit_POST(nullptr, from) {}
  inline C2S_Arena_Exit_POST(C2S_Arena_Exit_POST&& from) noexcept
      : C2S_Arena_Exit_POST(nullptr, std::move(from)) {}
  inline C2S_Arena_Exit_POST& operator=(const C2S_Arena_Exit_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_Arena_Exit_POST& operator=(C2S_Arena_Exit_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_Arena_Exit_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_Arena_Exit_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_Arena_Exit_POST*>(
        &_C2S_Arena_Exit_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 52;
  friend void swap(C2S_Arena_Exit_POST& a, C2S_Arena_Exit_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_Arena_Exit_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_Arena_Exit_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_Arena_Exit_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_Arena_Exit_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_Arena_Exit_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_Arena_Exit_POST& from) { C2S_Arena_Exit_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_Arena_Exit_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_Arena_Exit_POST"; }

 protected:
  explicit C2S_Arena_Exit_POST(::google::protobuf::Arena* arena);
  C2S_Arena_Exit_POST(::google::protobuf::Arena* arena, const C2S_Arena_Exit_POST& from);
  C2S_Arena_Exit_POST(::google::protobuf::Arena* arena, C2S_Arena_Exit_POST&& from) noexcept
      : C2S_Arena_Exit_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kSecretIdFieldNumber = 4,
    kGameIdFieldNumber = 3,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string secretId = 4;
  void clear_secretid() ;
  const std::string& secretid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_secretid(Arg_&& arg, Args_... args);
  std::string* mutable_secretid();
  PROTOBUF_NODISCARD std::string* release_secretid();
  void set_allocated_secretid(std::string* value);

  private:
  const std::string& _internal_secretid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_secretid(
      const std::string& value);
  std::string* _internal_mutable_secretid();

  public:
  // uint64 gameId = 3;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_Arena_Exit_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      66, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_Arena_Exit_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_Arena_Exit_POST& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr secretid_;
    ::uint64_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class AliveDataInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.AliveDataInfo) */ {
 public:
  inline AliveDataInfo() : AliveDataInfo(nullptr) {}
  ~AliveDataInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AliveDataInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline AliveDataInfo(const AliveDataInfo& from) : AliveDataInfo(nullptr, from) {}
  inline AliveDataInfo(AliveDataInfo&& from) noexcept
      : AliveDataInfo(nullptr, std::move(from)) {}
  inline AliveDataInfo& operator=(const AliveDataInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline AliveDataInfo& operator=(AliveDataInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AliveDataInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const AliveDataInfo* internal_default_instance() {
    return reinterpret_cast<const AliveDataInfo*>(
        &_AliveDataInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(AliveDataInfo& a, AliveDataInfo& b) { a.Swap(&b); }
  inline void Swap(AliveDataInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AliveDataInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AliveDataInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AliveDataInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AliveDataInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AliveDataInfo& from) { AliveDataInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AliveDataInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.AliveDataInfo"; }

 protected:
  explicit AliveDataInfo(::google::protobuf::Arena* arena);
  AliveDataInfo(::google::protobuf::Arena* arena, const AliveDataInfo& from);
  AliveDataInfo(::google::protobuf::Arena* arena, AliveDataInfo&& from) noexcept
      : AliveDataInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUsFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // repeated string Us = 2;
  int us_size() const;
  private:
  int _internal_us_size() const;

  public:
  void clear_us() ;
  const std::string& us(int index) const;
  std::string* mutable_us(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_us(int index, Arg_&& value, Args_... args);
  std::string* add_us();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_us(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& us() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_us();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_us() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_us();

  public:
  // string Id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.AliveDataInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      36, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AliveDataInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AliveDataInfo& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> us_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class SSpell_Floor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SSpell_Floor) */ {
 public:
  inline SSpell_Floor() : SSpell_Floor(nullptr) {}
  ~SSpell_Floor() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SSpell_Floor(
      ::google::protobuf::internal::ConstantInitialized);

  inline SSpell_Floor(const SSpell_Floor& from) : SSpell_Floor(nullptr, from) {}
  inline SSpell_Floor(SSpell_Floor&& from) noexcept
      : SSpell_Floor(nullptr, std::move(from)) {}
  inline SSpell_Floor& operator=(const SSpell_Floor& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSpell_Floor& operator=(SSpell_Floor&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SSpell_Floor& default_instance() {
    return *internal_default_instance();
  }
  static inline const SSpell_Floor* internal_default_instance() {
    return reinterpret_cast<const SSpell_Floor*>(
        &_SSpell_Floor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(SSpell_Floor& a, SSpell_Floor& b) { a.Swap(&b); }
  inline void Swap(SSpell_Floor* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSpell_Floor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SSpell_Floor* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SSpell_Floor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SSpell_Floor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SSpell_Floor& from) { SSpell_Floor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SSpell_Floor* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SSpell_Floor"; }

 protected:
  explicit SSpell_Floor(::google::protobuf::Arena* arena);
  SSpell_Floor(::google::protobuf::Arena* arena, const SSpell_Floor& from);
  SSpell_Floor(::google::protobuf::Arena* arena, SSpell_Floor&& from) noexcept
      : SSpell_Floor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpellFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // .DC.Packet.SSpell spell = 1;
  bool has_spell() const;
  void clear_spell() ;
  const ::DC::Packet::SSpell& spell() const;
  PROTOBUF_NODISCARD ::DC::Packet::SSpell* release_spell();
  ::DC::Packet::SSpell* mutable_spell();
  void set_allocated_spell(::DC::Packet::SSpell* value);
  void unsafe_arena_set_allocated_spell(::DC::Packet::SSpell* value);
  ::DC::Packet::SSpell* unsafe_arena_release_spell();

  private:
  const ::DC::Packet::SSpell& _internal_spell() const;
  ::DC::Packet::SSpell* _internal_mutable_spell();

  public:
  // int32 count = 2;
  void clear_count() ;
  ::int32_t count() const;
  void set_count(::int32_t value);

  private:
  ::int32_t _internal_count() const;
  void _internal_set_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SSpell_Floor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SSpell_Floor_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SSpell_Floor& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::SSpell* spell_;
    ::int32_t count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class SSkill_Floor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SSkill_Floor) */ {
 public:
  inline SSkill_Floor() : SSkill_Floor(nullptr) {}
  ~SSkill_Floor() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SSkill_Floor(
      ::google::protobuf::internal::ConstantInitialized);

  inline SSkill_Floor(const SSkill_Floor& from) : SSkill_Floor(nullptr, from) {}
  inline SSkill_Floor(SSkill_Floor&& from) noexcept
      : SSkill_Floor(nullptr, std::move(from)) {}
  inline SSkill_Floor& operator=(const SSkill_Floor& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSkill_Floor& operator=(SSkill_Floor&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SSkill_Floor& default_instance() {
    return *internal_default_instance();
  }
  static inline const SSkill_Floor* internal_default_instance() {
    return reinterpret_cast<const SSkill_Floor*>(
        &_SSkill_Floor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(SSkill_Floor& a, SSkill_Floor& b) { a.Swap(&b); }
  inline void Swap(SSkill_Floor* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSkill_Floor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SSkill_Floor* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SSkill_Floor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SSkill_Floor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SSkill_Floor& from) { SSkill_Floor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SSkill_Floor* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SSkill_Floor"; }

 protected:
  explicit SSkill_Floor(::google::protobuf::Arena* arena);
  SSkill_Floor(::google::protobuf::Arena* arena, const SSkill_Floor& from);
  SSkill_Floor(::google::protobuf::Arena* arena, SSkill_Floor&& from) noexcept
      : SSkill_Floor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSkillFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // .DC.Packet.SSkill skill = 1;
  bool has_skill() const;
  void clear_skill() ;
  const ::DC::Packet::SSkill& skill() const;
  PROTOBUF_NODISCARD ::DC::Packet::SSkill* release_skill();
  ::DC::Packet::SSkill* mutable_skill();
  void set_allocated_skill(::DC::Packet::SSkill* value);
  void unsafe_arena_set_allocated_skill(::DC::Packet::SSkill* value);
  ::DC::Packet::SSkill* unsafe_arena_release_skill();

  private:
  const ::DC::Packet::SSkill& _internal_skill() const;
  ::DC::Packet::SSkill* _internal_mutable_skill();

  public:
  // int32 count = 2;
  void clear_count() ;
  ::int32_t count() const;
  void set_count(::int32_t value);

  private:
  ::int32_t _internal_count() const;
  void _internal_set_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SSkill_Floor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SSkill_Floor_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SSkill_Floor& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::SSkill* skill_;
    ::int32_t count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class SShapeShift_Floor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SShapeShift_Floor) */ {
 public:
  inline SShapeShift_Floor() : SShapeShift_Floor(nullptr) {}
  ~SShapeShift_Floor() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SShapeShift_Floor(
      ::google::protobuf::internal::ConstantInitialized);

  inline SShapeShift_Floor(const SShapeShift_Floor& from) : SShapeShift_Floor(nullptr, from) {}
  inline SShapeShift_Floor(SShapeShift_Floor&& from) noexcept
      : SShapeShift_Floor(nullptr, std::move(from)) {}
  inline SShapeShift_Floor& operator=(const SShapeShift_Floor& from) {
    CopyFrom(from);
    return *this;
  }
  inline SShapeShift_Floor& operator=(SShapeShift_Floor&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SShapeShift_Floor& default_instance() {
    return *internal_default_instance();
  }
  static inline const SShapeShift_Floor* internal_default_instance() {
    return reinterpret_cast<const SShapeShift_Floor*>(
        &_SShapeShift_Floor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(SShapeShift_Floor& a, SShapeShift_Floor& b) { a.Swap(&b); }
  inline void Swap(SShapeShift_Floor* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SShapeShift_Floor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SShapeShift_Floor* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SShapeShift_Floor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SShapeShift_Floor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SShapeShift_Floor& from) { SShapeShift_Floor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SShapeShift_Floor* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SShapeShift_Floor"; }

 protected:
  explicit SShapeShift_Floor(::google::protobuf::Arena* arena);
  SShapeShift_Floor(::google::protobuf::Arena* arena, const SShapeShift_Floor& from);
  SShapeShift_Floor(::google::protobuf::Arena* arena, SShapeShift_Floor&& from) noexcept
      : SShapeShift_Floor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShapeShiftFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // .DC.Packet.SShapeShift shapeShift = 1;
  bool has_shapeshift() const;
  void clear_shapeshift() ;
  const ::DC::Packet::SShapeShift& shapeshift() const;
  PROTOBUF_NODISCARD ::DC::Packet::SShapeShift* release_shapeshift();
  ::DC::Packet::SShapeShift* mutable_shapeshift();
  void set_allocated_shapeshift(::DC::Packet::SShapeShift* value);
  void unsafe_arena_set_allocated_shapeshift(::DC::Packet::SShapeShift* value);
  ::DC::Packet::SShapeShift* unsafe_arena_release_shapeshift();

  private:
  const ::DC::Packet::SShapeShift& _internal_shapeshift() const;
  ::DC::Packet::SShapeShift* _internal_mutable_shapeshift();

  public:
  // int32 count = 2;
  void clear_count() ;
  ::int32_t count() const;
  void set_count(::int32_t value);

  private:
  ::int32_t _internal_count() const;
  void _internal_set_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SShapeShift_Floor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SShapeShift_Floor_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SShapeShift_Floor& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::SShapeShift* shapeshift_;
    ::int32_t count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class SMusic_Floor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SMusic_Floor) */ {
 public:
  inline SMusic_Floor() : SMusic_Floor(nullptr) {}
  ~SMusic_Floor() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SMusic_Floor(
      ::google::protobuf::internal::ConstantInitialized);

  inline SMusic_Floor(const SMusic_Floor& from) : SMusic_Floor(nullptr, from) {}
  inline SMusic_Floor(SMusic_Floor&& from) noexcept
      : SMusic_Floor(nullptr, std::move(from)) {}
  inline SMusic_Floor& operator=(const SMusic_Floor& from) {
    CopyFrom(from);
    return *this;
  }
  inline SMusic_Floor& operator=(SMusic_Floor&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SMusic_Floor& default_instance() {
    return *internal_default_instance();
  }
  static inline const SMusic_Floor* internal_default_instance() {
    return reinterpret_cast<const SMusic_Floor*>(
        &_SMusic_Floor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(SMusic_Floor& a, SMusic_Floor& b) { a.Swap(&b); }
  inline void Swap(SMusic_Floor* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SMusic_Floor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SMusic_Floor* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SMusic_Floor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SMusic_Floor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SMusic_Floor& from) { SMusic_Floor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SMusic_Floor* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SMusic_Floor"; }

 protected:
  explicit SMusic_Floor(::google::protobuf::Arena* arena);
  SMusic_Floor(::google::protobuf::Arena* arena, const SMusic_Floor& from);
  SMusic_Floor(::google::protobuf::Arena* arena, SMusic_Floor&& from) noexcept
      : SMusic_Floor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMusicFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // .DC.Packet.SMusic music = 1;
  bool has_music() const;
  void clear_music() ;
  const ::DC::Packet::SMusic& music() const;
  PROTOBUF_NODISCARD ::DC::Packet::SMusic* release_music();
  ::DC::Packet::SMusic* mutable_music();
  void set_allocated_music(::DC::Packet::SMusic* value);
  void unsafe_arena_set_allocated_music(::DC::Packet::SMusic* value);
  ::DC::Packet::SMusic* unsafe_arena_release_music();

  private:
  const ::DC::Packet::SMusic& _internal_music() const;
  ::DC::Packet::SMusic* _internal_mutable_music();

  public:
  // int32 count = 2;
  void clear_count() ;
  ::int32_t count() const;
  void set_count(::int32_t value);

  private:
  ::int32_t _internal_count() const;
  void _internal_set_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SMusic_Floor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SMusic_Floor_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SMusic_Floor& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::SMusic* music_;
    ::int32_t count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class SGameQuestInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SGameQuestInfo) */ {
 public:
  inline SGameQuestInfo() : SGameQuestInfo(nullptr) {}
  ~SGameQuestInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SGameQuestInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline SGameQuestInfo(const SGameQuestInfo& from) : SGameQuestInfo(nullptr, from) {}
  inline SGameQuestInfo(SGameQuestInfo&& from) noexcept
      : SGameQuestInfo(nullptr, std::move(from)) {}
  inline SGameQuestInfo& operator=(const SGameQuestInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SGameQuestInfo& operator=(SGameQuestInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SGameQuestInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const SGameQuestInfo* internal_default_instance() {
    return reinterpret_cast<const SGameQuestInfo*>(
        &_SGameQuestInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SGameQuestInfo& a, SGameQuestInfo& b) { a.Swap(&b); }
  inline void Swap(SGameQuestInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SGameQuestInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SGameQuestInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SGameQuestInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SGameQuestInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SGameQuestInfo& from) { SGameQuestInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SGameQuestInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SGameQuestInfo"; }

 protected:
  explicit SGameQuestInfo(::google::protobuf::Arena* arena);
  SGameQuestInfo(::google::protobuf::Arena* arena, const SGameQuestInfo& from);
  SGameQuestInfo(::google::protobuf::Arena* arena, SGameQuestInfo&& from) noexcept
      : SGameQuestInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 2,
    kQuestIdFieldNumber = 1,
  };
  // repeated .DC.Packet.SGameQuestContentInfo infos = 2;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::DC::Packet::SGameQuestContentInfo* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestContentInfo>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestContentInfo>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestContentInfo>* _internal_mutable_infos();
  public:
  const ::DC::Packet::SGameQuestContentInfo& infos(int index) const;
  ::DC::Packet::SGameQuestContentInfo* add_infos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestContentInfo>& infos() const;
  // string questId = 1;
  void clear_questid() ;
  const std::string& questid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_questid(Arg_&& arg, Args_... args);
  std::string* mutable_questid();
  PROTOBUF_NODISCARD std::string* release_questid();
  void set_allocated_questid(std::string* value);

  private:
  const std::string& _internal_questid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_questid(
      const std::string& value);
  std::string* _internal_mutable_questid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SGameQuestInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      40, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SGameQuestInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SGameQuestInfo& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SGameQuestContentInfo > infos_;
    ::google::protobuf::internal::ArenaStringPtr questid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class S2C_FloorMatchMaking_POST_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.S2C_FloorMatchMaking_POST_Response) */ {
 public:
  inline S2C_FloorMatchMaking_POST_Response() : S2C_FloorMatchMaking_POST_Response(nullptr) {}
  ~S2C_FloorMatchMaking_POST_Response() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S2C_FloorMatchMaking_POST_Response(
      ::google::protobuf::internal::ConstantInitialized);

  inline S2C_FloorMatchMaking_POST_Response(const S2C_FloorMatchMaking_POST_Response& from) : S2C_FloorMatchMaking_POST_Response(nullptr, from) {}
  inline S2C_FloorMatchMaking_POST_Response(S2C_FloorMatchMaking_POST_Response&& from) noexcept
      : S2C_FloorMatchMaking_POST_Response(nullptr, std::move(from)) {}
  inline S2C_FloorMatchMaking_POST_Response& operator=(const S2C_FloorMatchMaking_POST_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline S2C_FloorMatchMaking_POST_Response& operator=(S2C_FloorMatchMaking_POST_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S2C_FloorMatchMaking_POST_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const S2C_FloorMatchMaking_POST_Response* internal_default_instance() {
    return reinterpret_cast<const S2C_FloorMatchMaking_POST_Response*>(
        &_S2C_FloorMatchMaking_POST_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(S2C_FloorMatchMaking_POST_Response& a, S2C_FloorMatchMaking_POST_Response& b) { a.Swap(&b); }
  inline void Swap(S2C_FloorMatchMaking_POST_Response* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S2C_FloorMatchMaking_POST_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S2C_FloorMatchMaking_POST_Response* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<S2C_FloorMatchMaking_POST_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S2C_FloorMatchMaking_POST_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S2C_FloorMatchMaking_POST_Response& from) { S2C_FloorMatchMaking_POST_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(S2C_FloorMatchMaking_POST_Response* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.S2C_FloorMatchMaking_POST_Response"; }

 protected:
  explicit S2C_FloorMatchMaking_POST_Response(::google::protobuf::Arena* arena);
  S2C_FloorMatchMaking_POST_Response(::google::protobuf::Arena* arena, const S2C_FloorMatchMaking_POST_Response& from);
  S2C_FloorMatchMaking_POST_Response(::google::protobuf::Arena* arena, S2C_FloorMatchMaking_POST_Response&& from) noexcept
      : S2C_FloorMatchMaking_POST_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 1,
  };
  // repeated .DC.Packet.GameFloorMatchMaking_UserInfoResponse infos = 1;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::DC::Packet::GameFloorMatchMaking_UserInfoResponse* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::GameFloorMatchMaking_UserInfoResponse>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameFloorMatchMaking_UserInfoResponse>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::GameFloorMatchMaking_UserInfoResponse>* _internal_mutable_infos();
  public:
  const ::DC::Packet::GameFloorMatchMaking_UserInfoResponse& infos(int index) const;
  ::DC::Packet::GameFloorMatchMaking_UserInfoResponse* add_infos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameFloorMatchMaking_UserInfoResponse>& infos() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.S2C_FloorMatchMaking_POST_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_S2C_FloorMatchMaking_POST_Response_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S2C_FloorMatchMaking_POST_Response& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::GameFloorMatchMaking_UserInfoResponse > infos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class NewItemLog final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.NewItemLog) */ {
 public:
  inline NewItemLog() : NewItemLog(nullptr) {}
  ~NewItemLog() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NewItemLog(
      ::google::protobuf::internal::ConstantInitialized);

  inline NewItemLog(const NewItemLog& from) : NewItemLog(nullptr, from) {}
  inline NewItemLog(NewItemLog&& from) noexcept
      : NewItemLog(nullptr, std::move(from)) {}
  inline NewItemLog& operator=(const NewItemLog& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewItemLog& operator=(NewItemLog&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewItemLog& default_instance() {
    return *internal_default_instance();
  }
  static inline const NewItemLog* internal_default_instance() {
    return reinterpret_cast<const NewItemLog*>(
        &_NewItemLog_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(NewItemLog& a, NewItemLog& b) { a.Swap(&b); }
  inline void Swap(NewItemLog* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewItemLog* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewItemLog* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NewItemLog>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NewItemLog& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NewItemLog& from) { NewItemLog::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NewItemLog* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.NewItemLog"; }

 protected:
  explicit NewItemLog(::google::protobuf::Arena* arena);
  NewItemLog(::google::protobuf::Arena* arena, const NewItemLog& from);
  NewItemLog(::google::protobuf::Arena* arena, NewItemLog&& from) noexcept
      : NewItemLog(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemIdFieldNumber = 2,
    kPosFieldNumber = 1,
  };
  // string itemId = 2;
  void clear_itemid() ;
  const std::string& itemid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_itemid(Arg_&& arg, Args_... args);
  std::string* mutable_itemid();
  PROTOBUF_NODISCARD std::string* release_itemid();
  void set_allocated_itemid(std::string* value);

  private:
  const std::string& _internal_itemid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_itemid(
      const std::string& value);
  std::string* _internal_mutable_itemid();

  public:
  // .DC.Packet.Location pos = 1;
  bool has_pos() const;
  void clear_pos() ;
  const ::DC::Packet::Location& pos() const;
  PROTOBUF_NODISCARD ::DC::Packet::Location* release_pos();
  ::DC::Packet::Location* mutable_pos();
  void set_allocated_pos(::DC::Packet::Location* value);
  void unsafe_arena_set_allocated_pos(::DC::Packet::Location* value);
  ::DC::Packet::Location* unsafe_arena_release_pos();

  private:
  const ::DC::Packet::Location& _internal_pos() const;
  ::DC::Packet::Location* _internal_mutable_pos();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.NewItemLog)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      35, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NewItemLog_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NewItemLog& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr itemid_;
    ::DC::Packet::Location* pos_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class GameDown_UserPartyInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.GameDown_UserPartyInfo) */ {
 public:
  inline GameDown_UserPartyInfo() : GameDown_UserPartyInfo(nullptr) {}
  ~GameDown_UserPartyInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameDown_UserPartyInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameDown_UserPartyInfo(const GameDown_UserPartyInfo& from) : GameDown_UserPartyInfo(nullptr, from) {}
  inline GameDown_UserPartyInfo(GameDown_UserPartyInfo&& from) noexcept
      : GameDown_UserPartyInfo(nullptr, std::move(from)) {}
  inline GameDown_UserPartyInfo& operator=(const GameDown_UserPartyInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameDown_UserPartyInfo& operator=(GameDown_UserPartyInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameDown_UserPartyInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameDown_UserPartyInfo* internal_default_instance() {
    return reinterpret_cast<const GameDown_UserPartyInfo*>(
        &_GameDown_UserPartyInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(GameDown_UserPartyInfo& a, GameDown_UserPartyInfo& b) { a.Swap(&b); }
  inline void Swap(GameDown_UserPartyInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameDown_UserPartyInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameDown_UserPartyInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GameDown_UserPartyInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameDown_UserPartyInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameDown_UserPartyInfo& from) { GameDown_UserPartyInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GameDown_UserPartyInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.GameDown_UserPartyInfo"; }

 protected:
  explicit GameDown_UserPartyInfo(::google::protobuf::Arena* arena);
  GameDown_UserPartyInfo(::google::protobuf::Arena* arena, const GameDown_UserPartyInfo& from);
  GameDown_UserPartyInfo(::google::protobuf::Arena* arena, GameDown_UserPartyInfo&& from) noexcept
      : GameDown_UserPartyInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kCharacterClassFieldNumber = 3,
    kNicknameFieldNumber = 2,
    kGenderFieldNumber = 4,
    kLevelFieldNumber = 5,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterClass = 3;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickname = 2;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // uint32 gender = 4;
  void clear_gender() ;
  ::uint32_t gender() const;
  void set_gender(::uint32_t value);

  private:
  ::uint32_t _internal_gender() const;
  void _internal_set_gender(::uint32_t value);

  public:
  // uint32 level = 5;
  void clear_level() ;
  ::uint32_t level() const;
  void set_level(::uint32_t value);

  private:
  ::uint32_t _internal_level() const;
  void _internal_set_level(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.GameDown_UserPartyInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GameDown_UserPartyInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameDown_UserPartyInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    ::uint32_t gender_;
    ::uint32_t level_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class Circle final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Circle) */ {
 public:
  inline Circle() : Circle(nullptr) {}
  ~Circle() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Circle(
      ::google::protobuf::internal::ConstantInitialized);

  inline Circle(const Circle& from) : Circle(nullptr, from) {}
  inline Circle(Circle&& from) noexcept
      : Circle(nullptr, std::move(from)) {}
  inline Circle& operator=(const Circle& from) {
    CopyFrom(from);
    return *this;
  }
  inline Circle& operator=(Circle&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Circle& default_instance() {
    return *internal_default_instance();
  }
  static inline const Circle* internal_default_instance() {
    return reinterpret_cast<const Circle*>(
        &_Circle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(Circle& a, Circle& b) { a.Swap(&b); }
  inline void Swap(Circle* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Circle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Circle* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Circle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Circle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Circle& from) { Circle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Circle* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Circle"; }

 protected:
  explicit Circle(::google::protobuf::Arena* arena);
  Circle(::google::protobuf::Arena* arena, const Circle& from);
  Circle(::google::protobuf::Arena* arena, Circle&& from) noexcept
      : Circle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPosFieldNumber = 1,
    kRadiusFieldNumber = 2,
  };
  // .DC.Packet.Location pos = 1;
  bool has_pos() const;
  void clear_pos() ;
  const ::DC::Packet::Location& pos() const;
  PROTOBUF_NODISCARD ::DC::Packet::Location* release_pos();
  ::DC::Packet::Location* mutable_pos();
  void set_allocated_pos(::DC::Packet::Location* value);
  void unsafe_arena_set_allocated_pos(::DC::Packet::Location* value);
  ::DC::Packet::Location* unsafe_arena_release_pos();

  private:
  const ::DC::Packet::Location& _internal_pos() const;
  ::DC::Packet::Location* _internal_mutable_pos();

  public:
  // float radius = 2;
  void clear_radius() ;
  float radius() const;
  void set_radius(float value);

  private:
  float _internal_radius() const;
  void _internal_set_radius(float value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Circle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Circle_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Circle& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::Location* pos_;
    float radius_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_UserReport_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_UserReport_POST) */ {
 public:
  inline C2S_UserReport_POST() : C2S_UserReport_POST(nullptr) {}
  ~C2S_UserReport_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_UserReport_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_UserReport_POST(const C2S_UserReport_POST& from) : C2S_UserReport_POST(nullptr, from) {}
  inline C2S_UserReport_POST(C2S_UserReport_POST&& from) noexcept
      : C2S_UserReport_POST(nullptr, std::move(from)) {}
  inline C2S_UserReport_POST& operator=(const C2S_UserReport_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_UserReport_POST& operator=(C2S_UserReport_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_UserReport_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_UserReport_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_UserReport_POST*>(
        &_C2S_UserReport_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(C2S_UserReport_POST& a, C2S_UserReport_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_UserReport_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_UserReport_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_UserReport_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_UserReport_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_UserReport_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_UserReport_POST& from) { C2S_UserReport_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_UserReport_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_UserReport_POST"; }

 protected:
  explicit C2S_UserReport_POST(::google::protobuf::Arena* arena);
  C2S_UserReport_POST(::google::protobuf::Arena* arena, const C2S_UserReport_POST& from);
  C2S_UserReport_POST(::google::protobuf::Arena* arena, C2S_UserReport_POST&& from) noexcept
      : C2S_UserReport_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 3,
    kReportAccountIdFieldNumber = 2,
    kTargetAccountIdFieldNumber = 4,
    kTargetCharacterIdFieldNumber = 6,
    kReportContentFieldNumber = 7,
    kTargetNickNameFieldNumber = 5,
    kGameIdFieldNumber = 1,
  };
  // repeated uint32 category = 3;
  int category_size() const;
  private:
  int _internal_category_size() const;

  public:
  void clear_category() ;
  ::uint32_t category(int index) const;
  void set_category(int index, ::uint32_t value);
  void add_category(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& category() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_category();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_category() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_category();

  public:
  // string reportAccountId = 2;
  void clear_reportaccountid() ;
  const std::string& reportaccountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reportaccountid(Arg_&& arg, Args_... args);
  std::string* mutable_reportaccountid();
  PROTOBUF_NODISCARD std::string* release_reportaccountid();
  void set_allocated_reportaccountid(std::string* value);

  private:
  const std::string& _internal_reportaccountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reportaccountid(
      const std::string& value);
  std::string* _internal_mutable_reportaccountid();

  public:
  // string targetAccountId = 4;
  void clear_targetaccountid() ;
  const std::string& targetaccountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_targetaccountid(Arg_&& arg, Args_... args);
  std::string* mutable_targetaccountid();
  PROTOBUF_NODISCARD std::string* release_targetaccountid();
  void set_allocated_targetaccountid(std::string* value);

  private:
  const std::string& _internal_targetaccountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_targetaccountid(
      const std::string& value);
  std::string* _internal_mutable_targetaccountid();

  public:
  // string targetCharacterId = 6;
  void clear_targetcharacterid() ;
  const std::string& targetcharacterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_targetcharacterid(Arg_&& arg, Args_... args);
  std::string* mutable_targetcharacterid();
  PROTOBUF_NODISCARD std::string* release_targetcharacterid();
  void set_allocated_targetcharacterid(std::string* value);

  private:
  const std::string& _internal_targetcharacterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_targetcharacterid(
      const std::string& value);
  std::string* _internal_mutable_targetcharacterid();

  public:
  // string reportContent = 7;
  void clear_reportcontent() ;
  const std::string& reportcontent() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reportcontent(Arg_&& arg, Args_... args);
  std::string* mutable_reportcontent();
  PROTOBUF_NODISCARD std::string* release_reportcontent();
  void set_allocated_reportcontent(std::string* value);

  private:
  const std::string& _internal_reportcontent() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reportcontent(
      const std::string& value);
  std::string* _internal_mutable_reportcontent();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME targetNickName = 5;
  bool has_targetnickname() const;
  void clear_targetnickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& targetnickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_targetnickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_targetnickname();
  void set_allocated_targetnickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_targetnickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_targetnickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_targetnickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_targetnickname();

  public:
  // uint64 gameId = 1;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_UserReport_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      98, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_UserReport_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_UserReport_POST& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> category_;
    ::google::protobuf::internal::CachedSize _category_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr reportaccountid_;
    ::google::protobuf::internal::ArenaStringPtr targetaccountid_;
    ::google::protobuf::internal::ArenaStringPtr targetcharacterid_;
    ::google::protobuf::internal::ArenaStringPtr reportcontent_;
    ::DC::Packet::SACCOUNT_NICKNAME* targetnickname_;
    ::uint64_t gameid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_FloorMatchMaking_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_FloorMatchMaking_POST) */ {
 public:
  inline C2S_FloorMatchMaking_POST() : C2S_FloorMatchMaking_POST(nullptr) {}
  ~C2S_FloorMatchMaking_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_FloorMatchMaking_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_FloorMatchMaking_POST(const C2S_FloorMatchMaking_POST& from) : C2S_FloorMatchMaking_POST(nullptr, from) {}
  inline C2S_FloorMatchMaking_POST(C2S_FloorMatchMaking_POST&& from) noexcept
      : C2S_FloorMatchMaking_POST(nullptr, std::move(from)) {}
  inline C2S_FloorMatchMaking_POST& operator=(const C2S_FloorMatchMaking_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_FloorMatchMaking_POST& operator=(C2S_FloorMatchMaking_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_FloorMatchMaking_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_FloorMatchMaking_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_FloorMatchMaking_POST*>(
        &_C2S_FloorMatchMaking_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(C2S_FloorMatchMaking_POST& a, C2S_FloorMatchMaking_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_FloorMatchMaking_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_FloorMatchMaking_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_FloorMatchMaking_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_FloorMatchMaking_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_FloorMatchMaking_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_FloorMatchMaking_POST& from) { C2S_FloorMatchMaking_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_FloorMatchMaking_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_FloorMatchMaking_POST"; }

 protected:
  explicit C2S_FloorMatchMaking_POST(::google::protobuf::Arena* arena);
  C2S_FloorMatchMaking_POST(::google::protobuf::Arena* arena, const C2S_FloorMatchMaking_POST& from);
  C2S_FloorMatchMaking_POST(::google::protobuf::Arena* arena, C2S_FloorMatchMaking_POST&& from) noexcept
      : C2S_FloorMatchMaking_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 1,
    kDungeonIdFieldNumber = 4,
    kGameIdFieldNumber = 2,
    kCurrentFloorFieldNumber = 3,
  };
  // repeated .DC.Packet.GameFloorMatchMaking_UserInfo infos = 1;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::DC::Packet::GameFloorMatchMaking_UserInfo* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::GameFloorMatchMaking_UserInfo>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameFloorMatchMaking_UserInfo>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::GameFloorMatchMaking_UserInfo>* _internal_mutable_infos();
  public:
  const ::DC::Packet::GameFloorMatchMaking_UserInfo& infos(int index) const;
  ::DC::Packet::GameFloorMatchMaking_UserInfo* add_infos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameFloorMatchMaking_UserInfo>& infos() const;
  // string dungeonId = 4;
  void clear_dungeonid() ;
  const std::string& dungeonid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dungeonid(Arg_&& arg, Args_... args);
  std::string* mutable_dungeonid();
  PROTOBUF_NODISCARD std::string* release_dungeonid();
  void set_allocated_dungeonid(std::string* value);

  private:
  const std::string& _internal_dungeonid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dungeonid(
      const std::string& value);
  std::string* _internal_mutable_dungeonid();

  public:
  // uint64 gameId = 2;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // uint32 currentFloor = 3;
  void clear_currentfloor() ;
  ::uint32_t currentfloor() const;
  void set_currentfloor(::uint32_t value);

  private:
  ::uint32_t _internal_currentfloor() const;
  void _internal_set_currentfloor(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_FloorMatchMaking_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      53, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_FloorMatchMaking_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_FloorMatchMaking_POST& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::GameFloorMatchMaking_UserInfo > infos_;
    ::google::protobuf::internal::ArenaStringPtr dungeonid_;
    ::uint64_t gameid_;
    ::uint32_t currentfloor_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_AliveAppendData_GET final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_AliveAppendData_GET) */ {
 public:
  inline C2S_AliveAppendData_GET() : C2S_AliveAppendData_GET(nullptr) {}
  ~C2S_AliveAppendData_GET() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_AliveAppendData_GET(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_AliveAppendData_GET(const C2S_AliveAppendData_GET& from) : C2S_AliveAppendData_GET(nullptr, from) {}
  inline C2S_AliveAppendData_GET(C2S_AliveAppendData_GET&& from) noexcept
      : C2S_AliveAppendData_GET(nullptr, std::move(from)) {}
  inline C2S_AliveAppendData_GET& operator=(const C2S_AliveAppendData_GET& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_AliveAppendData_GET& operator=(C2S_AliveAppendData_GET&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_AliveAppendData_GET& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_AliveAppendData_GET* internal_default_instance() {
    return reinterpret_cast<const C2S_AliveAppendData_GET*>(
        &_C2S_AliveAppendData_GET_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(C2S_AliveAppendData_GET& a, C2S_AliveAppendData_GET& b) { a.Swap(&b); }
  inline void Swap(C2S_AliveAppendData_GET* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_AliveAppendData_GET* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_AliveAppendData_GET* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_AliveAppendData_GET>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_AliveAppendData_GET& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_AliveAppendData_GET& from) { C2S_AliveAppendData_GET::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_AliveAppendData_GET* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_AliveAppendData_GET"; }

 protected:
  explicit C2S_AliveAppendData_GET(::google::protobuf::Arena* arena);
  C2S_AliveAppendData_GET(::google::protobuf::Arena* arena, const C2S_AliveAppendData_GET& from);
  C2S_AliveAppendData_GET(::google::protobuf::Arena* arena, C2S_AliveAppendData_GET&& from) noexcept
      : C2S_AliveAppendData_GET(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 2,
    kGsFieldNumber = 1,
  };
  // repeated .DC.Packet.AliveDataInfo infos = 2;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::DC::Packet::AliveDataInfo* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::AliveDataInfo>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::AliveDataInfo>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::AliveDataInfo>* _internal_mutable_infos();
  public:
  const ::DC::Packet::AliveDataInfo& infos(int index) const;
  ::DC::Packet::AliveDataInfo* add_infos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::AliveDataInfo>& infos() const;
  // string Gs = 1;
  void clear_gs() ;
  const std::string& gs() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_gs(Arg_&& arg, Args_... args);
  std::string* mutable_gs();
  PROTOBUF_NODISCARD std::string* release_gs();
  void set_allocated_gs(std::string* value);

  private:
  const std::string& _internal_gs() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_gs(
      const std::string& value);
  std::string* _internal_mutable_gs();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_AliveAppendData_GET)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_AliveAppendData_GET_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_AliveAppendData_GET& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::AliveDataInfo > infos_;
    ::google::protobuf::internal::ArenaStringPtr gs_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class S2C_GameDown_UserParty_GET final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.S2C_GameDown_UserParty_GET) */ {
 public:
  inline S2C_GameDown_UserParty_GET() : S2C_GameDown_UserParty_GET(nullptr) {}
  ~S2C_GameDown_UserParty_GET() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S2C_GameDown_UserParty_GET(
      ::google::protobuf::internal::ConstantInitialized);

  inline S2C_GameDown_UserParty_GET(const S2C_GameDown_UserParty_GET& from) : S2C_GameDown_UserParty_GET(nullptr, from) {}
  inline S2C_GameDown_UserParty_GET(S2C_GameDown_UserParty_GET&& from) noexcept
      : S2C_GameDown_UserParty_GET(nullptr, std::move(from)) {}
  inline S2C_GameDown_UserParty_GET& operator=(const S2C_GameDown_UserParty_GET& from) {
    CopyFrom(from);
    return *this;
  }
  inline S2C_GameDown_UserParty_GET& operator=(S2C_GameDown_UserParty_GET&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S2C_GameDown_UserParty_GET& default_instance() {
    return *internal_default_instance();
  }
  static inline const S2C_GameDown_UserParty_GET* internal_default_instance() {
    return reinterpret_cast<const S2C_GameDown_UserParty_GET*>(
        &_S2C_GameDown_UserParty_GET_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(S2C_GameDown_UserParty_GET& a, S2C_GameDown_UserParty_GET& b) { a.Swap(&b); }
  inline void Swap(S2C_GameDown_UserParty_GET* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S2C_GameDown_UserParty_GET* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S2C_GameDown_UserParty_GET* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<S2C_GameDown_UserParty_GET>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S2C_GameDown_UserParty_GET& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S2C_GameDown_UserParty_GET& from) { S2C_GameDown_UserParty_GET::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(S2C_GameDown_UserParty_GET* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.S2C_GameDown_UserParty_GET"; }

 protected:
  explicit S2C_GameDown_UserParty_GET(::google::protobuf::Arena* arena);
  S2C_GameDown_UserParty_GET(::google::protobuf::Arena* arena, const S2C_GameDown_UserParty_GET& from);
  S2C_GameDown_UserParty_GET(::google::protobuf::Arena* arena, S2C_GameDown_UserParty_GET&& from) noexcept
      : S2C_GameDown_UserParty_GET(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPartyMemberFieldNumber = 1,
  };
  // repeated .DC.Packet.GameDown_UserPartyInfo partyMember = 1;
  int partymember_size() const;
  private:
  int _internal_partymember_size() const;

  public:
  void clear_partymember() ;
  ::DC::Packet::GameDown_UserPartyInfo* mutable_partymember(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::GameDown_UserPartyInfo>* mutable_partymember();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameDown_UserPartyInfo>& _internal_partymember() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::GameDown_UserPartyInfo>* _internal_mutable_partymember();
  public:
  const ::DC::Packet::GameDown_UserPartyInfo& partymember(int index) const;
  ::DC::Packet::GameDown_UserPartyInfo* add_partymember();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameDown_UserPartyInfo>& partymember() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.S2C_GameDown_UserParty_GET)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_S2C_GameDown_UserParty_GET_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S2C_GameDown_UserParty_GET& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::GameDown_UserPartyInfo > partymember_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class S2C_GameCharacterInfo_Json final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.S2C_GameCharacterInfo_Json) */ {
 public:
  inline S2C_GameCharacterInfo_Json() : S2C_GameCharacterInfo_Json(nullptr) {}
  ~S2C_GameCharacterInfo_Json() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S2C_GameCharacterInfo_Json(
      ::google::protobuf::internal::ConstantInitialized);

  inline S2C_GameCharacterInfo_Json(const S2C_GameCharacterInfo_Json& from) : S2C_GameCharacterInfo_Json(nullptr, from) {}
  inline S2C_GameCharacterInfo_Json(S2C_GameCharacterInfo_Json&& from) noexcept
      : S2C_GameCharacterInfo_Json(nullptr, std::move(from)) {}
  inline S2C_GameCharacterInfo_Json& operator=(const S2C_GameCharacterInfo_Json& from) {
    CopyFrom(from);
    return *this;
  }
  inline S2C_GameCharacterInfo_Json& operator=(S2C_GameCharacterInfo_Json&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S2C_GameCharacterInfo_Json& default_instance() {
    return *internal_default_instance();
  }
  static inline const S2C_GameCharacterInfo_Json* internal_default_instance() {
    return reinterpret_cast<const S2C_GameCharacterInfo_Json*>(
        &_S2C_GameCharacterInfo_Json_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(S2C_GameCharacterInfo_Json& a, S2C_GameCharacterInfo_Json& b) { a.Swap(&b); }
  inline void Swap(S2C_GameCharacterInfo_Json* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S2C_GameCharacterInfo_Json* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S2C_GameCharacterInfo_Json* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<S2C_GameCharacterInfo_Json>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S2C_GameCharacterInfo_Json& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S2C_GameCharacterInfo_Json& from) { S2C_GameCharacterInfo_Json::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(S2C_GameCharacterInfo_Json* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.S2C_GameCharacterInfo_Json"; }

 protected:
  explicit S2C_GameCharacterInfo_Json(::google::protobuf::Arena* arena);
  S2C_GameCharacterInfo_Json(::google::protobuf::Arena* arena, const S2C_GameCharacterInfo_Json& from);
  S2C_GameCharacterInfo_Json(::google::protobuf::Arena* arena, S2C_GameCharacterInfo_Json&& from) noexcept
      : S2C_GameCharacterInfo_Json(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 4,
    kPerksFieldNumber = 5,
    kSkillsFieldNumber = 6,
    kSpellsFieldNumber = 7,
    kCharacterSkinIdsFieldNumber = 8,
    kItemSkinIdsFieldNumber = 9,
    kEmotesFieldNumber = 10,
    kActionIdsFieldNumber = 11,
    kMusicsFieldNumber = 12,
    kShapeShiftsFieldNumber = 13,
    kQuestsFieldNumber = 14,
    kArmorSkinIdsFieldNumber = 20,
    kAccountIdFieldNumber = 2,
    kCharacterIdFieldNumber = 3,
    kSeasonIdFieldNumber = 18,
    kRankInfoFieldNumber = 16,
    kGameIdFieldNumber = 1,
    kEntranceFeeFieldNumber = 17,
    kIsSeasonFieldNumber = 19,
    kTotalPlayTimeSecFieldNumber = 21,
    kLevelFieldNumber = 22,
    kFameFieldNumber = 23,
    kIsBlackListFieldNumber = 24,
    kGearScoreFieldNumber = 25,
  };
  // repeated .DC.Packet.SItem items = 4;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DC::Packet::SItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* _internal_mutable_items();
  public:
  const ::DC::Packet::SItem& items(int index) const;
  ::DC::Packet::SItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& items() const;
  // repeated .DC.Packet.SPerk perks = 5;
  int perks_size() const;
  private:
  int _internal_perks_size() const;

  public:
  void clear_perks() ;
  ::DC::Packet::SPerk* mutable_perks(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>* mutable_perks();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>& _internal_perks() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>* _internal_mutable_perks();
  public:
  const ::DC::Packet::SPerk& perks(int index) const;
  ::DC::Packet::SPerk* add_perks();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>& perks() const;
  // repeated .DC.Packet.SSkill skills = 6;
  int skills_size() const;
  private:
  int _internal_skills_size() const;

  public:
  void clear_skills() ;
  ::DC::Packet::SSkill* mutable_skills(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SSkill>* mutable_skills();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSkill>& _internal_skills() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SSkill>* _internal_mutable_skills();
  public:
  const ::DC::Packet::SSkill& skills(int index) const;
  ::DC::Packet::SSkill* add_skills();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSkill>& skills() const;
  // repeated .DC.Packet.SSpell spells = 7;
  int spells_size() const;
  private:
  int _internal_spells_size() const;

  public:
  void clear_spells() ;
  ::DC::Packet::SSpell* mutable_spells(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SSpell>* mutable_spells();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSpell>& _internal_spells() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SSpell>* _internal_mutable_spells();
  public:
  const ::DC::Packet::SSpell& spells(int index) const;
  ::DC::Packet::SSpell* add_spells();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSpell>& spells() const;
  // repeated string characterSkinIds = 8;
  int characterskinids_size() const;
  private:
  int _internal_characterskinids_size() const;

  public:
  void clear_characterskinids() ;
  const std::string& characterskinids(int index) const;
  std::string* mutable_characterskinids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterskinids(int index, Arg_&& value, Args_... args);
  std::string* add_characterskinids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_characterskinids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& characterskinids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_characterskinids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_characterskinids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_characterskinids();

  public:
  // repeated string itemSkinIds = 9;
  int itemskinids_size() const;
  private:
  int _internal_itemskinids_size() const;

  public:
  void clear_itemskinids() ;
  const std::string& itemskinids(int index) const;
  std::string* mutable_itemskinids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_itemskinids(int index, Arg_&& value, Args_... args);
  std::string* add_itemskinids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_itemskinids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& itemskinids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_itemskinids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_itemskinids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_itemskinids();

  public:
  // repeated .DC.Packet.SEMOTE emotes = 10;
  int emotes_size() const;
  private:
  int _internal_emotes_size() const;

  public:
  void clear_emotes() ;
  ::DC::Packet::SEMOTE* mutable_emotes(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SEMOTE>* mutable_emotes();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SEMOTE>& _internal_emotes() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SEMOTE>* _internal_mutable_emotes();
  public:
  const ::DC::Packet::SEMOTE& emotes(int index) const;
  ::DC::Packet::SEMOTE* add_emotes();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SEMOTE>& emotes() const;
  // repeated string actionIds = 11;
  int actionids_size() const;
  private:
  int _internal_actionids_size() const;

  public:
  void clear_actionids() ;
  const std::string& actionids(int index) const;
  std::string* mutable_actionids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_actionids(int index, Arg_&& value, Args_... args);
  std::string* add_actionids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_actionids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& actionids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_actionids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_actionids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_actionids();

  public:
  // repeated .DC.Packet.SMusic musics = 12;
  int musics_size() const;
  private:
  int _internal_musics_size() const;

  public:
  void clear_musics() ;
  ::DC::Packet::SMusic* mutable_musics(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SMusic>* mutable_musics();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SMusic>& _internal_musics() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SMusic>* _internal_mutable_musics();
  public:
  const ::DC::Packet::SMusic& musics(int index) const;
  ::DC::Packet::SMusic* add_musics();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SMusic>& musics() const;
  // repeated .DC.Packet.SShapeShift shapeShifts = 13;
  int shapeshifts_size() const;
  private:
  int _internal_shapeshifts_size() const;

  public:
  void clear_shapeshifts() ;
  ::DC::Packet::SShapeShift* mutable_shapeshifts(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SShapeShift>* mutable_shapeshifts();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SShapeShift>& _internal_shapeshifts() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SShapeShift>* _internal_mutable_shapeshifts();
  public:
  const ::DC::Packet::SShapeShift& shapeshifts(int index) const;
  ::DC::Packet::SShapeShift* add_shapeshifts();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SShapeShift>& shapeshifts() const;
  // repeated .DC.Packet.SGameQuestInfo quests = 14;
  int quests_size() const;
  private:
  int _internal_quests_size() const;

  public:
  void clear_quests() ;
  ::DC::Packet::SGameQuestInfo* mutable_quests(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestInfo>* mutable_quests();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestInfo>& _internal_quests() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestInfo>* _internal_mutable_quests();
  public:
  const ::DC::Packet::SGameQuestInfo& quests(int index) const;
  ::DC::Packet::SGameQuestInfo* add_quests();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestInfo>& quests() const;
  // repeated string armorSkinIds = 20;
  int armorskinids_size() const;
  private:
  int _internal_armorskinids_size() const;

  public:
  void clear_armorskinids() ;
  const std::string& armorskinids(int index) const;
  std::string* mutable_armorskinids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_armorskinids(int index, Arg_&& value, Args_... args);
  std::string* add_armorskinids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_armorskinids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& armorskinids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_armorskinids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_armorskinids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_armorskinids();

  public:
  // string accountId = 2;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 3;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string seasonId = 18;
  void clear_seasonid() ;
  const std::string& seasonid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_seasonid(Arg_&& arg, Args_... args);
  std::string* mutable_seasonid();
  PROTOBUF_NODISCARD std::string* release_seasonid();
  void set_allocated_seasonid(std::string* value);

  private:
  const std::string& _internal_seasonid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_seasonid(
      const std::string& value);
  std::string* _internal_mutable_seasonid();

  public:
  // .DC.Packet.SRankGameUserInfo rankInfo = 16;
  bool has_rankinfo() const;
  void clear_rankinfo() ;
  const ::DC::Packet::SRankGameUserInfo& rankinfo() const;
  PROTOBUF_NODISCARD ::DC::Packet::SRankGameUserInfo* release_rankinfo();
  ::DC::Packet::SRankGameUserInfo* mutable_rankinfo();
  void set_allocated_rankinfo(::DC::Packet::SRankGameUserInfo* value);
  void unsafe_arena_set_allocated_rankinfo(::DC::Packet::SRankGameUserInfo* value);
  ::DC::Packet::SRankGameUserInfo* unsafe_arena_release_rankinfo();

  private:
  const ::DC::Packet::SRankGameUserInfo& _internal_rankinfo() const;
  ::DC::Packet::SRankGameUserInfo* _internal_mutable_rankinfo();

  public:
  // uint64 gameId = 1;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // uint32 entranceFee = 17;
  void clear_entrancefee() ;
  ::uint32_t entrancefee() const;
  void set_entrancefee(::uint32_t value);

  private:
  ::uint32_t _internal_entrancefee() const;
  void _internal_set_entrancefee(::uint32_t value);

  public:
  // uint32 isSeason = 19;
  void clear_isseason() ;
  ::uint32_t isseason() const;
  void set_isseason(::uint32_t value);

  private:
  ::uint32_t _internal_isseason() const;
  void _internal_set_isseason(::uint32_t value);

  public:
  // int32 totalPlayTimeSec = 21;
  void clear_totalplaytimesec() ;
  ::int32_t totalplaytimesec() const;
  void set_totalplaytimesec(::int32_t value);

  private:
  ::int32_t _internal_totalplaytimesec() const;
  void _internal_set_totalplaytimesec(::int32_t value);

  public:
  // int32 level = 22;
  void clear_level() ;
  ::int32_t level() const;
  void set_level(::int32_t value);

  private:
  ::int32_t _internal_level() const;
  void _internal_set_level(::int32_t value);

  public:
  // int32 fame = 23;
  void clear_fame() ;
  ::int32_t fame() const;
  void set_fame(::int32_t value);

  private:
  ::int32_t _internal_fame() const;
  void _internal_set_fame(::int32_t value);

  public:
  // int32 isBlackList = 24;
  void clear_isblacklist() ;
  ::int32_t isblacklist() const;
  void set_isblacklist(::int32_t value);

  private:
  ::int32_t _internal_isblacklist() const;
  void _internal_set_isblacklist(::int32_t value);

  public:
  // int32 gearScore = 25;
  void clear_gearscore() ;
  ::int32_t gearscore() const;
  void set_gearscore(::int32_t value);

  private:
  ::int32_t _internal_gearscore() const;
  void _internal_set_gearscore(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.S2C_GameCharacterInfo_Json)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 24, 9,
      145, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_S2C_GameCharacterInfo_Json_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S2C_GameCharacterInfo_Json& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SItem > items_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SPerk > perks_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SSkill > skills_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SSpell > spells_;
    ::google::protobuf::RepeatedPtrField<std::string> characterskinids_;
    ::google::protobuf::RepeatedPtrField<std::string> itemskinids_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SEMOTE > emotes_;
    ::google::protobuf::RepeatedPtrField<std::string> actionids_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SMusic > musics_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SShapeShift > shapeshifts_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SGameQuestInfo > quests_;
    ::google::protobuf::RepeatedPtrField<std::string> armorskinids_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr seasonid_;
    ::DC::Packet::SRankGameUserInfo* rankinfo_;
    ::uint64_t gameid_;
    ::uint32_t entrancefee_;
    ::uint32_t isseason_;
    ::int32_t totalplaytimesec_;
    ::int32_t level_;
    ::int32_t fame_;
    ::int32_t isblacklist_;
    ::int32_t gearscore_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class GameResultInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.GameResultInfo) */ {
 public:
  inline GameResultInfo() : GameResultInfo(nullptr) {}
  ~GameResultInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameResultInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameResultInfo(const GameResultInfo& from) : GameResultInfo(nullptr, from) {}
  inline GameResultInfo(GameResultInfo&& from) noexcept
      : GameResultInfo(nullptr, std::move(from)) {}
  inline GameResultInfo& operator=(const GameResultInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameResultInfo& operator=(GameResultInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameResultInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameResultInfo* internal_default_instance() {
    return reinterpret_cast<const GameResultInfo*>(
        &_GameResultInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(GameResultInfo& a, GameResultInfo& b) { a.Swap(&b); }
  inline void Swap(GameResultInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameResultInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameResultInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GameResultInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameResultInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameResultInfo& from) { GameResultInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GameResultInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.GameResultInfo"; }

 protected:
  explicit GameResultInfo(::google::protobuf::Arena* arena);
  GameResultInfo(::google::protobuf::Arena* arena, const GameResultInfo& from);
  GameResultInfo(::google::protobuf::Arena* arena, GameResultInfo&& from) noexcept
      : GameResultInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAdvPointsFieldNumber = 6,
    kExpPointsFieldNumber = 9,
    kKillLogDataFieldNumber = 10,
    kMonsterKillLogsFieldNumber = 11,
    kLocationsFieldNumber = 17,
    kNewItemLogsFieldNumber = 18,
    kQuestsFieldNumber = 19,
    kGameStatsFieldNumber = 20,
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kCharacterClassFieldNumber = 4,
    kEscapeMapNameFieldNumber = 7,
    kReasonFieldNumber = 8,
    kSeasonIdFieldNumber = 21,
    kDungeonIdTagFieldNumber = 23,
    kUserPcLanguageCodeFieldNumber = 25,
    kGameIdFieldNumber = 3,
    kKillCountFieldNumber = 5,
    kGameTypeFieldNumber = 12,
    kNeedBlockFieldNumber = 13,
    kNeedHWBlockFieldNumber = 14,
    kBlockTimeMinFieldNumber = 15,
    kAddTriumphExpValueFieldNumber = 16,
    kIsSeasonFieldNumber = 22,
    kIsBasecampFieldNumber = 24,
  };
  // repeated .DC.Packet.GameExitAdvPoint advPoints = 6;
  int advpoints_size() const;
  private:
  int _internal_advpoints_size() const;

  public:
  void clear_advpoints() ;
  ::DC::Packet::GameExitAdvPoint* mutable_advpoints(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitAdvPoint>* mutable_advpoints();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitAdvPoint>& _internal_advpoints() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitAdvPoint>* _internal_mutable_advpoints();
  public:
  const ::DC::Packet::GameExitAdvPoint& advpoints(int index) const;
  ::DC::Packet::GameExitAdvPoint* add_advpoints();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitAdvPoint>& advpoints() const;
  // repeated .DC.Packet.GameExitExpPoint expPoints = 9;
  int exppoints_size() const;
  private:
  int _internal_exppoints_size() const;

  public:
  void clear_exppoints() ;
  ::DC::Packet::GameExitExpPoint* mutable_exppoints(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitExpPoint>* mutable_exppoints();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitExpPoint>& _internal_exppoints() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitExpPoint>* _internal_mutable_exppoints();
  public:
  const ::DC::Packet::GameExitExpPoint& exppoints(int index) const;
  ::DC::Packet::GameExitExpPoint* add_exppoints();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitExpPoint>& exppoints() const;
  // repeated .DC.Packet.Killlog killLogData = 10;
  int killlogdata_size() const;
  private:
  int _internal_killlogdata_size() const;

  public:
  void clear_killlogdata() ;
  ::DC::Packet::Killlog* mutable_killlogdata(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Killlog>* mutable_killlogdata();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Killlog>& _internal_killlogdata() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Killlog>* _internal_mutable_killlogdata();
  public:
  const ::DC::Packet::Killlog& killlogdata(int index) const;
  ::DC::Packet::Killlog* add_killlogdata();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Killlog>& killlogdata() const;
  // repeated .DC.Packet.MonsterKillLog monsterKillLogs = 11;
  int monsterkilllogs_size() const;
  private:
  int _internal_monsterkilllogs_size() const;

  public:
  void clear_monsterkilllogs() ;
  ::DC::Packet::MonsterKillLog* mutable_monsterkilllogs(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::MonsterKillLog>* mutable_monsterkilllogs();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::MonsterKillLog>& _internal_monsterkilllogs() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::MonsterKillLog>* _internal_mutable_monsterkilllogs();
  public:
  const ::DC::Packet::MonsterKillLog& monsterkilllogs(int index) const;
  ::DC::Packet::MonsterKillLog* add_monsterkilllogs();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::MonsterKillLog>& monsterkilllogs() const;
  // repeated .DC.Packet.Location locations = 17;
  int locations_size() const;
  private:
  int _internal_locations_size() const;

  public:
  void clear_locations() ;
  ::DC::Packet::Location* mutable_locations(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Location>* mutable_locations();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Location>& _internal_locations() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Location>* _internal_mutable_locations();
  public:
  const ::DC::Packet::Location& locations(int index) const;
  ::DC::Packet::Location* add_locations();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Location>& locations() const;
  // repeated .DC.Packet.NewItemLog newItemLogs = 18;
  int newitemlogs_size() const;
  private:
  int _internal_newitemlogs_size() const;

  public:
  void clear_newitemlogs() ;
  ::DC::Packet::NewItemLog* mutable_newitemlogs(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::NewItemLog>* mutable_newitemlogs();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::NewItemLog>& _internal_newitemlogs() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::NewItemLog>* _internal_mutable_newitemlogs();
  public:
  const ::DC::Packet::NewItemLog& newitemlogs(int index) const;
  ::DC::Packet::NewItemLog* add_newitemlogs();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::NewItemLog>& newitemlogs() const;
  // repeated .DC.Packet.SGameQuestInfo quests = 19;
  int quests_size() const;
  private:
  int _internal_quests_size() const;

  public:
  void clear_quests() ;
  ::DC::Packet::SGameQuestInfo* mutable_quests(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestInfo>* mutable_quests();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestInfo>& _internal_quests() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestInfo>* _internal_mutable_quests();
  public:
  const ::DC::Packet::SGameQuestInfo& quests(int index) const;
  ::DC::Packet::SGameQuestInfo* add_quests();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestInfo>& quests() const;
  // repeated .DC.Packet.SGameStat gameStats = 20;
  int gamestats_size() const;
  private:
  int _internal_gamestats_size() const;

  public:
  void clear_gamestats() ;
  ::DC::Packet::SGameStat* mutable_gamestats(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameStat>* mutable_gamestats();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameStat>& _internal_gamestats() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameStat>* _internal_mutable_gamestats();
  public:
  const ::DC::Packet::SGameStat& gamestats(int index) const;
  ::DC::Packet::SGameStat* add_gamestats();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameStat>& gamestats() const;
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string characterClass = 4;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // string escapeMapName = 7;
  void clear_escapemapname() ;
  const std::string& escapemapname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_escapemapname(Arg_&& arg, Args_... args);
  std::string* mutable_escapemapname();
  PROTOBUF_NODISCARD std::string* release_escapemapname();
  void set_allocated_escapemapname(std::string* value);

  private:
  const std::string& _internal_escapemapname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_escapemapname(
      const std::string& value);
  std::string* _internal_mutable_escapemapname();

  public:
  // string reason = 8;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // string seasonId = 21;
  void clear_seasonid() ;
  const std::string& seasonid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_seasonid(Arg_&& arg, Args_... args);
  std::string* mutable_seasonid();
  PROTOBUF_NODISCARD std::string* release_seasonid();
  void set_allocated_seasonid(std::string* value);

  private:
  const std::string& _internal_seasonid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_seasonid(
      const std::string& value);
  std::string* _internal_mutable_seasonid();

  public:
  // string dungeonIdTag = 23;
  void clear_dungeonidtag() ;
  const std::string& dungeonidtag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dungeonidtag(Arg_&& arg, Args_... args);
  std::string* mutable_dungeonidtag();
  PROTOBUF_NODISCARD std::string* release_dungeonidtag();
  void set_allocated_dungeonidtag(std::string* value);

  private:
  const std::string& _internal_dungeonidtag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dungeonidtag(
      const std::string& value);
  std::string* _internal_mutable_dungeonidtag();

  public:
  // string userPcLanguageCode = 25;
  void clear_userpclanguagecode() ;
  const std::string& userpclanguagecode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_userpclanguagecode(Arg_&& arg, Args_... args);
  std::string* mutable_userpclanguagecode();
  PROTOBUF_NODISCARD std::string* release_userpclanguagecode();
  void set_allocated_userpclanguagecode(std::string* value);

  private:
  const std::string& _internal_userpclanguagecode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_userpclanguagecode(
      const std::string& value);
  std::string* _internal_mutable_userpclanguagecode();

  public:
  // uint64 gameId = 3;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // uint32 killCount = 5;
  void clear_killcount() ;
  ::uint32_t killcount() const;
  void set_killcount(::uint32_t value);

  private:
  ::uint32_t _internal_killcount() const;
  void _internal_set_killcount(::uint32_t value);

  public:
  // uint32 gameType = 12;
  void clear_gametype() ;
  ::uint32_t gametype() const;
  void set_gametype(::uint32_t value);

  private:
  ::uint32_t _internal_gametype() const;
  void _internal_set_gametype(::uint32_t value);

  public:
  // uint32 needBlock = 13;
  void clear_needblock() ;
  ::uint32_t needblock() const;
  void set_needblock(::uint32_t value);

  private:
  ::uint32_t _internal_needblock() const;
  void _internal_set_needblock(::uint32_t value);

  public:
  // uint32 needHWBlock = 14;
  void clear_needhwblock() ;
  ::uint32_t needhwblock() const;
  void set_needhwblock(::uint32_t value);

  private:
  ::uint32_t _internal_needhwblock() const;
  void _internal_set_needhwblock(::uint32_t value);

  public:
  // uint32 blockTime_min = 15;
  void clear_blocktime_min() ;
  ::uint32_t blocktime_min() const;
  void set_blocktime_min(::uint32_t value);

  private:
  ::uint32_t _internal_blocktime_min() const;
  void _internal_set_blocktime_min(::uint32_t value);

  public:
  // int32 addTriumphExpValue = 16;
  void clear_addtriumphexpvalue() ;
  ::int32_t addtriumphexpvalue() const;
  void set_addtriumphexpvalue(::int32_t value);

  private:
  ::int32_t _internal_addtriumphexpvalue() const;
  void _internal_set_addtriumphexpvalue(::int32_t value);

  public:
  // uint32 isSeason = 22;
  void clear_isseason() ;
  ::uint32_t isseason() const;
  void set_isseason(::uint32_t value);

  private:
  ::uint32_t _internal_isseason() const;
  void _internal_set_isseason(::uint32_t value);

  public:
  // uint32 isBasecamp = 24;
  void clear_isbasecamp() ;
  ::uint32_t isbasecamp() const;
  void set_isbasecamp(::uint32_t value);

  private:
  ::uint32_t _internal_isbasecamp() const;
  void _internal_set_isbasecamp(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.GameResultInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 25, 8,
      148, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GameResultInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameResultInfo& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::GameExitAdvPoint > advpoints_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::GameExitExpPoint > exppoints_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Killlog > killlogdata_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::MonsterKillLog > monsterkilllogs_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Location > locations_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::NewItemLog > newitemlogs_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SGameQuestInfo > quests_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SGameStat > gamestats_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::google::protobuf::internal::ArenaStringPtr escapemapname_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::google::protobuf::internal::ArenaStringPtr seasonid_;
    ::google::protobuf::internal::ArenaStringPtr dungeonidtag_;
    ::google::protobuf::internal::ArenaStringPtr userpclanguagecode_;
    ::uint64_t gameid_;
    ::uint32_t killcount_;
    ::uint32_t gametype_;
    ::uint32_t needblock_;
    ::uint32_t needhwblock_;
    ::uint32_t blocktime_min_;
    ::int32_t addtriumphexpvalue_;
    ::uint32_t isseason_;
    ::uint32_t isbasecamp_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class FloorMatchMaking_CharacterInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.FloorMatchMaking_CharacterInfo) */ {
 public:
  inline FloorMatchMaking_CharacterInfo() : FloorMatchMaking_CharacterInfo(nullptr) {}
  ~FloorMatchMaking_CharacterInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FloorMatchMaking_CharacterInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline FloorMatchMaking_CharacterInfo(const FloorMatchMaking_CharacterInfo& from) : FloorMatchMaking_CharacterInfo(nullptr, from) {}
  inline FloorMatchMaking_CharacterInfo(FloorMatchMaking_CharacterInfo&& from) noexcept
      : FloorMatchMaking_CharacterInfo(nullptr, std::move(from)) {}
  inline FloorMatchMaking_CharacterInfo& operator=(const FloorMatchMaking_CharacterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline FloorMatchMaking_CharacterInfo& operator=(FloorMatchMaking_CharacterInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FloorMatchMaking_CharacterInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const FloorMatchMaking_CharacterInfo* internal_default_instance() {
    return reinterpret_cast<const FloorMatchMaking_CharacterInfo*>(
        &_FloorMatchMaking_CharacterInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(FloorMatchMaking_CharacterInfo& a, FloorMatchMaking_CharacterInfo& b) { a.Swap(&b); }
  inline void Swap(FloorMatchMaking_CharacterInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FloorMatchMaking_CharacterInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FloorMatchMaking_CharacterInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FloorMatchMaking_CharacterInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FloorMatchMaking_CharacterInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FloorMatchMaking_CharacterInfo& from) { FloorMatchMaking_CharacterInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FloorMatchMaking_CharacterInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.FloorMatchMaking_CharacterInfo"; }

 protected:
  explicit FloorMatchMaking_CharacterInfo(::google::protobuf::Arena* arena);
  FloorMatchMaking_CharacterInfo(::google::protobuf::Arena* arena, const FloorMatchMaking_CharacterInfo& from);
  FloorMatchMaking_CharacterInfo(::google::protobuf::Arena* arena, FloorMatchMaking_CharacterInfo&& from) noexcept
      : FloorMatchMaking_CharacterInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDownItemsFieldNumber = 3,
    kPerksFieldNumber = 4,
    kSkillsFieldNumber = 5,
    kSpellsFieldNumber = 6,
    kMusicsFieldNumber = 7,
    kShapeShiftsFieldNumber = 8,
    kCharacterSkinIdsFieldNumber = 9,
    kItemSkinIdsFieldNumber = 10,
    kEmotesFieldNumber = 11,
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kHpFieldNumber = 12,
  };
  // repeated .DC.Packet.SDownItem downItems = 3;
  int downitems_size() const;
  private:
  int _internal_downitems_size() const;

  public:
  void clear_downitems() ;
  ::DC::Packet::SDownItem* mutable_downitems(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SDownItem>* mutable_downitems();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SDownItem>& _internal_downitems() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SDownItem>* _internal_mutable_downitems();
  public:
  const ::DC::Packet::SDownItem& downitems(int index) const;
  ::DC::Packet::SDownItem* add_downitems();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SDownItem>& downitems() const;
  // repeated .DC.Packet.SPerk perks = 4;
  int perks_size() const;
  private:
  int _internal_perks_size() const;

  public:
  void clear_perks() ;
  ::DC::Packet::SPerk* mutable_perks(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>* mutable_perks();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>& _internal_perks() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>* _internal_mutable_perks();
  public:
  const ::DC::Packet::SPerk& perks(int index) const;
  ::DC::Packet::SPerk* add_perks();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>& perks() const;
  // repeated .DC.Packet.SSkill_Floor skills = 5;
  int skills_size() const;
  private:
  int _internal_skills_size() const;

  public:
  void clear_skills() ;
  ::DC::Packet::SSkill_Floor* mutable_skills(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SSkill_Floor>* mutable_skills();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSkill_Floor>& _internal_skills() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SSkill_Floor>* _internal_mutable_skills();
  public:
  const ::DC::Packet::SSkill_Floor& skills(int index) const;
  ::DC::Packet::SSkill_Floor* add_skills();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSkill_Floor>& skills() const;
  // repeated .DC.Packet.SSpell_Floor spells = 6;
  int spells_size() const;
  private:
  int _internal_spells_size() const;

  public:
  void clear_spells() ;
  ::DC::Packet::SSpell_Floor* mutable_spells(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SSpell_Floor>* mutable_spells();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSpell_Floor>& _internal_spells() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SSpell_Floor>* _internal_mutable_spells();
  public:
  const ::DC::Packet::SSpell_Floor& spells(int index) const;
  ::DC::Packet::SSpell_Floor* add_spells();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSpell_Floor>& spells() const;
  // repeated .DC.Packet.SMusic_Floor musics = 7;
  int musics_size() const;
  private:
  int _internal_musics_size() const;

  public:
  void clear_musics() ;
  ::DC::Packet::SMusic_Floor* mutable_musics(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SMusic_Floor>* mutable_musics();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SMusic_Floor>& _internal_musics() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SMusic_Floor>* _internal_mutable_musics();
  public:
  const ::DC::Packet::SMusic_Floor& musics(int index) const;
  ::DC::Packet::SMusic_Floor* add_musics();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SMusic_Floor>& musics() const;
  // repeated .DC.Packet.SShapeShift_Floor shapeShifts = 8;
  int shapeshifts_size() const;
  private:
  int _internal_shapeshifts_size() const;

  public:
  void clear_shapeshifts() ;
  ::DC::Packet::SShapeShift_Floor* mutable_shapeshifts(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SShapeShift_Floor>* mutable_shapeshifts();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SShapeShift_Floor>& _internal_shapeshifts() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SShapeShift_Floor>* _internal_mutable_shapeshifts();
  public:
  const ::DC::Packet::SShapeShift_Floor& shapeshifts(int index) const;
  ::DC::Packet::SShapeShift_Floor* add_shapeshifts();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SShapeShift_Floor>& shapeshifts() const;
  // repeated string characterSkinIds = 9;
  int characterskinids_size() const;
  private:
  int _internal_characterskinids_size() const;

  public:
  void clear_characterskinids() ;
  const std::string& characterskinids(int index) const;
  std::string* mutable_characterskinids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterskinids(int index, Arg_&& value, Args_... args);
  std::string* add_characterskinids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_characterskinids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& characterskinids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_characterskinids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_characterskinids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_characterskinids();

  public:
  // repeated string itemSkinIds = 10;
  int itemskinids_size() const;
  private:
  int _internal_itemskinids_size() const;

  public:
  void clear_itemskinids() ;
  const std::string& itemskinids(int index) const;
  std::string* mutable_itemskinids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_itemskinids(int index, Arg_&& value, Args_... args);
  std::string* add_itemskinids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_itemskinids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& itemskinids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_itemskinids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_itemskinids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_itemskinids();

  public:
  // repeated .DC.Packet.SEMOTE emotes = 11;
  int emotes_size() const;
  private:
  int _internal_emotes_size() const;

  public:
  void clear_emotes() ;
  ::DC::Packet::SEMOTE* mutable_emotes(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SEMOTE>* mutable_emotes();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SEMOTE>& _internal_emotes() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SEMOTE>* _internal_mutable_emotes();
  public:
  const ::DC::Packet::SEMOTE& emotes(int index) const;
  ::DC::Packet::SEMOTE* add_emotes();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SEMOTE>& emotes() const;
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // int32 hp = 12;
  void clear_hp() ;
  ::int32_t hp() const;
  void set_hp(::int32_t value);

  private:
  ::int32_t _internal_hp() const;
  void _internal_set_hp(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.FloorMatchMaking_CharacterInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 7,
      104, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FloorMatchMaking_CharacterInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FloorMatchMaking_CharacterInfo& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SDownItem > downitems_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SPerk > perks_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SSkill_Floor > skills_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SSpell_Floor > spells_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SMusic_Floor > musics_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SShapeShift_Floor > shapeshifts_;
    ::google::protobuf::RepeatedPtrField<std::string> characterskinids_;
    ::google::protobuf::RepeatedPtrField<std::string> itemskinids_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SEMOTE > emotes_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::int32_t hp_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_Game_Finalize_Session_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_Game_Finalize_Session_POST) */ {
 public:
  inline C2S_Game_Finalize_Session_POST() : C2S_Game_Finalize_Session_POST(nullptr) {}
  ~C2S_Game_Finalize_Session_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_Game_Finalize_Session_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_Game_Finalize_Session_POST(const C2S_Game_Finalize_Session_POST& from) : C2S_Game_Finalize_Session_POST(nullptr, from) {}
  inline C2S_Game_Finalize_Session_POST(C2S_Game_Finalize_Session_POST&& from) noexcept
      : C2S_Game_Finalize_Session_POST(nullptr, std::move(from)) {}
  inline C2S_Game_Finalize_Session_POST& operator=(const C2S_Game_Finalize_Session_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_Game_Finalize_Session_POST& operator=(C2S_Game_Finalize_Session_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_Game_Finalize_Session_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_Game_Finalize_Session_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_Game_Finalize_Session_POST*>(
        &_C2S_Game_Finalize_Session_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 53;
  friend void swap(C2S_Game_Finalize_Session_POST& a, C2S_Game_Finalize_Session_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_Game_Finalize_Session_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_Game_Finalize_Session_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_Game_Finalize_Session_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_Game_Finalize_Session_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_Game_Finalize_Session_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_Game_Finalize_Session_POST& from) { C2S_Game_Finalize_Session_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_Game_Finalize_Session_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_Game_Finalize_Session_POST"; }

 protected:
  explicit C2S_Game_Finalize_Session_POST(::google::protobuf::Arena* arena);
  C2S_Game_Finalize_Session_POST(::google::protobuf::Arena* arena, const C2S_Game_Finalize_Session_POST& from);
  C2S_Game_Finalize_Session_POST(::google::protobuf::Arena* arena, C2S_Game_Finalize_Session_POST&& from) noexcept
      : C2S_Game_Finalize_Session_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRecoveryItemsFieldNumber = 4,
    kAccountIdFieldNumber = 2,
    kCharacterIdFieldNumber = 3,
    kGameIdFieldNumber = 1,
  };
  // repeated .DC.Packet.SItem recoveryItems = 4;
  int recoveryitems_size() const;
  private:
  int _internal_recoveryitems_size() const;

  public:
  void clear_recoveryitems() ;
  ::DC::Packet::SItem* mutable_recoveryitems(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* mutable_recoveryitems();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& _internal_recoveryitems() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* _internal_mutable_recoveryitems();
  public:
  const ::DC::Packet::SItem& recoveryitems(int index) const;
  ::DC::Packet::SItem* add_recoveryitems();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& recoveryitems() const;
  // string accountId = 2;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 3;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // uint64 gameId = 1;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_Game_Finalize_Session_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      69, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_Game_Finalize_Session_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_Game_Finalize_Session_POST& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SItem > recoveryitems_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::uint64_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_GameExitUser_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_GameExitUser_POST) */ {
 public:
  inline C2S_GameExitUser_POST() : C2S_GameExitUser_POST(nullptr) {}
  ~C2S_GameExitUser_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_GameExitUser_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_GameExitUser_POST(const C2S_GameExitUser_POST& from) : C2S_GameExitUser_POST(nullptr, from) {}
  inline C2S_GameExitUser_POST(C2S_GameExitUser_POST&& from) noexcept
      : C2S_GameExitUser_POST(nullptr, std::move(from)) {}
  inline C2S_GameExitUser_POST& operator=(const C2S_GameExitUser_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_GameExitUser_POST& operator=(C2S_GameExitUser_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_GameExitUser_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_GameExitUser_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_GameExitUser_POST*>(
        &_C2S_GameExitUser_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(C2S_GameExitUser_POST& a, C2S_GameExitUser_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_GameExitUser_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_GameExitUser_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_GameExitUser_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_GameExitUser_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_GameExitUser_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_GameExitUser_POST& from) { C2S_GameExitUser_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_GameExitUser_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_GameExitUser_POST"; }

 protected:
  explicit C2S_GameExitUser_POST(::google::protobuf::Arena* arena);
  C2S_GameExitUser_POST(::google::protobuf::Arena* arena, const C2S_GameExitUser_POST& from);
  C2S_GameExitUser_POST(::google::protobuf::Arena* arena, C2S_GameExitUser_POST&& from) noexcept
      : C2S_GameExitUser_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using ESCAPE = C2S_GameExitUser_POST_ESCAPE;
  static constexpr ESCAPE NONE = C2S_GameExitUser_POST_ESCAPE_NONE;
  static constexpr ESCAPE SUCCESS = C2S_GameExitUser_POST_ESCAPE_SUCCESS;
  static constexpr ESCAPE FAIL = C2S_GameExitUser_POST_ESCAPE_FAIL;
  static inline bool ESCAPE_IsValid(int value) {
    return C2S_GameExitUser_POST_ESCAPE_IsValid(value);
  }
  static constexpr ESCAPE ESCAPE_MIN = C2S_GameExitUser_POST_ESCAPE_ESCAPE_MIN;
  static constexpr ESCAPE ESCAPE_MAX = C2S_GameExitUser_POST_ESCAPE_ESCAPE_MAX;
  static constexpr int ESCAPE_ARRAYSIZE = C2S_GameExitUser_POST_ESCAPE_ESCAPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* ESCAPE_descriptor() {
    return C2S_GameExitUser_POST_ESCAPE_descriptor();
  }
  template <typename T>
  static inline const std::string& ESCAPE_Name(T value) {
    return C2S_GameExitUser_POST_ESCAPE_Name(value);
  }
  static inline bool ESCAPE_Parse(absl::string_view name, ESCAPE* value) {
    return C2S_GameExitUser_POST_ESCAPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 5,
    kGuaranteedItemsFieldNumber = 6,
    kAdvPointsFieldNumber = 9,
    kExpPointsFieldNumber = 12,
    kKillLogDataFieldNumber = 13,
    kMonsterKillLogsFieldNumber = 14,
    kAccountIdFieldNumber = 2,
    kCharacterIdFieldNumber = 3,
    kCharacterClassFieldNumber = 7,
    kEscapeMapNameFieldNumber = 10,
    kReasonFieldNumber = 11,
    kGameIdFieldNumber = 4,
    kEscapeFieldNumber = 1,
    kKillCountFieldNumber = 8,
    kGameTypeFieldNumber = 15,
    kNeedBlockFieldNumber = 16,
    kNeedHWBlockFieldNumber = 17,
  };
  // repeated .DC.Packet.SItem items = 5;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DC::Packet::SItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* _internal_mutable_items();
  public:
  const ::DC::Packet::SItem& items(int index) const;
  ::DC::Packet::SItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& items() const;
  // repeated .DC.Packet.SItem guaranteedItems = 6;
  int guaranteeditems_size() const;
  private:
  int _internal_guaranteeditems_size() const;

  public:
  void clear_guaranteeditems() ;
  ::DC::Packet::SItem* mutable_guaranteeditems(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* mutable_guaranteeditems();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& _internal_guaranteeditems() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* _internal_mutable_guaranteeditems();
  public:
  const ::DC::Packet::SItem& guaranteeditems(int index) const;
  ::DC::Packet::SItem* add_guaranteeditems();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& guaranteeditems() const;
  // repeated .DC.Packet.GameExitAdvPoint advPoints = 9;
  int advpoints_size() const;
  private:
  int _internal_advpoints_size() const;

  public:
  void clear_advpoints() ;
  ::DC::Packet::GameExitAdvPoint* mutable_advpoints(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitAdvPoint>* mutable_advpoints();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitAdvPoint>& _internal_advpoints() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitAdvPoint>* _internal_mutable_advpoints();
  public:
  const ::DC::Packet::GameExitAdvPoint& advpoints(int index) const;
  ::DC::Packet::GameExitAdvPoint* add_advpoints();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitAdvPoint>& advpoints() const;
  // repeated .DC.Packet.GameExitExpPoint expPoints = 12;
  int exppoints_size() const;
  private:
  int _internal_exppoints_size() const;

  public:
  void clear_exppoints() ;
  ::DC::Packet::GameExitExpPoint* mutable_exppoints(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitExpPoint>* mutable_exppoints();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitExpPoint>& _internal_exppoints() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitExpPoint>* _internal_mutable_exppoints();
  public:
  const ::DC::Packet::GameExitExpPoint& exppoints(int index) const;
  ::DC::Packet::GameExitExpPoint* add_exppoints();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitExpPoint>& exppoints() const;
  // repeated .DC.Packet.Killlog killLogData = 13;
  int killlogdata_size() const;
  private:
  int _internal_killlogdata_size() const;

  public:
  void clear_killlogdata() ;
  ::DC::Packet::Killlog* mutable_killlogdata(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Killlog>* mutable_killlogdata();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Killlog>& _internal_killlogdata() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Killlog>* _internal_mutable_killlogdata();
  public:
  const ::DC::Packet::Killlog& killlogdata(int index) const;
  ::DC::Packet::Killlog* add_killlogdata();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Killlog>& killlogdata() const;
  // repeated .DC.Packet.MonsterKillLog monsterKillLogs = 14;
  int monsterkilllogs_size() const;
  private:
  int _internal_monsterkilllogs_size() const;

  public:
  void clear_monsterkilllogs() ;
  ::DC::Packet::MonsterKillLog* mutable_monsterkilllogs(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::MonsterKillLog>* mutable_monsterkilllogs();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::MonsterKillLog>& _internal_monsterkilllogs() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::MonsterKillLog>* _internal_mutable_monsterkilllogs();
  public:
  const ::DC::Packet::MonsterKillLog& monsterkilllogs(int index) const;
  ::DC::Packet::MonsterKillLog* add_monsterkilllogs();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::MonsterKillLog>& monsterkilllogs() const;
  // string accountId = 2;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 3;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string characterClass = 7;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // string escapeMapName = 10;
  void clear_escapemapname() ;
  const std::string& escapemapname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_escapemapname(Arg_&& arg, Args_... args);
  std::string* mutable_escapemapname();
  PROTOBUF_NODISCARD std::string* release_escapemapname();
  void set_allocated_escapemapname(std::string* value);

  private:
  const std::string& _internal_escapemapname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_escapemapname(
      const std::string& value);
  std::string* _internal_mutable_escapemapname();

  public:
  // string reason = 11;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // uint64 gameId = 4;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // uint32 escape = 1;
  void clear_escape() ;
  ::uint32_t escape() const;
  void set_escape(::uint32_t value);

  private:
  ::uint32_t _internal_escape() const;
  void _internal_set_escape(::uint32_t value);

  public:
  // uint32 killCount = 8;
  void clear_killcount() ;
  ::uint32_t killcount() const;
  void set_killcount(::uint32_t value);

  private:
  ::uint32_t _internal_killcount() const;
  void _internal_set_killcount(::uint32_t value);

  public:
  // uint32 gameType = 15;
  void clear_gametype() ;
  ::uint32_t gametype() const;
  void set_gametype(::uint32_t value);

  private:
  ::uint32_t _internal_gametype() const;
  void _internal_set_gametype(::uint32_t value);

  public:
  // uint32 needBlock = 16;
  void clear_needblock() ;
  ::uint32_t needblock() const;
  void set_needblock(::uint32_t value);

  private:
  ::uint32_t _internal_needblock() const;
  void _internal_set_needblock(::uint32_t value);

  public:
  // uint32 needHWBlock = 17;
  void clear_needhwblock() ;
  ::uint32_t needhwblock() const;
  void set_needhwblock(::uint32_t value);

  private:
  ::uint32_t _internal_needhwblock() const;
  void _internal_set_needhwblock(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_GameExitUser_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 17, 6,
      109, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_GameExitUser_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_GameExitUser_POST& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SItem > items_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SItem > guaranteeditems_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::GameExitAdvPoint > advpoints_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::GameExitExpPoint > exppoints_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Killlog > killlogdata_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::MonsterKillLog > monsterkilllogs_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::google::protobuf::internal::ArenaStringPtr escapemapname_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::uint64_t gameid_;
    ::uint32_t escape_;
    ::uint32_t killcount_;
    ::uint32_t gametype_;
    ::uint32_t needblock_;
    ::uint32_t needhwblock_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_GameEndServer_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_GameEndServer_POST) */ {
 public:
  inline C2S_GameEndServer_POST() : C2S_GameEndServer_POST(nullptr) {}
  ~C2S_GameEndServer_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_GameEndServer_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_GameEndServer_POST(const C2S_GameEndServer_POST& from) : C2S_GameEndServer_POST(nullptr, from) {}
  inline C2S_GameEndServer_POST(C2S_GameEndServer_POST&& from) noexcept
      : C2S_GameEndServer_POST(nullptr, std::move(from)) {}
  inline C2S_GameEndServer_POST& operator=(const C2S_GameEndServer_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_GameEndServer_POST& operator=(C2S_GameEndServer_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_GameEndServer_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_GameEndServer_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_GameEndServer_POST*>(
        &_C2S_GameEndServer_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(C2S_GameEndServer_POST& a, C2S_GameEndServer_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_GameEndServer_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_GameEndServer_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_GameEndServer_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_GameEndServer_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_GameEndServer_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_GameEndServer_POST& from) { C2S_GameEndServer_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_GameEndServer_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_GameEndServer_POST"; }

 protected:
  explicit C2S_GameEndServer_POST(::google::protobuf::Arena* arena);
  C2S_GameEndServer_POST(::google::protobuf::Arena* arena, const C2S_GameEndServer_POST& from);
  C2S_GameEndServer_POST(::google::protobuf::Arena* arena, C2S_GameEndServer_POST&& from) noexcept
      : C2S_GameEndServer_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUsersFieldNumber = 1,
    kCirclesFieldNumber = 3,
    kGameIdFieldNumber = 2,
  };
  // repeated .DC.Packet.GameEndUserInfo users = 1;
  int users_size() const;
  private:
  int _internal_users_size() const;

  public:
  void clear_users() ;
  ::DC::Packet::GameEndUserInfo* mutable_users(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::GameEndUserInfo>* mutable_users();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameEndUserInfo>& _internal_users() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::GameEndUserInfo>* _internal_mutable_users();
  public:
  const ::DC::Packet::GameEndUserInfo& users(int index) const;
  ::DC::Packet::GameEndUserInfo* add_users();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameEndUserInfo>& users() const;
  // repeated .DC.Packet.Circle circles = 3;
  int circles_size() const;
  private:
  int _internal_circles_size() const;

  public:
  void clear_circles() ;
  ::DC::Packet::Circle* mutable_circles(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Circle>* mutable_circles();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Circle>& _internal_circles() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Circle>* _internal_mutable_circles();
  public:
  const ::DC::Packet::Circle& circles(int index) const;
  ::DC::Packet::Circle* add_circles();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Circle>& circles() const;
  // uint64 gameId = 2;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_GameEndServer_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_GameEndServer_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_GameEndServer_POST& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::GameEndUserInfo > users_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Circle > circles_;
    ::uint64_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_Dirty_Item_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_Dirty_Item_POST) */ {
 public:
  inline C2S_Dirty_Item_POST() : C2S_Dirty_Item_POST(nullptr) {}
  ~C2S_Dirty_Item_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_Dirty_Item_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_Dirty_Item_POST(const C2S_Dirty_Item_POST& from) : C2S_Dirty_Item_POST(nullptr, from) {}
  inline C2S_Dirty_Item_POST(C2S_Dirty_Item_POST&& from) noexcept
      : C2S_Dirty_Item_POST(nullptr, std::move(from)) {}
  inline C2S_Dirty_Item_POST& operator=(const C2S_Dirty_Item_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_Dirty_Item_POST& operator=(C2S_Dirty_Item_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_Dirty_Item_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_Dirty_Item_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_Dirty_Item_POST*>(
        &_C2S_Dirty_Item_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 49;
  friend void swap(C2S_Dirty_Item_POST& a, C2S_Dirty_Item_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_Dirty_Item_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_Dirty_Item_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_Dirty_Item_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_Dirty_Item_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_Dirty_Item_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_Dirty_Item_POST& from) { C2S_Dirty_Item_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_Dirty_Item_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_Dirty_Item_POST"; }

 protected:
  explicit C2S_Dirty_Item_POST(::google::protobuf::Arena* arena);
  C2S_Dirty_Item_POST(::google::protobuf::Arena* arena, const C2S_Dirty_Item_POST& from);
  C2S_Dirty_Item_POST(::google::protobuf::Arena* arena, C2S_Dirty_Item_POST&& from) noexcept
      : C2S_Dirty_Item_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpsertItemsFieldNumber = 4,
    kDeleteItemUniqueIdsFieldNumber = 5,
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kGameIdFieldNumber = 3,
  };
  // repeated .DC.Packet.SItem upsertItems = 4;
  int upsertitems_size() const;
  private:
  int _internal_upsertitems_size() const;

  public:
  void clear_upsertitems() ;
  ::DC::Packet::SItem* mutable_upsertitems(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* mutable_upsertitems();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& _internal_upsertitems() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* _internal_mutable_upsertitems();
  public:
  const ::DC::Packet::SItem& upsertitems(int index) const;
  ::DC::Packet::SItem* add_upsertitems();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& upsertitems() const;
  // repeated uint64 deleteItemUniqueIds = 5;
  int deleteitemuniqueids_size() const;
  private:
  int _internal_deleteitemuniqueids_size() const;

  public:
  void clear_deleteitemuniqueids() ;
  ::uint64_t deleteitemuniqueids(int index) const;
  void set_deleteitemuniqueids(int index, ::uint64_t value);
  void add_deleteitemuniqueids(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& deleteitemuniqueids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_deleteitemuniqueids();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_deleteitemuniqueids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_deleteitemuniqueids();

  public:
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // uint64 gameId = 3;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_Dirty_Item_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      58, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_Dirty_Item_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_Dirty_Item_POST& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SItem > upsertitems_;
    ::google::protobuf::RepeatedField<::uint64_t> deleteitemuniqueids_;
    ::google::protobuf::internal::CachedSize _deleteitemuniqueids_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::uint64_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_Prepare_FloorMatchMaking final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_Prepare_FloorMatchMaking) */ {
 public:
  inline C2S_Prepare_FloorMatchMaking() : C2S_Prepare_FloorMatchMaking(nullptr) {}
  ~C2S_Prepare_FloorMatchMaking() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_Prepare_FloorMatchMaking(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_Prepare_FloorMatchMaking(const C2S_Prepare_FloorMatchMaking& from) : C2S_Prepare_FloorMatchMaking(nullptr, from) {}
  inline C2S_Prepare_FloorMatchMaking(C2S_Prepare_FloorMatchMaking&& from) noexcept
      : C2S_Prepare_FloorMatchMaking(nullptr, std::move(from)) {}
  inline C2S_Prepare_FloorMatchMaking& operator=(const C2S_Prepare_FloorMatchMaking& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_Prepare_FloorMatchMaking& operator=(C2S_Prepare_FloorMatchMaking&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_Prepare_FloorMatchMaking& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_Prepare_FloorMatchMaking* internal_default_instance() {
    return reinterpret_cast<const C2S_Prepare_FloorMatchMaking*>(
        &_C2S_Prepare_FloorMatchMaking_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(C2S_Prepare_FloorMatchMaking& a, C2S_Prepare_FloorMatchMaking& b) { a.Swap(&b); }
  inline void Swap(C2S_Prepare_FloorMatchMaking* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_Prepare_FloorMatchMaking* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_Prepare_FloorMatchMaking* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_Prepare_FloorMatchMaking>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_Prepare_FloorMatchMaking& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_Prepare_FloorMatchMaking& from) { C2S_Prepare_FloorMatchMaking::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_Prepare_FloorMatchMaking* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_Prepare_FloorMatchMaking"; }

 protected:
  explicit C2S_Prepare_FloorMatchMaking(::google::protobuf::Arena* arena);
  C2S_Prepare_FloorMatchMaking(::google::protobuf::Arena* arena, const C2S_Prepare_FloorMatchMaking& from);
  C2S_Prepare_FloorMatchMaking(::google::protobuf::Arena* arena, C2S_Prepare_FloorMatchMaking&& from) noexcept
      : C2S_Prepare_FloorMatchMaking(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfoFieldNumber = 1,
    kResultInfoFieldNumber = 2,
  };
  // .DC.Packet.FloorMatchMaking_CharacterInfo info = 1;
  bool has_info() const;
  void clear_info() ;
  const ::DC::Packet::FloorMatchMaking_CharacterInfo& info() const;
  PROTOBUF_NODISCARD ::DC::Packet::FloorMatchMaking_CharacterInfo* release_info();
  ::DC::Packet::FloorMatchMaking_CharacterInfo* mutable_info();
  void set_allocated_info(::DC::Packet::FloorMatchMaking_CharacterInfo* value);
  void unsafe_arena_set_allocated_info(::DC::Packet::FloorMatchMaking_CharacterInfo* value);
  ::DC::Packet::FloorMatchMaking_CharacterInfo* unsafe_arena_release_info();

  private:
  const ::DC::Packet::FloorMatchMaking_CharacterInfo& _internal_info() const;
  ::DC::Packet::FloorMatchMaking_CharacterInfo* _internal_mutable_info();

  public:
  // .DC.Packet.GameResultInfo resultInfo = 2;
  bool has_resultinfo() const;
  void clear_resultinfo() ;
  const ::DC::Packet::GameResultInfo& resultinfo() const;
  PROTOBUF_NODISCARD ::DC::Packet::GameResultInfo* release_resultinfo();
  ::DC::Packet::GameResultInfo* mutable_resultinfo();
  void set_allocated_resultinfo(::DC::Packet::GameResultInfo* value);
  void unsafe_arena_set_allocated_resultinfo(::DC::Packet::GameResultInfo* value);
  ::DC::Packet::GameResultInfo* unsafe_arena_release_resultinfo();

  private:
  const ::DC::Packet::GameResultInfo& _internal_resultinfo() const;
  ::DC::Packet::GameResultInfo* _internal_mutable_resultinfo();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_Prepare_FloorMatchMaking)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_Prepare_FloorMatchMaking_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_Prepare_FloorMatchMaking& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::FloorMatchMaking_CharacterInfo* info_;
    ::DC::Packet::GameResultInfo* resultinfo_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_GameExitUser_V2_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_GameExitUser_V2_POST) */ {
 public:
  inline C2S_GameExitUser_V2_POST() : C2S_GameExitUser_V2_POST(nullptr) {}
  ~C2S_GameExitUser_V2_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_GameExitUser_V2_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_GameExitUser_V2_POST(const C2S_GameExitUser_V2_POST& from) : C2S_GameExitUser_V2_POST(nullptr, from) {}
  inline C2S_GameExitUser_V2_POST(C2S_GameExitUser_V2_POST&& from) noexcept
      : C2S_GameExitUser_V2_POST(nullptr, std::move(from)) {}
  inline C2S_GameExitUser_V2_POST& operator=(const C2S_GameExitUser_V2_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_GameExitUser_V2_POST& operator=(C2S_GameExitUser_V2_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_GameExitUser_V2_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_GameExitUser_V2_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_GameExitUser_V2_POST*>(
        &_C2S_GameExitUser_V2_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(C2S_GameExitUser_V2_POST& a, C2S_GameExitUser_V2_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_GameExitUser_V2_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_GameExitUser_V2_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_GameExitUser_V2_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_GameExitUser_V2_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_GameExitUser_V2_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_GameExitUser_V2_POST& from) { C2S_GameExitUser_V2_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_GameExitUser_V2_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_GameExitUser_V2_POST"; }

 protected:
  explicit C2S_GameExitUser_V2_POST(::google::protobuf::Arena* arena);
  C2S_GameExitUser_V2_POST(::google::protobuf::Arena* arena, const C2S_GameExitUser_V2_POST& from);
  C2S_GameExitUser_V2_POST(::google::protobuf::Arena* arena, C2S_GameExitUser_V2_POST&& from) noexcept
      : C2S_GameExitUser_V2_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultInfoFieldNumber = 1,
  };
  // .DC.Packet.GameResultInfo resultInfo = 1;
  bool has_resultinfo() const;
  void clear_resultinfo() ;
  const ::DC::Packet::GameResultInfo& resultinfo() const;
  PROTOBUF_NODISCARD ::DC::Packet::GameResultInfo* release_resultinfo();
  ::DC::Packet::GameResultInfo* mutable_resultinfo();
  void set_allocated_resultinfo(::DC::Packet::GameResultInfo* value);
  void unsafe_arena_set_allocated_resultinfo(::DC::Packet::GameResultInfo* value);
  ::DC::Packet::GameResultInfo* unsafe_arena_release_resultinfo();

  private:
  const ::DC::Packet::GameResultInfo& _internal_resultinfo() const;
  ::DC::Packet::GameResultInfo* _internal_mutable_resultinfo();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_GameExitUser_V2_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_GameExitUser_V2_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_GameExitUser_V2_POST& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::GameResultInfo* resultinfo_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_GameEscapeUser_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_GameEscapeUser_POST) */ {
 public:
  inline C2S_GameEscapeUser_POST() : C2S_GameEscapeUser_POST(nullptr) {}
  ~C2S_GameEscapeUser_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_GameEscapeUser_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_GameEscapeUser_POST(const C2S_GameEscapeUser_POST& from) : C2S_GameEscapeUser_POST(nullptr, from) {}
  inline C2S_GameEscapeUser_POST(C2S_GameEscapeUser_POST&& from) noexcept
      : C2S_GameEscapeUser_POST(nullptr, std::move(from)) {}
  inline C2S_GameEscapeUser_POST& operator=(const C2S_GameEscapeUser_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_GameEscapeUser_POST& operator=(C2S_GameEscapeUser_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_GameEscapeUser_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_GameEscapeUser_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_GameEscapeUser_POST*>(
        &_C2S_GameEscapeUser_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(C2S_GameEscapeUser_POST& a, C2S_GameEscapeUser_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_GameEscapeUser_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_GameEscapeUser_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_GameEscapeUser_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_GameEscapeUser_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_GameEscapeUser_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_GameEscapeUser_POST& from) { C2S_GameEscapeUser_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_GameEscapeUser_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_GameEscapeUser_POST"; }

 protected:
  explicit C2S_GameEscapeUser_POST(::google::protobuf::Arena* arena);
  C2S_GameEscapeUser_POST(::google::protobuf::Arena* arena, const C2S_GameEscapeUser_POST& from);
  C2S_GameEscapeUser_POST(::google::protobuf::Arena* arena, C2S_GameEscapeUser_POST&& from) noexcept
      : C2S_GameEscapeUser_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 2,
    kFriendItemRecoveryInfosFieldNumber = 4,
    kSecretIdFieldNumber = 3,
    kResultInfoFieldNumber = 1,
  };
  // repeated .DC.Packet.SItem items = 2;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DC::Packet::SItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* _internal_mutable_items();
  public:
  const ::DC::Packet::SItem& items(int index) const;
  ::DC::Packet::SItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& items() const;
  // repeated .DC.Packet.SFriendItemRecoveryInfo friendItemRecoveryInfos = 4;
  int frienditemrecoveryinfos_size() const;
  private:
  int _internal_frienditemrecoveryinfos_size() const;

  public:
  void clear_frienditemrecoveryinfos() ;
  ::DC::Packet::SFriendItemRecoveryInfo* mutable_frienditemrecoveryinfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SFriendItemRecoveryInfo>* mutable_frienditemrecoveryinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SFriendItemRecoveryInfo>& _internal_frienditemrecoveryinfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SFriendItemRecoveryInfo>* _internal_mutable_frienditemrecoveryinfos();
  public:
  const ::DC::Packet::SFriendItemRecoveryInfo& frienditemrecoveryinfos(int index) const;
  ::DC::Packet::SFriendItemRecoveryInfo* add_frienditemrecoveryinfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SFriendItemRecoveryInfo>& frienditemrecoveryinfos() const;
  // string secretId = 3;
  void clear_secretid() ;
  const std::string& secretid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_secretid(Arg_&& arg, Args_... args);
  std::string* mutable_secretid();
  PROTOBUF_NODISCARD std::string* release_secretid();
  void set_allocated_secretid(std::string* value);

  private:
  const std::string& _internal_secretid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_secretid(
      const std::string& value);
  std::string* _internal_mutable_secretid();

  public:
  // .DC.Packet.GameResultInfo resultInfo = 1;
  bool has_resultinfo() const;
  void clear_resultinfo() ;
  const ::DC::Packet::GameResultInfo& resultinfo() const;
  PROTOBUF_NODISCARD ::DC::Packet::GameResultInfo* release_resultinfo();
  ::DC::Packet::GameResultInfo* mutable_resultinfo();
  void set_allocated_resultinfo(::DC::Packet::GameResultInfo* value);
  void unsafe_arena_set_allocated_resultinfo(::DC::Packet::GameResultInfo* value);
  ::DC::Packet::GameResultInfo* unsafe_arena_release_resultinfo();

  private:
  const ::DC::Packet::GameResultInfo& _internal_resultinfo() const;
  ::DC::Packet::GameResultInfo* _internal_mutable_resultinfo();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_GameEscapeUser_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 3,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_GameEscapeUser_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_GameEscapeUser_POST& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SItem > items_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SFriendItemRecoveryInfo > frienditemrecoveryinfos_;
    ::google::protobuf::internal::ArenaStringPtr secretid_;
    ::DC::Packet::GameResultInfo* resultinfo_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};
// -------------------------------------------------------------------

class C2S_Arena_Result_POST final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.C2S_Arena_Result_POST) */ {
 public:
  inline C2S_Arena_Result_POST() : C2S_Arena_Result_POST(nullptr) {}
  ~C2S_Arena_Result_POST() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C2S_Arena_Result_POST(
      ::google::protobuf::internal::ConstantInitialized);

  inline C2S_Arena_Result_POST(const C2S_Arena_Result_POST& from) : C2S_Arena_Result_POST(nullptr, from) {}
  inline C2S_Arena_Result_POST(C2S_Arena_Result_POST&& from) noexcept
      : C2S_Arena_Result_POST(nullptr, std::move(from)) {}
  inline C2S_Arena_Result_POST& operator=(const C2S_Arena_Result_POST& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2S_Arena_Result_POST& operator=(C2S_Arena_Result_POST&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C2S_Arena_Result_POST& default_instance() {
    return *internal_default_instance();
  }
  static inline const C2S_Arena_Result_POST* internal_default_instance() {
    return reinterpret_cast<const C2S_Arena_Result_POST*>(
        &_C2S_Arena_Result_POST_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 51;
  friend void swap(C2S_Arena_Result_POST& a, C2S_Arena_Result_POST& b) { a.Swap(&b); }
  inline void Swap(C2S_Arena_Result_POST* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2S_Arena_Result_POST* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C2S_Arena_Result_POST* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<C2S_Arena_Result_POST>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C2S_Arena_Result_POST& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C2S_Arena_Result_POST& from) { C2S_Arena_Result_POST::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(C2S_Arena_Result_POST* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.C2S_Arena_Result_POST"; }

 protected:
  explicit C2S_Arena_Result_POST(::google::protobuf::Arena* arena);
  C2S_Arena_Result_POST(::google::protobuf::Arena* arena, const C2S_Arena_Result_POST& from);
  C2S_Arena_Result_POST(::google::protobuf::Arena* arena, C2S_Arena_Result_POST&& from) noexcept
      : C2S_Arena_Result_POST(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 2,
    kSecretIdFieldNumber = 3,
    kResultInfoFieldNumber = 1,
  };
  // repeated .DC.Packet.SItem items = 2;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DC::Packet::SItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* _internal_mutable_items();
  public:
  const ::DC::Packet::SItem& items(int index) const;
  ::DC::Packet::SItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& items() const;
  // string secretId = 3;
  void clear_secretid() ;
  const std::string& secretid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_secretid(Arg_&& arg, Args_... args);
  std::string* mutable_secretid();
  PROTOBUF_NODISCARD std::string* release_secretid();
  void set_allocated_secretid(std::string* value);

  private:
  const std::string& _internal_secretid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_secretid(
      const std::string& value);
  std::string* _internal_mutable_secretid();

  public:
  // .DC.Packet.GameResultInfo resultInfo = 1;
  bool has_resultinfo() const;
  void clear_resultinfo() ;
  const ::DC::Packet::GameResultInfo& resultinfo() const;
  PROTOBUF_NODISCARD ::DC::Packet::GameResultInfo* release_resultinfo();
  ::DC::Packet::GameResultInfo* mutable_resultinfo();
  void set_allocated_resultinfo(::DC::Packet::GameResultInfo* value);
  void unsafe_arena_set_allocated_resultinfo(::DC::Packet::GameResultInfo* value);
  ::DC::Packet::GameResultInfo* unsafe_arena_release_resultinfo();

  private:
  const ::DC::Packet::GameResultInfo& _internal_resultinfo() const;
  ::DC::Packet::GameResultInfo* _internal_mutable_resultinfo();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.C2S_Arena_Result_POST)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      48, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_C2S_Arena_Result_POST_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C2S_Arena_Result_POST& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SItem > items_;
    ::google::protobuf::internal::ArenaStringPtr secretid_;
    ::DC::Packet::GameResultInfo* resultinfo_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_DediServer_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SGameQuestContentInfo

// string contentId = 2;
inline void SGameQuestContentInfo::clear_contentid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.ClearToEmpty();
}
inline const std::string& SGameQuestContentInfo::contentid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SGameQuestContentInfo.contentId)
  return _internal_contentid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SGameQuestContentInfo::set_contentid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SGameQuestContentInfo.contentId)
}
inline std::string* SGameQuestContentInfo::mutable_contentid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contentid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SGameQuestContentInfo.contentId)
  return _s;
}
inline const std::string& SGameQuestContentInfo::_internal_contentid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contentid_.Get();
}
inline void SGameQuestContentInfo::_internal_set_contentid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.Set(value, GetArena());
}
inline std::string* SGameQuestContentInfo::_internal_mutable_contentid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contentid_.Mutable( GetArena());
}
inline std::string* SGameQuestContentInfo::release_contentid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SGameQuestContentInfo.contentId)
  return _impl_.contentid_.Release();
}
inline void SGameQuestContentInfo::set_allocated_contentid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contentid_.IsDefault()) {
          _impl_.contentid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SGameQuestContentInfo.contentId)
}

// int32 contentValue = 3;
inline void SGameQuestContentInfo::clear_contentvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentvalue_ = 0;
}
inline ::int32_t SGameQuestContentInfo::contentvalue() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SGameQuestContentInfo.contentValue)
  return _internal_contentvalue();
}
inline void SGameQuestContentInfo::set_contentvalue(::int32_t value) {
  _internal_set_contentvalue(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SGameQuestContentInfo.contentValue)
}
inline ::int32_t SGameQuestContentInfo::_internal_contentvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contentvalue_;
}
inline void SGameQuestContentInfo::_internal_set_contentvalue(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentvalue_ = value;
}

// -------------------------------------------------------------------

// SGameQuestInfo

// string questId = 1;
inline void SGameQuestInfo::clear_questid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.questid_.ClearToEmpty();
}
inline const std::string& SGameQuestInfo::questid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SGameQuestInfo.questId)
  return _internal_questid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SGameQuestInfo::set_questid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.questid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SGameQuestInfo.questId)
}
inline std::string* SGameQuestInfo::mutable_questid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_questid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SGameQuestInfo.questId)
  return _s;
}
inline const std::string& SGameQuestInfo::_internal_questid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.questid_.Get();
}
inline void SGameQuestInfo::_internal_set_questid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.questid_.Set(value, GetArena());
}
inline std::string* SGameQuestInfo::_internal_mutable_questid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.questid_.Mutable( GetArena());
}
inline std::string* SGameQuestInfo::release_questid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SGameQuestInfo.questId)
  return _impl_.questid_.Release();
}
inline void SGameQuestInfo::set_allocated_questid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.questid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.questid_.IsDefault()) {
          _impl_.questid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SGameQuestInfo.questId)
}

// repeated .DC.Packet.SGameQuestContentInfo infos = 2;
inline int SGameQuestInfo::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int SGameQuestInfo::infos_size() const {
  return _internal_infos_size();
}
inline void SGameQuestInfo::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::DC::Packet::SGameQuestContentInfo* SGameQuestInfo::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SGameQuestInfo.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestContentInfo>* SGameQuestInfo::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SGameQuestInfo.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::DC::Packet::SGameQuestContentInfo& SGameQuestInfo::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SGameQuestInfo.infos)
  return _internal_infos().Get(index);
}
inline ::DC::Packet::SGameQuestContentInfo* SGameQuestInfo::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SGameQuestContentInfo* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SGameQuestInfo.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestContentInfo>& SGameQuestInfo::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SGameQuestInfo.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestContentInfo>&
SGameQuestInfo::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestContentInfo>*
SGameQuestInfo::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

// -------------------------------------------------------------------

// S2C_GameEnterUser_Json

// string restUrl = 1;
inline void S2C_GameEnterUser_Json::clear_resturl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resturl_.ClearToEmpty();
}
inline const std::string& S2C_GameEnterUser_Json::resturl() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameEnterUser_Json.restUrl)
  return _internal_resturl();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameEnterUser_Json::set_resturl(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resturl_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameEnterUser_Json.restUrl)
}
inline std::string* S2C_GameEnterUser_Json::mutable_resturl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_resturl();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameEnterUser_Json.restUrl)
  return _s;
}
inline const std::string& S2C_GameEnterUser_Json::_internal_resturl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resturl_.Get();
}
inline void S2C_GameEnterUser_Json::_internal_set_resturl(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resturl_.Set(value, GetArena());
}
inline std::string* S2C_GameEnterUser_Json::_internal_mutable_resturl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.resturl_.Mutable( GetArena());
}
inline std::string* S2C_GameEnterUser_Json::release_resturl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameEnterUser_Json.restUrl)
  return _impl_.resturl_.Release();
}
inline void S2C_GameEnterUser_Json::set_allocated_resturl(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resturl_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.resturl_.IsDefault()) {
          _impl_.resturl_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameEnterUser_Json.restUrl)
}

// bytes nickName = 2;
inline void S2C_GameEnterUser_Json::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& S2C_GameEnterUser_Json::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameEnterUser_Json.nickName)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameEnterUser_Json::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameEnterUser_Json.nickName)
}
inline std::string* S2C_GameEnterUser_Json::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameEnterUser_Json.nickName)
  return _s;
}
inline const std::string& S2C_GameEnterUser_Json::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nickname_.Get();
}
inline void S2C_GameEnterUser_Json::_internal_set_nickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* S2C_GameEnterUser_Json::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* S2C_GameEnterUser_Json::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameEnterUser_Json.nickName)
  return _impl_.nickname_.Release();
}
inline void S2C_GameEnterUser_Json::set_allocated_nickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameEnterUser_Json.nickName)
}

// bytes streamingNickName = 3;
inline void S2C_GameEnterUser_Json::clear_streamingnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.streamingnickname_.ClearToEmpty();
}
inline const std::string& S2C_GameEnterUser_Json::streamingnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameEnterUser_Json.streamingNickName)
  return _internal_streamingnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameEnterUser_Json::set_streamingnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.streamingnickname_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameEnterUser_Json.streamingNickName)
}
inline std::string* S2C_GameEnterUser_Json::mutable_streamingnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_streamingnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameEnterUser_Json.streamingNickName)
  return _s;
}
inline const std::string& S2C_GameEnterUser_Json::_internal_streamingnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.streamingnickname_.Get();
}
inline void S2C_GameEnterUser_Json::_internal_set_streamingnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.streamingnickname_.Set(value, GetArena());
}
inline std::string* S2C_GameEnterUser_Json::_internal_mutable_streamingnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.streamingnickname_.Mutable( GetArena());
}
inline std::string* S2C_GameEnterUser_Json::release_streamingnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameEnterUser_Json.streamingNickName)
  return _impl_.streamingnickname_.Release();
}
inline void S2C_GameEnterUser_Json::set_allocated_streamingnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.streamingnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.streamingnickname_.IsDefault()) {
          _impl_.streamingnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameEnterUser_Json.streamingNickName)
}

// string characterClass = 4;
inline void S2C_GameEnterUser_Json::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& S2C_GameEnterUser_Json::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameEnterUser_Json.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameEnterUser_Json::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameEnterUser_Json.characterClass)
}
inline std::string* S2C_GameEnterUser_Json::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameEnterUser_Json.characterClass)
  return _s;
}
inline const std::string& S2C_GameEnterUser_Json::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void S2C_GameEnterUser_Json::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* S2C_GameEnterUser_Json::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* S2C_GameEnterUser_Json::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameEnterUser_Json.characterClass)
  return _impl_.characterclass_.Release();
}
inline void S2C_GameEnterUser_Json::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameEnterUser_Json.characterClass)
}

// string characterId = 5;
inline void S2C_GameEnterUser_Json::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& S2C_GameEnterUser_Json::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameEnterUser_Json.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameEnterUser_Json::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameEnterUser_Json.characterId)
}
inline std::string* S2C_GameEnterUser_Json::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameEnterUser_Json.characterId)
  return _s;
}
inline const std::string& S2C_GameEnterUser_Json::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void S2C_GameEnterUser_Json::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* S2C_GameEnterUser_Json::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* S2C_GameEnterUser_Json::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameEnterUser_Json.characterId)
  return _impl_.characterid_.Release();
}
inline void S2C_GameEnterUser_Json::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameEnterUser_Json.characterId)
}

// uint32 gender = 6;
inline void S2C_GameEnterUser_Json::clear_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = 0u;
}
inline ::uint32_t S2C_GameEnterUser_Json::gender() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameEnterUser_Json.gender)
  return _internal_gender();
}
inline void S2C_GameEnterUser_Json::set_gender(::uint32_t value) {
  _internal_set_gender(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameEnterUser_Json.gender)
}
inline ::uint32_t S2C_GameEnterUser_Json::_internal_gender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gender_;
}
inline void S2C_GameEnterUser_Json::_internal_set_gender(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = value;
}

// uint32 level = 7;
inline void S2C_GameEnterUser_Json::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0u;
}
inline ::uint32_t S2C_GameEnterUser_Json::level() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameEnterUser_Json.level)
  return _internal_level();
}
inline void S2C_GameEnterUser_Json::set_level(::uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameEnterUser_Json.level)
}
inline ::uint32_t S2C_GameEnterUser_Json::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void S2C_GameEnterUser_Json::_internal_set_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// string partyId = 8;
inline void S2C_GameEnterUser_Json::clear_partyid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partyid_.ClearToEmpty();
}
inline const std::string& S2C_GameEnterUser_Json::partyid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameEnterUser_Json.partyId)
  return _internal_partyid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameEnterUser_Json::set_partyid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partyid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameEnterUser_Json.partyId)
}
inline std::string* S2C_GameEnterUser_Json::mutable_partyid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_partyid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameEnterUser_Json.partyId)
  return _s;
}
inline const std::string& S2C_GameEnterUser_Json::_internal_partyid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partyid_.Get();
}
inline void S2C_GameEnterUser_Json::_internal_set_partyid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partyid_.Set(value, GetArena());
}
inline std::string* S2C_GameEnterUser_Json::_internal_mutable_partyid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.partyid_.Mutable( GetArena());
}
inline std::string* S2C_GameEnterUser_Json::release_partyid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameEnterUser_Json.partyId)
  return _impl_.partyid_.Release();
}
inline void S2C_GameEnterUser_Json::set_allocated_partyid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partyid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.partyid_.IsDefault()) {
          _impl_.partyid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameEnterUser_Json.partyId)
}

// int32 karmaRating = 9;
inline void S2C_GameEnterUser_Json::clear_karmarating() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.karmarating_ = 0;
}
inline ::int32_t S2C_GameEnterUser_Json::karmarating() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameEnterUser_Json.karmaRating)
  return _internal_karmarating();
}
inline void S2C_GameEnterUser_Json::set_karmarating(::int32_t value) {
  _internal_set_karmarating(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameEnterUser_Json.karmaRating)
}
inline ::int32_t S2C_GameEnterUser_Json::_internal_karmarating() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.karmarating_;
}
inline void S2C_GameEnterUser_Json::_internal_set_karmarating(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.karmarating_ = value;
}

// -------------------------------------------------------------------

// GameExitAdvPoint

// int32 advPointType = 1;
inline void GameExitAdvPoint::clear_advpointtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.advpointtype_ = 0;
}
inline ::int32_t GameExitAdvPoint::advpointtype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameExitAdvPoint.advPointType)
  return _internal_advpointtype();
}
inline void GameExitAdvPoint::set_advpointtype(::int32_t value) {
  _internal_set_advpointtype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameExitAdvPoint.advPointType)
}
inline ::int32_t GameExitAdvPoint::_internal_advpointtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.advpointtype_;
}
inline void GameExitAdvPoint::_internal_set_advpointtype(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.advpointtype_ = value;
}

// int32 advPoint = 2;
inline void GameExitAdvPoint::clear_advpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.advpoint_ = 0;
}
inline ::int32_t GameExitAdvPoint::advpoint() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameExitAdvPoint.advPoint)
  return _internal_advpoint();
}
inline void GameExitAdvPoint::set_advpoint(::int32_t value) {
  _internal_set_advpoint(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameExitAdvPoint.advPoint)
}
inline ::int32_t GameExitAdvPoint::_internal_advpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.advpoint_;
}
inline void GameExitAdvPoint::_internal_set_advpoint(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.advpoint_ = value;
}

// -------------------------------------------------------------------

// GameExitExpPoint

// uint32 expPointType = 1;
inline void GameExitExpPoint::clear_exppointtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exppointtype_ = 0u;
}
inline ::uint32_t GameExitExpPoint::exppointtype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameExitExpPoint.expPointType)
  return _internal_exppointtype();
}
inline void GameExitExpPoint::set_exppointtype(::uint32_t value) {
  _internal_set_exppointtype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameExitExpPoint.expPointType)
}
inline ::uint32_t GameExitExpPoint::_internal_exppointtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exppointtype_;
}
inline void GameExitExpPoint::_internal_set_exppointtype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exppointtype_ = value;
}

// uint32 expPoint = 2;
inline void GameExitExpPoint::clear_exppoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exppoint_ = 0u;
}
inline ::uint32_t GameExitExpPoint::exppoint() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameExitExpPoint.expPoint)
  return _internal_exppoint();
}
inline void GameExitExpPoint::set_exppoint(::uint32_t value) {
  _internal_set_exppoint(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameExitExpPoint.expPoint)
}
inline ::uint32_t GameExitExpPoint::_internal_exppoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exppoint_;
}
inline void GameExitExpPoint::_internal_set_exppoint(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exppoint_ = value;
}

// -------------------------------------------------------------------

// Killlog

// string instigatorAccountId = 1;
inline void Killlog::clear_instigatoraccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instigatoraccountid_.ClearToEmpty();
}
inline const std::string& Killlog::instigatoraccountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Killlog.instigatorAccountId)
  return _internal_instigatoraccountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Killlog::set_instigatoraccountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instigatoraccountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Killlog.instigatorAccountId)
}
inline std::string* Killlog::mutable_instigatoraccountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_instigatoraccountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Killlog.instigatorAccountId)
  return _s;
}
inline const std::string& Killlog::_internal_instigatoraccountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instigatoraccountid_.Get();
}
inline void Killlog::_internal_set_instigatoraccountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instigatoraccountid_.Set(value, GetArena());
}
inline std::string* Killlog::_internal_mutable_instigatoraccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.instigatoraccountid_.Mutable( GetArena());
}
inline std::string* Killlog::release_instigatoraccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Killlog.instigatorAccountId)
  return _impl_.instigatoraccountid_.Release();
}
inline void Killlog::set_allocated_instigatoraccountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instigatoraccountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.instigatoraccountid_.IsDefault()) {
          _impl_.instigatoraccountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Killlog.instigatorAccountId)
}

// string instigatorName = 2;
inline void Killlog::clear_instigatorname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instigatorname_.ClearToEmpty();
}
inline const std::string& Killlog::instigatorname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Killlog.instigatorName)
  return _internal_instigatorname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Killlog::set_instigatorname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instigatorname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Killlog.instigatorName)
}
inline std::string* Killlog::mutable_instigatorname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_instigatorname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Killlog.instigatorName)
  return _s;
}
inline const std::string& Killlog::_internal_instigatorname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instigatorname_.Get();
}
inline void Killlog::_internal_set_instigatorname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instigatorname_.Set(value, GetArena());
}
inline std::string* Killlog::_internal_mutable_instigatorname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.instigatorname_.Mutable( GetArena());
}
inline std::string* Killlog::release_instigatorname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Killlog.instigatorName)
  return _impl_.instigatorname_.Release();
}
inline void Killlog::set_allocated_instigatorname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instigatorname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.instigatorname_.IsDefault()) {
          _impl_.instigatorname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Killlog.instigatorName)
}

// string effectCauserName = 3;
inline void Killlog::clear_effectcausername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.effectcausername_.ClearToEmpty();
}
inline const std::string& Killlog::effectcausername() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Killlog.effectCauserName)
  return _internal_effectcausername();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Killlog::set_effectcausername(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.effectcausername_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Killlog.effectCauserName)
}
inline std::string* Killlog::mutable_effectcausername() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_effectcausername();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Killlog.effectCauserName)
  return _s;
}
inline const std::string& Killlog::_internal_effectcausername() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.effectcausername_.Get();
}
inline void Killlog::_internal_set_effectcausername(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.effectcausername_.Set(value, GetArena());
}
inline std::string* Killlog::_internal_mutable_effectcausername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.effectcausername_.Mutable( GetArena());
}
inline std::string* Killlog::release_effectcausername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Killlog.effectCauserName)
  return _impl_.effectcausername_.Release();
}
inline void Killlog::set_allocated_effectcausername(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.effectcausername_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.effectcausername_.IsDefault()) {
          _impl_.effectcausername_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Killlog.effectCauserName)
}

// uint32 hitBoxType = 4;
inline void Killlog::clear_hitboxtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hitboxtype_ = 0u;
}
inline ::uint32_t Killlog::hitboxtype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Killlog.hitBoxType)
  return _internal_hitboxtype();
}
inline void Killlog::set_hitboxtype(::uint32_t value) {
  _internal_set_hitboxtype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Killlog.hitBoxType)
}
inline ::uint32_t Killlog::_internal_hitboxtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hitboxtype_;
}
inline void Killlog::_internal_set_hitboxtype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hitboxtype_ = value;
}

// int32 advPoint = 5;
inline void Killlog::clear_advpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.advpoint_ = 0;
}
inline ::int32_t Killlog::advpoint() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Killlog.advPoint)
  return _internal_advpoint();
}
inline void Killlog::set_advpoint(::int32_t value) {
  _internal_set_advpoint(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Killlog.advPoint)
}
inline ::int32_t Killlog::_internal_advpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.advpoint_;
}
inline void Killlog::_internal_set_advpoint(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.advpoint_ = value;
}

// -------------------------------------------------------------------

// MonsterKillLog

// string monsterName = 1;
inline void MonsterKillLog::clear_monstername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monstername_.ClearToEmpty();
}
inline const std::string& MonsterKillLog::monstername() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.MonsterKillLog.monsterName)
  return _internal_monstername();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MonsterKillLog::set_monstername(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monstername_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.MonsterKillLog.monsterName)
}
inline std::string* MonsterKillLog::mutable_monstername() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_monstername();
  // @@protoc_insertion_point(field_mutable:DC.Packet.MonsterKillLog.monsterName)
  return _s;
}
inline const std::string& MonsterKillLog::_internal_monstername() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.monstername_.Get();
}
inline void MonsterKillLog::_internal_set_monstername(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monstername_.Set(value, GetArena());
}
inline std::string* MonsterKillLog::_internal_mutable_monstername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.monstername_.Mutable( GetArena());
}
inline std::string* MonsterKillLog::release_monstername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.MonsterKillLog.monsterName)
  return _impl_.monstername_.Release();
}
inline void MonsterKillLog::set_allocated_monstername(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monstername_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.monstername_.IsDefault()) {
          _impl_.monstername_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.MonsterKillLog.monsterName)
}

// uint32 monsterKillCount = 2;
inline void MonsterKillLog::clear_monsterkillcount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monsterkillcount_ = 0u;
}
inline ::uint32_t MonsterKillLog::monsterkillcount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.MonsterKillLog.monsterKillCount)
  return _internal_monsterkillcount();
}
inline void MonsterKillLog::set_monsterkillcount(::uint32_t value) {
  _internal_set_monsterkillcount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.MonsterKillLog.monsterKillCount)
}
inline ::uint32_t MonsterKillLog::_internal_monsterkillcount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.monsterkillcount_;
}
inline void MonsterKillLog::_internal_set_monsterkillcount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monsterkillcount_ = value;
}

// -------------------------------------------------------------------

// C2S_GameExitUser_POST

// uint32 escape = 1;
inline void C2S_GameExitUser_POST::clear_escape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escape_ = 0u;
}
inline ::uint32_t C2S_GameExitUser_POST::escape() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.escape)
  return _internal_escape();
}
inline void C2S_GameExitUser_POST::set_escape(::uint32_t value) {
  _internal_set_escape(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameExitUser_POST.escape)
}
inline ::uint32_t C2S_GameExitUser_POST::_internal_escape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.escape_;
}
inline void C2S_GameExitUser_POST::_internal_set_escape(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escape_ = value;
}

// string accountId = 2;
inline void C2S_GameExitUser_POST::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& C2S_GameExitUser_POST::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_GameExitUser_POST::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameExitUser_POST.accountId)
}
inline std::string* C2S_GameExitUser_POST::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameExitUser_POST.accountId)
  return _s;
}
inline const std::string& C2S_GameExitUser_POST::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void C2S_GameExitUser_POST::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* C2S_GameExitUser_POST::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* C2S_GameExitUser_POST::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_GameExitUser_POST.accountId)
  return _impl_.accountid_.Release();
}
inline void C2S_GameExitUser_POST::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_GameExitUser_POST.accountId)
}

// string characterId = 3;
inline void C2S_GameExitUser_POST::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& C2S_GameExitUser_POST::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_GameExitUser_POST::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameExitUser_POST.characterId)
}
inline std::string* C2S_GameExitUser_POST::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameExitUser_POST.characterId)
  return _s;
}
inline const std::string& C2S_GameExitUser_POST::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void C2S_GameExitUser_POST::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* C2S_GameExitUser_POST::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* C2S_GameExitUser_POST::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_GameExitUser_POST.characterId)
  return _impl_.characterid_.Release();
}
inline void C2S_GameExitUser_POST::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_GameExitUser_POST.characterId)
}

// uint64 gameId = 4;
inline void C2S_GameExitUser_POST::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t C2S_GameExitUser_POST::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.gameId)
  return _internal_gameid();
}
inline void C2S_GameExitUser_POST::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameExitUser_POST.gameId)
}
inline ::uint64_t C2S_GameExitUser_POST::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C2S_GameExitUser_POST::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// repeated .DC.Packet.SItem items = 5;
inline int C2S_GameExitUser_POST::_internal_items_size() const {
  return _internal_items().size();
}
inline int C2S_GameExitUser_POST::items_size() const {
  return _internal_items_size();
}
inline ::DC::Packet::SItem* C2S_GameExitUser_POST::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameExitUser_POST.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* C2S_GameExitUser_POST::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_GameExitUser_POST.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DC::Packet::SItem& C2S_GameExitUser_POST::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.items)
  return _internal_items().Get(index);
}
inline ::DC::Packet::SItem* C2S_GameExitUser_POST::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_GameExitUser_POST.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& C2S_GameExitUser_POST::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_GameExitUser_POST.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>&
C2S_GameExitUser_POST::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>*
C2S_GameExitUser_POST::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// repeated .DC.Packet.SItem guaranteedItems = 6;
inline int C2S_GameExitUser_POST::_internal_guaranteeditems_size() const {
  return _internal_guaranteeditems().size();
}
inline int C2S_GameExitUser_POST::guaranteeditems_size() const {
  return _internal_guaranteeditems_size();
}
inline ::DC::Packet::SItem* C2S_GameExitUser_POST::mutable_guaranteeditems(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameExitUser_POST.guaranteedItems)
  return _internal_mutable_guaranteeditems()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* C2S_GameExitUser_POST::mutable_guaranteeditems()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_GameExitUser_POST.guaranteedItems)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_guaranteeditems();
}
inline const ::DC::Packet::SItem& C2S_GameExitUser_POST::guaranteeditems(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.guaranteedItems)
  return _internal_guaranteeditems().Get(index);
}
inline ::DC::Packet::SItem* C2S_GameExitUser_POST::add_guaranteeditems() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SItem* _add = _internal_mutable_guaranteeditems()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_GameExitUser_POST.guaranteedItems)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& C2S_GameExitUser_POST::guaranteeditems() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_GameExitUser_POST.guaranteedItems)
  return _internal_guaranteeditems();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>&
C2S_GameExitUser_POST::_internal_guaranteeditems() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guaranteeditems_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>*
C2S_GameExitUser_POST::_internal_mutable_guaranteeditems() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.guaranteeditems_;
}

// string characterClass = 7;
inline void C2S_GameExitUser_POST::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& C2S_GameExitUser_POST::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_GameExitUser_POST::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameExitUser_POST.characterClass)
}
inline std::string* C2S_GameExitUser_POST::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameExitUser_POST.characterClass)
  return _s;
}
inline const std::string& C2S_GameExitUser_POST::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void C2S_GameExitUser_POST::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* C2S_GameExitUser_POST::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* C2S_GameExitUser_POST::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_GameExitUser_POST.characterClass)
  return _impl_.characterclass_.Release();
}
inline void C2S_GameExitUser_POST::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_GameExitUser_POST.characterClass)
}

// uint32 killCount = 8;
inline void C2S_GameExitUser_POST::clear_killcount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.killcount_ = 0u;
}
inline ::uint32_t C2S_GameExitUser_POST::killcount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.killCount)
  return _internal_killcount();
}
inline void C2S_GameExitUser_POST::set_killcount(::uint32_t value) {
  _internal_set_killcount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameExitUser_POST.killCount)
}
inline ::uint32_t C2S_GameExitUser_POST::_internal_killcount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.killcount_;
}
inline void C2S_GameExitUser_POST::_internal_set_killcount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.killcount_ = value;
}

// repeated .DC.Packet.GameExitAdvPoint advPoints = 9;
inline int C2S_GameExitUser_POST::_internal_advpoints_size() const {
  return _internal_advpoints().size();
}
inline int C2S_GameExitUser_POST::advpoints_size() const {
  return _internal_advpoints_size();
}
inline void C2S_GameExitUser_POST::clear_advpoints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.advpoints_.Clear();
}
inline ::DC::Packet::GameExitAdvPoint* C2S_GameExitUser_POST::mutable_advpoints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameExitUser_POST.advPoints)
  return _internal_mutable_advpoints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitAdvPoint>* C2S_GameExitUser_POST::mutable_advpoints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_GameExitUser_POST.advPoints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_advpoints();
}
inline const ::DC::Packet::GameExitAdvPoint& C2S_GameExitUser_POST::advpoints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.advPoints)
  return _internal_advpoints().Get(index);
}
inline ::DC::Packet::GameExitAdvPoint* C2S_GameExitUser_POST::add_advpoints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::GameExitAdvPoint* _add = _internal_mutable_advpoints()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_GameExitUser_POST.advPoints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitAdvPoint>& C2S_GameExitUser_POST::advpoints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_GameExitUser_POST.advPoints)
  return _internal_advpoints();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitAdvPoint>&
C2S_GameExitUser_POST::_internal_advpoints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.advpoints_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitAdvPoint>*
C2S_GameExitUser_POST::_internal_mutable_advpoints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.advpoints_;
}

// string escapeMapName = 10;
inline void C2S_GameExitUser_POST::clear_escapemapname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escapemapname_.ClearToEmpty();
}
inline const std::string& C2S_GameExitUser_POST::escapemapname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.escapeMapName)
  return _internal_escapemapname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_GameExitUser_POST::set_escapemapname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escapemapname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameExitUser_POST.escapeMapName)
}
inline std::string* C2S_GameExitUser_POST::mutable_escapemapname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_escapemapname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameExitUser_POST.escapeMapName)
  return _s;
}
inline const std::string& C2S_GameExitUser_POST::_internal_escapemapname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.escapemapname_.Get();
}
inline void C2S_GameExitUser_POST::_internal_set_escapemapname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escapemapname_.Set(value, GetArena());
}
inline std::string* C2S_GameExitUser_POST::_internal_mutable_escapemapname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.escapemapname_.Mutable( GetArena());
}
inline std::string* C2S_GameExitUser_POST::release_escapemapname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_GameExitUser_POST.escapeMapName)
  return _impl_.escapemapname_.Release();
}
inline void C2S_GameExitUser_POST::set_allocated_escapemapname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escapemapname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.escapemapname_.IsDefault()) {
          _impl_.escapemapname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_GameExitUser_POST.escapeMapName)
}

// string reason = 11;
inline void C2S_GameExitUser_POST::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& C2S_GameExitUser_POST::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_GameExitUser_POST::set_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameExitUser_POST.reason)
}
inline std::string* C2S_GameExitUser_POST::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameExitUser_POST.reason)
  return _s;
}
inline const std::string& C2S_GameExitUser_POST::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void C2S_GameExitUser_POST::_internal_set_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* C2S_GameExitUser_POST::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* C2S_GameExitUser_POST::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_GameExitUser_POST.reason)
  return _impl_.reason_.Release();
}
inline void C2S_GameExitUser_POST::set_allocated_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reason_.IsDefault()) {
          _impl_.reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_GameExitUser_POST.reason)
}

// repeated .DC.Packet.GameExitExpPoint expPoints = 12;
inline int C2S_GameExitUser_POST::_internal_exppoints_size() const {
  return _internal_exppoints().size();
}
inline int C2S_GameExitUser_POST::exppoints_size() const {
  return _internal_exppoints_size();
}
inline void C2S_GameExitUser_POST::clear_exppoints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exppoints_.Clear();
}
inline ::DC::Packet::GameExitExpPoint* C2S_GameExitUser_POST::mutable_exppoints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameExitUser_POST.expPoints)
  return _internal_mutable_exppoints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitExpPoint>* C2S_GameExitUser_POST::mutable_exppoints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_GameExitUser_POST.expPoints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_exppoints();
}
inline const ::DC::Packet::GameExitExpPoint& C2S_GameExitUser_POST::exppoints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.expPoints)
  return _internal_exppoints().Get(index);
}
inline ::DC::Packet::GameExitExpPoint* C2S_GameExitUser_POST::add_exppoints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::GameExitExpPoint* _add = _internal_mutable_exppoints()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_GameExitUser_POST.expPoints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitExpPoint>& C2S_GameExitUser_POST::exppoints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_GameExitUser_POST.expPoints)
  return _internal_exppoints();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitExpPoint>&
C2S_GameExitUser_POST::_internal_exppoints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exppoints_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitExpPoint>*
C2S_GameExitUser_POST::_internal_mutable_exppoints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.exppoints_;
}

// repeated .DC.Packet.Killlog killLogData = 13;
inline int C2S_GameExitUser_POST::_internal_killlogdata_size() const {
  return _internal_killlogdata().size();
}
inline int C2S_GameExitUser_POST::killlogdata_size() const {
  return _internal_killlogdata_size();
}
inline void C2S_GameExitUser_POST::clear_killlogdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.killlogdata_.Clear();
}
inline ::DC::Packet::Killlog* C2S_GameExitUser_POST::mutable_killlogdata(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameExitUser_POST.killLogData)
  return _internal_mutable_killlogdata()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Killlog>* C2S_GameExitUser_POST::mutable_killlogdata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_GameExitUser_POST.killLogData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_killlogdata();
}
inline const ::DC::Packet::Killlog& C2S_GameExitUser_POST::killlogdata(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.killLogData)
  return _internal_killlogdata().Get(index);
}
inline ::DC::Packet::Killlog* C2S_GameExitUser_POST::add_killlogdata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Killlog* _add = _internal_mutable_killlogdata()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_GameExitUser_POST.killLogData)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Killlog>& C2S_GameExitUser_POST::killlogdata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_GameExitUser_POST.killLogData)
  return _internal_killlogdata();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Killlog>&
C2S_GameExitUser_POST::_internal_killlogdata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.killlogdata_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Killlog>*
C2S_GameExitUser_POST::_internal_mutable_killlogdata() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.killlogdata_;
}

// repeated .DC.Packet.MonsterKillLog monsterKillLogs = 14;
inline int C2S_GameExitUser_POST::_internal_monsterkilllogs_size() const {
  return _internal_monsterkilllogs().size();
}
inline int C2S_GameExitUser_POST::monsterkilllogs_size() const {
  return _internal_monsterkilllogs_size();
}
inline void C2S_GameExitUser_POST::clear_monsterkilllogs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monsterkilllogs_.Clear();
}
inline ::DC::Packet::MonsterKillLog* C2S_GameExitUser_POST::mutable_monsterkilllogs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameExitUser_POST.monsterKillLogs)
  return _internal_mutable_monsterkilllogs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::MonsterKillLog>* C2S_GameExitUser_POST::mutable_monsterkilllogs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_GameExitUser_POST.monsterKillLogs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_monsterkilllogs();
}
inline const ::DC::Packet::MonsterKillLog& C2S_GameExitUser_POST::monsterkilllogs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.monsterKillLogs)
  return _internal_monsterkilllogs().Get(index);
}
inline ::DC::Packet::MonsterKillLog* C2S_GameExitUser_POST::add_monsterkilllogs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::MonsterKillLog* _add = _internal_mutable_monsterkilllogs()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_GameExitUser_POST.monsterKillLogs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::MonsterKillLog>& C2S_GameExitUser_POST::monsterkilllogs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_GameExitUser_POST.monsterKillLogs)
  return _internal_monsterkilllogs();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::MonsterKillLog>&
C2S_GameExitUser_POST::_internal_monsterkilllogs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.monsterkilllogs_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::MonsterKillLog>*
C2S_GameExitUser_POST::_internal_mutable_monsterkilllogs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.monsterkilllogs_;
}

// uint32 gameType = 15;
inline void C2S_GameExitUser_POST::clear_gametype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gametype_ = 0u;
}
inline ::uint32_t C2S_GameExitUser_POST::gametype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.gameType)
  return _internal_gametype();
}
inline void C2S_GameExitUser_POST::set_gametype(::uint32_t value) {
  _internal_set_gametype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameExitUser_POST.gameType)
}
inline ::uint32_t C2S_GameExitUser_POST::_internal_gametype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gametype_;
}
inline void C2S_GameExitUser_POST::_internal_set_gametype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gametype_ = value;
}

// uint32 needBlock = 16;
inline void C2S_GameExitUser_POST::clear_needblock() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needblock_ = 0u;
}
inline ::uint32_t C2S_GameExitUser_POST::needblock() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.needBlock)
  return _internal_needblock();
}
inline void C2S_GameExitUser_POST::set_needblock(::uint32_t value) {
  _internal_set_needblock(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameExitUser_POST.needBlock)
}
inline ::uint32_t C2S_GameExitUser_POST::_internal_needblock() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.needblock_;
}
inline void C2S_GameExitUser_POST::_internal_set_needblock(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needblock_ = value;
}

// uint32 needHWBlock = 17;
inline void C2S_GameExitUser_POST::clear_needhwblock() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needhwblock_ = 0u;
}
inline ::uint32_t C2S_GameExitUser_POST::needhwblock() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_POST.needHWBlock)
  return _internal_needhwblock();
}
inline void C2S_GameExitUser_POST::set_needhwblock(::uint32_t value) {
  _internal_set_needhwblock(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameExitUser_POST.needHWBlock)
}
inline ::uint32_t C2S_GameExitUser_POST::_internal_needhwblock() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.needhwblock_;
}
inline void C2S_GameExitUser_POST::_internal_set_needhwblock(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needhwblock_ = value;
}

// -------------------------------------------------------------------

// C2S_GameEnterUser_Post

// string accountId = 1;
inline void C2S_GameEnterUser_Post::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& C2S_GameEnterUser_Post::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameEnterUser_Post.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_GameEnterUser_Post::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameEnterUser_Post.accountId)
}
inline std::string* C2S_GameEnterUser_Post::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameEnterUser_Post.accountId)
  return _s;
}
inline const std::string& C2S_GameEnterUser_Post::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void C2S_GameEnterUser_Post::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* C2S_GameEnterUser_Post::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* C2S_GameEnterUser_Post::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_GameEnterUser_Post.accountId)
  return _impl_.accountid_.Release();
}
inline void C2S_GameEnterUser_Post::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_GameEnterUser_Post.accountId)
}

// string characterId = 2;
inline void C2S_GameEnterUser_Post::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& C2S_GameEnterUser_Post::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameEnterUser_Post.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_GameEnterUser_Post::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameEnterUser_Post.characterId)
}
inline std::string* C2S_GameEnterUser_Post::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameEnterUser_Post.characterId)
  return _s;
}
inline const std::string& C2S_GameEnterUser_Post::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void C2S_GameEnterUser_Post::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* C2S_GameEnterUser_Post::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* C2S_GameEnterUser_Post::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_GameEnterUser_Post.characterId)
  return _impl_.characterid_.Release();
}
inline void C2S_GameEnterUser_Post::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_GameEnterUser_Post.characterId)
}

// uint64 gameId = 3;
inline void C2S_GameEnterUser_Post::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t C2S_GameEnterUser_Post::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameEnterUser_Post.gameId)
  return _internal_gameid();
}
inline void C2S_GameEnterUser_Post::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameEnterUser_Post.gameId)
}
inline ::uint64_t C2S_GameEnterUser_Post::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C2S_GameEnterUser_Post::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// uint32 isSuccess = 4;
inline void C2S_GameEnterUser_Post::clear_issuccess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuccess_ = 0u;
}
inline ::uint32_t C2S_GameEnterUser_Post::issuccess() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameEnterUser_Post.isSuccess)
  return _internal_issuccess();
}
inline void C2S_GameEnterUser_Post::set_issuccess(::uint32_t value) {
  _internal_set_issuccess(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameEnterUser_Post.isSuccess)
}
inline ::uint32_t C2S_GameEnterUser_Post::_internal_issuccess() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.issuccess_;
}
inline void C2S_GameEnterUser_Post::_internal_set_issuccess(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuccess_ = value;
}

// -------------------------------------------------------------------

// S2C_GameStartServer_Json

// string restUrl = 1;
inline void S2C_GameStartServer_Json::clear_resturl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resturl_.ClearToEmpty();
}
inline const std::string& S2C_GameStartServer_Json::resturl() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.restUrl)
  return _internal_resturl();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameStartServer_Json::set_resturl(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resturl_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.restUrl)
}
inline std::string* S2C_GameStartServer_Json::mutable_resturl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_resturl();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameStartServer_Json.restUrl)
  return _s;
}
inline const std::string& S2C_GameStartServer_Json::_internal_resturl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resturl_.Get();
}
inline void S2C_GameStartServer_Json::_internal_set_resturl(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resturl_.Set(value, GetArena());
}
inline std::string* S2C_GameStartServer_Json::_internal_mutable_resturl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.resturl_.Mutable( GetArena());
}
inline std::string* S2C_GameStartServer_Json::release_resturl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameStartServer_Json.restUrl)
  return _impl_.resturl_.Release();
}
inline void S2C_GameStartServer_Json::set_allocated_resturl(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resturl_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.resturl_.IsDefault()) {
          _impl_.resturl_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameStartServer_Json.restUrl)
}

// uint64 gameId = 2;
inline void S2C_GameStartServer_Json::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t S2C_GameStartServer_Json::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.gameId)
  return _internal_gameid();
}
inline void S2C_GameStartServer_Json::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.gameId)
}
inline ::uint64_t S2C_GameStartServer_Json::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void S2C_GameStartServer_Json::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// uint32 maxGameUser = 3;
inline void S2C_GameStartServer_Json::clear_maxgameuser() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxgameuser_ = 0u;
}
inline ::uint32_t S2C_GameStartServer_Json::maxgameuser() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.maxGameUser)
  return _internal_maxgameuser();
}
inline void S2C_GameStartServer_Json::set_maxgameuser(::uint32_t value) {
  _internal_set_maxgameuser(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.maxGameUser)
}
inline ::uint32_t S2C_GameStartServer_Json::_internal_maxgameuser() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maxgameuser_;
}
inline void S2C_GameStartServer_Json::_internal_set_maxgameuser(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxgameuser_ = value;
}

// uint32 waitTimeSec = 4;
inline void S2C_GameStartServer_Json::clear_waittimesec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.waittimesec_ = 0u;
}
inline ::uint32_t S2C_GameStartServer_Json::waittimesec() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.waitTimeSec)
  return _internal_waittimesec();
}
inline void S2C_GameStartServer_Json::set_waittimesec(::uint32_t value) {
  _internal_set_waittimesec(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.waitTimeSec)
}
inline ::uint32_t S2C_GameStartServer_Json::_internal_waittimesec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.waittimesec_;
}
inline void S2C_GameStartServer_Json::_internal_set_waittimesec(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.waittimesec_ = value;
}

// repeated string dungeonMapIds = 5;
inline int S2C_GameStartServer_Json::_internal_dungeonmapids_size() const {
  return _internal_dungeonmapids().size();
}
inline int S2C_GameStartServer_Json::dungeonmapids_size() const {
  return _internal_dungeonmapids_size();
}
inline void S2C_GameStartServer_Json::clear_dungeonmapids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonmapids_.Clear();
}
inline std::string* S2C_GameStartServer_Json::add_dungeonmapids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_dungeonmapids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.S2C_GameStartServer_Json.dungeonMapIds)
  return _s;
}
inline const std::string& S2C_GameStartServer_Json::dungeonmapids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.dungeonMapIds)
  return _internal_dungeonmapids().Get(index);
}
inline std::string* S2C_GameStartServer_Json::mutable_dungeonmapids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameStartServer_Json.dungeonMapIds)
  return _internal_mutable_dungeonmapids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void S2C_GameStartServer_Json::set_dungeonmapids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_dungeonmapids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.dungeonMapIds)
}
template <typename Arg_, typename... Args_>
inline void S2C_GameStartServer_Json::add_dungeonmapids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_dungeonmapids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_GameStartServer_Json.dungeonMapIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
S2C_GameStartServer_Json::dungeonmapids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_GameStartServer_Json.dungeonMapIds)
  return _internal_dungeonmapids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
S2C_GameStartServer_Json::mutable_dungeonmapids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_GameStartServer_Json.dungeonMapIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dungeonmapids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
S2C_GameStartServer_Json::_internal_dungeonmapids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dungeonmapids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
S2C_GameStartServer_Json::_internal_mutable_dungeonmapids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dungeonmapids_;
}

// uint32 gameHackPolicy = 6;
inline void S2C_GameStartServer_Json::clear_gamehackpolicy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gamehackpolicy_ = 0u;
}
inline ::uint32_t S2C_GameStartServer_Json::gamehackpolicy() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.gameHackPolicy)
  return _internal_gamehackpolicy();
}
inline void S2C_GameStartServer_Json::set_gamehackpolicy(::uint32_t value) {
  _internal_set_gamehackpolicy(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.gameHackPolicy)
}
inline ::uint32_t S2C_GameStartServer_Json::_internal_gamehackpolicy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gamehackpolicy_;
}
inline void S2C_GameStartServer_Json::_internal_set_gamehackpolicy(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gamehackpolicy_ = value;
}

// uint32 validPlayerMeleeAttackRange = 7;
inline void S2C_GameStartServer_Json::clear_validplayermeleeattackrange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validplayermeleeattackrange_ = 0u;
}
inline ::uint32_t S2C_GameStartServer_Json::validplayermeleeattackrange() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.validPlayerMeleeAttackRange)
  return _internal_validplayermeleeattackrange();
}
inline void S2C_GameStartServer_Json::set_validplayermeleeattackrange(::uint32_t value) {
  _internal_set_validplayermeleeattackrange(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.validPlayerMeleeAttackRange)
}
inline ::uint32_t S2C_GameStartServer_Json::_internal_validplayermeleeattackrange() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validplayermeleeattackrange_;
}
inline void S2C_GameStartServer_Json::_internal_set_validplayermeleeattackrange(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validplayermeleeattackrange_ = value;
}

// uint32 gameType = 8;
inline void S2C_GameStartServer_Json::clear_gametype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gametype_ = 0u;
}
inline ::uint32_t S2C_GameStartServer_Json::gametype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.gameType)
  return _internal_gametype();
}
inline void S2C_GameStartServer_Json::set_gametype(::uint32_t value) {
  _internal_set_gametype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.gameType)
}
inline ::uint32_t S2C_GameStartServer_Json::_internal_gametype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gametype_;
}
inline void S2C_GameStartServer_Json::_internal_set_gametype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gametype_ = value;
}

// uint32 shippingLogOnOffPolicy = 9;
inline void S2C_GameStartServer_Json::clear_shippinglogonoffpolicy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shippinglogonoffpolicy_ = 0u;
}
inline ::uint32_t S2C_GameStartServer_Json::shippinglogonoffpolicy() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.shippingLogOnOffPolicy)
  return _internal_shippinglogonoffpolicy();
}
inline void S2C_GameStartServer_Json::set_shippinglogonoffpolicy(::uint32_t value) {
  _internal_set_shippinglogonoffpolicy(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.shippingLogOnOffPolicy)
}
inline ::uint32_t S2C_GameStartServer_Json::_internal_shippinglogonoffpolicy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shippinglogonoffpolicy_;
}
inline void S2C_GameStartServer_Json::_internal_set_shippinglogonoffpolicy(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shippinglogonoffpolicy_ = value;
}

// uint32 shippingLogLevelPolicy = 10;
inline void S2C_GameStartServer_Json::clear_shippingloglevelpolicy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shippingloglevelpolicy_ = 0u;
}
inline ::uint32_t S2C_GameStartServer_Json::shippingloglevelpolicy() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.shippingLogLevelPolicy)
  return _internal_shippingloglevelpolicy();
}
inline void S2C_GameStartServer_Json::set_shippingloglevelpolicy(::uint32_t value) {
  _internal_set_shippingloglevelpolicy(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.shippingLogLevelPolicy)
}
inline ::uint32_t S2C_GameStartServer_Json::_internal_shippingloglevelpolicy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shippingloglevelpolicy_;
}
inline void S2C_GameStartServer_Json::_internal_set_shippingloglevelpolicy(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shippingloglevelpolicy_ = value;
}

// uint32 gmOnOffPolicy = 11;
inline void S2C_GameStartServer_Json::clear_gmonoffpolicy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gmonoffpolicy_ = 0u;
}
inline ::uint32_t S2C_GameStartServer_Json::gmonoffpolicy() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.gmOnOffPolicy)
  return _internal_gmonoffpolicy();
}
inline void S2C_GameStartServer_Json::set_gmonoffpolicy(::uint32_t value) {
  _internal_set_gmonoffpolicy(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.gmOnOffPolicy)
}
inline ::uint32_t S2C_GameStartServer_Json::_internal_gmonoffpolicy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gmonoffpolicy_;
}
inline void S2C_GameStartServer_Json::_internal_set_gmonoffpolicy(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gmonoffpolicy_ = value;
}

// uint32 shippingLogIronShieldOnOffPolicy = 12;
inline void S2C_GameStartServer_Json::clear_shippinglogironshieldonoffpolicy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shippinglogironshieldonoffpolicy_ = 0u;
}
inline ::uint32_t S2C_GameStartServer_Json::shippinglogironshieldonoffpolicy() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.shippingLogIronShieldOnOffPolicy)
  return _internal_shippinglogironshieldonoffpolicy();
}
inline void S2C_GameStartServer_Json::set_shippinglogironshieldonoffpolicy(::uint32_t value) {
  _internal_set_shippinglogironshieldonoffpolicy(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.shippingLogIronShieldOnOffPolicy)
}
inline ::uint32_t S2C_GameStartServer_Json::_internal_shippinglogironshieldonoffpolicy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shippinglogironshieldonoffpolicy_;
}
inline void S2C_GameStartServer_Json::_internal_set_shippinglogironshieldonoffpolicy(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shippinglogironshieldonoffpolicy_ = value;
}

// uint32 shippingLogIronShieldLevelPolicy = 13;
inline void S2C_GameStartServer_Json::clear_shippinglogironshieldlevelpolicy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shippinglogironshieldlevelpolicy_ = 0u;
}
inline ::uint32_t S2C_GameStartServer_Json::shippinglogironshieldlevelpolicy() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.shippingLogIronShieldLevelPolicy)
  return _internal_shippinglogironshieldlevelpolicy();
}
inline void S2C_GameStartServer_Json::set_shippinglogironshieldlevelpolicy(::uint32_t value) {
  _internal_set_shippinglogironshieldlevelpolicy(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.shippingLogIronShieldLevelPolicy)
}
inline ::uint32_t S2C_GameStartServer_Json::_internal_shippinglogironshieldlevelpolicy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shippinglogironshieldlevelpolicy_;
}
inline void S2C_GameStartServer_Json::_internal_set_shippinglogironshieldlevelpolicy(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shippinglogironshieldlevelpolicy_ = value;
}

// uint32 currentFloor = 16;
inline void S2C_GameStartServer_Json::clear_currentfloor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentfloor_ = 0u;
}
inline ::uint32_t S2C_GameStartServer_Json::currentfloor() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.currentFloor)
  return _internal_currentfloor();
}
inline void S2C_GameStartServer_Json::set_currentfloor(::uint32_t value) {
  _internal_set_currentfloor(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.currentFloor)
}
inline ::uint32_t S2C_GameStartServer_Json::_internal_currentfloor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currentfloor_;
}
inline void S2C_GameStartServer_Json::_internal_set_currentfloor(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentfloor_ = value;
}

// uint32 floorMatchmakingOnOff = 17;
inline void S2C_GameStartServer_Json::clear_floormatchmakingonoff() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.floormatchmakingonoff_ = 0u;
}
inline ::uint32_t S2C_GameStartServer_Json::floormatchmakingonoff() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.floorMatchmakingOnOff)
  return _internal_floormatchmakingonoff();
}
inline void S2C_GameStartServer_Json::set_floormatchmakingonoff(::uint32_t value) {
  _internal_set_floormatchmakingonoff(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.floorMatchmakingOnOff)
}
inline ::uint32_t S2C_GameStartServer_Json::_internal_floormatchmakingonoff() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.floormatchmakingonoff_;
}
inline void S2C_GameStartServer_Json::_internal_set_floormatchmakingonoff(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.floormatchmakingonoff_ = value;
}

// uint32 matchmakingType = 18;
inline void S2C_GameStartServer_Json::clear_matchmakingtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matchmakingtype_ = 0u;
}
inline ::uint32_t S2C_GameStartServer_Json::matchmakingtype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.matchmakingType)
  return _internal_matchmakingtype();
}
inline void S2C_GameStartServer_Json::set_matchmakingtype(::uint32_t value) {
  _internal_set_matchmakingtype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.matchmakingType)
}
inline ::uint32_t S2C_GameStartServer_Json::_internal_matchmakingtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.matchmakingtype_;
}
inline void S2C_GameStartServer_Json::_internal_set_matchmakingtype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matchmakingtype_ = value;
}

// string region = 19;
inline void S2C_GameStartServer_Json::clear_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.ClearToEmpty();
}
inline const std::string& S2C_GameStartServer_Json::region() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.region)
  return _internal_region();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameStartServer_Json::set_region(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.region)
}
inline std::string* S2C_GameStartServer_Json::mutable_region() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_region();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameStartServer_Json.region)
  return _s;
}
inline const std::string& S2C_GameStartServer_Json::_internal_region() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.region_.Get();
}
inline void S2C_GameStartServer_Json::_internal_set_region(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.Set(value, GetArena());
}
inline std::string* S2C_GameStartServer_Json::_internal_mutable_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.region_.Mutable( GetArena());
}
inline std::string* S2C_GameStartServer_Json::release_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameStartServer_Json.region)
  return _impl_.region_.Release();
}
inline void S2C_GameStartServer_Json::set_allocated_region(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.region_.IsDefault()) {
          _impl_.region_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameStartServer_Json.region)
}

// string fleetId = 20;
inline void S2C_GameStartServer_Json::clear_fleetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fleetid_.ClearToEmpty();
}
inline const std::string& S2C_GameStartServer_Json::fleetid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.fleetId)
  return _internal_fleetid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameStartServer_Json::set_fleetid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fleetid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.fleetId)
}
inline std::string* S2C_GameStartServer_Json::mutable_fleetid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fleetid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameStartServer_Json.fleetId)
  return _s;
}
inline const std::string& S2C_GameStartServer_Json::_internal_fleetid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fleetid_.Get();
}
inline void S2C_GameStartServer_Json::_internal_set_fleetid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fleetid_.Set(value, GetArena());
}
inline std::string* S2C_GameStartServer_Json::_internal_mutable_fleetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.fleetid_.Mutable( GetArena());
}
inline std::string* S2C_GameStartServer_Json::release_fleetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameStartServer_Json.fleetId)
  return _impl_.fleetid_.Release();
}
inline void S2C_GameStartServer_Json::set_allocated_fleetid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fleetid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.fleetid_.IsDefault()) {
          _impl_.fleetid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameStartServer_Json.fleetId)
}

// string dungeonIdTag = 21;
inline void S2C_GameStartServer_Json::clear_dungeonidtag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonidtag_.ClearToEmpty();
}
inline const std::string& S2C_GameStartServer_Json::dungeonidtag() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.dungeonIdTag)
  return _internal_dungeonidtag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameStartServer_Json::set_dungeonidtag(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonidtag_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.dungeonIdTag)
}
inline std::string* S2C_GameStartServer_Json::mutable_dungeonidtag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dungeonidtag();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameStartServer_Json.dungeonIdTag)
  return _s;
}
inline const std::string& S2C_GameStartServer_Json::_internal_dungeonidtag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dungeonidtag_.Get();
}
inline void S2C_GameStartServer_Json::_internal_set_dungeonidtag(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonidtag_.Set(value, GetArena());
}
inline std::string* S2C_GameStartServer_Json::_internal_mutable_dungeonidtag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dungeonidtag_.Mutable( GetArena());
}
inline std::string* S2C_GameStartServer_Json::release_dungeonidtag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameStartServer_Json.dungeonIdTag)
  return _impl_.dungeonidtag_.Release();
}
inline void S2C_GameStartServer_Json::set_allocated_dungeonidtag(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonidtag_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dungeonidtag_.IsDefault()) {
          _impl_.dungeonidtag_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameStartServer_Json.dungeonIdTag)
}

// string cloudScanUrl = 22;
inline void S2C_GameStartServer_Json::clear_cloudscanurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloudscanurl_.ClearToEmpty();
}
inline const std::string& S2C_GameStartServer_Json::cloudscanurl() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.cloudScanUrl)
  return _internal_cloudscanurl();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameStartServer_Json::set_cloudscanurl(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloudscanurl_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.cloudScanUrl)
}
inline std::string* S2C_GameStartServer_Json::mutable_cloudscanurl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cloudscanurl();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameStartServer_Json.cloudScanUrl)
  return _s;
}
inline const std::string& S2C_GameStartServer_Json::_internal_cloudscanurl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cloudscanurl_.Get();
}
inline void S2C_GameStartServer_Json::_internal_set_cloudscanurl(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloudscanurl_.Set(value, GetArena());
}
inline std::string* S2C_GameStartServer_Json::_internal_mutable_cloudscanurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.cloudscanurl_.Mutable( GetArena());
}
inline std::string* S2C_GameStartServer_Json::release_cloudscanurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameStartServer_Json.cloudScanUrl)
  return _impl_.cloudscanurl_.Release();
}
inline void S2C_GameStartServer_Json::set_allocated_cloudscanurl(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloudscanurl_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cloudscanurl_.IsDefault()) {
          _impl_.cloudscanurl_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameStartServer_Json.cloudScanUrl)
}

// string serverLocate = 23;
inline void S2C_GameStartServer_Json::clear_serverlocate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serverlocate_.ClearToEmpty();
}
inline const std::string& S2C_GameStartServer_Json::serverlocate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.serverLocate)
  return _internal_serverlocate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameStartServer_Json::set_serverlocate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serverlocate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.serverLocate)
}
inline std::string* S2C_GameStartServer_Json::mutable_serverlocate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_serverlocate();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameStartServer_Json.serverLocate)
  return _s;
}
inline const std::string& S2C_GameStartServer_Json::_internal_serverlocate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.serverlocate_.Get();
}
inline void S2C_GameStartServer_Json::_internal_set_serverlocate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serverlocate_.Set(value, GetArena());
}
inline std::string* S2C_GameStartServer_Json::_internal_mutable_serverlocate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.serverlocate_.Mutable( GetArena());
}
inline std::string* S2C_GameStartServer_Json::release_serverlocate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameStartServer_Json.serverLocate)
  return _impl_.serverlocate_.Release();
}
inline void S2C_GameStartServer_Json::set_allocated_serverlocate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serverlocate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.serverlocate_.IsDefault()) {
          _impl_.serverlocate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameStartServer_Json.serverLocate)
}

// string matchingQueueType = 24;
inline void S2C_GameStartServer_Json::clear_matchingqueuetype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matchingqueuetype_.ClearToEmpty();
}
inline const std::string& S2C_GameStartServer_Json::matchingqueuetype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.matchingQueueType)
  return _internal_matchingqueuetype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameStartServer_Json::set_matchingqueuetype(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matchingqueuetype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.matchingQueueType)
}
inline std::string* S2C_GameStartServer_Json::mutable_matchingqueuetype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_matchingqueuetype();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameStartServer_Json.matchingQueueType)
  return _s;
}
inline const std::string& S2C_GameStartServer_Json::_internal_matchingqueuetype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.matchingqueuetype_.Get();
}
inline void S2C_GameStartServer_Json::_internal_set_matchingqueuetype(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matchingqueuetype_.Set(value, GetArena());
}
inline std::string* S2C_GameStartServer_Json::_internal_mutable_matchingqueuetype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.matchingqueuetype_.Mutable( GetArena());
}
inline std::string* S2C_GameStartServer_Json::release_matchingqueuetype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameStartServer_Json.matchingQueueType)
  return _impl_.matchingqueuetype_.Release();
}
inline void S2C_GameStartServer_Json::set_allocated_matchingqueuetype(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matchingqueuetype_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.matchingqueuetype_.IsDefault()) {
          _impl_.matchingqueuetype_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameStartServer_Json.matchingQueueType)
}

// uint32 baseCampRemovedPolicy = 25;
inline void S2C_GameStartServer_Json::clear_basecampremovedpolicy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.basecampremovedpolicy_ = 0u;
}
inline ::uint32_t S2C_GameStartServer_Json::basecampremovedpolicy() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.baseCampRemovedPolicy)
  return _internal_basecampremovedpolicy();
}
inline void S2C_GameStartServer_Json::set_basecampremovedpolicy(::uint32_t value) {
  _internal_set_basecampremovedpolicy(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.baseCampRemovedPolicy)
}
inline ::uint32_t S2C_GameStartServer_Json::_internal_basecampremovedpolicy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.basecampremovedpolicy_;
}
inline void S2C_GameStartServer_Json::_internal_set_basecampremovedpolicy(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.basecampremovedpolicy_ = value;
}

// uint32 numReservedUsers = 26;
inline void S2C_GameStartServer_Json::clear_numreservedusers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numreservedusers_ = 0u;
}
inline ::uint32_t S2C_GameStartServer_Json::numreservedusers() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.numReservedUsers)
  return _internal_numreservedusers();
}
inline void S2C_GameStartServer_Json::set_numreservedusers(::uint32_t value) {
  _internal_set_numreservedusers(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.numReservedUsers)
}
inline ::uint32_t S2C_GameStartServer_Json::_internal_numreservedusers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.numreservedusers_;
}
inline void S2C_GameStartServer_Json::_internal_set_numreservedusers(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numreservedusers_ = value;
}

// uint32 reservedUserWaitTimeoutSec = 27;
inline void S2C_GameStartServer_Json::clear_reserveduserwaittimeoutsec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reserveduserwaittimeoutsec_ = 0u;
}
inline ::uint32_t S2C_GameStartServer_Json::reserveduserwaittimeoutsec() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameStartServer_Json.reservedUserWaitTimeoutSec)
  return _internal_reserveduserwaittimeoutsec();
}
inline void S2C_GameStartServer_Json::set_reserveduserwaittimeoutsec(::uint32_t value) {
  _internal_set_reserveduserwaittimeoutsec(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameStartServer_Json.reservedUserWaitTimeoutSec)
}
inline ::uint32_t S2C_GameStartServer_Json::_internal_reserveduserwaittimeoutsec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reserveduserwaittimeoutsec_;
}
inline void S2C_GameStartServer_Json::_internal_set_reserveduserwaittimeoutsec(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reserveduserwaittimeoutsec_ = value;
}

// -------------------------------------------------------------------

// C2S_GameEndServer_POST

// repeated .DC.Packet.GameEndUserInfo users = 1;
inline int C2S_GameEndServer_POST::_internal_users_size() const {
  return _internal_users().size();
}
inline int C2S_GameEndServer_POST::users_size() const {
  return _internal_users_size();
}
inline void C2S_GameEndServer_POST::clear_users() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.users_.Clear();
}
inline ::DC::Packet::GameEndUserInfo* C2S_GameEndServer_POST::mutable_users(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameEndServer_POST.users)
  return _internal_mutable_users()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::GameEndUserInfo>* C2S_GameEndServer_POST::mutable_users()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_GameEndServer_POST.users)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_users();
}
inline const ::DC::Packet::GameEndUserInfo& C2S_GameEndServer_POST::users(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameEndServer_POST.users)
  return _internal_users().Get(index);
}
inline ::DC::Packet::GameEndUserInfo* C2S_GameEndServer_POST::add_users() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::GameEndUserInfo* _add = _internal_mutable_users()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_GameEndServer_POST.users)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameEndUserInfo>& C2S_GameEndServer_POST::users() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_GameEndServer_POST.users)
  return _internal_users();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameEndUserInfo>&
C2S_GameEndServer_POST::_internal_users() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.users_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::GameEndUserInfo>*
C2S_GameEndServer_POST::_internal_mutable_users() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.users_;
}

// uint64 gameId = 2;
inline void C2S_GameEndServer_POST::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t C2S_GameEndServer_POST::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameEndServer_POST.gameId)
  return _internal_gameid();
}
inline void C2S_GameEndServer_POST::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameEndServer_POST.gameId)
}
inline ::uint64_t C2S_GameEndServer_POST::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C2S_GameEndServer_POST::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// repeated .DC.Packet.Circle circles = 3;
inline int C2S_GameEndServer_POST::_internal_circles_size() const {
  return _internal_circles().size();
}
inline int C2S_GameEndServer_POST::circles_size() const {
  return _internal_circles_size();
}
inline void C2S_GameEndServer_POST::clear_circles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.circles_.Clear();
}
inline ::DC::Packet::Circle* C2S_GameEndServer_POST::mutable_circles(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameEndServer_POST.circles)
  return _internal_mutable_circles()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Circle>* C2S_GameEndServer_POST::mutable_circles()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_GameEndServer_POST.circles)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_circles();
}
inline const ::DC::Packet::Circle& C2S_GameEndServer_POST::circles(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameEndServer_POST.circles)
  return _internal_circles().Get(index);
}
inline ::DC::Packet::Circle* C2S_GameEndServer_POST::add_circles() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Circle* _add = _internal_mutable_circles()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_GameEndServer_POST.circles)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Circle>& C2S_GameEndServer_POST::circles() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_GameEndServer_POST.circles)
  return _internal_circles();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Circle>&
C2S_GameEndServer_POST::_internal_circles() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.circles_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Circle>*
C2S_GameEndServer_POST::_internal_mutable_circles() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.circles_;
}

// -------------------------------------------------------------------

// GameEndUserInfo

// string accountId = 1;
inline void GameEndUserInfo::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& GameEndUserInfo::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameEndUserInfo.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameEndUserInfo::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameEndUserInfo.accountId)
}
inline std::string* GameEndUserInfo::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameEndUserInfo.accountId)
  return _s;
}
inline const std::string& GameEndUserInfo::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void GameEndUserInfo::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* GameEndUserInfo::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* GameEndUserInfo::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameEndUserInfo.accountId)
  return _impl_.accountid_.Release();
}
inline void GameEndUserInfo::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameEndUserInfo.accountId)
}

// uint32 kill = 2;
inline void GameEndUserInfo::clear_kill() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kill_ = 0u;
}
inline ::uint32_t GameEndUserInfo::kill() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameEndUserInfo.kill)
  return _internal_kill();
}
inline void GameEndUserInfo::set_kill(::uint32_t value) {
  _internal_set_kill(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameEndUserInfo.kill)
}
inline ::uint32_t GameEndUserInfo::_internal_kill() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kill_;
}
inline void GameEndUserInfo::_internal_set_kill(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kill_ = value;
}

// uint32 death = 3;
inline void GameEndUserInfo::clear_death() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.death_ = 0u;
}
inline ::uint32_t GameEndUserInfo::death() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameEndUserInfo.death)
  return _internal_death();
}
inline void GameEndUserInfo::set_death(::uint32_t value) {
  _internal_set_death(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameEndUserInfo.death)
}
inline ::uint32_t GameEndUserInfo::_internal_death() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.death_;
}
inline void GameEndUserInfo::_internal_set_death(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.death_ = value;
}

// -------------------------------------------------------------------

// C2S_GameStart_POST

// uint64 gameId = 1;
inline void C2S_GameStart_POST::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t C2S_GameStart_POST::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameStart_POST.gameId)
  return _internal_gameid();
}
inline void C2S_GameStart_POST::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameStart_POST.gameId)
}
inline ::uint64_t C2S_GameStart_POST::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C2S_GameStart_POST::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// repeated string mapNames = 2;
inline int C2S_GameStart_POST::_internal_mapnames_size() const {
  return _internal_mapnames().size();
}
inline int C2S_GameStart_POST::mapnames_size() const {
  return _internal_mapnames_size();
}
inline void C2S_GameStart_POST::clear_mapnames() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mapnames_.Clear();
}
inline std::string* C2S_GameStart_POST::add_mapnames() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_mapnames()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.C2S_GameStart_POST.mapNames)
  return _s;
}
inline const std::string& C2S_GameStart_POST::mapnames(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameStart_POST.mapNames)
  return _internal_mapnames().Get(index);
}
inline std::string* C2S_GameStart_POST::mutable_mapnames(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameStart_POST.mapNames)
  return _internal_mutable_mapnames()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void C2S_GameStart_POST::set_mapnames(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_mapnames()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameStart_POST.mapNames)
}
template <typename Arg_, typename... Args_>
inline void C2S_GameStart_POST::add_mapnames(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_mapnames(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_GameStart_POST.mapNames)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
C2S_GameStart_POST::mapnames() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_GameStart_POST.mapNames)
  return _internal_mapnames();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
C2S_GameStart_POST::mutable_mapnames() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_GameStart_POST.mapNames)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_mapnames();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
C2S_GameStart_POST::_internal_mapnames() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mapnames_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
C2S_GameStart_POST::_internal_mutable_mapnames() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.mapnames_;
}

// -------------------------------------------------------------------

// C2S_GameCharacterInfo_Get

// uint64 gameId = 1;
inline void C2S_GameCharacterInfo_Get::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t C2S_GameCharacterInfo_Get::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameCharacterInfo_Get.gameId)
  return _internal_gameid();
}
inline void C2S_GameCharacterInfo_Get::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameCharacterInfo_Get.gameId)
}
inline ::uint64_t C2S_GameCharacterInfo_Get::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C2S_GameCharacterInfo_Get::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// string accountId = 2;
inline void C2S_GameCharacterInfo_Get::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& C2S_GameCharacterInfo_Get::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameCharacterInfo_Get.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_GameCharacterInfo_Get::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameCharacterInfo_Get.accountId)
}
inline std::string* C2S_GameCharacterInfo_Get::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameCharacterInfo_Get.accountId)
  return _s;
}
inline const std::string& C2S_GameCharacterInfo_Get::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void C2S_GameCharacterInfo_Get::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* C2S_GameCharacterInfo_Get::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* C2S_GameCharacterInfo_Get::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_GameCharacterInfo_Get.accountId)
  return _impl_.accountid_.Release();
}
inline void C2S_GameCharacterInfo_Get::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_GameCharacterInfo_Get.accountId)
}

// string characterId = 3;
inline void C2S_GameCharacterInfo_Get::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& C2S_GameCharacterInfo_Get::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameCharacterInfo_Get.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_GameCharacterInfo_Get::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameCharacterInfo_Get.characterId)
}
inline std::string* C2S_GameCharacterInfo_Get::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameCharacterInfo_Get.characterId)
  return _s;
}
inline const std::string& C2S_GameCharacterInfo_Get::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void C2S_GameCharacterInfo_Get::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* C2S_GameCharacterInfo_Get::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* C2S_GameCharacterInfo_Get::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_GameCharacterInfo_Get.characterId)
  return _impl_.characterid_.Release();
}
inline void C2S_GameCharacterInfo_Get::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_GameCharacterInfo_Get.characterId)
}

// uint32 gameType = 4;
inline void C2S_GameCharacterInfo_Get::clear_gametype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gametype_ = 0u;
}
inline ::uint32_t C2S_GameCharacterInfo_Get::gametype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameCharacterInfo_Get.gameType)
  return _internal_gametype();
}
inline void C2S_GameCharacterInfo_Get::set_gametype(::uint32_t value) {
  _internal_set_gametype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameCharacterInfo_Get.gameType)
}
inline ::uint32_t C2S_GameCharacterInfo_Get::_internal_gametype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gametype_;
}
inline void C2S_GameCharacterInfo_Get::_internal_set_gametype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gametype_ = value;
}

// -------------------------------------------------------------------

// SRankGameUserInfo

// string rankId = 1;
inline void SRankGameUserInfo::clear_rankid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankid_.ClearToEmpty();
}
inline const std::string& SRankGameUserInfo::rankid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRankGameUserInfo.rankId)
  return _internal_rankid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRankGameUserInfo::set_rankid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRankGameUserInfo.rankId)
}
inline std::string* SRankGameUserInfo::mutable_rankid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rankid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRankGameUserInfo.rankId)
  return _s;
}
inline const std::string& SRankGameUserInfo::_internal_rankid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rankid_.Get();
}
inline void SRankGameUserInfo::_internal_set_rankid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankid_.Set(value, GetArena());
}
inline std::string* SRankGameUserInfo::_internal_mutable_rankid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rankid_.Mutable( GetArena());
}
inline std::string* SRankGameUserInfo::release_rankid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRankGameUserInfo.rankId)
  return _impl_.rankid_.Release();
}
inline void SRankGameUserInfo::set_allocated_rankid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rankid_.IsDefault()) {
          _impl_.rankid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRankGameUserInfo.rankId)
}

// uint32 currentPoint = 2;
inline void SRankGameUserInfo::clear_currentpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentpoint_ = 0u;
}
inline ::uint32_t SRankGameUserInfo::currentpoint() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SRankGameUserInfo.currentPoint)
  return _internal_currentpoint();
}
inline void SRankGameUserInfo::set_currentpoint(::uint32_t value) {
  _internal_set_currentpoint(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SRankGameUserInfo.currentPoint)
}
inline ::uint32_t SRankGameUserInfo::_internal_currentpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currentpoint_;
}
inline void SRankGameUserInfo::_internal_set_currentpoint(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentpoint_ = value;
}

// uint32 needPoint = 3;
inline void SRankGameUserInfo::clear_needpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needpoint_ = 0u;
}
inline ::uint32_t SRankGameUserInfo::needpoint() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SRankGameUserInfo.needPoint)
  return _internal_needpoint();
}
inline void SRankGameUserInfo::set_needpoint(::uint32_t value) {
  _internal_set_needpoint(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SRankGameUserInfo.needPoint)
}
inline ::uint32_t SRankGameUserInfo::_internal_needpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.needpoint_;
}
inline void SRankGameUserInfo::_internal_set_needpoint(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needpoint_ = value;
}

// uint32 currentTotalPoint = 4;
inline void SRankGameUserInfo::clear_currenttotalpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currenttotalpoint_ = 0u;
}
inline ::uint32_t SRankGameUserInfo::currenttotalpoint() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SRankGameUserInfo.currentTotalPoint)
  return _internal_currenttotalpoint();
}
inline void SRankGameUserInfo::set_currenttotalpoint(::uint32_t value) {
  _internal_set_currenttotalpoint(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SRankGameUserInfo.currentTotalPoint)
}
inline ::uint32_t SRankGameUserInfo::_internal_currenttotalpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currenttotalpoint_;
}
inline void SRankGameUserInfo::_internal_set_currenttotalpoint(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currenttotalpoint_ = value;
}

// -------------------------------------------------------------------

// S2C_GameCharacterInfo_Json

// uint64 gameId = 1;
inline void S2C_GameCharacterInfo_Json::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t S2C_GameCharacterInfo_Json::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.gameId)
  return _internal_gameid();
}
inline void S2C_GameCharacterInfo_Json::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameCharacterInfo_Json.gameId)
}
inline ::uint64_t S2C_GameCharacterInfo_Json::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void S2C_GameCharacterInfo_Json::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// string accountId = 2;
inline void S2C_GameCharacterInfo_Json::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& S2C_GameCharacterInfo_Json::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameCharacterInfo_Json::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameCharacterInfo_Json.accountId)
}
inline std::string* S2C_GameCharacterInfo_Json::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameCharacterInfo_Json.accountId)
  return _s;
}
inline const std::string& S2C_GameCharacterInfo_Json::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void S2C_GameCharacterInfo_Json::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* S2C_GameCharacterInfo_Json::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* S2C_GameCharacterInfo_Json::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameCharacterInfo_Json.accountId)
  return _impl_.accountid_.Release();
}
inline void S2C_GameCharacterInfo_Json::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameCharacterInfo_Json.accountId)
}

// string characterId = 3;
inline void S2C_GameCharacterInfo_Json::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& S2C_GameCharacterInfo_Json::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameCharacterInfo_Json::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameCharacterInfo_Json.characterId)
}
inline std::string* S2C_GameCharacterInfo_Json::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameCharacterInfo_Json.characterId)
  return _s;
}
inline const std::string& S2C_GameCharacterInfo_Json::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void S2C_GameCharacterInfo_Json::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* S2C_GameCharacterInfo_Json::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* S2C_GameCharacterInfo_Json::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameCharacterInfo_Json.characterId)
  return _impl_.characterid_.Release();
}
inline void S2C_GameCharacterInfo_Json::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameCharacterInfo_Json.characterId)
}

// repeated .DC.Packet.SItem items = 4;
inline int S2C_GameCharacterInfo_Json::_internal_items_size() const {
  return _internal_items().size();
}
inline int S2C_GameCharacterInfo_Json::items_size() const {
  return _internal_items_size();
}
inline ::DC::Packet::SItem* S2C_GameCharacterInfo_Json::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameCharacterInfo_Json.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* S2C_GameCharacterInfo_Json::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_GameCharacterInfo_Json.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DC::Packet::SItem& S2C_GameCharacterInfo_Json::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.items)
  return _internal_items().Get(index);
}
inline ::DC::Packet::SItem* S2C_GameCharacterInfo_Json::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_GameCharacterInfo_Json.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& S2C_GameCharacterInfo_Json::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_GameCharacterInfo_Json.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>&
S2C_GameCharacterInfo_Json::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>*
S2C_GameCharacterInfo_Json::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// repeated .DC.Packet.SPerk perks = 5;
inline int S2C_GameCharacterInfo_Json::_internal_perks_size() const {
  return _internal_perks().size();
}
inline int S2C_GameCharacterInfo_Json::perks_size() const {
  return _internal_perks_size();
}
inline ::DC::Packet::SPerk* S2C_GameCharacterInfo_Json::mutable_perks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameCharacterInfo_Json.perks)
  return _internal_mutable_perks()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>* S2C_GameCharacterInfo_Json::mutable_perks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_GameCharacterInfo_Json.perks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_perks();
}
inline const ::DC::Packet::SPerk& S2C_GameCharacterInfo_Json::perks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.perks)
  return _internal_perks().Get(index);
}
inline ::DC::Packet::SPerk* S2C_GameCharacterInfo_Json::add_perks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SPerk* _add = _internal_mutable_perks()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_GameCharacterInfo_Json.perks)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>& S2C_GameCharacterInfo_Json::perks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_GameCharacterInfo_Json.perks)
  return _internal_perks();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>&
S2C_GameCharacterInfo_Json::_internal_perks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.perks_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>*
S2C_GameCharacterInfo_Json::_internal_mutable_perks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.perks_;
}

// repeated .DC.Packet.SSkill skills = 6;
inline int S2C_GameCharacterInfo_Json::_internal_skills_size() const {
  return _internal_skills().size();
}
inline int S2C_GameCharacterInfo_Json::skills_size() const {
  return _internal_skills_size();
}
inline ::DC::Packet::SSkill* S2C_GameCharacterInfo_Json::mutable_skills(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameCharacterInfo_Json.skills)
  return _internal_mutable_skills()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SSkill>* S2C_GameCharacterInfo_Json::mutable_skills()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_GameCharacterInfo_Json.skills)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_skills();
}
inline const ::DC::Packet::SSkill& S2C_GameCharacterInfo_Json::skills(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.skills)
  return _internal_skills().Get(index);
}
inline ::DC::Packet::SSkill* S2C_GameCharacterInfo_Json::add_skills() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SSkill* _add = _internal_mutable_skills()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_GameCharacterInfo_Json.skills)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSkill>& S2C_GameCharacterInfo_Json::skills() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_GameCharacterInfo_Json.skills)
  return _internal_skills();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSkill>&
S2C_GameCharacterInfo_Json::_internal_skills() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.skills_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SSkill>*
S2C_GameCharacterInfo_Json::_internal_mutable_skills() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.skills_;
}

// repeated .DC.Packet.SSpell spells = 7;
inline int S2C_GameCharacterInfo_Json::_internal_spells_size() const {
  return _internal_spells().size();
}
inline int S2C_GameCharacterInfo_Json::spells_size() const {
  return _internal_spells_size();
}
inline ::DC::Packet::SSpell* S2C_GameCharacterInfo_Json::mutable_spells(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameCharacterInfo_Json.spells)
  return _internal_mutable_spells()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SSpell>* S2C_GameCharacterInfo_Json::mutable_spells()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_GameCharacterInfo_Json.spells)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_spells();
}
inline const ::DC::Packet::SSpell& S2C_GameCharacterInfo_Json::spells(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.spells)
  return _internal_spells().Get(index);
}
inline ::DC::Packet::SSpell* S2C_GameCharacterInfo_Json::add_spells() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SSpell* _add = _internal_mutable_spells()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_GameCharacterInfo_Json.spells)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSpell>& S2C_GameCharacterInfo_Json::spells() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_GameCharacterInfo_Json.spells)
  return _internal_spells();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSpell>&
S2C_GameCharacterInfo_Json::_internal_spells() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spells_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SSpell>*
S2C_GameCharacterInfo_Json::_internal_mutable_spells() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.spells_;
}

// repeated string characterSkinIds = 8;
inline int S2C_GameCharacterInfo_Json::_internal_characterskinids_size() const {
  return _internal_characterskinids().size();
}
inline int S2C_GameCharacterInfo_Json::characterskinids_size() const {
  return _internal_characterskinids_size();
}
inline void S2C_GameCharacterInfo_Json::clear_characterskinids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterskinids_.Clear();
}
inline std::string* S2C_GameCharacterInfo_Json::add_characterskinids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_characterskinids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.S2C_GameCharacterInfo_Json.characterSkinIds)
  return _s;
}
inline const std::string& S2C_GameCharacterInfo_Json::characterskinids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.characterSkinIds)
  return _internal_characterskinids().Get(index);
}
inline std::string* S2C_GameCharacterInfo_Json::mutable_characterskinids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameCharacterInfo_Json.characterSkinIds)
  return _internal_mutable_characterskinids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void S2C_GameCharacterInfo_Json::set_characterskinids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_characterskinids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameCharacterInfo_Json.characterSkinIds)
}
template <typename Arg_, typename... Args_>
inline void S2C_GameCharacterInfo_Json::add_characterskinids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_characterskinids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_GameCharacterInfo_Json.characterSkinIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
S2C_GameCharacterInfo_Json::characterskinids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_GameCharacterInfo_Json.characterSkinIds)
  return _internal_characterskinids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
S2C_GameCharacterInfo_Json::mutable_characterskinids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_GameCharacterInfo_Json.characterSkinIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_characterskinids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
S2C_GameCharacterInfo_Json::_internal_characterskinids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterskinids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
S2C_GameCharacterInfo_Json::_internal_mutable_characterskinids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.characterskinids_;
}

// repeated string itemSkinIds = 9;
inline int S2C_GameCharacterInfo_Json::_internal_itemskinids_size() const {
  return _internal_itemskinids().size();
}
inline int S2C_GameCharacterInfo_Json::itemskinids_size() const {
  return _internal_itemskinids_size();
}
inline void S2C_GameCharacterInfo_Json::clear_itemskinids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.itemskinids_.Clear();
}
inline std::string* S2C_GameCharacterInfo_Json::add_itemskinids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_itemskinids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.S2C_GameCharacterInfo_Json.itemSkinIds)
  return _s;
}
inline const std::string& S2C_GameCharacterInfo_Json::itemskinids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.itemSkinIds)
  return _internal_itemskinids().Get(index);
}
inline std::string* S2C_GameCharacterInfo_Json::mutable_itemskinids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameCharacterInfo_Json.itemSkinIds)
  return _internal_mutable_itemskinids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void S2C_GameCharacterInfo_Json::set_itemskinids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_itemskinids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameCharacterInfo_Json.itemSkinIds)
}
template <typename Arg_, typename... Args_>
inline void S2C_GameCharacterInfo_Json::add_itemskinids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_itemskinids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_GameCharacterInfo_Json.itemSkinIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
S2C_GameCharacterInfo_Json::itemskinids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_GameCharacterInfo_Json.itemSkinIds)
  return _internal_itemskinids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
S2C_GameCharacterInfo_Json::mutable_itemskinids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_GameCharacterInfo_Json.itemSkinIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_itemskinids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
S2C_GameCharacterInfo_Json::_internal_itemskinids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.itemskinids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
S2C_GameCharacterInfo_Json::_internal_mutable_itemskinids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.itemskinids_;
}

// repeated .DC.Packet.SEMOTE emotes = 10;
inline int S2C_GameCharacterInfo_Json::_internal_emotes_size() const {
  return _internal_emotes().size();
}
inline int S2C_GameCharacterInfo_Json::emotes_size() const {
  return _internal_emotes_size();
}
inline ::DC::Packet::SEMOTE* S2C_GameCharacterInfo_Json::mutable_emotes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameCharacterInfo_Json.emotes)
  return _internal_mutable_emotes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SEMOTE>* S2C_GameCharacterInfo_Json::mutable_emotes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_GameCharacterInfo_Json.emotes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_emotes();
}
inline const ::DC::Packet::SEMOTE& S2C_GameCharacterInfo_Json::emotes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.emotes)
  return _internal_emotes().Get(index);
}
inline ::DC::Packet::SEMOTE* S2C_GameCharacterInfo_Json::add_emotes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SEMOTE* _add = _internal_mutable_emotes()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_GameCharacterInfo_Json.emotes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SEMOTE>& S2C_GameCharacterInfo_Json::emotes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_GameCharacterInfo_Json.emotes)
  return _internal_emotes();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SEMOTE>&
S2C_GameCharacterInfo_Json::_internal_emotes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.emotes_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SEMOTE>*
S2C_GameCharacterInfo_Json::_internal_mutable_emotes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.emotes_;
}

// repeated string actionIds = 11;
inline int S2C_GameCharacterInfo_Json::_internal_actionids_size() const {
  return _internal_actionids().size();
}
inline int S2C_GameCharacterInfo_Json::actionids_size() const {
  return _internal_actionids_size();
}
inline void S2C_GameCharacterInfo_Json::clear_actionids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.actionids_.Clear();
}
inline std::string* S2C_GameCharacterInfo_Json::add_actionids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_actionids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.S2C_GameCharacterInfo_Json.actionIds)
  return _s;
}
inline const std::string& S2C_GameCharacterInfo_Json::actionids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.actionIds)
  return _internal_actionids().Get(index);
}
inline std::string* S2C_GameCharacterInfo_Json::mutable_actionids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameCharacterInfo_Json.actionIds)
  return _internal_mutable_actionids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void S2C_GameCharacterInfo_Json::set_actionids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_actionids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameCharacterInfo_Json.actionIds)
}
template <typename Arg_, typename... Args_>
inline void S2C_GameCharacterInfo_Json::add_actionids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_actionids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_GameCharacterInfo_Json.actionIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
S2C_GameCharacterInfo_Json::actionids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_GameCharacterInfo_Json.actionIds)
  return _internal_actionids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
S2C_GameCharacterInfo_Json::mutable_actionids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_GameCharacterInfo_Json.actionIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_actionids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
S2C_GameCharacterInfo_Json::_internal_actionids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.actionids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
S2C_GameCharacterInfo_Json::_internal_mutable_actionids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.actionids_;
}

// repeated .DC.Packet.SMusic musics = 12;
inline int S2C_GameCharacterInfo_Json::_internal_musics_size() const {
  return _internal_musics().size();
}
inline int S2C_GameCharacterInfo_Json::musics_size() const {
  return _internal_musics_size();
}
inline ::DC::Packet::SMusic* S2C_GameCharacterInfo_Json::mutable_musics(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameCharacterInfo_Json.musics)
  return _internal_mutable_musics()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SMusic>* S2C_GameCharacterInfo_Json::mutable_musics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_GameCharacterInfo_Json.musics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_musics();
}
inline const ::DC::Packet::SMusic& S2C_GameCharacterInfo_Json::musics(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.musics)
  return _internal_musics().Get(index);
}
inline ::DC::Packet::SMusic* S2C_GameCharacterInfo_Json::add_musics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SMusic* _add = _internal_mutable_musics()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_GameCharacterInfo_Json.musics)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SMusic>& S2C_GameCharacterInfo_Json::musics() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_GameCharacterInfo_Json.musics)
  return _internal_musics();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SMusic>&
S2C_GameCharacterInfo_Json::_internal_musics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.musics_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SMusic>*
S2C_GameCharacterInfo_Json::_internal_mutable_musics() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.musics_;
}

// repeated .DC.Packet.SShapeShift shapeShifts = 13;
inline int S2C_GameCharacterInfo_Json::_internal_shapeshifts_size() const {
  return _internal_shapeshifts().size();
}
inline int S2C_GameCharacterInfo_Json::shapeshifts_size() const {
  return _internal_shapeshifts_size();
}
inline ::DC::Packet::SShapeShift* S2C_GameCharacterInfo_Json::mutable_shapeshifts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameCharacterInfo_Json.shapeShifts)
  return _internal_mutable_shapeshifts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SShapeShift>* S2C_GameCharacterInfo_Json::mutable_shapeshifts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_GameCharacterInfo_Json.shapeShifts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_shapeshifts();
}
inline const ::DC::Packet::SShapeShift& S2C_GameCharacterInfo_Json::shapeshifts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.shapeShifts)
  return _internal_shapeshifts().Get(index);
}
inline ::DC::Packet::SShapeShift* S2C_GameCharacterInfo_Json::add_shapeshifts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SShapeShift* _add = _internal_mutable_shapeshifts()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_GameCharacterInfo_Json.shapeShifts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SShapeShift>& S2C_GameCharacterInfo_Json::shapeshifts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_GameCharacterInfo_Json.shapeShifts)
  return _internal_shapeshifts();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SShapeShift>&
S2C_GameCharacterInfo_Json::_internal_shapeshifts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shapeshifts_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SShapeShift>*
S2C_GameCharacterInfo_Json::_internal_mutable_shapeshifts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.shapeshifts_;
}

// repeated .DC.Packet.SGameQuestInfo quests = 14;
inline int S2C_GameCharacterInfo_Json::_internal_quests_size() const {
  return _internal_quests().size();
}
inline int S2C_GameCharacterInfo_Json::quests_size() const {
  return _internal_quests_size();
}
inline void S2C_GameCharacterInfo_Json::clear_quests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quests_.Clear();
}
inline ::DC::Packet::SGameQuestInfo* S2C_GameCharacterInfo_Json::mutable_quests(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameCharacterInfo_Json.quests)
  return _internal_mutable_quests()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestInfo>* S2C_GameCharacterInfo_Json::mutable_quests()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_GameCharacterInfo_Json.quests)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_quests();
}
inline const ::DC::Packet::SGameQuestInfo& S2C_GameCharacterInfo_Json::quests(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.quests)
  return _internal_quests().Get(index);
}
inline ::DC::Packet::SGameQuestInfo* S2C_GameCharacterInfo_Json::add_quests() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SGameQuestInfo* _add = _internal_mutable_quests()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_GameCharacterInfo_Json.quests)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestInfo>& S2C_GameCharacterInfo_Json::quests() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_GameCharacterInfo_Json.quests)
  return _internal_quests();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestInfo>&
S2C_GameCharacterInfo_Json::_internal_quests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quests_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestInfo>*
S2C_GameCharacterInfo_Json::_internal_mutable_quests() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.quests_;
}

// .DC.Packet.SRankGameUserInfo rankInfo = 16;
inline bool S2C_GameCharacterInfo_Json::has_rankinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rankinfo_ != nullptr);
  return value;
}
inline void S2C_GameCharacterInfo_Json::clear_rankinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rankinfo_ != nullptr) _impl_.rankinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::SRankGameUserInfo& S2C_GameCharacterInfo_Json::_internal_rankinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SRankGameUserInfo* p = _impl_.rankinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SRankGameUserInfo&>(::DC::Packet::_SRankGameUserInfo_default_instance_);
}
inline const ::DC::Packet::SRankGameUserInfo& S2C_GameCharacterInfo_Json::rankinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.rankInfo)
  return _internal_rankinfo();
}
inline void S2C_GameCharacterInfo_Json::unsafe_arena_set_allocated_rankinfo(::DC::Packet::SRankGameUserInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rankinfo_);
  }
  _impl_.rankinfo_ = reinterpret_cast<::DC::Packet::SRankGameUserInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.S2C_GameCharacterInfo_Json.rankInfo)
}
inline ::DC::Packet::SRankGameUserInfo* S2C_GameCharacterInfo_Json::release_rankinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SRankGameUserInfo* released = _impl_.rankinfo_;
  _impl_.rankinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SRankGameUserInfo* S2C_GameCharacterInfo_Json::unsafe_arena_release_rankinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameCharacterInfo_Json.rankInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SRankGameUserInfo* temp = _impl_.rankinfo_;
  _impl_.rankinfo_ = nullptr;
  return temp;
}
inline ::DC::Packet::SRankGameUserInfo* S2C_GameCharacterInfo_Json::_internal_mutable_rankinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rankinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SRankGameUserInfo>(GetArena());
    _impl_.rankinfo_ = reinterpret_cast<::DC::Packet::SRankGameUserInfo*>(p);
  }
  return _impl_.rankinfo_;
}
inline ::DC::Packet::SRankGameUserInfo* S2C_GameCharacterInfo_Json::mutable_rankinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SRankGameUserInfo* _msg = _internal_mutable_rankinfo();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameCharacterInfo_Json.rankInfo)
  return _msg;
}
inline void S2C_GameCharacterInfo_Json::set_allocated_rankinfo(::DC::Packet::SRankGameUserInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.rankinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.rankinfo_ = reinterpret_cast<::DC::Packet::SRankGameUserInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameCharacterInfo_Json.rankInfo)
}

// uint32 entranceFee = 17;
inline void S2C_GameCharacterInfo_Json::clear_entrancefee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entrancefee_ = 0u;
}
inline ::uint32_t S2C_GameCharacterInfo_Json::entrancefee() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.entranceFee)
  return _internal_entrancefee();
}
inline void S2C_GameCharacterInfo_Json::set_entrancefee(::uint32_t value) {
  _internal_set_entrancefee(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameCharacterInfo_Json.entranceFee)
}
inline ::uint32_t S2C_GameCharacterInfo_Json::_internal_entrancefee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entrancefee_;
}
inline void S2C_GameCharacterInfo_Json::_internal_set_entrancefee(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entrancefee_ = value;
}

// string seasonId = 18;
inline void S2C_GameCharacterInfo_Json::clear_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.ClearToEmpty();
}
inline const std::string& S2C_GameCharacterInfo_Json::seasonid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.seasonId)
  return _internal_seasonid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameCharacterInfo_Json::set_seasonid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameCharacterInfo_Json.seasonId)
}
inline std::string* S2C_GameCharacterInfo_Json::mutable_seasonid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_seasonid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameCharacterInfo_Json.seasonId)
  return _s;
}
inline const std::string& S2C_GameCharacterInfo_Json::_internal_seasonid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seasonid_.Get();
}
inline void S2C_GameCharacterInfo_Json::_internal_set_seasonid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.Set(value, GetArena());
}
inline std::string* S2C_GameCharacterInfo_Json::_internal_mutable_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.seasonid_.Mutable( GetArena());
}
inline std::string* S2C_GameCharacterInfo_Json::release_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameCharacterInfo_Json.seasonId)
  return _impl_.seasonid_.Release();
}
inline void S2C_GameCharacterInfo_Json::set_allocated_seasonid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.seasonid_.IsDefault()) {
          _impl_.seasonid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameCharacterInfo_Json.seasonId)
}

// uint32 isSeason = 19;
inline void S2C_GameCharacterInfo_Json::clear_isseason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isseason_ = 0u;
}
inline ::uint32_t S2C_GameCharacterInfo_Json::isseason() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.isSeason)
  return _internal_isseason();
}
inline void S2C_GameCharacterInfo_Json::set_isseason(::uint32_t value) {
  _internal_set_isseason(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameCharacterInfo_Json.isSeason)
}
inline ::uint32_t S2C_GameCharacterInfo_Json::_internal_isseason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isseason_;
}
inline void S2C_GameCharacterInfo_Json::_internal_set_isseason(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isseason_ = value;
}

// repeated string armorSkinIds = 20;
inline int S2C_GameCharacterInfo_Json::_internal_armorskinids_size() const {
  return _internal_armorskinids().size();
}
inline int S2C_GameCharacterInfo_Json::armorskinids_size() const {
  return _internal_armorskinids_size();
}
inline void S2C_GameCharacterInfo_Json::clear_armorskinids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.armorskinids_.Clear();
}
inline std::string* S2C_GameCharacterInfo_Json::add_armorskinids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_armorskinids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.S2C_GameCharacterInfo_Json.armorSkinIds)
  return _s;
}
inline const std::string& S2C_GameCharacterInfo_Json::armorskinids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.armorSkinIds)
  return _internal_armorskinids().Get(index);
}
inline std::string* S2C_GameCharacterInfo_Json::mutable_armorskinids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameCharacterInfo_Json.armorSkinIds)
  return _internal_mutable_armorskinids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void S2C_GameCharacterInfo_Json::set_armorskinids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_armorskinids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameCharacterInfo_Json.armorSkinIds)
}
template <typename Arg_, typename... Args_>
inline void S2C_GameCharacterInfo_Json::add_armorskinids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_armorskinids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_GameCharacterInfo_Json.armorSkinIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
S2C_GameCharacterInfo_Json::armorskinids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_GameCharacterInfo_Json.armorSkinIds)
  return _internal_armorskinids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
S2C_GameCharacterInfo_Json::mutable_armorskinids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_GameCharacterInfo_Json.armorSkinIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_armorskinids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
S2C_GameCharacterInfo_Json::_internal_armorskinids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.armorskinids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
S2C_GameCharacterInfo_Json::_internal_mutable_armorskinids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.armorskinids_;
}

// int32 totalPlayTimeSec = 21;
inline void S2C_GameCharacterInfo_Json::clear_totalplaytimesec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.totalplaytimesec_ = 0;
}
inline ::int32_t S2C_GameCharacterInfo_Json::totalplaytimesec() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.totalPlayTimeSec)
  return _internal_totalplaytimesec();
}
inline void S2C_GameCharacterInfo_Json::set_totalplaytimesec(::int32_t value) {
  _internal_set_totalplaytimesec(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameCharacterInfo_Json.totalPlayTimeSec)
}
inline ::int32_t S2C_GameCharacterInfo_Json::_internal_totalplaytimesec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.totalplaytimesec_;
}
inline void S2C_GameCharacterInfo_Json::_internal_set_totalplaytimesec(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.totalplaytimesec_ = value;
}

// int32 level = 22;
inline void S2C_GameCharacterInfo_Json::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0;
}
inline ::int32_t S2C_GameCharacterInfo_Json::level() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.level)
  return _internal_level();
}
inline void S2C_GameCharacterInfo_Json::set_level(::int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameCharacterInfo_Json.level)
}
inline ::int32_t S2C_GameCharacterInfo_Json::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void S2C_GameCharacterInfo_Json::_internal_set_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// int32 fame = 23;
inline void S2C_GameCharacterInfo_Json::clear_fame() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fame_ = 0;
}
inline ::int32_t S2C_GameCharacterInfo_Json::fame() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.fame)
  return _internal_fame();
}
inline void S2C_GameCharacterInfo_Json::set_fame(::int32_t value) {
  _internal_set_fame(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameCharacterInfo_Json.fame)
}
inline ::int32_t S2C_GameCharacterInfo_Json::_internal_fame() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fame_;
}
inline void S2C_GameCharacterInfo_Json::_internal_set_fame(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fame_ = value;
}

// int32 isBlackList = 24;
inline void S2C_GameCharacterInfo_Json::clear_isblacklist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isblacklist_ = 0;
}
inline ::int32_t S2C_GameCharacterInfo_Json::isblacklist() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.isBlackList)
  return _internal_isblacklist();
}
inline void S2C_GameCharacterInfo_Json::set_isblacklist(::int32_t value) {
  _internal_set_isblacklist(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameCharacterInfo_Json.isBlackList)
}
inline ::int32_t S2C_GameCharacterInfo_Json::_internal_isblacklist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isblacklist_;
}
inline void S2C_GameCharacterInfo_Json::_internal_set_isblacklist(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isblacklist_ = value;
}

// int32 gearScore = 25;
inline void S2C_GameCharacterInfo_Json::clear_gearscore() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gearscore_ = 0;
}
inline ::int32_t S2C_GameCharacterInfo_Json::gearscore() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameCharacterInfo_Json.gearScore)
  return _internal_gearscore();
}
inline void S2C_GameCharacterInfo_Json::set_gearscore(::int32_t value) {
  _internal_set_gearscore(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameCharacterInfo_Json.gearScore)
}
inline ::int32_t S2C_GameCharacterInfo_Json::_internal_gearscore() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gearscore_;
}
inline void S2C_GameCharacterInfo_Json::_internal_set_gearscore(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gearscore_ = value;
}

// -------------------------------------------------------------------

// C2S_GameAliveCheck_GET

// uint64 gameId = 1;
inline void C2S_GameAliveCheck_GET::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t C2S_GameAliveCheck_GET::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameAliveCheck_GET.gameId)
  return _internal_gameid();
}
inline void C2S_GameAliveCheck_GET::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameAliveCheck_GET.gameId)
}
inline ::uint64_t C2S_GameAliveCheck_GET::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C2S_GameAliveCheck_GET::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// -------------------------------------------------------------------

// AliveDataInfo

// string Id = 1;
inline void AliveDataInfo::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& AliveDataInfo::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.AliveDataInfo.Id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AliveDataInfo::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.AliveDataInfo.Id)
}
inline std::string* AliveDataInfo::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:DC.Packet.AliveDataInfo.Id)
  return _s;
}
inline const std::string& AliveDataInfo::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void AliveDataInfo::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* AliveDataInfo::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* AliveDataInfo::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.AliveDataInfo.Id)
  return _impl_.id_.Release();
}
inline void AliveDataInfo::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.AliveDataInfo.Id)
}

// repeated string Us = 2;
inline int AliveDataInfo::_internal_us_size() const {
  return _internal_us().size();
}
inline int AliveDataInfo::us_size() const {
  return _internal_us_size();
}
inline void AliveDataInfo::clear_us() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.us_.Clear();
}
inline std::string* AliveDataInfo::add_us() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_us()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.AliveDataInfo.Us)
  return _s;
}
inline const std::string& AliveDataInfo::us(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.AliveDataInfo.Us)
  return _internal_us().Get(index);
}
inline std::string* AliveDataInfo::mutable_us(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.AliveDataInfo.Us)
  return _internal_mutable_us()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void AliveDataInfo::set_us(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_us()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.AliveDataInfo.Us)
}
template <typename Arg_, typename... Args_>
inline void AliveDataInfo::add_us(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_us(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.AliveDataInfo.Us)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AliveDataInfo::us() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.AliveDataInfo.Us)
  return _internal_us();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AliveDataInfo::mutable_us() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.AliveDataInfo.Us)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_us();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AliveDataInfo::_internal_us() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.us_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AliveDataInfo::_internal_mutable_us() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.us_;
}

// -------------------------------------------------------------------

// C2S_AliveAppendData_GET

// string Gs = 1;
inline void C2S_AliveAppendData_GET::clear_gs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gs_.ClearToEmpty();
}
inline const std::string& C2S_AliveAppendData_GET::gs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_AliveAppendData_GET.Gs)
  return _internal_gs();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_AliveAppendData_GET::set_gs(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gs_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_AliveAppendData_GET.Gs)
}
inline std::string* C2S_AliveAppendData_GET::mutable_gs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_gs();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_AliveAppendData_GET.Gs)
  return _s;
}
inline const std::string& C2S_AliveAppendData_GET::_internal_gs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gs_.Get();
}
inline void C2S_AliveAppendData_GET::_internal_set_gs(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gs_.Set(value, GetArena());
}
inline std::string* C2S_AliveAppendData_GET::_internal_mutable_gs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.gs_.Mutable( GetArena());
}
inline std::string* C2S_AliveAppendData_GET::release_gs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_AliveAppendData_GET.Gs)
  return _impl_.gs_.Release();
}
inline void C2S_AliveAppendData_GET::set_allocated_gs(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gs_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.gs_.IsDefault()) {
          _impl_.gs_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_AliveAppendData_GET.Gs)
}

// repeated .DC.Packet.AliveDataInfo infos = 2;
inline int C2S_AliveAppendData_GET::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int C2S_AliveAppendData_GET::infos_size() const {
  return _internal_infos_size();
}
inline void C2S_AliveAppendData_GET::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::DC::Packet::AliveDataInfo* C2S_AliveAppendData_GET::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_AliveAppendData_GET.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::AliveDataInfo>* C2S_AliveAppendData_GET::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_AliveAppendData_GET.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::DC::Packet::AliveDataInfo& C2S_AliveAppendData_GET::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_AliveAppendData_GET.infos)
  return _internal_infos().Get(index);
}
inline ::DC::Packet::AliveDataInfo* C2S_AliveAppendData_GET::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::AliveDataInfo* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_AliveAppendData_GET.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::AliveDataInfo>& C2S_AliveAppendData_GET::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_AliveAppendData_GET.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::AliveDataInfo>&
C2S_AliveAppendData_GET::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::AliveDataInfo>*
C2S_AliveAppendData_GET::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

// -------------------------------------------------------------------

// C2S_GameInterrupt_POST

// uint64 gameId = 1;
inline void C2S_GameInterrupt_POST::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t C2S_GameInterrupt_POST::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameInterrupt_POST.gameId)
  return _internal_gameid();
}
inline void C2S_GameInterrupt_POST::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameInterrupt_POST.gameId)
}
inline ::uint64_t C2S_GameInterrupt_POST::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C2S_GameInterrupt_POST::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// -------------------------------------------------------------------

// C2S_UserReport_POST

// uint64 gameId = 1;
inline void C2S_UserReport_POST::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t C2S_UserReport_POST::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_UserReport_POST.gameId)
  return _internal_gameid();
}
inline void C2S_UserReport_POST::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_UserReport_POST.gameId)
}
inline ::uint64_t C2S_UserReport_POST::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C2S_UserReport_POST::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// string reportAccountId = 2;
inline void C2S_UserReport_POST::clear_reportaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportaccountid_.ClearToEmpty();
}
inline const std::string& C2S_UserReport_POST::reportaccountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_UserReport_POST.reportAccountId)
  return _internal_reportaccountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_UserReport_POST::set_reportaccountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportaccountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_UserReport_POST.reportAccountId)
}
inline std::string* C2S_UserReport_POST::mutable_reportaccountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reportaccountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_UserReport_POST.reportAccountId)
  return _s;
}
inline const std::string& C2S_UserReport_POST::_internal_reportaccountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reportaccountid_.Get();
}
inline void C2S_UserReport_POST::_internal_set_reportaccountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportaccountid_.Set(value, GetArena());
}
inline std::string* C2S_UserReport_POST::_internal_mutable_reportaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reportaccountid_.Mutable( GetArena());
}
inline std::string* C2S_UserReport_POST::release_reportaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_UserReport_POST.reportAccountId)
  return _impl_.reportaccountid_.Release();
}
inline void C2S_UserReport_POST::set_allocated_reportaccountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportaccountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reportaccountid_.IsDefault()) {
          _impl_.reportaccountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_UserReport_POST.reportAccountId)
}

// repeated uint32 category = 3;
inline int C2S_UserReport_POST::_internal_category_size() const {
  return _internal_category().size();
}
inline int C2S_UserReport_POST::category_size() const {
  return _internal_category_size();
}
inline void C2S_UserReport_POST::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.Clear();
}
inline ::uint32_t C2S_UserReport_POST::category(int index) const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_UserReport_POST.category)
  return _internal_category().Get(index);
}
inline void C2S_UserReport_POST::set_category(int index, ::uint32_t value) {
  _internal_mutable_category()->Set(index, value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_UserReport_POST.category)
}
inline void C2S_UserReport_POST::add_category(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_category()->Add(value);
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_UserReport_POST.category)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& C2S_UserReport_POST::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_UserReport_POST.category)
  return _internal_category();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* C2S_UserReport_POST::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_UserReport_POST.category)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_category();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
C2S_UserReport_POST::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* C2S_UserReport_POST::_internal_mutable_category() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.category_;
}

// string targetAccountId = 4;
inline void C2S_UserReport_POST::clear_targetaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetaccountid_.ClearToEmpty();
}
inline const std::string& C2S_UserReport_POST::targetaccountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_UserReport_POST.targetAccountId)
  return _internal_targetaccountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_UserReport_POST::set_targetaccountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetaccountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_UserReport_POST.targetAccountId)
}
inline std::string* C2S_UserReport_POST::mutable_targetaccountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_targetaccountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_UserReport_POST.targetAccountId)
  return _s;
}
inline const std::string& C2S_UserReport_POST::_internal_targetaccountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targetaccountid_.Get();
}
inline void C2S_UserReport_POST::_internal_set_targetaccountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetaccountid_.Set(value, GetArena());
}
inline std::string* C2S_UserReport_POST::_internal_mutable_targetaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.targetaccountid_.Mutable( GetArena());
}
inline std::string* C2S_UserReport_POST::release_targetaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_UserReport_POST.targetAccountId)
  return _impl_.targetaccountid_.Release();
}
inline void C2S_UserReport_POST::set_allocated_targetaccountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetaccountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.targetaccountid_.IsDefault()) {
          _impl_.targetaccountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_UserReport_POST.targetAccountId)
}

// .DC.Packet.SACCOUNT_NICKNAME targetNickName = 5;
inline bool C2S_UserReport_POST::has_targetnickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.targetnickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& C2S_UserReport_POST::_internal_targetnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.targetnickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& C2S_UserReport_POST::targetnickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_UserReport_POST.targetNickName)
  return _internal_targetnickname();
}
inline void C2S_UserReport_POST::unsafe_arena_set_allocated_targetnickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.targetnickname_);
  }
  _impl_.targetnickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.C2S_UserReport_POST.targetNickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* C2S_UserReport_POST::release_targetnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.targetnickname_;
  _impl_.targetnickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* C2S_UserReport_POST::unsafe_arena_release_targetnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_UserReport_POST.targetNickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.targetnickname_;
  _impl_.targetnickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* C2S_UserReport_POST::_internal_mutable_targetnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.targetnickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.targetnickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.targetnickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* C2S_UserReport_POST::mutable_targetnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_targetnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_UserReport_POST.targetNickName)
  return _msg;
}
inline void C2S_UserReport_POST::set_allocated_targetnickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.targetnickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.targetnickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_UserReport_POST.targetNickName)
}

// string targetCharacterId = 6;
inline void C2S_UserReport_POST::clear_targetcharacterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetcharacterid_.ClearToEmpty();
}
inline const std::string& C2S_UserReport_POST::targetcharacterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_UserReport_POST.targetCharacterId)
  return _internal_targetcharacterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_UserReport_POST::set_targetcharacterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetcharacterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_UserReport_POST.targetCharacterId)
}
inline std::string* C2S_UserReport_POST::mutable_targetcharacterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_targetcharacterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_UserReport_POST.targetCharacterId)
  return _s;
}
inline const std::string& C2S_UserReport_POST::_internal_targetcharacterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targetcharacterid_.Get();
}
inline void C2S_UserReport_POST::_internal_set_targetcharacterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetcharacterid_.Set(value, GetArena());
}
inline std::string* C2S_UserReport_POST::_internal_mutable_targetcharacterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.targetcharacterid_.Mutable( GetArena());
}
inline std::string* C2S_UserReport_POST::release_targetcharacterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_UserReport_POST.targetCharacterId)
  return _impl_.targetcharacterid_.Release();
}
inline void C2S_UserReport_POST::set_allocated_targetcharacterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetcharacterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.targetcharacterid_.IsDefault()) {
          _impl_.targetcharacterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_UserReport_POST.targetCharacterId)
}

// string reportContent = 7;
inline void C2S_UserReport_POST::clear_reportcontent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportcontent_.ClearToEmpty();
}
inline const std::string& C2S_UserReport_POST::reportcontent() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_UserReport_POST.reportContent)
  return _internal_reportcontent();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_UserReport_POST::set_reportcontent(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportcontent_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_UserReport_POST.reportContent)
}
inline std::string* C2S_UserReport_POST::mutable_reportcontent() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reportcontent();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_UserReport_POST.reportContent)
  return _s;
}
inline const std::string& C2S_UserReport_POST::_internal_reportcontent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reportcontent_.Get();
}
inline void C2S_UserReport_POST::_internal_set_reportcontent(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportcontent_.Set(value, GetArena());
}
inline std::string* C2S_UserReport_POST::_internal_mutable_reportcontent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reportcontent_.Mutable( GetArena());
}
inline std::string* C2S_UserReport_POST::release_reportcontent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_UserReport_POST.reportContent)
  return _impl_.reportcontent_.Release();
}
inline void C2S_UserReport_POST::set_allocated_reportcontent(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportcontent_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reportcontent_.IsDefault()) {
          _impl_.reportcontent_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_UserReport_POST.reportContent)
}

// -------------------------------------------------------------------

// S2C_UserReport_POST_Response

// string reportAccountId = 1;
inline void S2C_UserReport_POST_Response::clear_reportaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportaccountid_.ClearToEmpty();
}
inline const std::string& S2C_UserReport_POST_Response::reportaccountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_UserReport_POST_Response.reportAccountId)
  return _internal_reportaccountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_UserReport_POST_Response::set_reportaccountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportaccountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_UserReport_POST_Response.reportAccountId)
}
inline std::string* S2C_UserReport_POST_Response::mutable_reportaccountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reportaccountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_UserReport_POST_Response.reportAccountId)
  return _s;
}
inline const std::string& S2C_UserReport_POST_Response::_internal_reportaccountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reportaccountid_.Get();
}
inline void S2C_UserReport_POST_Response::_internal_set_reportaccountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportaccountid_.Set(value, GetArena());
}
inline std::string* S2C_UserReport_POST_Response::_internal_mutable_reportaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reportaccountid_.Mutable( GetArena());
}
inline std::string* S2C_UserReport_POST_Response::release_reportaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_UserReport_POST_Response.reportAccountId)
  return _impl_.reportaccountid_.Release();
}
inline void S2C_UserReport_POST_Response::set_allocated_reportaccountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportaccountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reportaccountid_.IsDefault()) {
          _impl_.reportaccountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_UserReport_POST_Response.reportAccountId)
}

// string targetAccountId = 2;
inline void S2C_UserReport_POST_Response::clear_targetaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetaccountid_.ClearToEmpty();
}
inline const std::string& S2C_UserReport_POST_Response::targetaccountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_UserReport_POST_Response.targetAccountId)
  return _internal_targetaccountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_UserReport_POST_Response::set_targetaccountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetaccountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_UserReport_POST_Response.targetAccountId)
}
inline std::string* S2C_UserReport_POST_Response::mutable_targetaccountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_targetaccountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_UserReport_POST_Response.targetAccountId)
  return _s;
}
inline const std::string& S2C_UserReport_POST_Response::_internal_targetaccountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targetaccountid_.Get();
}
inline void S2C_UserReport_POST_Response::_internal_set_targetaccountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetaccountid_.Set(value, GetArena());
}
inline std::string* S2C_UserReport_POST_Response::_internal_mutable_targetaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.targetaccountid_.Mutable( GetArena());
}
inline std::string* S2C_UserReport_POST_Response::release_targetaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_UserReport_POST_Response.targetAccountId)
  return _impl_.targetaccountid_.Release();
}
inline void S2C_UserReport_POST_Response::set_allocated_targetaccountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetaccountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.targetaccountid_.IsDefault()) {
          _impl_.targetaccountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_UserReport_POST_Response.targetAccountId)
}

// string reportKey = 3;
inline void S2C_UserReport_POST_Response::clear_reportkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportkey_.ClearToEmpty();
}
inline const std::string& S2C_UserReport_POST_Response::reportkey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_UserReport_POST_Response.reportKey)
  return _internal_reportkey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_UserReport_POST_Response::set_reportkey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportkey_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_UserReport_POST_Response.reportKey)
}
inline std::string* S2C_UserReport_POST_Response::mutable_reportkey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reportkey();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_UserReport_POST_Response.reportKey)
  return _s;
}
inline const std::string& S2C_UserReport_POST_Response::_internal_reportkey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reportkey_.Get();
}
inline void S2C_UserReport_POST_Response::_internal_set_reportkey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportkey_.Set(value, GetArena());
}
inline std::string* S2C_UserReport_POST_Response::_internal_mutable_reportkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reportkey_.Mutable( GetArena());
}
inline std::string* S2C_UserReport_POST_Response::release_reportkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_UserReport_POST_Response.reportKey)
  return _impl_.reportkey_.Release();
}
inline void S2C_UserReport_POST_Response::set_allocated_reportkey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportkey_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reportkey_.IsDefault()) {
          _impl_.reportkey_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_UserReport_POST_Response.reportKey)
}

// uint32 category = 4;
inline void S2C_UserReport_POST_Response::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_ = 0u;
}
inline ::uint32_t S2C_UserReport_POST_Response::category() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_UserReport_POST_Response.category)
  return _internal_category();
}
inline void S2C_UserReport_POST_Response::set_category(::uint32_t value) {
  _internal_set_category(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_UserReport_POST_Response.category)
}
inline ::uint32_t S2C_UserReport_POST_Response::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_;
}
inline void S2C_UserReport_POST_Response::_internal_set_category(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_ = value;
}

// -------------------------------------------------------------------

// Location

// int32 x = 1;
inline void Location::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline ::int32_t Location::x() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Location.x)
  return _internal_x();
}
inline void Location::set_x(::int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Location.x)
}
inline ::int32_t Location::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Location::_internal_set_x(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// int32 y = 2;
inline void Location::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline ::int32_t Location::y() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Location.y)
  return _internal_y();
}
inline void Location::set_y(::int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Location.y)
}
inline ::int32_t Location::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Location::_internal_set_y(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// int32 z = 3;
inline void Location::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
}
inline ::int32_t Location::z() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Location.z)
  return _internal_z();
}
inline void Location::set_z(::int32_t value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Location.z)
}
inline ::int32_t Location::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Location::_internal_set_z(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// Circle

// .DC.Packet.Location pos = 1;
inline bool Circle::has_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pos_ != nullptr);
  return value;
}
inline void Circle::clear_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ != nullptr) _impl_.pos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::Location& Circle::_internal_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::Location* p = _impl_.pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::Location&>(::DC::Packet::_Location_default_instance_);
}
inline const ::DC::Packet::Location& Circle::pos() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Circle.pos)
  return _internal_pos();
}
inline void Circle::unsafe_arena_set_allocated_pos(::DC::Packet::Location* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pos_);
  }
  _impl_.pos_ = reinterpret_cast<::DC::Packet::Location*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.Circle.pos)
}
inline ::DC::Packet::Location* Circle::release_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::Location* released = _impl_.pos_;
  _impl_.pos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::Location* Circle::unsafe_arena_release_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Circle.pos)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::Location* temp = _impl_.pos_;
  _impl_.pos_ = nullptr;
  return temp;
}
inline ::DC::Packet::Location* Circle::_internal_mutable_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::Location>(GetArena());
    _impl_.pos_ = reinterpret_cast<::DC::Packet::Location*>(p);
  }
  return _impl_.pos_;
}
inline ::DC::Packet::Location* Circle::mutable_pos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::Location* _msg = _internal_mutable_pos();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Circle.pos)
  return _msg;
}
inline void Circle::set_allocated_pos(::DC::Packet::Location* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.pos_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pos_ = reinterpret_cast<::DC::Packet::Location*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Circle.pos)
}

// float radius = 2;
inline void Circle::clear_radius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_ = 0;
}
inline float Circle::radius() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Circle.radius)
  return _internal_radius();
}
inline void Circle::set_radius(float value) {
  _internal_set_radius(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Circle.radius)
}
inline float Circle::_internal_radius() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.radius_;
}
inline void Circle::_internal_set_radius(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_ = value;
}

// -------------------------------------------------------------------

// NewItemLog

// .DC.Packet.Location pos = 1;
inline bool NewItemLog::has_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pos_ != nullptr);
  return value;
}
inline void NewItemLog::clear_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ != nullptr) _impl_.pos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::Location& NewItemLog::_internal_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::Location* p = _impl_.pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::Location&>(::DC::Packet::_Location_default_instance_);
}
inline const ::DC::Packet::Location& NewItemLog::pos() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.NewItemLog.pos)
  return _internal_pos();
}
inline void NewItemLog::unsafe_arena_set_allocated_pos(::DC::Packet::Location* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pos_);
  }
  _impl_.pos_ = reinterpret_cast<::DC::Packet::Location*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.NewItemLog.pos)
}
inline ::DC::Packet::Location* NewItemLog::release_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::Location* released = _impl_.pos_;
  _impl_.pos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::Location* NewItemLog::unsafe_arena_release_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.NewItemLog.pos)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::Location* temp = _impl_.pos_;
  _impl_.pos_ = nullptr;
  return temp;
}
inline ::DC::Packet::Location* NewItemLog::_internal_mutable_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::Location>(GetArena());
    _impl_.pos_ = reinterpret_cast<::DC::Packet::Location*>(p);
  }
  return _impl_.pos_;
}
inline ::DC::Packet::Location* NewItemLog::mutable_pos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::Location* _msg = _internal_mutable_pos();
  // @@protoc_insertion_point(field_mutable:DC.Packet.NewItemLog.pos)
  return _msg;
}
inline void NewItemLog::set_allocated_pos(::DC::Packet::Location* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.pos_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pos_ = reinterpret_cast<::DC::Packet::Location*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.NewItemLog.pos)
}

// string itemId = 2;
inline void NewItemLog::clear_itemid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.itemid_.ClearToEmpty();
}
inline const std::string& NewItemLog::itemid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.NewItemLog.itemId)
  return _internal_itemid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewItemLog::set_itemid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.itemid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.NewItemLog.itemId)
}
inline std::string* NewItemLog::mutable_itemid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_itemid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.NewItemLog.itemId)
  return _s;
}
inline const std::string& NewItemLog::_internal_itemid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.itemid_.Get();
}
inline void NewItemLog::_internal_set_itemid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.itemid_.Set(value, GetArena());
}
inline std::string* NewItemLog::_internal_mutable_itemid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.itemid_.Mutable( GetArena());
}
inline std::string* NewItemLog::release_itemid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.NewItemLog.itemId)
  return _impl_.itemid_.Release();
}
inline void NewItemLog::set_allocated_itemid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.itemid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.itemid_.IsDefault()) {
          _impl_.itemid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.NewItemLog.itemId)
}

// -------------------------------------------------------------------

// GameResultInfo

// string accountId = 1;
inline void GameResultInfo::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& GameResultInfo::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameResultInfo::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.accountId)
}
inline std::string* GameResultInfo::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameResultInfo.accountId)
  return _s;
}
inline const std::string& GameResultInfo::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void GameResultInfo::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* GameResultInfo::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* GameResultInfo::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameResultInfo.accountId)
  return _impl_.accountid_.Release();
}
inline void GameResultInfo::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameResultInfo.accountId)
}

// string characterId = 2;
inline void GameResultInfo::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& GameResultInfo::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameResultInfo::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.characterId)
}
inline std::string* GameResultInfo::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameResultInfo.characterId)
  return _s;
}
inline const std::string& GameResultInfo::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void GameResultInfo::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* GameResultInfo::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* GameResultInfo::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameResultInfo.characterId)
  return _impl_.characterid_.Release();
}
inline void GameResultInfo::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameResultInfo.characterId)
}

// uint64 gameId = 3;
inline void GameResultInfo::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t GameResultInfo::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.gameId)
  return _internal_gameid();
}
inline void GameResultInfo::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.gameId)
}
inline ::uint64_t GameResultInfo::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void GameResultInfo::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// string characterClass = 4;
inline void GameResultInfo::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& GameResultInfo::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameResultInfo::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.characterClass)
}
inline std::string* GameResultInfo::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameResultInfo.characterClass)
  return _s;
}
inline const std::string& GameResultInfo::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void GameResultInfo::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* GameResultInfo::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* GameResultInfo::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameResultInfo.characterClass)
  return _impl_.characterclass_.Release();
}
inline void GameResultInfo::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameResultInfo.characterClass)
}

// uint32 killCount = 5;
inline void GameResultInfo::clear_killcount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.killcount_ = 0u;
}
inline ::uint32_t GameResultInfo::killcount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.killCount)
  return _internal_killcount();
}
inline void GameResultInfo::set_killcount(::uint32_t value) {
  _internal_set_killcount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.killCount)
}
inline ::uint32_t GameResultInfo::_internal_killcount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.killcount_;
}
inline void GameResultInfo::_internal_set_killcount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.killcount_ = value;
}

// repeated .DC.Packet.GameExitAdvPoint advPoints = 6;
inline int GameResultInfo::_internal_advpoints_size() const {
  return _internal_advpoints().size();
}
inline int GameResultInfo::advpoints_size() const {
  return _internal_advpoints_size();
}
inline void GameResultInfo::clear_advpoints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.advpoints_.Clear();
}
inline ::DC::Packet::GameExitAdvPoint* GameResultInfo::mutable_advpoints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameResultInfo.advPoints)
  return _internal_mutable_advpoints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitAdvPoint>* GameResultInfo::mutable_advpoints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.GameResultInfo.advPoints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_advpoints();
}
inline const ::DC::Packet::GameExitAdvPoint& GameResultInfo::advpoints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.advPoints)
  return _internal_advpoints().Get(index);
}
inline ::DC::Packet::GameExitAdvPoint* GameResultInfo::add_advpoints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::GameExitAdvPoint* _add = _internal_mutable_advpoints()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.GameResultInfo.advPoints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitAdvPoint>& GameResultInfo::advpoints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.GameResultInfo.advPoints)
  return _internal_advpoints();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitAdvPoint>&
GameResultInfo::_internal_advpoints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.advpoints_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitAdvPoint>*
GameResultInfo::_internal_mutable_advpoints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.advpoints_;
}

// string escapeMapName = 7;
inline void GameResultInfo::clear_escapemapname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escapemapname_.ClearToEmpty();
}
inline const std::string& GameResultInfo::escapemapname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.escapeMapName)
  return _internal_escapemapname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameResultInfo::set_escapemapname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escapemapname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.escapeMapName)
}
inline std::string* GameResultInfo::mutable_escapemapname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_escapemapname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameResultInfo.escapeMapName)
  return _s;
}
inline const std::string& GameResultInfo::_internal_escapemapname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.escapemapname_.Get();
}
inline void GameResultInfo::_internal_set_escapemapname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escapemapname_.Set(value, GetArena());
}
inline std::string* GameResultInfo::_internal_mutable_escapemapname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.escapemapname_.Mutable( GetArena());
}
inline std::string* GameResultInfo::release_escapemapname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameResultInfo.escapeMapName)
  return _impl_.escapemapname_.Release();
}
inline void GameResultInfo::set_allocated_escapemapname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escapemapname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.escapemapname_.IsDefault()) {
          _impl_.escapemapname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameResultInfo.escapeMapName)
}

// string reason = 8;
inline void GameResultInfo::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& GameResultInfo::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameResultInfo::set_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.reason)
}
inline std::string* GameResultInfo::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameResultInfo.reason)
  return _s;
}
inline const std::string& GameResultInfo::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void GameResultInfo::_internal_set_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* GameResultInfo::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* GameResultInfo::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameResultInfo.reason)
  return _impl_.reason_.Release();
}
inline void GameResultInfo::set_allocated_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reason_.IsDefault()) {
          _impl_.reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameResultInfo.reason)
}

// repeated .DC.Packet.GameExitExpPoint expPoints = 9;
inline int GameResultInfo::_internal_exppoints_size() const {
  return _internal_exppoints().size();
}
inline int GameResultInfo::exppoints_size() const {
  return _internal_exppoints_size();
}
inline void GameResultInfo::clear_exppoints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exppoints_.Clear();
}
inline ::DC::Packet::GameExitExpPoint* GameResultInfo::mutable_exppoints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameResultInfo.expPoints)
  return _internal_mutable_exppoints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitExpPoint>* GameResultInfo::mutable_exppoints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.GameResultInfo.expPoints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_exppoints();
}
inline const ::DC::Packet::GameExitExpPoint& GameResultInfo::exppoints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.expPoints)
  return _internal_exppoints().Get(index);
}
inline ::DC::Packet::GameExitExpPoint* GameResultInfo::add_exppoints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::GameExitExpPoint* _add = _internal_mutable_exppoints()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.GameResultInfo.expPoints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitExpPoint>& GameResultInfo::exppoints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.GameResultInfo.expPoints)
  return _internal_exppoints();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitExpPoint>&
GameResultInfo::_internal_exppoints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exppoints_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::GameExitExpPoint>*
GameResultInfo::_internal_mutable_exppoints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.exppoints_;
}

// repeated .DC.Packet.Killlog killLogData = 10;
inline int GameResultInfo::_internal_killlogdata_size() const {
  return _internal_killlogdata().size();
}
inline int GameResultInfo::killlogdata_size() const {
  return _internal_killlogdata_size();
}
inline void GameResultInfo::clear_killlogdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.killlogdata_.Clear();
}
inline ::DC::Packet::Killlog* GameResultInfo::mutable_killlogdata(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameResultInfo.killLogData)
  return _internal_mutable_killlogdata()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Killlog>* GameResultInfo::mutable_killlogdata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.GameResultInfo.killLogData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_killlogdata();
}
inline const ::DC::Packet::Killlog& GameResultInfo::killlogdata(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.killLogData)
  return _internal_killlogdata().Get(index);
}
inline ::DC::Packet::Killlog* GameResultInfo::add_killlogdata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Killlog* _add = _internal_mutable_killlogdata()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.GameResultInfo.killLogData)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Killlog>& GameResultInfo::killlogdata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.GameResultInfo.killLogData)
  return _internal_killlogdata();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Killlog>&
GameResultInfo::_internal_killlogdata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.killlogdata_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Killlog>*
GameResultInfo::_internal_mutable_killlogdata() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.killlogdata_;
}

// repeated .DC.Packet.MonsterKillLog monsterKillLogs = 11;
inline int GameResultInfo::_internal_monsterkilllogs_size() const {
  return _internal_monsterkilllogs().size();
}
inline int GameResultInfo::monsterkilllogs_size() const {
  return _internal_monsterkilllogs_size();
}
inline void GameResultInfo::clear_monsterkilllogs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monsterkilllogs_.Clear();
}
inline ::DC::Packet::MonsterKillLog* GameResultInfo::mutable_monsterkilllogs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameResultInfo.monsterKillLogs)
  return _internal_mutable_monsterkilllogs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::MonsterKillLog>* GameResultInfo::mutable_monsterkilllogs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.GameResultInfo.monsterKillLogs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_monsterkilllogs();
}
inline const ::DC::Packet::MonsterKillLog& GameResultInfo::monsterkilllogs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.monsterKillLogs)
  return _internal_monsterkilllogs().Get(index);
}
inline ::DC::Packet::MonsterKillLog* GameResultInfo::add_monsterkilllogs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::MonsterKillLog* _add = _internal_mutable_monsterkilllogs()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.GameResultInfo.monsterKillLogs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::MonsterKillLog>& GameResultInfo::monsterkilllogs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.GameResultInfo.monsterKillLogs)
  return _internal_monsterkilllogs();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::MonsterKillLog>&
GameResultInfo::_internal_monsterkilllogs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.monsterkilllogs_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::MonsterKillLog>*
GameResultInfo::_internal_mutable_monsterkilllogs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.monsterkilllogs_;
}

// uint32 gameType = 12;
inline void GameResultInfo::clear_gametype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gametype_ = 0u;
}
inline ::uint32_t GameResultInfo::gametype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.gameType)
  return _internal_gametype();
}
inline void GameResultInfo::set_gametype(::uint32_t value) {
  _internal_set_gametype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.gameType)
}
inline ::uint32_t GameResultInfo::_internal_gametype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gametype_;
}
inline void GameResultInfo::_internal_set_gametype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gametype_ = value;
}

// uint32 needBlock = 13;
inline void GameResultInfo::clear_needblock() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needblock_ = 0u;
}
inline ::uint32_t GameResultInfo::needblock() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.needBlock)
  return _internal_needblock();
}
inline void GameResultInfo::set_needblock(::uint32_t value) {
  _internal_set_needblock(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.needBlock)
}
inline ::uint32_t GameResultInfo::_internal_needblock() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.needblock_;
}
inline void GameResultInfo::_internal_set_needblock(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needblock_ = value;
}

// uint32 needHWBlock = 14;
inline void GameResultInfo::clear_needhwblock() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needhwblock_ = 0u;
}
inline ::uint32_t GameResultInfo::needhwblock() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.needHWBlock)
  return _internal_needhwblock();
}
inline void GameResultInfo::set_needhwblock(::uint32_t value) {
  _internal_set_needhwblock(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.needHWBlock)
}
inline ::uint32_t GameResultInfo::_internal_needhwblock() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.needhwblock_;
}
inline void GameResultInfo::_internal_set_needhwblock(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needhwblock_ = value;
}

// uint32 blockTime_min = 15;
inline void GameResultInfo::clear_blocktime_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blocktime_min_ = 0u;
}
inline ::uint32_t GameResultInfo::blocktime_min() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.blockTime_min)
  return _internal_blocktime_min();
}
inline void GameResultInfo::set_blocktime_min(::uint32_t value) {
  _internal_set_blocktime_min(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.blockTime_min)
}
inline ::uint32_t GameResultInfo::_internal_blocktime_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blocktime_min_;
}
inline void GameResultInfo::_internal_set_blocktime_min(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blocktime_min_ = value;
}

// int32 addTriumphExpValue = 16;
inline void GameResultInfo::clear_addtriumphexpvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addtriumphexpvalue_ = 0;
}
inline ::int32_t GameResultInfo::addtriumphexpvalue() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.addTriumphExpValue)
  return _internal_addtriumphexpvalue();
}
inline void GameResultInfo::set_addtriumphexpvalue(::int32_t value) {
  _internal_set_addtriumphexpvalue(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.addTriumphExpValue)
}
inline ::int32_t GameResultInfo::_internal_addtriumphexpvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addtriumphexpvalue_;
}
inline void GameResultInfo::_internal_set_addtriumphexpvalue(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addtriumphexpvalue_ = value;
}

// repeated .DC.Packet.Location locations = 17;
inline int GameResultInfo::_internal_locations_size() const {
  return _internal_locations().size();
}
inline int GameResultInfo::locations_size() const {
  return _internal_locations_size();
}
inline void GameResultInfo::clear_locations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locations_.Clear();
}
inline ::DC::Packet::Location* GameResultInfo::mutable_locations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameResultInfo.locations)
  return _internal_mutable_locations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Location>* GameResultInfo::mutable_locations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.GameResultInfo.locations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_locations();
}
inline const ::DC::Packet::Location& GameResultInfo::locations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.locations)
  return _internal_locations().Get(index);
}
inline ::DC::Packet::Location* GameResultInfo::add_locations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Location* _add = _internal_mutable_locations()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.GameResultInfo.locations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Location>& GameResultInfo::locations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.GameResultInfo.locations)
  return _internal_locations();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Location>&
GameResultInfo::_internal_locations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.locations_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Location>*
GameResultInfo::_internal_mutable_locations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.locations_;
}

// repeated .DC.Packet.NewItemLog newItemLogs = 18;
inline int GameResultInfo::_internal_newitemlogs_size() const {
  return _internal_newitemlogs().size();
}
inline int GameResultInfo::newitemlogs_size() const {
  return _internal_newitemlogs_size();
}
inline void GameResultInfo::clear_newitemlogs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newitemlogs_.Clear();
}
inline ::DC::Packet::NewItemLog* GameResultInfo::mutable_newitemlogs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameResultInfo.newItemLogs)
  return _internal_mutable_newitemlogs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::NewItemLog>* GameResultInfo::mutable_newitemlogs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.GameResultInfo.newItemLogs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_newitemlogs();
}
inline const ::DC::Packet::NewItemLog& GameResultInfo::newitemlogs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.newItemLogs)
  return _internal_newitemlogs().Get(index);
}
inline ::DC::Packet::NewItemLog* GameResultInfo::add_newitemlogs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::NewItemLog* _add = _internal_mutable_newitemlogs()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.GameResultInfo.newItemLogs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::NewItemLog>& GameResultInfo::newitemlogs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.GameResultInfo.newItemLogs)
  return _internal_newitemlogs();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::NewItemLog>&
GameResultInfo::_internal_newitemlogs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.newitemlogs_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::NewItemLog>*
GameResultInfo::_internal_mutable_newitemlogs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.newitemlogs_;
}

// repeated .DC.Packet.SGameQuestInfo quests = 19;
inline int GameResultInfo::_internal_quests_size() const {
  return _internal_quests().size();
}
inline int GameResultInfo::quests_size() const {
  return _internal_quests_size();
}
inline void GameResultInfo::clear_quests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quests_.Clear();
}
inline ::DC::Packet::SGameQuestInfo* GameResultInfo::mutable_quests(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameResultInfo.quests)
  return _internal_mutable_quests()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestInfo>* GameResultInfo::mutable_quests()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.GameResultInfo.quests)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_quests();
}
inline const ::DC::Packet::SGameQuestInfo& GameResultInfo::quests(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.quests)
  return _internal_quests().Get(index);
}
inline ::DC::Packet::SGameQuestInfo* GameResultInfo::add_quests() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SGameQuestInfo* _add = _internal_mutable_quests()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.GameResultInfo.quests)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestInfo>& GameResultInfo::quests() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.GameResultInfo.quests)
  return _internal_quests();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestInfo>&
GameResultInfo::_internal_quests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quests_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameQuestInfo>*
GameResultInfo::_internal_mutable_quests() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.quests_;
}

// repeated .DC.Packet.SGameStat gameStats = 20;
inline int GameResultInfo::_internal_gamestats_size() const {
  return _internal_gamestats().size();
}
inline int GameResultInfo::gamestats_size() const {
  return _internal_gamestats_size();
}
inline ::DC::Packet::SGameStat* GameResultInfo::mutable_gamestats(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameResultInfo.gameStats)
  return _internal_mutable_gamestats()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameStat>* GameResultInfo::mutable_gamestats()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.GameResultInfo.gameStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_gamestats();
}
inline const ::DC::Packet::SGameStat& GameResultInfo::gamestats(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.gameStats)
  return _internal_gamestats().Get(index);
}
inline ::DC::Packet::SGameStat* GameResultInfo::add_gamestats() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SGameStat* _add = _internal_mutable_gamestats()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.GameResultInfo.gameStats)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameStat>& GameResultInfo::gamestats() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.GameResultInfo.gameStats)
  return _internal_gamestats();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameStat>&
GameResultInfo::_internal_gamestats() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gamestats_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SGameStat>*
GameResultInfo::_internal_mutable_gamestats() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.gamestats_;
}

// string seasonId = 21;
inline void GameResultInfo::clear_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.ClearToEmpty();
}
inline const std::string& GameResultInfo::seasonid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.seasonId)
  return _internal_seasonid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameResultInfo::set_seasonid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.seasonId)
}
inline std::string* GameResultInfo::mutable_seasonid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_seasonid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameResultInfo.seasonId)
  return _s;
}
inline const std::string& GameResultInfo::_internal_seasonid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seasonid_.Get();
}
inline void GameResultInfo::_internal_set_seasonid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.Set(value, GetArena());
}
inline std::string* GameResultInfo::_internal_mutable_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.seasonid_.Mutable( GetArena());
}
inline std::string* GameResultInfo::release_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameResultInfo.seasonId)
  return _impl_.seasonid_.Release();
}
inline void GameResultInfo::set_allocated_seasonid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.seasonid_.IsDefault()) {
          _impl_.seasonid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameResultInfo.seasonId)
}

// uint32 isSeason = 22;
inline void GameResultInfo::clear_isseason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isseason_ = 0u;
}
inline ::uint32_t GameResultInfo::isseason() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.isSeason)
  return _internal_isseason();
}
inline void GameResultInfo::set_isseason(::uint32_t value) {
  _internal_set_isseason(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.isSeason)
}
inline ::uint32_t GameResultInfo::_internal_isseason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isseason_;
}
inline void GameResultInfo::_internal_set_isseason(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isseason_ = value;
}

// string dungeonIdTag = 23;
inline void GameResultInfo::clear_dungeonidtag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonidtag_.ClearToEmpty();
}
inline const std::string& GameResultInfo::dungeonidtag() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.dungeonIdTag)
  return _internal_dungeonidtag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameResultInfo::set_dungeonidtag(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonidtag_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.dungeonIdTag)
}
inline std::string* GameResultInfo::mutable_dungeonidtag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dungeonidtag();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameResultInfo.dungeonIdTag)
  return _s;
}
inline const std::string& GameResultInfo::_internal_dungeonidtag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dungeonidtag_.Get();
}
inline void GameResultInfo::_internal_set_dungeonidtag(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonidtag_.Set(value, GetArena());
}
inline std::string* GameResultInfo::_internal_mutable_dungeonidtag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dungeonidtag_.Mutable( GetArena());
}
inline std::string* GameResultInfo::release_dungeonidtag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameResultInfo.dungeonIdTag)
  return _impl_.dungeonidtag_.Release();
}
inline void GameResultInfo::set_allocated_dungeonidtag(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonidtag_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dungeonidtag_.IsDefault()) {
          _impl_.dungeonidtag_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameResultInfo.dungeonIdTag)
}

// uint32 isBasecamp = 24;
inline void GameResultInfo::clear_isbasecamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isbasecamp_ = 0u;
}
inline ::uint32_t GameResultInfo::isbasecamp() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.isBasecamp)
  return _internal_isbasecamp();
}
inline void GameResultInfo::set_isbasecamp(::uint32_t value) {
  _internal_set_isbasecamp(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.isBasecamp)
}
inline ::uint32_t GameResultInfo::_internal_isbasecamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isbasecamp_;
}
inline void GameResultInfo::_internal_set_isbasecamp(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isbasecamp_ = value;
}

// string userPcLanguageCode = 25;
inline void GameResultInfo::clear_userpclanguagecode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userpclanguagecode_.ClearToEmpty();
}
inline const std::string& GameResultInfo::userpclanguagecode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameResultInfo.userPcLanguageCode)
  return _internal_userpclanguagecode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameResultInfo::set_userpclanguagecode(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userpclanguagecode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameResultInfo.userPcLanguageCode)
}
inline std::string* GameResultInfo::mutable_userpclanguagecode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_userpclanguagecode();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameResultInfo.userPcLanguageCode)
  return _s;
}
inline const std::string& GameResultInfo::_internal_userpclanguagecode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userpclanguagecode_.Get();
}
inline void GameResultInfo::_internal_set_userpclanguagecode(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userpclanguagecode_.Set(value, GetArena());
}
inline std::string* GameResultInfo::_internal_mutable_userpclanguagecode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.userpclanguagecode_.Mutable( GetArena());
}
inline std::string* GameResultInfo::release_userpclanguagecode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameResultInfo.userPcLanguageCode)
  return _impl_.userpclanguagecode_.Release();
}
inline void GameResultInfo::set_allocated_userpclanguagecode(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userpclanguagecode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.userpclanguagecode_.IsDefault()) {
          _impl_.userpclanguagecode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameResultInfo.userPcLanguageCode)
}

// -------------------------------------------------------------------

// C2S_GameEscapeUser_POST

// .DC.Packet.GameResultInfo resultInfo = 1;
inline bool C2S_GameEscapeUser_POST::has_resultinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.resultinfo_ != nullptr);
  return value;
}
inline void C2S_GameEscapeUser_POST::clear_resultinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resultinfo_ != nullptr) _impl_.resultinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::GameResultInfo& C2S_GameEscapeUser_POST::_internal_resultinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::GameResultInfo* p = _impl_.resultinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::GameResultInfo&>(::DC::Packet::_GameResultInfo_default_instance_);
}
inline const ::DC::Packet::GameResultInfo& C2S_GameEscapeUser_POST::resultinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameEscapeUser_POST.resultInfo)
  return _internal_resultinfo();
}
inline void C2S_GameEscapeUser_POST::unsafe_arena_set_allocated_resultinfo(::DC::Packet::GameResultInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resultinfo_);
  }
  _impl_.resultinfo_ = reinterpret_cast<::DC::Packet::GameResultInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.C2S_GameEscapeUser_POST.resultInfo)
}
inline ::DC::Packet::GameResultInfo* C2S_GameEscapeUser_POST::release_resultinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::GameResultInfo* released = _impl_.resultinfo_;
  _impl_.resultinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::GameResultInfo* C2S_GameEscapeUser_POST::unsafe_arena_release_resultinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_GameEscapeUser_POST.resultInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::GameResultInfo* temp = _impl_.resultinfo_;
  _impl_.resultinfo_ = nullptr;
  return temp;
}
inline ::DC::Packet::GameResultInfo* C2S_GameEscapeUser_POST::_internal_mutable_resultinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resultinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::GameResultInfo>(GetArena());
    _impl_.resultinfo_ = reinterpret_cast<::DC::Packet::GameResultInfo*>(p);
  }
  return _impl_.resultinfo_;
}
inline ::DC::Packet::GameResultInfo* C2S_GameEscapeUser_POST::mutable_resultinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::GameResultInfo* _msg = _internal_mutable_resultinfo();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameEscapeUser_POST.resultInfo)
  return _msg;
}
inline void C2S_GameEscapeUser_POST::set_allocated_resultinfo(::DC::Packet::GameResultInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.resultinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.resultinfo_ = reinterpret_cast<::DC::Packet::GameResultInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_GameEscapeUser_POST.resultInfo)
}

// repeated .DC.Packet.SItem items = 2;
inline int C2S_GameEscapeUser_POST::_internal_items_size() const {
  return _internal_items().size();
}
inline int C2S_GameEscapeUser_POST::items_size() const {
  return _internal_items_size();
}
inline ::DC::Packet::SItem* C2S_GameEscapeUser_POST::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameEscapeUser_POST.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* C2S_GameEscapeUser_POST::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_GameEscapeUser_POST.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DC::Packet::SItem& C2S_GameEscapeUser_POST::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameEscapeUser_POST.items)
  return _internal_items().Get(index);
}
inline ::DC::Packet::SItem* C2S_GameEscapeUser_POST::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_GameEscapeUser_POST.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& C2S_GameEscapeUser_POST::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_GameEscapeUser_POST.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>&
C2S_GameEscapeUser_POST::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>*
C2S_GameEscapeUser_POST::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// string secretId = 3;
inline void C2S_GameEscapeUser_POST::clear_secretid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secretid_.ClearToEmpty();
}
inline const std::string& C2S_GameEscapeUser_POST::secretid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameEscapeUser_POST.secretId)
  return _internal_secretid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_GameEscapeUser_POST::set_secretid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secretid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameEscapeUser_POST.secretId)
}
inline std::string* C2S_GameEscapeUser_POST::mutable_secretid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_secretid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameEscapeUser_POST.secretId)
  return _s;
}
inline const std::string& C2S_GameEscapeUser_POST::_internal_secretid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.secretid_.Get();
}
inline void C2S_GameEscapeUser_POST::_internal_set_secretid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secretid_.Set(value, GetArena());
}
inline std::string* C2S_GameEscapeUser_POST::_internal_mutable_secretid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.secretid_.Mutable( GetArena());
}
inline std::string* C2S_GameEscapeUser_POST::release_secretid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_GameEscapeUser_POST.secretId)
  return _impl_.secretid_.Release();
}
inline void C2S_GameEscapeUser_POST::set_allocated_secretid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secretid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.secretid_.IsDefault()) {
          _impl_.secretid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_GameEscapeUser_POST.secretId)
}

// repeated .DC.Packet.SFriendItemRecoveryInfo friendItemRecoveryInfos = 4;
inline int C2S_GameEscapeUser_POST::_internal_frienditemrecoveryinfos_size() const {
  return _internal_frienditemrecoveryinfos().size();
}
inline int C2S_GameEscapeUser_POST::frienditemrecoveryinfos_size() const {
  return _internal_frienditemrecoveryinfos_size();
}
inline ::DC::Packet::SFriendItemRecoveryInfo* C2S_GameEscapeUser_POST::mutable_frienditemrecoveryinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameEscapeUser_POST.friendItemRecoveryInfos)
  return _internal_mutable_frienditemrecoveryinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SFriendItemRecoveryInfo>* C2S_GameEscapeUser_POST::mutable_frienditemrecoveryinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_GameEscapeUser_POST.friendItemRecoveryInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_frienditemrecoveryinfos();
}
inline const ::DC::Packet::SFriendItemRecoveryInfo& C2S_GameEscapeUser_POST::frienditemrecoveryinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameEscapeUser_POST.friendItemRecoveryInfos)
  return _internal_frienditemrecoveryinfos().Get(index);
}
inline ::DC::Packet::SFriendItemRecoveryInfo* C2S_GameEscapeUser_POST::add_frienditemrecoveryinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SFriendItemRecoveryInfo* _add = _internal_mutable_frienditemrecoveryinfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_GameEscapeUser_POST.friendItemRecoveryInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SFriendItemRecoveryInfo>& C2S_GameEscapeUser_POST::frienditemrecoveryinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_GameEscapeUser_POST.friendItemRecoveryInfos)
  return _internal_frienditemrecoveryinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SFriendItemRecoveryInfo>&
C2S_GameEscapeUser_POST::_internal_frienditemrecoveryinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frienditemrecoveryinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SFriendItemRecoveryInfo>*
C2S_GameEscapeUser_POST::_internal_mutable_frienditemrecoveryinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.frienditemrecoveryinfos_;
}

// -------------------------------------------------------------------

// C2S_GameExitUser_V2_POST

// .DC.Packet.GameResultInfo resultInfo = 1;
inline bool C2S_GameExitUser_V2_POST::has_resultinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.resultinfo_ != nullptr);
  return value;
}
inline void C2S_GameExitUser_V2_POST::clear_resultinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resultinfo_ != nullptr) _impl_.resultinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::GameResultInfo& C2S_GameExitUser_V2_POST::_internal_resultinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::GameResultInfo* p = _impl_.resultinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::GameResultInfo&>(::DC::Packet::_GameResultInfo_default_instance_);
}
inline const ::DC::Packet::GameResultInfo& C2S_GameExitUser_V2_POST::resultinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitUser_V2_POST.resultInfo)
  return _internal_resultinfo();
}
inline void C2S_GameExitUser_V2_POST::unsafe_arena_set_allocated_resultinfo(::DC::Packet::GameResultInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resultinfo_);
  }
  _impl_.resultinfo_ = reinterpret_cast<::DC::Packet::GameResultInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.C2S_GameExitUser_V2_POST.resultInfo)
}
inline ::DC::Packet::GameResultInfo* C2S_GameExitUser_V2_POST::release_resultinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::GameResultInfo* released = _impl_.resultinfo_;
  _impl_.resultinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::GameResultInfo* C2S_GameExitUser_V2_POST::unsafe_arena_release_resultinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_GameExitUser_V2_POST.resultInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::GameResultInfo* temp = _impl_.resultinfo_;
  _impl_.resultinfo_ = nullptr;
  return temp;
}
inline ::DC::Packet::GameResultInfo* C2S_GameExitUser_V2_POST::_internal_mutable_resultinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resultinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::GameResultInfo>(GetArena());
    _impl_.resultinfo_ = reinterpret_cast<::DC::Packet::GameResultInfo*>(p);
  }
  return _impl_.resultinfo_;
}
inline ::DC::Packet::GameResultInfo* C2S_GameExitUser_V2_POST::mutable_resultinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::GameResultInfo* _msg = _internal_mutable_resultinfo();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameExitUser_V2_POST.resultInfo)
  return _msg;
}
inline void C2S_GameExitUser_V2_POST::set_allocated_resultinfo(::DC::Packet::GameResultInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.resultinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.resultinfo_ = reinterpret_cast<::DC::Packet::GameResultInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_GameExitUser_V2_POST.resultInfo)
}

// -------------------------------------------------------------------

// C2S_GameExitEscapedUser_POST

// string accountId = 1;
inline void C2S_GameExitEscapedUser_POST::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& C2S_GameExitEscapedUser_POST::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitEscapedUser_POST.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_GameExitEscapedUser_POST::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameExitEscapedUser_POST.accountId)
}
inline std::string* C2S_GameExitEscapedUser_POST::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameExitEscapedUser_POST.accountId)
  return _s;
}
inline const std::string& C2S_GameExitEscapedUser_POST::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void C2S_GameExitEscapedUser_POST::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* C2S_GameExitEscapedUser_POST::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* C2S_GameExitEscapedUser_POST::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_GameExitEscapedUser_POST.accountId)
  return _impl_.accountid_.Release();
}
inline void C2S_GameExitEscapedUser_POST::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_GameExitEscapedUser_POST.accountId)
}

// string characterId = 2;
inline void C2S_GameExitEscapedUser_POST::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& C2S_GameExitEscapedUser_POST::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitEscapedUser_POST.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_GameExitEscapedUser_POST::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameExitEscapedUser_POST.characterId)
}
inline std::string* C2S_GameExitEscapedUser_POST::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameExitEscapedUser_POST.characterId)
  return _s;
}
inline const std::string& C2S_GameExitEscapedUser_POST::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void C2S_GameExitEscapedUser_POST::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* C2S_GameExitEscapedUser_POST::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* C2S_GameExitEscapedUser_POST::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_GameExitEscapedUser_POST.characterId)
  return _impl_.characterid_.Release();
}
inline void C2S_GameExitEscapedUser_POST::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_GameExitEscapedUser_POST.characterId)
}

// uint64 gameId = 3;
inline void C2S_GameExitEscapedUser_POST::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t C2S_GameExitEscapedUser_POST::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameExitEscapedUser_POST.gameId)
  return _internal_gameid();
}
inline void C2S_GameExitEscapedUser_POST::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameExitEscapedUser_POST.gameId)
}
inline ::uint64_t C2S_GameExitEscapedUser_POST::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C2S_GameExitEscapedUser_POST::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// -------------------------------------------------------------------

// SSkill_Floor

// .DC.Packet.SSkill skill = 1;
inline bool SSkill_Floor::has_skill() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.skill_ != nullptr);
  return value;
}
inline const ::DC::Packet::SSkill& SSkill_Floor::_internal_skill() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SSkill* p = _impl_.skill_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SSkill&>(::DC::Packet::_SSkill_default_instance_);
}
inline const ::DC::Packet::SSkill& SSkill_Floor::skill() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SSkill_Floor.skill)
  return _internal_skill();
}
inline void SSkill_Floor::unsafe_arena_set_allocated_skill(::DC::Packet::SSkill* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.skill_);
  }
  _impl_.skill_ = reinterpret_cast<::DC::Packet::SSkill*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SSkill_Floor.skill)
}
inline ::DC::Packet::SSkill* SSkill_Floor::release_skill() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SSkill* released = _impl_.skill_;
  _impl_.skill_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SSkill* SSkill_Floor::unsafe_arena_release_skill() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SSkill_Floor.skill)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SSkill* temp = _impl_.skill_;
  _impl_.skill_ = nullptr;
  return temp;
}
inline ::DC::Packet::SSkill* SSkill_Floor::_internal_mutable_skill() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.skill_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SSkill>(GetArena());
    _impl_.skill_ = reinterpret_cast<::DC::Packet::SSkill*>(p);
  }
  return _impl_.skill_;
}
inline ::DC::Packet::SSkill* SSkill_Floor::mutable_skill() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SSkill* _msg = _internal_mutable_skill();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SSkill_Floor.skill)
  return _msg;
}
inline void SSkill_Floor::set_allocated_skill(::DC::Packet::SSkill* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.skill_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.skill_ = reinterpret_cast<::DC::Packet::SSkill*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SSkill_Floor.skill)
}

// int32 count = 2;
inline void SSkill_Floor::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = 0;
}
inline ::int32_t SSkill_Floor::count() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SSkill_Floor.count)
  return _internal_count();
}
inline void SSkill_Floor::set_count(::int32_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SSkill_Floor.count)
}
inline ::int32_t SSkill_Floor::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void SSkill_Floor::_internal_set_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// -------------------------------------------------------------------

// SSpell_Floor

// .DC.Packet.SSpell spell = 1;
inline bool SSpell_Floor::has_spell() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spell_ != nullptr);
  return value;
}
inline const ::DC::Packet::SSpell& SSpell_Floor::_internal_spell() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SSpell* p = _impl_.spell_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SSpell&>(::DC::Packet::_SSpell_default_instance_);
}
inline const ::DC::Packet::SSpell& SSpell_Floor::spell() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SSpell_Floor.spell)
  return _internal_spell();
}
inline void SSpell_Floor::unsafe_arena_set_allocated_spell(::DC::Packet::SSpell* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.spell_);
  }
  _impl_.spell_ = reinterpret_cast<::DC::Packet::SSpell*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SSpell_Floor.spell)
}
inline ::DC::Packet::SSpell* SSpell_Floor::release_spell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SSpell* released = _impl_.spell_;
  _impl_.spell_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SSpell* SSpell_Floor::unsafe_arena_release_spell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SSpell_Floor.spell)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SSpell* temp = _impl_.spell_;
  _impl_.spell_ = nullptr;
  return temp;
}
inline ::DC::Packet::SSpell* SSpell_Floor::_internal_mutable_spell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.spell_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SSpell>(GetArena());
    _impl_.spell_ = reinterpret_cast<::DC::Packet::SSpell*>(p);
  }
  return _impl_.spell_;
}
inline ::DC::Packet::SSpell* SSpell_Floor::mutable_spell() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SSpell* _msg = _internal_mutable_spell();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SSpell_Floor.spell)
  return _msg;
}
inline void SSpell_Floor::set_allocated_spell(::DC::Packet::SSpell* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.spell_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.spell_ = reinterpret_cast<::DC::Packet::SSpell*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SSpell_Floor.spell)
}

// int32 count = 2;
inline void SSpell_Floor::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = 0;
}
inline ::int32_t SSpell_Floor::count() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SSpell_Floor.count)
  return _internal_count();
}
inline void SSpell_Floor::set_count(::int32_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SSpell_Floor.count)
}
inline ::int32_t SSpell_Floor::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void SSpell_Floor::_internal_set_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// -------------------------------------------------------------------

// SMusic_Floor

// .DC.Packet.SMusic music = 1;
inline bool SMusic_Floor::has_music() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.music_ != nullptr);
  return value;
}
inline const ::DC::Packet::SMusic& SMusic_Floor::_internal_music() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SMusic* p = _impl_.music_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SMusic&>(::DC::Packet::_SMusic_default_instance_);
}
inline const ::DC::Packet::SMusic& SMusic_Floor::music() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SMusic_Floor.music)
  return _internal_music();
}
inline void SMusic_Floor::unsafe_arena_set_allocated_music(::DC::Packet::SMusic* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.music_);
  }
  _impl_.music_ = reinterpret_cast<::DC::Packet::SMusic*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SMusic_Floor.music)
}
inline ::DC::Packet::SMusic* SMusic_Floor::release_music() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SMusic* released = _impl_.music_;
  _impl_.music_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SMusic* SMusic_Floor::unsafe_arena_release_music() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SMusic_Floor.music)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SMusic* temp = _impl_.music_;
  _impl_.music_ = nullptr;
  return temp;
}
inline ::DC::Packet::SMusic* SMusic_Floor::_internal_mutable_music() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.music_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SMusic>(GetArena());
    _impl_.music_ = reinterpret_cast<::DC::Packet::SMusic*>(p);
  }
  return _impl_.music_;
}
inline ::DC::Packet::SMusic* SMusic_Floor::mutable_music() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SMusic* _msg = _internal_mutable_music();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SMusic_Floor.music)
  return _msg;
}
inline void SMusic_Floor::set_allocated_music(::DC::Packet::SMusic* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.music_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.music_ = reinterpret_cast<::DC::Packet::SMusic*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SMusic_Floor.music)
}

// int32 count = 2;
inline void SMusic_Floor::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = 0;
}
inline ::int32_t SMusic_Floor::count() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SMusic_Floor.count)
  return _internal_count();
}
inline void SMusic_Floor::set_count(::int32_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SMusic_Floor.count)
}
inline ::int32_t SMusic_Floor::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void SMusic_Floor::_internal_set_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// -------------------------------------------------------------------

// SShapeShift_Floor

// .DC.Packet.SShapeShift shapeShift = 1;
inline bool SShapeShift_Floor::has_shapeshift() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shapeshift_ != nullptr);
  return value;
}
inline const ::DC::Packet::SShapeShift& SShapeShift_Floor::_internal_shapeshift() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SShapeShift* p = _impl_.shapeshift_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SShapeShift&>(::DC::Packet::_SShapeShift_default_instance_);
}
inline const ::DC::Packet::SShapeShift& SShapeShift_Floor::shapeshift() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SShapeShift_Floor.shapeShift)
  return _internal_shapeshift();
}
inline void SShapeShift_Floor::unsafe_arena_set_allocated_shapeshift(::DC::Packet::SShapeShift* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.shapeshift_);
  }
  _impl_.shapeshift_ = reinterpret_cast<::DC::Packet::SShapeShift*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SShapeShift_Floor.shapeShift)
}
inline ::DC::Packet::SShapeShift* SShapeShift_Floor::release_shapeshift() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SShapeShift* released = _impl_.shapeshift_;
  _impl_.shapeshift_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SShapeShift* SShapeShift_Floor::unsafe_arena_release_shapeshift() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SShapeShift_Floor.shapeShift)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SShapeShift* temp = _impl_.shapeshift_;
  _impl_.shapeshift_ = nullptr;
  return temp;
}
inline ::DC::Packet::SShapeShift* SShapeShift_Floor::_internal_mutable_shapeshift() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.shapeshift_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SShapeShift>(GetArena());
    _impl_.shapeshift_ = reinterpret_cast<::DC::Packet::SShapeShift*>(p);
  }
  return _impl_.shapeshift_;
}
inline ::DC::Packet::SShapeShift* SShapeShift_Floor::mutable_shapeshift() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SShapeShift* _msg = _internal_mutable_shapeshift();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SShapeShift_Floor.shapeShift)
  return _msg;
}
inline void SShapeShift_Floor::set_allocated_shapeshift(::DC::Packet::SShapeShift* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.shapeshift_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.shapeshift_ = reinterpret_cast<::DC::Packet::SShapeShift*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SShapeShift_Floor.shapeShift)
}

// int32 count = 2;
inline void SShapeShift_Floor::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = 0;
}
inline ::int32_t SShapeShift_Floor::count() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SShapeShift_Floor.count)
  return _internal_count();
}
inline void SShapeShift_Floor::set_count(::int32_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SShapeShift_Floor.count)
}
inline ::int32_t SShapeShift_Floor::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void SShapeShift_Floor::_internal_set_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// -------------------------------------------------------------------

// FloorMatchMaking_CharacterInfo

// string accountId = 1;
inline void FloorMatchMaking_CharacterInfo::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& FloorMatchMaking_CharacterInfo::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.FloorMatchMaking_CharacterInfo.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FloorMatchMaking_CharacterInfo::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.FloorMatchMaking_CharacterInfo.accountId)
}
inline std::string* FloorMatchMaking_CharacterInfo::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.FloorMatchMaking_CharacterInfo.accountId)
  return _s;
}
inline const std::string& FloorMatchMaking_CharacterInfo::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void FloorMatchMaking_CharacterInfo::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* FloorMatchMaking_CharacterInfo::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* FloorMatchMaking_CharacterInfo::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.FloorMatchMaking_CharacterInfo.accountId)
  return _impl_.accountid_.Release();
}
inline void FloorMatchMaking_CharacterInfo::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.FloorMatchMaking_CharacterInfo.accountId)
}

// string characterId = 2;
inline void FloorMatchMaking_CharacterInfo::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& FloorMatchMaking_CharacterInfo::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.FloorMatchMaking_CharacterInfo.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FloorMatchMaking_CharacterInfo::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.FloorMatchMaking_CharacterInfo.characterId)
}
inline std::string* FloorMatchMaking_CharacterInfo::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.FloorMatchMaking_CharacterInfo.characterId)
  return _s;
}
inline const std::string& FloorMatchMaking_CharacterInfo::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void FloorMatchMaking_CharacterInfo::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* FloorMatchMaking_CharacterInfo::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* FloorMatchMaking_CharacterInfo::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.FloorMatchMaking_CharacterInfo.characterId)
  return _impl_.characterid_.Release();
}
inline void FloorMatchMaking_CharacterInfo::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.FloorMatchMaking_CharacterInfo.characterId)
}

// repeated .DC.Packet.SDownItem downItems = 3;
inline int FloorMatchMaking_CharacterInfo::_internal_downitems_size() const {
  return _internal_downitems().size();
}
inline int FloorMatchMaking_CharacterInfo::downitems_size() const {
  return _internal_downitems_size();
}
inline ::DC::Packet::SDownItem* FloorMatchMaking_CharacterInfo::mutable_downitems(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.FloorMatchMaking_CharacterInfo.downItems)
  return _internal_mutable_downitems()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SDownItem>* FloorMatchMaking_CharacterInfo::mutable_downitems()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.FloorMatchMaking_CharacterInfo.downItems)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_downitems();
}
inline const ::DC::Packet::SDownItem& FloorMatchMaking_CharacterInfo::downitems(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.FloorMatchMaking_CharacterInfo.downItems)
  return _internal_downitems().Get(index);
}
inline ::DC::Packet::SDownItem* FloorMatchMaking_CharacterInfo::add_downitems() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SDownItem* _add = _internal_mutable_downitems()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.FloorMatchMaking_CharacterInfo.downItems)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SDownItem>& FloorMatchMaking_CharacterInfo::downitems() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.FloorMatchMaking_CharacterInfo.downItems)
  return _internal_downitems();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SDownItem>&
FloorMatchMaking_CharacterInfo::_internal_downitems() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.downitems_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SDownItem>*
FloorMatchMaking_CharacterInfo::_internal_mutable_downitems() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.downitems_;
}

// repeated .DC.Packet.SPerk perks = 4;
inline int FloorMatchMaking_CharacterInfo::_internal_perks_size() const {
  return _internal_perks().size();
}
inline int FloorMatchMaking_CharacterInfo::perks_size() const {
  return _internal_perks_size();
}
inline ::DC::Packet::SPerk* FloorMatchMaking_CharacterInfo::mutable_perks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.FloorMatchMaking_CharacterInfo.perks)
  return _internal_mutable_perks()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>* FloorMatchMaking_CharacterInfo::mutable_perks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.FloorMatchMaking_CharacterInfo.perks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_perks();
}
inline const ::DC::Packet::SPerk& FloorMatchMaking_CharacterInfo::perks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.FloorMatchMaking_CharacterInfo.perks)
  return _internal_perks().Get(index);
}
inline ::DC::Packet::SPerk* FloorMatchMaking_CharacterInfo::add_perks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SPerk* _add = _internal_mutable_perks()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.FloorMatchMaking_CharacterInfo.perks)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>& FloorMatchMaking_CharacterInfo::perks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.FloorMatchMaking_CharacterInfo.perks)
  return _internal_perks();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>&
FloorMatchMaking_CharacterInfo::_internal_perks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.perks_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>*
FloorMatchMaking_CharacterInfo::_internal_mutable_perks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.perks_;
}

// repeated .DC.Packet.SSkill_Floor skills = 5;
inline int FloorMatchMaking_CharacterInfo::_internal_skills_size() const {
  return _internal_skills().size();
}
inline int FloorMatchMaking_CharacterInfo::skills_size() const {
  return _internal_skills_size();
}
inline void FloorMatchMaking_CharacterInfo::clear_skills() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skills_.Clear();
}
inline ::DC::Packet::SSkill_Floor* FloorMatchMaking_CharacterInfo::mutable_skills(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.FloorMatchMaking_CharacterInfo.skills)
  return _internal_mutable_skills()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SSkill_Floor>* FloorMatchMaking_CharacterInfo::mutable_skills()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.FloorMatchMaking_CharacterInfo.skills)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_skills();
}
inline const ::DC::Packet::SSkill_Floor& FloorMatchMaking_CharacterInfo::skills(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.FloorMatchMaking_CharacterInfo.skills)
  return _internal_skills().Get(index);
}
inline ::DC::Packet::SSkill_Floor* FloorMatchMaking_CharacterInfo::add_skills() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SSkill_Floor* _add = _internal_mutable_skills()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.FloorMatchMaking_CharacterInfo.skills)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSkill_Floor>& FloorMatchMaking_CharacterInfo::skills() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.FloorMatchMaking_CharacterInfo.skills)
  return _internal_skills();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSkill_Floor>&
FloorMatchMaking_CharacterInfo::_internal_skills() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.skills_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SSkill_Floor>*
FloorMatchMaking_CharacterInfo::_internal_mutable_skills() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.skills_;
}

// repeated .DC.Packet.SSpell_Floor spells = 6;
inline int FloorMatchMaking_CharacterInfo::_internal_spells_size() const {
  return _internal_spells().size();
}
inline int FloorMatchMaking_CharacterInfo::spells_size() const {
  return _internal_spells_size();
}
inline void FloorMatchMaking_CharacterInfo::clear_spells() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spells_.Clear();
}
inline ::DC::Packet::SSpell_Floor* FloorMatchMaking_CharacterInfo::mutable_spells(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.FloorMatchMaking_CharacterInfo.spells)
  return _internal_mutable_spells()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SSpell_Floor>* FloorMatchMaking_CharacterInfo::mutable_spells()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.FloorMatchMaking_CharacterInfo.spells)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_spells();
}
inline const ::DC::Packet::SSpell_Floor& FloorMatchMaking_CharacterInfo::spells(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.FloorMatchMaking_CharacterInfo.spells)
  return _internal_spells().Get(index);
}
inline ::DC::Packet::SSpell_Floor* FloorMatchMaking_CharacterInfo::add_spells() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SSpell_Floor* _add = _internal_mutable_spells()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.FloorMatchMaking_CharacterInfo.spells)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSpell_Floor>& FloorMatchMaking_CharacterInfo::spells() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.FloorMatchMaking_CharacterInfo.spells)
  return _internal_spells();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSpell_Floor>&
FloorMatchMaking_CharacterInfo::_internal_spells() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spells_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SSpell_Floor>*
FloorMatchMaking_CharacterInfo::_internal_mutable_spells() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.spells_;
}

// repeated .DC.Packet.SMusic_Floor musics = 7;
inline int FloorMatchMaking_CharacterInfo::_internal_musics_size() const {
  return _internal_musics().size();
}
inline int FloorMatchMaking_CharacterInfo::musics_size() const {
  return _internal_musics_size();
}
inline void FloorMatchMaking_CharacterInfo::clear_musics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.musics_.Clear();
}
inline ::DC::Packet::SMusic_Floor* FloorMatchMaking_CharacterInfo::mutable_musics(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.FloorMatchMaking_CharacterInfo.musics)
  return _internal_mutable_musics()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SMusic_Floor>* FloorMatchMaking_CharacterInfo::mutable_musics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.FloorMatchMaking_CharacterInfo.musics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_musics();
}
inline const ::DC::Packet::SMusic_Floor& FloorMatchMaking_CharacterInfo::musics(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.FloorMatchMaking_CharacterInfo.musics)
  return _internal_musics().Get(index);
}
inline ::DC::Packet::SMusic_Floor* FloorMatchMaking_CharacterInfo::add_musics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SMusic_Floor* _add = _internal_mutable_musics()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.FloorMatchMaking_CharacterInfo.musics)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SMusic_Floor>& FloorMatchMaking_CharacterInfo::musics() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.FloorMatchMaking_CharacterInfo.musics)
  return _internal_musics();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SMusic_Floor>&
FloorMatchMaking_CharacterInfo::_internal_musics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.musics_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SMusic_Floor>*
FloorMatchMaking_CharacterInfo::_internal_mutable_musics() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.musics_;
}

// repeated .DC.Packet.SShapeShift_Floor shapeShifts = 8;
inline int FloorMatchMaking_CharacterInfo::_internal_shapeshifts_size() const {
  return _internal_shapeshifts().size();
}
inline int FloorMatchMaking_CharacterInfo::shapeshifts_size() const {
  return _internal_shapeshifts_size();
}
inline void FloorMatchMaking_CharacterInfo::clear_shapeshifts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shapeshifts_.Clear();
}
inline ::DC::Packet::SShapeShift_Floor* FloorMatchMaking_CharacterInfo::mutable_shapeshifts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.FloorMatchMaking_CharacterInfo.shapeShifts)
  return _internal_mutable_shapeshifts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SShapeShift_Floor>* FloorMatchMaking_CharacterInfo::mutable_shapeshifts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.FloorMatchMaking_CharacterInfo.shapeShifts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_shapeshifts();
}
inline const ::DC::Packet::SShapeShift_Floor& FloorMatchMaking_CharacterInfo::shapeshifts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.FloorMatchMaking_CharacterInfo.shapeShifts)
  return _internal_shapeshifts().Get(index);
}
inline ::DC::Packet::SShapeShift_Floor* FloorMatchMaking_CharacterInfo::add_shapeshifts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SShapeShift_Floor* _add = _internal_mutable_shapeshifts()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.FloorMatchMaking_CharacterInfo.shapeShifts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SShapeShift_Floor>& FloorMatchMaking_CharacterInfo::shapeshifts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.FloorMatchMaking_CharacterInfo.shapeShifts)
  return _internal_shapeshifts();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SShapeShift_Floor>&
FloorMatchMaking_CharacterInfo::_internal_shapeshifts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shapeshifts_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SShapeShift_Floor>*
FloorMatchMaking_CharacterInfo::_internal_mutable_shapeshifts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.shapeshifts_;
}

// repeated string characterSkinIds = 9;
inline int FloorMatchMaking_CharacterInfo::_internal_characterskinids_size() const {
  return _internal_characterskinids().size();
}
inline int FloorMatchMaking_CharacterInfo::characterskinids_size() const {
  return _internal_characterskinids_size();
}
inline void FloorMatchMaking_CharacterInfo::clear_characterskinids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterskinids_.Clear();
}
inline std::string* FloorMatchMaking_CharacterInfo::add_characterskinids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_characterskinids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.FloorMatchMaking_CharacterInfo.characterSkinIds)
  return _s;
}
inline const std::string& FloorMatchMaking_CharacterInfo::characterskinids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.FloorMatchMaking_CharacterInfo.characterSkinIds)
  return _internal_characterskinids().Get(index);
}
inline std::string* FloorMatchMaking_CharacterInfo::mutable_characterskinids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.FloorMatchMaking_CharacterInfo.characterSkinIds)
  return _internal_mutable_characterskinids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FloorMatchMaking_CharacterInfo::set_characterskinids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_characterskinids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.FloorMatchMaking_CharacterInfo.characterSkinIds)
}
template <typename Arg_, typename... Args_>
inline void FloorMatchMaking_CharacterInfo::add_characterskinids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_characterskinids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.FloorMatchMaking_CharacterInfo.characterSkinIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FloorMatchMaking_CharacterInfo::characterskinids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.FloorMatchMaking_CharacterInfo.characterSkinIds)
  return _internal_characterskinids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FloorMatchMaking_CharacterInfo::mutable_characterskinids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.FloorMatchMaking_CharacterInfo.characterSkinIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_characterskinids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FloorMatchMaking_CharacterInfo::_internal_characterskinids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterskinids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FloorMatchMaking_CharacterInfo::_internal_mutable_characterskinids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.characterskinids_;
}

// repeated string itemSkinIds = 10;
inline int FloorMatchMaking_CharacterInfo::_internal_itemskinids_size() const {
  return _internal_itemskinids().size();
}
inline int FloorMatchMaking_CharacterInfo::itemskinids_size() const {
  return _internal_itemskinids_size();
}
inline void FloorMatchMaking_CharacterInfo::clear_itemskinids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.itemskinids_.Clear();
}
inline std::string* FloorMatchMaking_CharacterInfo::add_itemskinids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_itemskinids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.FloorMatchMaking_CharacterInfo.itemSkinIds)
  return _s;
}
inline const std::string& FloorMatchMaking_CharacterInfo::itemskinids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.FloorMatchMaking_CharacterInfo.itemSkinIds)
  return _internal_itemskinids().Get(index);
}
inline std::string* FloorMatchMaking_CharacterInfo::mutable_itemskinids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.FloorMatchMaking_CharacterInfo.itemSkinIds)
  return _internal_mutable_itemskinids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FloorMatchMaking_CharacterInfo::set_itemskinids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_itemskinids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.FloorMatchMaking_CharacterInfo.itemSkinIds)
}
template <typename Arg_, typename... Args_>
inline void FloorMatchMaking_CharacterInfo::add_itemskinids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_itemskinids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.FloorMatchMaking_CharacterInfo.itemSkinIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FloorMatchMaking_CharacterInfo::itemskinids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.FloorMatchMaking_CharacterInfo.itemSkinIds)
  return _internal_itemskinids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FloorMatchMaking_CharacterInfo::mutable_itemskinids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.FloorMatchMaking_CharacterInfo.itemSkinIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_itemskinids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FloorMatchMaking_CharacterInfo::_internal_itemskinids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.itemskinids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FloorMatchMaking_CharacterInfo::_internal_mutable_itemskinids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.itemskinids_;
}

// repeated .DC.Packet.SEMOTE emotes = 11;
inline int FloorMatchMaking_CharacterInfo::_internal_emotes_size() const {
  return _internal_emotes().size();
}
inline int FloorMatchMaking_CharacterInfo::emotes_size() const {
  return _internal_emotes_size();
}
inline ::DC::Packet::SEMOTE* FloorMatchMaking_CharacterInfo::mutable_emotes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.FloorMatchMaking_CharacterInfo.emotes)
  return _internal_mutable_emotes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SEMOTE>* FloorMatchMaking_CharacterInfo::mutable_emotes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.FloorMatchMaking_CharacterInfo.emotes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_emotes();
}
inline const ::DC::Packet::SEMOTE& FloorMatchMaking_CharacterInfo::emotes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.FloorMatchMaking_CharacterInfo.emotes)
  return _internal_emotes().Get(index);
}
inline ::DC::Packet::SEMOTE* FloorMatchMaking_CharacterInfo::add_emotes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SEMOTE* _add = _internal_mutable_emotes()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.FloorMatchMaking_CharacterInfo.emotes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SEMOTE>& FloorMatchMaking_CharacterInfo::emotes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.FloorMatchMaking_CharacterInfo.emotes)
  return _internal_emotes();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SEMOTE>&
FloorMatchMaking_CharacterInfo::_internal_emotes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.emotes_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SEMOTE>*
FloorMatchMaking_CharacterInfo::_internal_mutable_emotes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.emotes_;
}

// int32 hp = 12;
inline void FloorMatchMaking_CharacterInfo::clear_hp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hp_ = 0;
}
inline ::int32_t FloorMatchMaking_CharacterInfo::hp() const {
  // @@protoc_insertion_point(field_get:DC.Packet.FloorMatchMaking_CharacterInfo.hp)
  return _internal_hp();
}
inline void FloorMatchMaking_CharacterInfo::set_hp(::int32_t value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:DC.Packet.FloorMatchMaking_CharacterInfo.hp)
}
inline ::int32_t FloorMatchMaking_CharacterInfo::_internal_hp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hp_;
}
inline void FloorMatchMaking_CharacterInfo::_internal_set_hp(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hp_ = value;
}

// -------------------------------------------------------------------

// C2S_Prepare_FloorMatchMaking

// .DC.Packet.FloorMatchMaking_CharacterInfo info = 1;
inline bool C2S_Prepare_FloorMatchMaking::has_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.info_ != nullptr);
  return value;
}
inline void C2S_Prepare_FloorMatchMaking::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ != nullptr) _impl_.info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::FloorMatchMaking_CharacterInfo& C2S_Prepare_FloorMatchMaking::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::FloorMatchMaking_CharacterInfo* p = _impl_.info_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::FloorMatchMaking_CharacterInfo&>(::DC::Packet::_FloorMatchMaking_CharacterInfo_default_instance_);
}
inline const ::DC::Packet::FloorMatchMaking_CharacterInfo& C2S_Prepare_FloorMatchMaking::info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Prepare_FloorMatchMaking.info)
  return _internal_info();
}
inline void C2S_Prepare_FloorMatchMaking::unsafe_arena_set_allocated_info(::DC::Packet::FloorMatchMaking_CharacterInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.info_);
  }
  _impl_.info_ = reinterpret_cast<::DC::Packet::FloorMatchMaking_CharacterInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.C2S_Prepare_FloorMatchMaking.info)
}
inline ::DC::Packet::FloorMatchMaking_CharacterInfo* C2S_Prepare_FloorMatchMaking::release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::FloorMatchMaking_CharacterInfo* released = _impl_.info_;
  _impl_.info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::FloorMatchMaking_CharacterInfo* C2S_Prepare_FloorMatchMaking::unsafe_arena_release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_Prepare_FloorMatchMaking.info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::FloorMatchMaking_CharacterInfo* temp = _impl_.info_;
  _impl_.info_ = nullptr;
  return temp;
}
inline ::DC::Packet::FloorMatchMaking_CharacterInfo* C2S_Prepare_FloorMatchMaking::_internal_mutable_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::FloorMatchMaking_CharacterInfo>(GetArena());
    _impl_.info_ = reinterpret_cast<::DC::Packet::FloorMatchMaking_CharacterInfo*>(p);
  }
  return _impl_.info_;
}
inline ::DC::Packet::FloorMatchMaking_CharacterInfo* C2S_Prepare_FloorMatchMaking::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::FloorMatchMaking_CharacterInfo* _msg = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_Prepare_FloorMatchMaking.info)
  return _msg;
}
inline void C2S_Prepare_FloorMatchMaking::set_allocated_info(::DC::Packet::FloorMatchMaking_CharacterInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.info_ = reinterpret_cast<::DC::Packet::FloorMatchMaking_CharacterInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_Prepare_FloorMatchMaking.info)
}

// .DC.Packet.GameResultInfo resultInfo = 2;
inline bool C2S_Prepare_FloorMatchMaking::has_resultinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.resultinfo_ != nullptr);
  return value;
}
inline void C2S_Prepare_FloorMatchMaking::clear_resultinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resultinfo_ != nullptr) _impl_.resultinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::DC::Packet::GameResultInfo& C2S_Prepare_FloorMatchMaking::_internal_resultinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::GameResultInfo* p = _impl_.resultinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::GameResultInfo&>(::DC::Packet::_GameResultInfo_default_instance_);
}
inline const ::DC::Packet::GameResultInfo& C2S_Prepare_FloorMatchMaking::resultinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Prepare_FloorMatchMaking.resultInfo)
  return _internal_resultinfo();
}
inline void C2S_Prepare_FloorMatchMaking::unsafe_arena_set_allocated_resultinfo(::DC::Packet::GameResultInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resultinfo_);
  }
  _impl_.resultinfo_ = reinterpret_cast<::DC::Packet::GameResultInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.C2S_Prepare_FloorMatchMaking.resultInfo)
}
inline ::DC::Packet::GameResultInfo* C2S_Prepare_FloorMatchMaking::release_resultinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DC::Packet::GameResultInfo* released = _impl_.resultinfo_;
  _impl_.resultinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::GameResultInfo* C2S_Prepare_FloorMatchMaking::unsafe_arena_release_resultinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_Prepare_FloorMatchMaking.resultInfo)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DC::Packet::GameResultInfo* temp = _impl_.resultinfo_;
  _impl_.resultinfo_ = nullptr;
  return temp;
}
inline ::DC::Packet::GameResultInfo* C2S_Prepare_FloorMatchMaking::_internal_mutable_resultinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resultinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::GameResultInfo>(GetArena());
    _impl_.resultinfo_ = reinterpret_cast<::DC::Packet::GameResultInfo*>(p);
  }
  return _impl_.resultinfo_;
}
inline ::DC::Packet::GameResultInfo* C2S_Prepare_FloorMatchMaking::mutable_resultinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::DC::Packet::GameResultInfo* _msg = _internal_mutable_resultinfo();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_Prepare_FloorMatchMaking.resultInfo)
  return _msg;
}
inline void C2S_Prepare_FloorMatchMaking::set_allocated_resultinfo(::DC::Packet::GameResultInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.resultinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.resultinfo_ = reinterpret_cast<::DC::Packet::GameResultInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_Prepare_FloorMatchMaking.resultInfo)
}

// -------------------------------------------------------------------

// S2C_GamePolicy_GET

// repeated string appHash = 1;
inline int S2C_GamePolicy_GET::_internal_apphash_size() const {
  return _internal_apphash().size();
}
inline int S2C_GamePolicy_GET::apphash_size() const {
  return _internal_apphash_size();
}
inline void S2C_GamePolicy_GET::clear_apphash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.apphash_.Clear();
}
inline std::string* S2C_GamePolicy_GET::add_apphash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_apphash()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.S2C_GamePolicy_GET.appHash)
  return _s;
}
inline const std::string& S2C_GamePolicy_GET::apphash(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GamePolicy_GET.appHash)
  return _internal_apphash().Get(index);
}
inline std::string* S2C_GamePolicy_GET::mutable_apphash(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GamePolicy_GET.appHash)
  return _internal_mutable_apphash()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void S2C_GamePolicy_GET::set_apphash(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_apphash()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GamePolicy_GET.appHash)
}
template <typename Arg_, typename... Args_>
inline void S2C_GamePolicy_GET::add_apphash(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_apphash(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_GamePolicy_GET.appHash)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
S2C_GamePolicy_GET::apphash() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_GamePolicy_GET.appHash)
  return _internal_apphash();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
S2C_GamePolicy_GET::mutable_apphash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_GamePolicy_GET.appHash)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_apphash();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
S2C_GamePolicy_GET::_internal_apphash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.apphash_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
S2C_GamePolicy_GET::_internal_mutable_apphash() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.apphash_;
}

// string policyJson = 2;
inline void S2C_GamePolicy_GET::clear_policyjson() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.policyjson_.ClearToEmpty();
}
inline const std::string& S2C_GamePolicy_GET::policyjson() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GamePolicy_GET.policyJson)
  return _internal_policyjson();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GamePolicy_GET::set_policyjson(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.policyjson_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GamePolicy_GET.policyJson)
}
inline std::string* S2C_GamePolicy_GET::mutable_policyjson() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_policyjson();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GamePolicy_GET.policyJson)
  return _s;
}
inline const std::string& S2C_GamePolicy_GET::_internal_policyjson() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.policyjson_.Get();
}
inline void S2C_GamePolicy_GET::_internal_set_policyjson(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.policyjson_.Set(value, GetArena());
}
inline std::string* S2C_GamePolicy_GET::_internal_mutable_policyjson() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.policyjson_.Mutable( GetArena());
}
inline std::string* S2C_GamePolicy_GET::release_policyjson() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GamePolicy_GET.policyJson)
  return _impl_.policyjson_.Release();
}
inline void S2C_GamePolicy_GET::set_allocated_policyjson(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.policyjson_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.policyjson_.IsDefault()) {
          _impl_.policyjson_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GamePolicy_GET.policyJson)
}

// -------------------------------------------------------------------

// S2C_GameFileDB_GET

// string fileDBJson = 1;
inline void S2C_GameFileDB_GET::clear_filedbjson() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filedbjson_.ClearToEmpty();
}
inline const std::string& S2C_GameFileDB_GET::filedbjson() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameFileDB_GET.fileDBJson)
  return _internal_filedbjson();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_GameFileDB_GET::set_filedbjson(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filedbjson_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameFileDB_GET.fileDBJson)
}
inline std::string* S2C_GameFileDB_GET::mutable_filedbjson() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_filedbjson();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameFileDB_GET.fileDBJson)
  return _s;
}
inline const std::string& S2C_GameFileDB_GET::_internal_filedbjson() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filedbjson_.Get();
}
inline void S2C_GameFileDB_GET::_internal_set_filedbjson(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filedbjson_.Set(value, GetArena());
}
inline std::string* S2C_GameFileDB_GET::_internal_mutable_filedbjson() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.filedbjson_.Mutable( GetArena());
}
inline std::string* S2C_GameFileDB_GET::release_filedbjson() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_GameFileDB_GET.fileDBJson)
  return _impl_.filedbjson_.Release();
}
inline void S2C_GameFileDB_GET::set_allocated_filedbjson(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filedbjson_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.filedbjson_.IsDefault()) {
          _impl_.filedbjson_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_GameFileDB_GET.fileDBJson)
}

// -------------------------------------------------------------------

// C2S_GameSpectator_Check_POST

// string accountId = 1;
inline void C2S_GameSpectator_Check_POST::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& C2S_GameSpectator_Check_POST::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameSpectator_Check_POST.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_GameSpectator_Check_POST::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameSpectator_Check_POST.accountId)
}
inline std::string* C2S_GameSpectator_Check_POST::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameSpectator_Check_POST.accountId)
  return _s;
}
inline const std::string& C2S_GameSpectator_Check_POST::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void C2S_GameSpectator_Check_POST::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* C2S_GameSpectator_Check_POST::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* C2S_GameSpectator_Check_POST::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_GameSpectator_Check_POST.accountId)
  return _impl_.accountid_.Release();
}
inline void C2S_GameSpectator_Check_POST::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_GameSpectator_Check_POST.accountId)
}

// string token = 2;
inline void C2S_GameSpectator_Check_POST::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& C2S_GameSpectator_Check_POST::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameSpectator_Check_POST.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_GameSpectator_Check_POST::set_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameSpectator_Check_POST.token)
}
inline std::string* C2S_GameSpectator_Check_POST::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_GameSpectator_Check_POST.token)
  return _s;
}
inline const std::string& C2S_GameSpectator_Check_POST::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void C2S_GameSpectator_Check_POST::_internal_set_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* C2S_GameSpectator_Check_POST::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* C2S_GameSpectator_Check_POST::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_GameSpectator_Check_POST.token)
  return _impl_.token_.Release();
}
inline void C2S_GameSpectator_Check_POST::set_allocated_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_GameSpectator_Check_POST.token)
}

// -------------------------------------------------------------------

// S2C_GameSpectator_Check_Json

// uint32 isSuccess = 1;
inline void S2C_GameSpectator_Check_Json::clear_issuccess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuccess_ = 0u;
}
inline ::uint32_t S2C_GameSpectator_Check_Json::issuccess() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameSpectator_Check_Json.isSuccess)
  return _internal_issuccess();
}
inline void S2C_GameSpectator_Check_Json::set_issuccess(::uint32_t value) {
  _internal_set_issuccess(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_GameSpectator_Check_Json.isSuccess)
}
inline ::uint32_t S2C_GameSpectator_Check_Json::_internal_issuccess() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.issuccess_;
}
inline void S2C_GameSpectator_Check_Json::_internal_set_issuccess(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuccess_ = value;
}

// -------------------------------------------------------------------

// GameDown_UserPartyInfo

// string accountId = 1;
inline void GameDown_UserPartyInfo::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& GameDown_UserPartyInfo::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameDown_UserPartyInfo.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameDown_UserPartyInfo::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameDown_UserPartyInfo.accountId)
}
inline std::string* GameDown_UserPartyInfo::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameDown_UserPartyInfo.accountId)
  return _s;
}
inline const std::string& GameDown_UserPartyInfo::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void GameDown_UserPartyInfo::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* GameDown_UserPartyInfo::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* GameDown_UserPartyInfo::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameDown_UserPartyInfo.accountId)
  return _impl_.accountid_.Release();
}
inline void GameDown_UserPartyInfo::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameDown_UserPartyInfo.accountId)
}

// .DC.Packet.SACCOUNT_NICKNAME nickname = 2;
inline bool GameDown_UserPartyInfo::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& GameDown_UserPartyInfo::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& GameDown_UserPartyInfo::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameDown_UserPartyInfo.nickname)
  return _internal_nickname();
}
inline void GameDown_UserPartyInfo::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.GameDown_UserPartyInfo.nickname)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* GameDown_UserPartyInfo::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* GameDown_UserPartyInfo::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameDown_UserPartyInfo.nickname)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* GameDown_UserPartyInfo::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* GameDown_UserPartyInfo::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameDown_UserPartyInfo.nickname)
  return _msg;
}
inline void GameDown_UserPartyInfo::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameDown_UserPartyInfo.nickname)
}

// string characterClass = 3;
inline void GameDown_UserPartyInfo::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& GameDown_UserPartyInfo::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameDown_UserPartyInfo.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameDown_UserPartyInfo::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameDown_UserPartyInfo.characterClass)
}
inline std::string* GameDown_UserPartyInfo::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameDown_UserPartyInfo.characterClass)
  return _s;
}
inline const std::string& GameDown_UserPartyInfo::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void GameDown_UserPartyInfo::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* GameDown_UserPartyInfo::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* GameDown_UserPartyInfo::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameDown_UserPartyInfo.characterClass)
  return _impl_.characterclass_.Release();
}
inline void GameDown_UserPartyInfo::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameDown_UserPartyInfo.characterClass)
}

// uint32 gender = 4;
inline void GameDown_UserPartyInfo::clear_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = 0u;
}
inline ::uint32_t GameDown_UserPartyInfo::gender() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameDown_UserPartyInfo.gender)
  return _internal_gender();
}
inline void GameDown_UserPartyInfo::set_gender(::uint32_t value) {
  _internal_set_gender(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameDown_UserPartyInfo.gender)
}
inline ::uint32_t GameDown_UserPartyInfo::_internal_gender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gender_;
}
inline void GameDown_UserPartyInfo::_internal_set_gender(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = value;
}

// uint32 level = 5;
inline void GameDown_UserPartyInfo::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0u;
}
inline ::uint32_t GameDown_UserPartyInfo::level() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameDown_UserPartyInfo.level)
  return _internal_level();
}
inline void GameDown_UserPartyInfo::set_level(::uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameDown_UserPartyInfo.level)
}
inline ::uint32_t GameDown_UserPartyInfo::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void GameDown_UserPartyInfo::_internal_set_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// -------------------------------------------------------------------

// S2C_GameDown_UserParty_GET

// repeated .DC.Packet.GameDown_UserPartyInfo partyMember = 1;
inline int S2C_GameDown_UserParty_GET::_internal_partymember_size() const {
  return _internal_partymember().size();
}
inline int S2C_GameDown_UserParty_GET::partymember_size() const {
  return _internal_partymember_size();
}
inline void S2C_GameDown_UserParty_GET::clear_partymember() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partymember_.Clear();
}
inline ::DC::Packet::GameDown_UserPartyInfo* S2C_GameDown_UserParty_GET::mutable_partymember(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_GameDown_UserParty_GET.partyMember)
  return _internal_mutable_partymember()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::GameDown_UserPartyInfo>* S2C_GameDown_UserParty_GET::mutable_partymember()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_GameDown_UserParty_GET.partyMember)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_partymember();
}
inline const ::DC::Packet::GameDown_UserPartyInfo& S2C_GameDown_UserParty_GET::partymember(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_GameDown_UserParty_GET.partyMember)
  return _internal_partymember().Get(index);
}
inline ::DC::Packet::GameDown_UserPartyInfo* S2C_GameDown_UserParty_GET::add_partymember() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::GameDown_UserPartyInfo* _add = _internal_mutable_partymember()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_GameDown_UserParty_GET.partyMember)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameDown_UserPartyInfo>& S2C_GameDown_UserParty_GET::partymember() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_GameDown_UserParty_GET.partyMember)
  return _internal_partymember();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameDown_UserPartyInfo>&
S2C_GameDown_UserParty_GET::_internal_partymember() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partymember_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::GameDown_UserPartyInfo>*
S2C_GameDown_UserParty_GET::_internal_mutable_partymember() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.partymember_;
}

// -------------------------------------------------------------------

// C2S_GameReady_POST

// uint64 gameId = 1;
inline void C2S_GameReady_POST::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t C2S_GameReady_POST::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_GameReady_POST.gameId)
  return _internal_gameid();
}
inline void C2S_GameReady_POST::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_GameReady_POST.gameId)
}
inline ::uint64_t C2S_GameReady_POST::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C2S_GameReady_POST::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// -------------------------------------------------------------------

// GameFloorMatchMaking_UserInfo

// string accountId = 1;
inline void GameFloorMatchMaking_UserInfo::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& GameFloorMatchMaking_UserInfo::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameFloorMatchMaking_UserInfo.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameFloorMatchMaking_UserInfo::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameFloorMatchMaking_UserInfo.accountId)
}
inline std::string* GameFloorMatchMaking_UserInfo::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameFloorMatchMaking_UserInfo.accountId)
  return _s;
}
inline const std::string& GameFloorMatchMaking_UserInfo::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void GameFloorMatchMaking_UserInfo::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* GameFloorMatchMaking_UserInfo::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* GameFloorMatchMaking_UserInfo::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameFloorMatchMaking_UserInfo.accountId)
  return _impl_.accountid_.Release();
}
inline void GameFloorMatchMaking_UserInfo::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameFloorMatchMaking_UserInfo.accountId)
}

// string characterId = 2;
inline void GameFloorMatchMaking_UserInfo::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& GameFloorMatchMaking_UserInfo::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameFloorMatchMaking_UserInfo.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameFloorMatchMaking_UserInfo::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameFloorMatchMaking_UserInfo.characterId)
}
inline std::string* GameFloorMatchMaking_UserInfo::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameFloorMatchMaking_UserInfo.characterId)
  return _s;
}
inline const std::string& GameFloorMatchMaking_UserInfo::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void GameFloorMatchMaking_UserInfo::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* GameFloorMatchMaking_UserInfo::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* GameFloorMatchMaking_UserInfo::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameFloorMatchMaking_UserInfo.characterId)
  return _impl_.characterid_.Release();
}
inline void GameFloorMatchMaking_UserInfo::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameFloorMatchMaking_UserInfo.characterId)
}

// string partyId = 3;
inline void GameFloorMatchMaking_UserInfo::clear_partyid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partyid_.ClearToEmpty();
}
inline const std::string& GameFloorMatchMaking_UserInfo::partyid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameFloorMatchMaking_UserInfo.partyId)
  return _internal_partyid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameFloorMatchMaking_UserInfo::set_partyid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partyid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameFloorMatchMaking_UserInfo.partyId)
}
inline std::string* GameFloorMatchMaking_UserInfo::mutable_partyid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_partyid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameFloorMatchMaking_UserInfo.partyId)
  return _s;
}
inline const std::string& GameFloorMatchMaking_UserInfo::_internal_partyid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partyid_.Get();
}
inline void GameFloorMatchMaking_UserInfo::_internal_set_partyid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partyid_.Set(value, GetArena());
}
inline std::string* GameFloorMatchMaking_UserInfo::_internal_mutable_partyid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.partyid_.Mutable( GetArena());
}
inline std::string* GameFloorMatchMaking_UserInfo::release_partyid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameFloorMatchMaking_UserInfo.partyId)
  return _impl_.partyid_.Release();
}
inline void GameFloorMatchMaking_UserInfo::set_allocated_partyid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partyid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.partyid_.IsDefault()) {
          _impl_.partyid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameFloorMatchMaking_UserInfo.partyId)
}

// -------------------------------------------------------------------

// C2S_FloorMatchMaking_POST

// repeated .DC.Packet.GameFloorMatchMaking_UserInfo infos = 1;
inline int C2S_FloorMatchMaking_POST::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int C2S_FloorMatchMaking_POST::infos_size() const {
  return _internal_infos_size();
}
inline void C2S_FloorMatchMaking_POST::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::DC::Packet::GameFloorMatchMaking_UserInfo* C2S_FloorMatchMaking_POST::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_FloorMatchMaking_POST.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::GameFloorMatchMaking_UserInfo>* C2S_FloorMatchMaking_POST::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_FloorMatchMaking_POST.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::DC::Packet::GameFloorMatchMaking_UserInfo& C2S_FloorMatchMaking_POST::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_FloorMatchMaking_POST.infos)
  return _internal_infos().Get(index);
}
inline ::DC::Packet::GameFloorMatchMaking_UserInfo* C2S_FloorMatchMaking_POST::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::GameFloorMatchMaking_UserInfo* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_FloorMatchMaking_POST.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameFloorMatchMaking_UserInfo>& C2S_FloorMatchMaking_POST::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_FloorMatchMaking_POST.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameFloorMatchMaking_UserInfo>&
C2S_FloorMatchMaking_POST::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::GameFloorMatchMaking_UserInfo>*
C2S_FloorMatchMaking_POST::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

// uint64 gameId = 2;
inline void C2S_FloorMatchMaking_POST::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t C2S_FloorMatchMaking_POST::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_FloorMatchMaking_POST.gameId)
  return _internal_gameid();
}
inline void C2S_FloorMatchMaking_POST::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_FloorMatchMaking_POST.gameId)
}
inline ::uint64_t C2S_FloorMatchMaking_POST::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C2S_FloorMatchMaking_POST::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// uint32 currentFloor = 3;
inline void C2S_FloorMatchMaking_POST::clear_currentfloor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentfloor_ = 0u;
}
inline ::uint32_t C2S_FloorMatchMaking_POST::currentfloor() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_FloorMatchMaking_POST.currentFloor)
  return _internal_currentfloor();
}
inline void C2S_FloorMatchMaking_POST::set_currentfloor(::uint32_t value) {
  _internal_set_currentfloor(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_FloorMatchMaking_POST.currentFloor)
}
inline ::uint32_t C2S_FloorMatchMaking_POST::_internal_currentfloor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currentfloor_;
}
inline void C2S_FloorMatchMaking_POST::_internal_set_currentfloor(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentfloor_ = value;
}

// string dungeonId = 4;
inline void C2S_FloorMatchMaking_POST::clear_dungeonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonid_.ClearToEmpty();
}
inline const std::string& C2S_FloorMatchMaking_POST::dungeonid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_FloorMatchMaking_POST.dungeonId)
  return _internal_dungeonid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_FloorMatchMaking_POST::set_dungeonid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_FloorMatchMaking_POST.dungeonId)
}
inline std::string* C2S_FloorMatchMaking_POST::mutable_dungeonid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dungeonid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_FloorMatchMaking_POST.dungeonId)
  return _s;
}
inline const std::string& C2S_FloorMatchMaking_POST::_internal_dungeonid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dungeonid_.Get();
}
inline void C2S_FloorMatchMaking_POST::_internal_set_dungeonid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonid_.Set(value, GetArena());
}
inline std::string* C2S_FloorMatchMaking_POST::_internal_mutable_dungeonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dungeonid_.Mutable( GetArena());
}
inline std::string* C2S_FloorMatchMaking_POST::release_dungeonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_FloorMatchMaking_POST.dungeonId)
  return _impl_.dungeonid_.Release();
}
inline void C2S_FloorMatchMaking_POST::set_allocated_dungeonid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dungeonid_.IsDefault()) {
          _impl_.dungeonid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_FloorMatchMaking_POST.dungeonId)
}

// -------------------------------------------------------------------

// GameFloorMatchMaking_UserInfoResponse

// string accountId = 1;
inline void GameFloorMatchMaking_UserInfoResponse::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& GameFloorMatchMaking_UserInfoResponse::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameFloorMatchMaking_UserInfoResponse.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameFloorMatchMaking_UserInfoResponse::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameFloorMatchMaking_UserInfoResponse.accountId)
}
inline std::string* GameFloorMatchMaking_UserInfoResponse::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameFloorMatchMaking_UserInfoResponse.accountId)
  return _s;
}
inline const std::string& GameFloorMatchMaking_UserInfoResponse::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void GameFloorMatchMaking_UserInfoResponse::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* GameFloorMatchMaking_UserInfoResponse::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* GameFloorMatchMaking_UserInfoResponse::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameFloorMatchMaking_UserInfoResponse.accountId)
  return _impl_.accountid_.Release();
}
inline void GameFloorMatchMaking_UserInfoResponse::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameFloorMatchMaking_UserInfoResponse.accountId)
}

// string characterId = 2;
inline void GameFloorMatchMaking_UserInfoResponse::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& GameFloorMatchMaking_UserInfoResponse::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameFloorMatchMaking_UserInfoResponse.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameFloorMatchMaking_UserInfoResponse::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameFloorMatchMaking_UserInfoResponse.characterId)
}
inline std::string* GameFloorMatchMaking_UserInfoResponse::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameFloorMatchMaking_UserInfoResponse.characterId)
  return _s;
}
inline const std::string& GameFloorMatchMaking_UserInfoResponse::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void GameFloorMatchMaking_UserInfoResponse::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* GameFloorMatchMaking_UserInfoResponse::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* GameFloorMatchMaking_UserInfoResponse::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameFloorMatchMaking_UserInfoResponse.characterId)
  return _impl_.characterid_.Release();
}
inline void GameFloorMatchMaking_UserInfoResponse::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameFloorMatchMaking_UserInfoResponse.characterId)
}

// string ip = 3;
inline void GameFloorMatchMaking_UserInfoResponse::clear_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.ClearToEmpty();
}
inline const std::string& GameFloorMatchMaking_UserInfoResponse::ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameFloorMatchMaking_UserInfoResponse.ip)
  return _internal_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameFloorMatchMaking_UserInfoResponse::set_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameFloorMatchMaking_UserInfoResponse.ip)
}
inline std::string* GameFloorMatchMaking_UserInfoResponse::mutable_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ip();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameFloorMatchMaking_UserInfoResponse.ip)
  return _s;
}
inline const std::string& GameFloorMatchMaking_UserInfoResponse::_internal_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ip_.Get();
}
inline void GameFloorMatchMaking_UserInfoResponse::_internal_set_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.Set(value, GetArena());
}
inline std::string* GameFloorMatchMaking_UserInfoResponse::_internal_mutable_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ip_.Mutable( GetArena());
}
inline std::string* GameFloorMatchMaking_UserInfoResponse::release_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameFloorMatchMaking_UserInfoResponse.ip)
  return _impl_.ip_.Release();
}
inline void GameFloorMatchMaking_UserInfoResponse::set_allocated_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ip_.IsDefault()) {
          _impl_.ip_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameFloorMatchMaking_UserInfoResponse.ip)
}

// int32 port = 4;
inline void GameFloorMatchMaking_UserInfoResponse::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = 0;
}
inline ::int32_t GameFloorMatchMaking_UserInfoResponse::port() const {
  // @@protoc_insertion_point(field_get:DC.Packet.GameFloorMatchMaking_UserInfoResponse.port)
  return _internal_port();
}
inline void GameFloorMatchMaking_UserInfoResponse::set_port(::int32_t value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:DC.Packet.GameFloorMatchMaking_UserInfoResponse.port)
}
inline ::int32_t GameFloorMatchMaking_UserInfoResponse::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline void GameFloorMatchMaking_UserInfoResponse::_internal_set_port(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = value;
}

// string sessionId = 5;
inline void GameFloorMatchMaking_UserInfoResponse::clear_sessionid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sessionid_.ClearToEmpty();
}
inline const std::string& GameFloorMatchMaking_UserInfoResponse::sessionid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.GameFloorMatchMaking_UserInfoResponse.sessionId)
  return _internal_sessionid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameFloorMatchMaking_UserInfoResponse::set_sessionid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sessionid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.GameFloorMatchMaking_UserInfoResponse.sessionId)
}
inline std::string* GameFloorMatchMaking_UserInfoResponse::mutable_sessionid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sessionid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.GameFloorMatchMaking_UserInfoResponse.sessionId)
  return _s;
}
inline const std::string& GameFloorMatchMaking_UserInfoResponse::_internal_sessionid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sessionid_.Get();
}
inline void GameFloorMatchMaking_UserInfoResponse::_internal_set_sessionid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sessionid_.Set(value, GetArena());
}
inline std::string* GameFloorMatchMaking_UserInfoResponse::_internal_mutable_sessionid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sessionid_.Mutable( GetArena());
}
inline std::string* GameFloorMatchMaking_UserInfoResponse::release_sessionid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.GameFloorMatchMaking_UserInfoResponse.sessionId)
  return _impl_.sessionid_.Release();
}
inline void GameFloorMatchMaking_UserInfoResponse::set_allocated_sessionid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sessionid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sessionid_.IsDefault()) {
          _impl_.sessionid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.GameFloorMatchMaking_UserInfoResponse.sessionId)
}

// -------------------------------------------------------------------

// S2C_FloorMatchMaking_POST_Response

// repeated .DC.Packet.GameFloorMatchMaking_UserInfoResponse infos = 1;
inline int S2C_FloorMatchMaking_POST_Response::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int S2C_FloorMatchMaking_POST_Response::infos_size() const {
  return _internal_infos_size();
}
inline void S2C_FloorMatchMaking_POST_Response::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::DC::Packet::GameFloorMatchMaking_UserInfoResponse* S2C_FloorMatchMaking_POST_Response::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_FloorMatchMaking_POST_Response.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::GameFloorMatchMaking_UserInfoResponse>* S2C_FloorMatchMaking_POST_Response::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_FloorMatchMaking_POST_Response.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::DC::Packet::GameFloorMatchMaking_UserInfoResponse& S2C_FloorMatchMaking_POST_Response::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_FloorMatchMaking_POST_Response.infos)
  return _internal_infos().Get(index);
}
inline ::DC::Packet::GameFloorMatchMaking_UserInfoResponse* S2C_FloorMatchMaking_POST_Response::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::GameFloorMatchMaking_UserInfoResponse* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_FloorMatchMaking_POST_Response.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameFloorMatchMaking_UserInfoResponse>& S2C_FloorMatchMaking_POST_Response::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_FloorMatchMaking_POST_Response.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::GameFloorMatchMaking_UserInfoResponse>&
S2C_FloorMatchMaking_POST_Response::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::GameFloorMatchMaking_UserInfoResponse>*
S2C_FloorMatchMaking_POST_Response::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

// -------------------------------------------------------------------

// C2S_IronShield_Report_POST

// uint32 callbackType = 1;
inline void C2S_IronShield_Report_POST::clear_callbacktype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.callbacktype_ = 0u;
}
inline ::uint32_t C2S_IronShield_Report_POST::callbacktype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_IronShield_Report_POST.callbackType)
  return _internal_callbacktype();
}
inline void C2S_IronShield_Report_POST::set_callbacktype(::uint32_t value) {
  _internal_set_callbacktype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_IronShield_Report_POST.callbackType)
}
inline ::uint32_t C2S_IronShield_Report_POST::_internal_callbacktype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.callbacktype_;
}
inline void C2S_IronShield_Report_POST::_internal_set_callbacktype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.callbacktype_ = value;
}

// string reportId = 2;
inline void C2S_IronShield_Report_POST::clear_reportid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportid_.ClearToEmpty();
}
inline const std::string& C2S_IronShield_Report_POST::reportid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_IronShield_Report_POST.reportId)
  return _internal_reportid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_IronShield_Report_POST::set_reportid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_IronShield_Report_POST.reportId)
}
inline std::string* C2S_IronShield_Report_POST::mutable_reportid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reportid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_IronShield_Report_POST.reportId)
  return _s;
}
inline const std::string& C2S_IronShield_Report_POST::_internal_reportid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reportid_.Get();
}
inline void C2S_IronShield_Report_POST::_internal_set_reportid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportid_.Set(value, GetArena());
}
inline std::string* C2S_IronShield_Report_POST::_internal_mutable_reportid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reportid_.Mutable( GetArena());
}
inline std::string* C2S_IronShield_Report_POST::release_reportid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_IronShield_Report_POST.reportId)
  return _impl_.reportid_.Release();
}
inline void C2S_IronShield_Report_POST::set_allocated_reportid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reportid_.IsDefault()) {
          _impl_.reportid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_IronShield_Report_POST.reportId)
}

// repeated string hIds = 3;
inline int C2S_IronShield_Report_POST::_internal_hids_size() const {
  return _internal_hids().size();
}
inline int C2S_IronShield_Report_POST::hids_size() const {
  return _internal_hids_size();
}
inline void C2S_IronShield_Report_POST::clear_hids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hids_.Clear();
}
inline std::string* C2S_IronShield_Report_POST::add_hids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_hids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.C2S_IronShield_Report_POST.hIds)
  return _s;
}
inline const std::string& C2S_IronShield_Report_POST::hids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_IronShield_Report_POST.hIds)
  return _internal_hids().Get(index);
}
inline std::string* C2S_IronShield_Report_POST::mutable_hids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_IronShield_Report_POST.hIds)
  return _internal_mutable_hids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void C2S_IronShield_Report_POST::set_hids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_hids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_IronShield_Report_POST.hIds)
}
template <typename Arg_, typename... Args_>
inline void C2S_IronShield_Report_POST::add_hids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_hids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_IronShield_Report_POST.hIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
C2S_IronShield_Report_POST::hids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_IronShield_Report_POST.hIds)
  return _internal_hids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
C2S_IronShield_Report_POST::mutable_hids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_IronShield_Report_POST.hIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_hids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
C2S_IronShield_Report_POST::_internal_hids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
C2S_IronShield_Report_POST::_internal_mutable_hids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.hids_;
}

// repeated uint32 blob = 4;
inline int C2S_IronShield_Report_POST::_internal_blob_size() const {
  return _internal_blob().size();
}
inline int C2S_IronShield_Report_POST::blob_size() const {
  return _internal_blob_size();
}
inline void C2S_IronShield_Report_POST::clear_blob() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blob_.Clear();
}
inline ::uint32_t C2S_IronShield_Report_POST::blob(int index) const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_IronShield_Report_POST.blob)
  return _internal_blob().Get(index);
}
inline void C2S_IronShield_Report_POST::set_blob(int index, ::uint32_t value) {
  _internal_mutable_blob()->Set(index, value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_IronShield_Report_POST.blob)
}
inline void C2S_IronShield_Report_POST::add_blob(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_blob()->Add(value);
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_IronShield_Report_POST.blob)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& C2S_IronShield_Report_POST::blob() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_IronShield_Report_POST.blob)
  return _internal_blob();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* C2S_IronShield_Report_POST::mutable_blob()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_IronShield_Report_POST.blob)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_blob();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
C2S_IronShield_Report_POST::_internal_blob() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blob_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* C2S_IronShield_Report_POST::_internal_mutable_blob() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.blob_;
}

// string accountId = 5;
inline void C2S_IronShield_Report_POST::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& C2S_IronShield_Report_POST::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_IronShield_Report_POST.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_IronShield_Report_POST::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_IronShield_Report_POST.accountId)
}
inline std::string* C2S_IronShield_Report_POST::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_IronShield_Report_POST.accountId)
  return _s;
}
inline const std::string& C2S_IronShield_Report_POST::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void C2S_IronShield_Report_POST::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* C2S_IronShield_Report_POST::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* C2S_IronShield_Report_POST::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_IronShield_Report_POST.accountId)
  return _impl_.accountid_.Release();
}
inline void C2S_IronShield_Report_POST::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_IronShield_Report_POST.accountId)
}

// string characterId = 6;
inline void C2S_IronShield_Report_POST::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& C2S_IronShield_Report_POST::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_IronShield_Report_POST.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_IronShield_Report_POST::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_IronShield_Report_POST.characterId)
}
inline std::string* C2S_IronShield_Report_POST::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_IronShield_Report_POST.characterId)
  return _s;
}
inline const std::string& C2S_IronShield_Report_POST::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void C2S_IronShield_Report_POST::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* C2S_IronShield_Report_POST::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* C2S_IronShield_Report_POST::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_IronShield_Report_POST.characterId)
  return _impl_.characterid_.Release();
}
inline void C2S_IronShield_Report_POST::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_IronShield_Report_POST.characterId)
}

// string originNickname = 7;
inline void C2S_IronShield_Report_POST::clear_originnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.originnickname_.ClearToEmpty();
}
inline const std::string& C2S_IronShield_Report_POST::originnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_IronShield_Report_POST.originNickname)
  return _internal_originnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_IronShield_Report_POST::set_originnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.originnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_IronShield_Report_POST.originNickname)
}
inline std::string* C2S_IronShield_Report_POST::mutable_originnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_originnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_IronShield_Report_POST.originNickname)
  return _s;
}
inline const std::string& C2S_IronShield_Report_POST::_internal_originnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.originnickname_.Get();
}
inline void C2S_IronShield_Report_POST::_internal_set_originnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.originnickname_.Set(value, GetArena());
}
inline std::string* C2S_IronShield_Report_POST::_internal_mutable_originnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.originnickname_.Mutable( GetArena());
}
inline std::string* C2S_IronShield_Report_POST::release_originnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_IronShield_Report_POST.originNickname)
  return _impl_.originnickname_.Release();
}
inline void C2S_IronShield_Report_POST::set_allocated_originnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.originnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.originnickname_.IsDefault()) {
          _impl_.originnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_IronShield_Report_POST.originNickname)
}

// string reason = 8;
inline void C2S_IronShield_Report_POST::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& C2S_IronShield_Report_POST::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_IronShield_Report_POST.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_IronShield_Report_POST::set_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_IronShield_Report_POST.reason)
}
inline std::string* C2S_IronShield_Report_POST::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_IronShield_Report_POST.reason)
  return _s;
}
inline const std::string& C2S_IronShield_Report_POST::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void C2S_IronShield_Report_POST::_internal_set_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* C2S_IronShield_Report_POST::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* C2S_IronShield_Report_POST::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_IronShield_Report_POST.reason)
  return _impl_.reason_.Release();
}
inline void C2S_IronShield_Report_POST::set_allocated_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reason_.IsDefault()) {
          _impl_.reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_IronShield_Report_POST.reason)
}

// uint32 needBlock = 9;
inline void C2S_IronShield_Report_POST::clear_needblock() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needblock_ = 0u;
}
inline ::uint32_t C2S_IronShield_Report_POST::needblock() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_IronShield_Report_POST.needBlock)
  return _internal_needblock();
}
inline void C2S_IronShield_Report_POST::set_needblock(::uint32_t value) {
  _internal_set_needblock(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_IronShield_Report_POST.needBlock)
}
inline ::uint32_t C2S_IronShield_Report_POST::_internal_needblock() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.needblock_;
}
inline void C2S_IronShield_Report_POST::_internal_set_needblock(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needblock_ = value;
}

// uint32 needHWBlock = 10;
inline void C2S_IronShield_Report_POST::clear_needhwblock() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needhwblock_ = 0u;
}
inline ::uint32_t C2S_IronShield_Report_POST::needhwblock() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_IronShield_Report_POST.needHWBlock)
  return _internal_needhwblock();
}
inline void C2S_IronShield_Report_POST::set_needhwblock(::uint32_t value) {
  _internal_set_needhwblock(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_IronShield_Report_POST.needHWBlock)
}
inline ::uint32_t C2S_IronShield_Report_POST::_internal_needhwblock() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.needhwblock_;
}
inline void C2S_IronShield_Report_POST::_internal_set_needhwblock(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needhwblock_ = value;
}

// uint32 blockTime_min = 11;
inline void C2S_IronShield_Report_POST::clear_blocktime_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blocktime_min_ = 0u;
}
inline ::uint32_t C2S_IronShield_Report_POST::blocktime_min() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_IronShield_Report_POST.blockTime_min)
  return _internal_blocktime_min();
}
inline void C2S_IronShield_Report_POST::set_blocktime_min(::uint32_t value) {
  _internal_set_blocktime_min(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_IronShield_Report_POST.blockTime_min)
}
inline ::uint32_t C2S_IronShield_Report_POST::_internal_blocktime_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blocktime_min_;
}
inline void C2S_IronShield_Report_POST::_internal_set_blocktime_min(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blocktime_min_ = value;
}

// uint32 banType = 12;
inline void C2S_IronShield_Report_POST::clear_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_ = 0u;
}
inline ::uint32_t C2S_IronShield_Report_POST::bantype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_IronShield_Report_POST.banType)
  return _internal_bantype();
}
inline void C2S_IronShield_Report_POST::set_bantype(::uint32_t value) {
  _internal_set_bantype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_IronShield_Report_POST.banType)
}
inline ::uint32_t C2S_IronShield_Report_POST::_internal_bantype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantype_;
}
inline void C2S_IronShield_Report_POST::_internal_set_bantype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_ = value;
}

// int32 blobType = 13;
inline void C2S_IronShield_Report_POST::clear_blobtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blobtype_ = 0;
}
inline ::int32_t C2S_IronShield_Report_POST::blobtype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_IronShield_Report_POST.blobType)
  return _internal_blobtype();
}
inline void C2S_IronShield_Report_POST::set_blobtype(::int32_t value) {
  _internal_set_blobtype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_IronShield_Report_POST.blobType)
}
inline ::int32_t C2S_IronShield_Report_POST::_internal_blobtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blobtype_;
}
inline void C2S_IronShield_Report_POST::_internal_set_blobtype(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blobtype_ = value;
}

// string blobNameTag = 14;
inline void C2S_IronShield_Report_POST::clear_blobnametag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blobnametag_.ClearToEmpty();
}
inline const std::string& C2S_IronShield_Report_POST::blobnametag() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_IronShield_Report_POST.blobNameTag)
  return _internal_blobnametag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_IronShield_Report_POST::set_blobnametag(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blobnametag_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_IronShield_Report_POST.blobNameTag)
}
inline std::string* C2S_IronShield_Report_POST::mutable_blobnametag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_blobnametag();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_IronShield_Report_POST.blobNameTag)
  return _s;
}
inline const std::string& C2S_IronShield_Report_POST::_internal_blobnametag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blobnametag_.Get();
}
inline void C2S_IronShield_Report_POST::_internal_set_blobnametag(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blobnametag_.Set(value, GetArena());
}
inline std::string* C2S_IronShield_Report_POST::_internal_mutable_blobnametag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.blobnametag_.Mutable( GetArena());
}
inline std::string* C2S_IronShield_Report_POST::release_blobnametag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_IronShield_Report_POST.blobNameTag)
  return _impl_.blobnametag_.Release();
}
inline void C2S_IronShield_Report_POST::set_allocated_blobnametag(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blobnametag_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.blobnametag_.IsDefault()) {
          _impl_.blobnametag_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_IronShield_Report_POST.blobNameTag)
}

// -------------------------------------------------------------------

// C2S_BanCheck_Hardware_POST

// string accountId = 1;
inline void C2S_BanCheck_Hardware_POST::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& C2S_BanCheck_Hardware_POST::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_BanCheck_Hardware_POST.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_BanCheck_Hardware_POST::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_BanCheck_Hardware_POST.accountId)
}
inline std::string* C2S_BanCheck_Hardware_POST::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_BanCheck_Hardware_POST.accountId)
  return _s;
}
inline const std::string& C2S_BanCheck_Hardware_POST::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void C2S_BanCheck_Hardware_POST::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* C2S_BanCheck_Hardware_POST::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* C2S_BanCheck_Hardware_POST::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_BanCheck_Hardware_POST.accountId)
  return _impl_.accountid_.Release();
}
inline void C2S_BanCheck_Hardware_POST::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_BanCheck_Hardware_POST.accountId)
}

// repeated string hIds = 2;
inline int C2S_BanCheck_Hardware_POST::_internal_hids_size() const {
  return _internal_hids().size();
}
inline int C2S_BanCheck_Hardware_POST::hids_size() const {
  return _internal_hids_size();
}
inline void C2S_BanCheck_Hardware_POST::clear_hids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hids_.Clear();
}
inline std::string* C2S_BanCheck_Hardware_POST::add_hids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_hids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.C2S_BanCheck_Hardware_POST.hIds)
  return _s;
}
inline const std::string& C2S_BanCheck_Hardware_POST::hids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_BanCheck_Hardware_POST.hIds)
  return _internal_hids().Get(index);
}
inline std::string* C2S_BanCheck_Hardware_POST::mutable_hids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_BanCheck_Hardware_POST.hIds)
  return _internal_mutable_hids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void C2S_BanCheck_Hardware_POST::set_hids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_hids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_BanCheck_Hardware_POST.hIds)
}
template <typename Arg_, typename... Args_>
inline void C2S_BanCheck_Hardware_POST::add_hids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_hids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_BanCheck_Hardware_POST.hIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
C2S_BanCheck_Hardware_POST::hids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_BanCheck_Hardware_POST.hIds)
  return _internal_hids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
C2S_BanCheck_Hardware_POST::mutable_hids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_BanCheck_Hardware_POST.hIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_hids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
C2S_BanCheck_Hardware_POST::_internal_hids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
C2S_BanCheck_Hardware_POST::_internal_mutable_hids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.hids_;
}

// -------------------------------------------------------------------

// S2C_BanCheck_Hardware_POST_Response

// string accountId = 1;
inline void S2C_BanCheck_Hardware_POST_Response::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& S2C_BanCheck_Hardware_POST_Response::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_BanCheck_Hardware_POST_Response.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2C_BanCheck_Hardware_POST_Response::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_BanCheck_Hardware_POST_Response.accountId)
}
inline std::string* S2C_BanCheck_Hardware_POST_Response::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_BanCheck_Hardware_POST_Response.accountId)
  return _s;
}
inline const std::string& S2C_BanCheck_Hardware_POST_Response::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void S2C_BanCheck_Hardware_POST_Response::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* S2C_BanCheck_Hardware_POST_Response::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* S2C_BanCheck_Hardware_POST_Response::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.S2C_BanCheck_Hardware_POST_Response.accountId)
  return _impl_.accountid_.Release();
}
inline void S2C_BanCheck_Hardware_POST_Response::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.S2C_BanCheck_Hardware_POST_Response.accountId)
}

// uint32 isBan = 2;
inline void S2C_BanCheck_Hardware_POST_Response::clear_isban() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isban_ = 0u;
}
inline ::uint32_t S2C_BanCheck_Hardware_POST_Response::isban() const {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_BanCheck_Hardware_POST_Response.isBan)
  return _internal_isban();
}
inline void S2C_BanCheck_Hardware_POST_Response::set_isban(::uint32_t value) {
  _internal_set_isban(value);
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_BanCheck_Hardware_POST_Response.isBan)
}
inline ::uint32_t S2C_BanCheck_Hardware_POST_Response::_internal_isban() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isban_;
}
inline void S2C_BanCheck_Hardware_POST_Response::_internal_set_isban(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isban_ = value;
}

// repeated string banHIds = 3;
inline int S2C_BanCheck_Hardware_POST_Response::_internal_banhids_size() const {
  return _internal_banhids().size();
}
inline int S2C_BanCheck_Hardware_POST_Response::banhids_size() const {
  return _internal_banhids_size();
}
inline void S2C_BanCheck_Hardware_POST_Response::clear_banhids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.banhids_.Clear();
}
inline std::string* S2C_BanCheck_Hardware_POST_Response::add_banhids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_banhids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.S2C_BanCheck_Hardware_POST_Response.banHIds)
  return _s;
}
inline const std::string& S2C_BanCheck_Hardware_POST_Response::banhids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_BanCheck_Hardware_POST_Response.banHIds)
  return _internal_banhids().Get(index);
}
inline std::string* S2C_BanCheck_Hardware_POST_Response::mutable_banhids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_BanCheck_Hardware_POST_Response.banHIds)
  return _internal_mutable_banhids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void S2C_BanCheck_Hardware_POST_Response::set_banhids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_banhids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_BanCheck_Hardware_POST_Response.banHIds)
}
template <typename Arg_, typename... Args_>
inline void S2C_BanCheck_Hardware_POST_Response::add_banhids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_banhids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_BanCheck_Hardware_POST_Response.banHIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
S2C_BanCheck_Hardware_POST_Response::banhids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_BanCheck_Hardware_POST_Response.banHIds)
  return _internal_banhids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
S2C_BanCheck_Hardware_POST_Response::mutable_banhids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_BanCheck_Hardware_POST_Response.banHIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_banhids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
S2C_BanCheck_Hardware_POST_Response::_internal_banhids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.banhids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
S2C_BanCheck_Hardware_POST_Response::_internal_mutable_banhids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.banhids_;
}

// repeated string loginHIds = 4;
inline int S2C_BanCheck_Hardware_POST_Response::_internal_loginhids_size() const {
  return _internal_loginhids().size();
}
inline int S2C_BanCheck_Hardware_POST_Response::loginhids_size() const {
  return _internal_loginhids_size();
}
inline void S2C_BanCheck_Hardware_POST_Response::clear_loginhids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.loginhids_.Clear();
}
inline std::string* S2C_BanCheck_Hardware_POST_Response::add_loginhids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_loginhids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.S2C_BanCheck_Hardware_POST_Response.loginHIds)
  return _s;
}
inline const std::string& S2C_BanCheck_Hardware_POST_Response::loginhids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.S2C_BanCheck_Hardware_POST_Response.loginHIds)
  return _internal_loginhids().Get(index);
}
inline std::string* S2C_BanCheck_Hardware_POST_Response::mutable_loginhids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.S2C_BanCheck_Hardware_POST_Response.loginHIds)
  return _internal_mutable_loginhids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void S2C_BanCheck_Hardware_POST_Response::set_loginhids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_loginhids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.S2C_BanCheck_Hardware_POST_Response.loginHIds)
}
template <typename Arg_, typename... Args_>
inline void S2C_BanCheck_Hardware_POST_Response::add_loginhids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_loginhids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.S2C_BanCheck_Hardware_POST_Response.loginHIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
S2C_BanCheck_Hardware_POST_Response::loginhids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.S2C_BanCheck_Hardware_POST_Response.loginHIds)
  return _internal_loginhids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
S2C_BanCheck_Hardware_POST_Response::mutable_loginhids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.S2C_BanCheck_Hardware_POST_Response.loginHIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_loginhids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
S2C_BanCheck_Hardware_POST_Response::_internal_loginhids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.loginhids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
S2C_BanCheck_Hardware_POST_Response::_internal_mutable_loginhids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.loginhids_;
}

// -------------------------------------------------------------------

// C2S_Dirty_Item_POST

// string accountId = 1;
inline void C2S_Dirty_Item_POST::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& C2S_Dirty_Item_POST::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Dirty_Item_POST.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_Dirty_Item_POST::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_Dirty_Item_POST.accountId)
}
inline std::string* C2S_Dirty_Item_POST::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_Dirty_Item_POST.accountId)
  return _s;
}
inline const std::string& C2S_Dirty_Item_POST::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void C2S_Dirty_Item_POST::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* C2S_Dirty_Item_POST::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* C2S_Dirty_Item_POST::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_Dirty_Item_POST.accountId)
  return _impl_.accountid_.Release();
}
inline void C2S_Dirty_Item_POST::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_Dirty_Item_POST.accountId)
}

// string characterId = 2;
inline void C2S_Dirty_Item_POST::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& C2S_Dirty_Item_POST::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Dirty_Item_POST.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_Dirty_Item_POST::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_Dirty_Item_POST.characterId)
}
inline std::string* C2S_Dirty_Item_POST::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_Dirty_Item_POST.characterId)
  return _s;
}
inline const std::string& C2S_Dirty_Item_POST::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void C2S_Dirty_Item_POST::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* C2S_Dirty_Item_POST::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* C2S_Dirty_Item_POST::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_Dirty_Item_POST.characterId)
  return _impl_.characterid_.Release();
}
inline void C2S_Dirty_Item_POST::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_Dirty_Item_POST.characterId)
}

// uint64 gameId = 3;
inline void C2S_Dirty_Item_POST::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t C2S_Dirty_Item_POST::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Dirty_Item_POST.gameId)
  return _internal_gameid();
}
inline void C2S_Dirty_Item_POST::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_Dirty_Item_POST.gameId)
}
inline ::uint64_t C2S_Dirty_Item_POST::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C2S_Dirty_Item_POST::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// repeated .DC.Packet.SItem upsertItems = 4;
inline int C2S_Dirty_Item_POST::_internal_upsertitems_size() const {
  return _internal_upsertitems().size();
}
inline int C2S_Dirty_Item_POST::upsertitems_size() const {
  return _internal_upsertitems_size();
}
inline ::DC::Packet::SItem* C2S_Dirty_Item_POST::mutable_upsertitems(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_Dirty_Item_POST.upsertItems)
  return _internal_mutable_upsertitems()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* C2S_Dirty_Item_POST::mutable_upsertitems()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_Dirty_Item_POST.upsertItems)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_upsertitems();
}
inline const ::DC::Packet::SItem& C2S_Dirty_Item_POST::upsertitems(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Dirty_Item_POST.upsertItems)
  return _internal_upsertitems().Get(index);
}
inline ::DC::Packet::SItem* C2S_Dirty_Item_POST::add_upsertitems() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SItem* _add = _internal_mutable_upsertitems()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_Dirty_Item_POST.upsertItems)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& C2S_Dirty_Item_POST::upsertitems() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_Dirty_Item_POST.upsertItems)
  return _internal_upsertitems();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>&
C2S_Dirty_Item_POST::_internal_upsertitems() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.upsertitems_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>*
C2S_Dirty_Item_POST::_internal_mutable_upsertitems() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.upsertitems_;
}

// repeated uint64 deleteItemUniqueIds = 5;
inline int C2S_Dirty_Item_POST::_internal_deleteitemuniqueids_size() const {
  return _internal_deleteitemuniqueids().size();
}
inline int C2S_Dirty_Item_POST::deleteitemuniqueids_size() const {
  return _internal_deleteitemuniqueids_size();
}
inline void C2S_Dirty_Item_POST::clear_deleteitemuniqueids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deleteitemuniqueids_.Clear();
}
inline ::uint64_t C2S_Dirty_Item_POST::deleteitemuniqueids(int index) const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Dirty_Item_POST.deleteItemUniqueIds)
  return _internal_deleteitemuniqueids().Get(index);
}
inline void C2S_Dirty_Item_POST::set_deleteitemuniqueids(int index, ::uint64_t value) {
  _internal_mutable_deleteitemuniqueids()->Set(index, value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_Dirty_Item_POST.deleteItemUniqueIds)
}
inline void C2S_Dirty_Item_POST::add_deleteitemuniqueids(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_deleteitemuniqueids()->Add(value);
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_Dirty_Item_POST.deleteItemUniqueIds)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& C2S_Dirty_Item_POST::deleteitemuniqueids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_Dirty_Item_POST.deleteItemUniqueIds)
  return _internal_deleteitemuniqueids();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* C2S_Dirty_Item_POST::mutable_deleteitemuniqueids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_Dirty_Item_POST.deleteItemUniqueIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_deleteitemuniqueids();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
C2S_Dirty_Item_POST::_internal_deleteitemuniqueids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deleteitemuniqueids_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* C2S_Dirty_Item_POST::_internal_mutable_deleteitemuniqueids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.deleteitemuniqueids_;
}

// -------------------------------------------------------------------

// C2S_IronShield_Isolation_POST

// string accountId = 1;
inline void C2S_IronShield_Isolation_POST::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& C2S_IronShield_Isolation_POST::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_IronShield_Isolation_POST.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_IronShield_Isolation_POST::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_IronShield_Isolation_POST.accountId)
}
inline std::string* C2S_IronShield_Isolation_POST::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_IronShield_Isolation_POST.accountId)
  return _s;
}
inline const std::string& C2S_IronShield_Isolation_POST::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void C2S_IronShield_Isolation_POST::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* C2S_IronShield_Isolation_POST::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* C2S_IronShield_Isolation_POST::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_IronShield_Isolation_POST.accountId)
  return _impl_.accountid_.Release();
}
inline void C2S_IronShield_Isolation_POST::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_IronShield_Isolation_POST.accountId)
}

// int32 isolationHours = 2;
inline void C2S_IronShield_Isolation_POST::clear_isolationhours() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isolationhours_ = 0;
}
inline ::int32_t C2S_IronShield_Isolation_POST::isolationhours() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_IronShield_Isolation_POST.isolationHours)
  return _internal_isolationhours();
}
inline void C2S_IronShield_Isolation_POST::set_isolationhours(::int32_t value) {
  _internal_set_isolationhours(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_IronShield_Isolation_POST.isolationHours)
}
inline ::int32_t C2S_IronShield_Isolation_POST::_internal_isolationhours() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isolationhours_;
}
inline void C2S_IronShield_Isolation_POST::_internal_set_isolationhours(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isolationhours_ = value;
}

// -------------------------------------------------------------------

// C2S_Arena_Result_POST

// .DC.Packet.GameResultInfo resultInfo = 1;
inline bool C2S_Arena_Result_POST::has_resultinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.resultinfo_ != nullptr);
  return value;
}
inline void C2S_Arena_Result_POST::clear_resultinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resultinfo_ != nullptr) _impl_.resultinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::GameResultInfo& C2S_Arena_Result_POST::_internal_resultinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::GameResultInfo* p = _impl_.resultinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::GameResultInfo&>(::DC::Packet::_GameResultInfo_default_instance_);
}
inline const ::DC::Packet::GameResultInfo& C2S_Arena_Result_POST::resultinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Arena_Result_POST.resultInfo)
  return _internal_resultinfo();
}
inline void C2S_Arena_Result_POST::unsafe_arena_set_allocated_resultinfo(::DC::Packet::GameResultInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resultinfo_);
  }
  _impl_.resultinfo_ = reinterpret_cast<::DC::Packet::GameResultInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.C2S_Arena_Result_POST.resultInfo)
}
inline ::DC::Packet::GameResultInfo* C2S_Arena_Result_POST::release_resultinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::GameResultInfo* released = _impl_.resultinfo_;
  _impl_.resultinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::GameResultInfo* C2S_Arena_Result_POST::unsafe_arena_release_resultinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_Arena_Result_POST.resultInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::GameResultInfo* temp = _impl_.resultinfo_;
  _impl_.resultinfo_ = nullptr;
  return temp;
}
inline ::DC::Packet::GameResultInfo* C2S_Arena_Result_POST::_internal_mutable_resultinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resultinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::GameResultInfo>(GetArena());
    _impl_.resultinfo_ = reinterpret_cast<::DC::Packet::GameResultInfo*>(p);
  }
  return _impl_.resultinfo_;
}
inline ::DC::Packet::GameResultInfo* C2S_Arena_Result_POST::mutable_resultinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::GameResultInfo* _msg = _internal_mutable_resultinfo();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_Arena_Result_POST.resultInfo)
  return _msg;
}
inline void C2S_Arena_Result_POST::set_allocated_resultinfo(::DC::Packet::GameResultInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.resultinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.resultinfo_ = reinterpret_cast<::DC::Packet::GameResultInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_Arena_Result_POST.resultInfo)
}

// repeated .DC.Packet.SItem items = 2;
inline int C2S_Arena_Result_POST::_internal_items_size() const {
  return _internal_items().size();
}
inline int C2S_Arena_Result_POST::items_size() const {
  return _internal_items_size();
}
inline ::DC::Packet::SItem* C2S_Arena_Result_POST::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_Arena_Result_POST.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* C2S_Arena_Result_POST::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_Arena_Result_POST.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DC::Packet::SItem& C2S_Arena_Result_POST::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Arena_Result_POST.items)
  return _internal_items().Get(index);
}
inline ::DC::Packet::SItem* C2S_Arena_Result_POST::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_Arena_Result_POST.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& C2S_Arena_Result_POST::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_Arena_Result_POST.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>&
C2S_Arena_Result_POST::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>*
C2S_Arena_Result_POST::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// string secretId = 3;
inline void C2S_Arena_Result_POST::clear_secretid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secretid_.ClearToEmpty();
}
inline const std::string& C2S_Arena_Result_POST::secretid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Arena_Result_POST.secretId)
  return _internal_secretid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_Arena_Result_POST::set_secretid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secretid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_Arena_Result_POST.secretId)
}
inline std::string* C2S_Arena_Result_POST::mutable_secretid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_secretid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_Arena_Result_POST.secretId)
  return _s;
}
inline const std::string& C2S_Arena_Result_POST::_internal_secretid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.secretid_.Get();
}
inline void C2S_Arena_Result_POST::_internal_set_secretid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secretid_.Set(value, GetArena());
}
inline std::string* C2S_Arena_Result_POST::_internal_mutable_secretid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.secretid_.Mutable( GetArena());
}
inline std::string* C2S_Arena_Result_POST::release_secretid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_Arena_Result_POST.secretId)
  return _impl_.secretid_.Release();
}
inline void C2S_Arena_Result_POST::set_allocated_secretid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secretid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.secretid_.IsDefault()) {
          _impl_.secretid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_Arena_Result_POST.secretId)
}

// -------------------------------------------------------------------

// C2S_Arena_Exit_POST

// string accountId = 1;
inline void C2S_Arena_Exit_POST::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& C2S_Arena_Exit_POST::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Arena_Exit_POST.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_Arena_Exit_POST::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_Arena_Exit_POST.accountId)
}
inline std::string* C2S_Arena_Exit_POST::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_Arena_Exit_POST.accountId)
  return _s;
}
inline const std::string& C2S_Arena_Exit_POST::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void C2S_Arena_Exit_POST::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* C2S_Arena_Exit_POST::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* C2S_Arena_Exit_POST::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_Arena_Exit_POST.accountId)
  return _impl_.accountid_.Release();
}
inline void C2S_Arena_Exit_POST::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_Arena_Exit_POST.accountId)
}

// string characterId = 2;
inline void C2S_Arena_Exit_POST::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& C2S_Arena_Exit_POST::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Arena_Exit_POST.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_Arena_Exit_POST::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_Arena_Exit_POST.characterId)
}
inline std::string* C2S_Arena_Exit_POST::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_Arena_Exit_POST.characterId)
  return _s;
}
inline const std::string& C2S_Arena_Exit_POST::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void C2S_Arena_Exit_POST::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* C2S_Arena_Exit_POST::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* C2S_Arena_Exit_POST::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_Arena_Exit_POST.characterId)
  return _impl_.characterid_.Release();
}
inline void C2S_Arena_Exit_POST::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_Arena_Exit_POST.characterId)
}

// uint64 gameId = 3;
inline void C2S_Arena_Exit_POST::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t C2S_Arena_Exit_POST::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Arena_Exit_POST.gameId)
  return _internal_gameid();
}
inline void C2S_Arena_Exit_POST::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_Arena_Exit_POST.gameId)
}
inline ::uint64_t C2S_Arena_Exit_POST::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C2S_Arena_Exit_POST::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// string secretId = 4;
inline void C2S_Arena_Exit_POST::clear_secretid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secretid_.ClearToEmpty();
}
inline const std::string& C2S_Arena_Exit_POST::secretid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Arena_Exit_POST.secretId)
  return _internal_secretid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_Arena_Exit_POST::set_secretid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secretid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_Arena_Exit_POST.secretId)
}
inline std::string* C2S_Arena_Exit_POST::mutable_secretid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_secretid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_Arena_Exit_POST.secretId)
  return _s;
}
inline const std::string& C2S_Arena_Exit_POST::_internal_secretid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.secretid_.Get();
}
inline void C2S_Arena_Exit_POST::_internal_set_secretid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secretid_.Set(value, GetArena());
}
inline std::string* C2S_Arena_Exit_POST::_internal_mutable_secretid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.secretid_.Mutable( GetArena());
}
inline std::string* C2S_Arena_Exit_POST::release_secretid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_Arena_Exit_POST.secretId)
  return _impl_.secretid_.Release();
}
inline void C2S_Arena_Exit_POST::set_allocated_secretid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secretid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.secretid_.IsDefault()) {
          _impl_.secretid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_Arena_Exit_POST.secretId)
}

// -------------------------------------------------------------------

// C2S_Game_Finalize_Session_POST

// uint64 gameId = 1;
inline void C2S_Game_Finalize_Session_POST::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t C2S_Game_Finalize_Session_POST::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Game_Finalize_Session_POST.gameId)
  return _internal_gameid();
}
inline void C2S_Game_Finalize_Session_POST::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_Game_Finalize_Session_POST.gameId)
}
inline ::uint64_t C2S_Game_Finalize_Session_POST::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C2S_Game_Finalize_Session_POST::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// string accountId = 2;
inline void C2S_Game_Finalize_Session_POST::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& C2S_Game_Finalize_Session_POST::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Game_Finalize_Session_POST.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_Game_Finalize_Session_POST::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_Game_Finalize_Session_POST.accountId)
}
inline std::string* C2S_Game_Finalize_Session_POST::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_Game_Finalize_Session_POST.accountId)
  return _s;
}
inline const std::string& C2S_Game_Finalize_Session_POST::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void C2S_Game_Finalize_Session_POST::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* C2S_Game_Finalize_Session_POST::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* C2S_Game_Finalize_Session_POST::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_Game_Finalize_Session_POST.accountId)
  return _impl_.accountid_.Release();
}
inline void C2S_Game_Finalize_Session_POST::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_Game_Finalize_Session_POST.accountId)
}

// string characterId = 3;
inline void C2S_Game_Finalize_Session_POST::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& C2S_Game_Finalize_Session_POST::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Game_Finalize_Session_POST.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C2S_Game_Finalize_Session_POST::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.C2S_Game_Finalize_Session_POST.characterId)
}
inline std::string* C2S_Game_Finalize_Session_POST::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_Game_Finalize_Session_POST.characterId)
  return _s;
}
inline const std::string& C2S_Game_Finalize_Session_POST::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void C2S_Game_Finalize_Session_POST::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* C2S_Game_Finalize_Session_POST::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* C2S_Game_Finalize_Session_POST::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.C2S_Game_Finalize_Session_POST.characterId)
  return _impl_.characterid_.Release();
}
inline void C2S_Game_Finalize_Session_POST::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.C2S_Game_Finalize_Session_POST.characterId)
}

// repeated .DC.Packet.SItem recoveryItems = 4;
inline int C2S_Game_Finalize_Session_POST::_internal_recoveryitems_size() const {
  return _internal_recoveryitems().size();
}
inline int C2S_Game_Finalize_Session_POST::recoveryitems_size() const {
  return _internal_recoveryitems_size();
}
inline ::DC::Packet::SItem* C2S_Game_Finalize_Session_POST::mutable_recoveryitems(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.C2S_Game_Finalize_Session_POST.recoveryItems)
  return _internal_mutable_recoveryitems()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* C2S_Game_Finalize_Session_POST::mutable_recoveryitems()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.C2S_Game_Finalize_Session_POST.recoveryItems)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_recoveryitems();
}
inline const ::DC::Packet::SItem& C2S_Game_Finalize_Session_POST::recoveryitems(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.C2S_Game_Finalize_Session_POST.recoveryItems)
  return _internal_recoveryitems().Get(index);
}
inline ::DC::Packet::SItem* C2S_Game_Finalize_Session_POST::add_recoveryitems() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SItem* _add = _internal_mutable_recoveryitems()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.C2S_Game_Finalize_Session_POST.recoveryItems)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& C2S_Game_Finalize_Session_POST::recoveryitems() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.C2S_Game_Finalize_Session_POST.recoveryItems)
  return _internal_recoveryitems();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>&
C2S_Game_Finalize_Session_POST::_internal_recoveryitems() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recoveryitems_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>*
C2S_Game_Finalize_Session_POST::_internal_mutable_recoveryitems() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.recoveryitems_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Packet
}  // namespace DC


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::DC::Packet::C2S_GameExitUser_POST_ESCAPE> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::DC::Packet::C2S_GameExitUser_POST_ESCAPE>() {
  return ::DC::Packet::C2S_GameExitUser_POST_ESCAPE_descriptor();
}
template <>
struct is_proto_enum<::DC::Packet::S2C_GameStartServer_Json_MATCH_MAKE> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::DC::Packet::S2C_GameStartServer_Json_MATCH_MAKE>() {
  return ::DC::Packet::S2C_GameStartServer_Json_MATCH_MAKE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_DediServer_2eproto_2epb_2eh
