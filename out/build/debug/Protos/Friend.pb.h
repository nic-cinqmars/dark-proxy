// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Friend.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_Friend_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Friend_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "_Character.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Friend_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Friend_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Friend_2eproto;
namespace DC {
namespace Packet {
class SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ;
struct SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQDefaultTypeInternal;
extern SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQDefaultTypeInternal _SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ_default_instance_;
class SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ;
struct SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQDefaultTypeInternal;
extern SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQDefaultTypeInternal _SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ_default_instance_;
class SC2S_FRIEND_DEL_FRIEND_REQ;
struct SC2S_FRIEND_DEL_FRIEND_REQDefaultTypeInternal;
extern SC2S_FRIEND_DEL_FRIEND_REQDefaultTypeInternal _SC2S_FRIEND_DEL_FRIEND_REQ_default_instance_;
class SC2S_FRIEND_FIND_REQ;
struct SC2S_FRIEND_FIND_REQDefaultTypeInternal;
extern SC2S_FRIEND_FIND_REQDefaultTypeInternal _SC2S_FRIEND_FIND_REQ_default_instance_;
class SC2S_FRIEND_INVITE_ACCEPT_REQ;
struct SC2S_FRIEND_INVITE_ACCEPT_REQDefaultTypeInternal;
extern SC2S_FRIEND_INVITE_ACCEPT_REQDefaultTypeInternal _SC2S_FRIEND_INVITE_ACCEPT_REQ_default_instance_;
class SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ;
struct SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQDefaultTypeInternal;
extern SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQDefaultTypeInternal _SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ_default_instance_;
class SC2S_FRIEND_INVITE_CANCEL_REQ;
struct SC2S_FRIEND_INVITE_CANCEL_REQDefaultTypeInternal;
extern SC2S_FRIEND_INVITE_CANCEL_REQDefaultTypeInternal _SC2S_FRIEND_INVITE_CANCEL_REQ_default_instance_;
class SC2S_FRIEND_INVITE_DECLINE_REQ;
struct SC2S_FRIEND_INVITE_DECLINE_REQDefaultTypeInternal;
extern SC2S_FRIEND_INVITE_DECLINE_REQDefaultTypeInternal _SC2S_FRIEND_INVITE_DECLINE_REQ_default_instance_;
class SC2S_FRIEND_INVITE_REQ;
struct SC2S_FRIEND_INVITE_REQDefaultTypeInternal;
extern SC2S_FRIEND_INVITE_REQDefaultTypeInternal _SC2S_FRIEND_INVITE_REQ_default_instance_;
class SC2S_FRIEND_LIST_ALL_REQ;
struct SC2S_FRIEND_LIST_ALL_REQDefaultTypeInternal;
extern SC2S_FRIEND_LIST_ALL_REQDefaultTypeInternal _SC2S_FRIEND_LIST_ALL_REQ_default_instance_;
class SC2S_FRIEND_LIST_REQ;
struct SC2S_FRIEND_LIST_REQDefaultTypeInternal;
extern SC2S_FRIEND_LIST_REQDefaultTypeInternal _SC2S_FRIEND_LIST_REQ_default_instance_;
class SC2S_FRIEND_SET_PRIVACY_REQ;
struct SC2S_FRIEND_SET_PRIVACY_REQDefaultTypeInternal;
extern SC2S_FRIEND_SET_PRIVACY_REQDefaultTypeInternal _SC2S_FRIEND_SET_PRIVACY_REQ_default_instance_;
class SC2S_FRIEND_SET_STATUS_REQ;
struct SC2S_FRIEND_SET_STATUS_REQDefaultTypeInternal;
extern SC2S_FRIEND_SET_STATUS_REQDefaultTypeInternal _SC2S_FRIEND_SET_STATUS_REQ_default_instance_;
class SFRIEND_ACCEPT_INFO;
struct SFRIEND_ACCEPT_INFODefaultTypeInternal;
extern SFRIEND_ACCEPT_INFODefaultTypeInternal _SFRIEND_ACCEPT_INFO_default_instance_;
class SFRIEND_ACCOUNT_INFO;
struct SFRIEND_ACCOUNT_INFODefaultTypeInternal;
extern SFRIEND_ACCOUNT_INFODefaultTypeInternal _SFRIEND_ACCOUNT_INFO_default_instance_;
class SFRIEND_INFO;
struct SFRIEND_INFODefaultTypeInternal;
extern SFRIEND_INFODefaultTypeInternal _SFRIEND_INFO_default_instance_;
class SFRIEND_REQUEST_INFO;
struct SFRIEND_REQUEST_INFODefaultTypeInternal;
extern SFRIEND_REQUEST_INFODefaultTypeInternal _SFRIEND_REQUEST_INFO_default_instance_;
class SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES;
struct SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RESDefaultTypeInternal;
extern SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RESDefaultTypeInternal _SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES_default_instance_;
class SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES;
struct SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RESDefaultTypeInternal;
extern SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RESDefaultTypeInternal _SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES_default_instance_;
class SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT;
struct SS2C_FRIEND_DEL_ACCEPT_INFOS_NOTDefaultTypeInternal;
extern SS2C_FRIEND_DEL_ACCEPT_INFOS_NOTDefaultTypeInternal _SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT_default_instance_;
class SS2C_FRIEND_DEL_FRIEND_INFOS_NOT;
struct SS2C_FRIEND_DEL_FRIEND_INFOS_NOTDefaultTypeInternal;
extern SS2C_FRIEND_DEL_FRIEND_INFOS_NOTDefaultTypeInternal _SS2C_FRIEND_DEL_FRIEND_INFOS_NOT_default_instance_;
class SS2C_FRIEND_DEL_FRIEND_RES;
struct SS2C_FRIEND_DEL_FRIEND_RESDefaultTypeInternal;
extern SS2C_FRIEND_DEL_FRIEND_RESDefaultTypeInternal _SS2C_FRIEND_DEL_FRIEND_RES_default_instance_;
class SS2C_FRIEND_DEL_INVITE_INFOS_NOT;
struct SS2C_FRIEND_DEL_INVITE_INFOS_NOTDefaultTypeInternal;
extern SS2C_FRIEND_DEL_INVITE_INFOS_NOTDefaultTypeInternal _SS2C_FRIEND_DEL_INVITE_INFOS_NOT_default_instance_;
class SS2C_FRIEND_FIND_RES;
struct SS2C_FRIEND_FIND_RESDefaultTypeInternal;
extern SS2C_FRIEND_FIND_RESDefaultTypeInternal _SS2C_FRIEND_FIND_RES_default_instance_;
class SS2C_FRIEND_INFO_NOT;
struct SS2C_FRIEND_INFO_NOTDefaultTypeInternal;
extern SS2C_FRIEND_INFO_NOTDefaultTypeInternal _SS2C_FRIEND_INFO_NOT_default_instance_;
class SS2C_FRIEND_INVITE_ACCEPT_RES;
struct SS2C_FRIEND_INVITE_ACCEPT_RESDefaultTypeInternal;
extern SS2C_FRIEND_INVITE_ACCEPT_RESDefaultTypeInternal _SS2C_FRIEND_INVITE_ACCEPT_RES_default_instance_;
class SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES;
struct SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RESDefaultTypeInternal;
extern SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RESDefaultTypeInternal _SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES_default_instance_;
class SS2C_FRIEND_INVITE_CANCEL_RES;
struct SS2C_FRIEND_INVITE_CANCEL_RESDefaultTypeInternal;
extern SS2C_FRIEND_INVITE_CANCEL_RESDefaultTypeInternal _SS2C_FRIEND_INVITE_CANCEL_RES_default_instance_;
class SS2C_FRIEND_INVITE_DECLINE_RES;
struct SS2C_FRIEND_INVITE_DECLINE_RESDefaultTypeInternal;
extern SS2C_FRIEND_INVITE_DECLINE_RESDefaultTypeInternal _SS2C_FRIEND_INVITE_DECLINE_RES_default_instance_;
class SS2C_FRIEND_INVITE_RES;
struct SS2C_FRIEND_INVITE_RESDefaultTypeInternal;
extern SS2C_FRIEND_INVITE_RESDefaultTypeInternal _SS2C_FRIEND_INVITE_RES_default_instance_;
class SS2C_FRIEND_LIST_ALL_RES;
struct SS2C_FRIEND_LIST_ALL_RESDefaultTypeInternal;
extern SS2C_FRIEND_LIST_ALL_RESDefaultTypeInternal _SS2C_FRIEND_LIST_ALL_RES_default_instance_;
class SS2C_FRIEND_LIST_RES;
struct SS2C_FRIEND_LIST_RESDefaultTypeInternal;
extern SS2C_FRIEND_LIST_RESDefaultTypeInternal _SS2C_FRIEND_LIST_RES_default_instance_;
class SS2C_FRIEND_SET_ACCEPT_INFOS_NOT;
struct SS2C_FRIEND_SET_ACCEPT_INFOS_NOTDefaultTypeInternal;
extern SS2C_FRIEND_SET_ACCEPT_INFOS_NOTDefaultTypeInternal _SS2C_FRIEND_SET_ACCEPT_INFOS_NOT_default_instance_;
class SS2C_FRIEND_SET_FRIEND_INFOS_NOT;
struct SS2C_FRIEND_SET_FRIEND_INFOS_NOTDefaultTypeInternal;
extern SS2C_FRIEND_SET_FRIEND_INFOS_NOTDefaultTypeInternal _SS2C_FRIEND_SET_FRIEND_INFOS_NOT_default_instance_;
class SS2C_FRIEND_SET_INVITE_INFOS_NOT;
struct SS2C_FRIEND_SET_INVITE_INFOS_NOTDefaultTypeInternal;
extern SS2C_FRIEND_SET_INVITE_INFOS_NOTDefaultTypeInternal _SS2C_FRIEND_SET_INVITE_INFOS_NOT_default_instance_;
class SS2C_FRIEND_SET_PRIVACY_RES;
struct SS2C_FRIEND_SET_PRIVACY_RESDefaultTypeInternal;
extern SS2C_FRIEND_SET_PRIVACY_RESDefaultTypeInternal _SS2C_FRIEND_SET_PRIVACY_RES_default_instance_;
class SS2C_FRIEND_SET_STATUS_NOT;
struct SS2C_FRIEND_SET_STATUS_NOTDefaultTypeInternal;
extern SS2C_FRIEND_SET_STATUS_NOTDefaultTypeInternal _SS2C_FRIEND_SET_STATUS_NOT_default_instance_;
class SS2C_FRIEND_SET_STATUS_RES;
struct SS2C_FRIEND_SET_STATUS_RESDefaultTypeInternal;
extern SS2C_FRIEND_SET_STATUS_RESDefaultTypeInternal _SS2C_FRIEND_SET_STATUS_RES_default_instance_;
}  // namespace Packet
}  // namespace DC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace DC {
namespace Packet {

// ===================================================================


// -------------------------------------------------------------------

class SS2C_FRIEND_SET_STATUS_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_SET_STATUS_RES) */ {
 public:
  inline SS2C_FRIEND_SET_STATUS_RES() : SS2C_FRIEND_SET_STATUS_RES(nullptr) {}
  ~SS2C_FRIEND_SET_STATUS_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_SET_STATUS_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_SET_STATUS_RES(const SS2C_FRIEND_SET_STATUS_RES& from) : SS2C_FRIEND_SET_STATUS_RES(nullptr, from) {}
  inline SS2C_FRIEND_SET_STATUS_RES(SS2C_FRIEND_SET_STATUS_RES&& from) noexcept
      : SS2C_FRIEND_SET_STATUS_RES(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_SET_STATUS_RES& operator=(const SS2C_FRIEND_SET_STATUS_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_SET_STATUS_RES& operator=(SS2C_FRIEND_SET_STATUS_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_SET_STATUS_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_SET_STATUS_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_SET_STATUS_RES*>(
        &_SS2C_FRIEND_SET_STATUS_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SS2C_FRIEND_SET_STATUS_RES& a, SS2C_FRIEND_SET_STATUS_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_SET_STATUS_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_SET_STATUS_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_SET_STATUS_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_SET_STATUS_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_SET_STATUS_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_SET_STATUS_RES& from) { SS2C_FRIEND_SET_STATUS_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_SET_STATUS_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_SET_STATUS_RES"; }

 protected:
  explicit SS2C_FRIEND_SET_STATUS_RES(::google::protobuf::Arena* arena);
  SS2C_FRIEND_SET_STATUS_RES(::google::protobuf::Arena* arena, const SS2C_FRIEND_SET_STATUS_RES& from);
  SS2C_FRIEND_SET_STATUS_RES(::google::protobuf::Arena* arena, SS2C_FRIEND_SET_STATUS_RES&& from) noexcept
      : SS2C_FRIEND_SET_STATUS_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // uint32 status = 2;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_SET_STATUS_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_SET_STATUS_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_SET_STATUS_RES& from_msg);
    ::uint32_t result_;
    ::uint32_t status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_SET_STATUS_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_SET_STATUS_NOT) */ {
 public:
  inline SS2C_FRIEND_SET_STATUS_NOT() : SS2C_FRIEND_SET_STATUS_NOT(nullptr) {}
  ~SS2C_FRIEND_SET_STATUS_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_SET_STATUS_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_SET_STATUS_NOT(const SS2C_FRIEND_SET_STATUS_NOT& from) : SS2C_FRIEND_SET_STATUS_NOT(nullptr, from) {}
  inline SS2C_FRIEND_SET_STATUS_NOT(SS2C_FRIEND_SET_STATUS_NOT&& from) noexcept
      : SS2C_FRIEND_SET_STATUS_NOT(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_SET_STATUS_NOT& operator=(const SS2C_FRIEND_SET_STATUS_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_SET_STATUS_NOT& operator=(SS2C_FRIEND_SET_STATUS_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_SET_STATUS_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_SET_STATUS_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_SET_STATUS_NOT*>(
        &_SS2C_FRIEND_SET_STATUS_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(SS2C_FRIEND_SET_STATUS_NOT& a, SS2C_FRIEND_SET_STATUS_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_SET_STATUS_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_SET_STATUS_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_SET_STATUS_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_SET_STATUS_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_SET_STATUS_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_SET_STATUS_NOT& from) { SS2C_FRIEND_SET_STATUS_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_SET_STATUS_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_SET_STATUS_NOT"; }

 protected:
  explicit SS2C_FRIEND_SET_STATUS_NOT(::google::protobuf::Arena* arena);
  SS2C_FRIEND_SET_STATUS_NOT(::google::protobuf::Arena* arena, const SS2C_FRIEND_SET_STATUS_NOT& from);
  SS2C_FRIEND_SET_STATUS_NOT(::google::protobuf::Arena* arena, SS2C_FRIEND_SET_STATUS_NOT&& from) noexcept
      : SS2C_FRIEND_SET_STATUS_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // uint32 status = 2;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_SET_STATUS_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_SET_STATUS_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_SET_STATUS_NOT& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::uint32_t status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_SET_PRIVACY_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_SET_PRIVACY_RES) */ {
 public:
  inline SS2C_FRIEND_SET_PRIVACY_RES() : SS2C_FRIEND_SET_PRIVACY_RES(nullptr) {}
  ~SS2C_FRIEND_SET_PRIVACY_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_SET_PRIVACY_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_SET_PRIVACY_RES(const SS2C_FRIEND_SET_PRIVACY_RES& from) : SS2C_FRIEND_SET_PRIVACY_RES(nullptr, from) {}
  inline SS2C_FRIEND_SET_PRIVACY_RES(SS2C_FRIEND_SET_PRIVACY_RES&& from) noexcept
      : SS2C_FRIEND_SET_PRIVACY_RES(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_SET_PRIVACY_RES& operator=(const SS2C_FRIEND_SET_PRIVACY_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_SET_PRIVACY_RES& operator=(SS2C_FRIEND_SET_PRIVACY_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_SET_PRIVACY_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_SET_PRIVACY_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_SET_PRIVACY_RES*>(
        &_SS2C_FRIEND_SET_PRIVACY_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SS2C_FRIEND_SET_PRIVACY_RES& a, SS2C_FRIEND_SET_PRIVACY_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_SET_PRIVACY_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_SET_PRIVACY_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_SET_PRIVACY_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_SET_PRIVACY_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_SET_PRIVACY_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_SET_PRIVACY_RES& from) { SS2C_FRIEND_SET_PRIVACY_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_SET_PRIVACY_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_SET_PRIVACY_RES"; }

 protected:
  explicit SS2C_FRIEND_SET_PRIVACY_RES(::google::protobuf::Arena* arena);
  SS2C_FRIEND_SET_PRIVACY_RES(::google::protobuf::Arena* arena, const SS2C_FRIEND_SET_PRIVACY_RES& from);
  SS2C_FRIEND_SET_PRIVACY_RES(::google::protobuf::Arena* arena, SS2C_FRIEND_SET_PRIVACY_RES&& from) noexcept
      : SS2C_FRIEND_SET_PRIVACY_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
    kPrivacyFieldNumber = 2,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // uint32 privacy = 2;
  void clear_privacy() ;
  ::uint32_t privacy() const;
  void set_privacy(::uint32_t value);

  private:
  ::uint32_t _internal_privacy() const;
  void _internal_set_privacy(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_SET_PRIVACY_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_SET_PRIVACY_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_SET_PRIVACY_RES& from_msg);
    ::uint32_t result_;
    ::uint32_t privacy_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_INVITE_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_INVITE_RES) */ {
 public:
  inline SS2C_FRIEND_INVITE_RES() : SS2C_FRIEND_INVITE_RES(nullptr) {}
  ~SS2C_FRIEND_INVITE_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_INVITE_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_INVITE_RES(const SS2C_FRIEND_INVITE_RES& from) : SS2C_FRIEND_INVITE_RES(nullptr, from) {}
  inline SS2C_FRIEND_INVITE_RES(SS2C_FRIEND_INVITE_RES&& from) noexcept
      : SS2C_FRIEND_INVITE_RES(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_INVITE_RES& operator=(const SS2C_FRIEND_INVITE_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_INVITE_RES& operator=(SS2C_FRIEND_INVITE_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_INVITE_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_INVITE_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_INVITE_RES*>(
        &_SS2C_FRIEND_INVITE_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(SS2C_FRIEND_INVITE_RES& a, SS2C_FRIEND_INVITE_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_INVITE_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_INVITE_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_INVITE_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_INVITE_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_INVITE_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_INVITE_RES& from) { SS2C_FRIEND_INVITE_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_INVITE_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_INVITE_RES"; }

 protected:
  explicit SS2C_FRIEND_INVITE_RES(::google::protobuf::Arena* arena);
  SS2C_FRIEND_INVITE_RES(::google::protobuf::Arena* arena, const SS2C_FRIEND_INVITE_RES& from);
  SS2C_FRIEND_INVITE_RES(::google::protobuf::Arena* arena, SS2C_FRIEND_INVITE_RES&& from) noexcept
      : SS2C_FRIEND_INVITE_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_INVITE_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_INVITE_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_INVITE_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_INVITE_DECLINE_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_INVITE_DECLINE_RES) */ {
 public:
  inline SS2C_FRIEND_INVITE_DECLINE_RES() : SS2C_FRIEND_INVITE_DECLINE_RES(nullptr) {}
  ~SS2C_FRIEND_INVITE_DECLINE_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_INVITE_DECLINE_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_INVITE_DECLINE_RES(const SS2C_FRIEND_INVITE_DECLINE_RES& from) : SS2C_FRIEND_INVITE_DECLINE_RES(nullptr, from) {}
  inline SS2C_FRIEND_INVITE_DECLINE_RES(SS2C_FRIEND_INVITE_DECLINE_RES&& from) noexcept
      : SS2C_FRIEND_INVITE_DECLINE_RES(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_INVITE_DECLINE_RES& operator=(const SS2C_FRIEND_INVITE_DECLINE_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_INVITE_DECLINE_RES& operator=(SS2C_FRIEND_INVITE_DECLINE_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_INVITE_DECLINE_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_INVITE_DECLINE_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_INVITE_DECLINE_RES*>(
        &_SS2C_FRIEND_INVITE_DECLINE_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(SS2C_FRIEND_INVITE_DECLINE_RES& a, SS2C_FRIEND_INVITE_DECLINE_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_INVITE_DECLINE_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_INVITE_DECLINE_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_INVITE_DECLINE_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_INVITE_DECLINE_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_INVITE_DECLINE_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_INVITE_DECLINE_RES& from) { SS2C_FRIEND_INVITE_DECLINE_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_INVITE_DECLINE_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_INVITE_DECLINE_RES"; }

 protected:
  explicit SS2C_FRIEND_INVITE_DECLINE_RES(::google::protobuf::Arena* arena);
  SS2C_FRIEND_INVITE_DECLINE_RES(::google::protobuf::Arena* arena, const SS2C_FRIEND_INVITE_DECLINE_RES& from);
  SS2C_FRIEND_INVITE_DECLINE_RES(::google::protobuf::Arena* arena, SS2C_FRIEND_INVITE_DECLINE_RES&& from) noexcept
      : SS2C_FRIEND_INVITE_DECLINE_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_INVITE_DECLINE_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_INVITE_DECLINE_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_INVITE_DECLINE_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_INVITE_CANCEL_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_INVITE_CANCEL_RES) */ {
 public:
  inline SS2C_FRIEND_INVITE_CANCEL_RES() : SS2C_FRIEND_INVITE_CANCEL_RES(nullptr) {}
  ~SS2C_FRIEND_INVITE_CANCEL_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_INVITE_CANCEL_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_INVITE_CANCEL_RES(const SS2C_FRIEND_INVITE_CANCEL_RES& from) : SS2C_FRIEND_INVITE_CANCEL_RES(nullptr, from) {}
  inline SS2C_FRIEND_INVITE_CANCEL_RES(SS2C_FRIEND_INVITE_CANCEL_RES&& from) noexcept
      : SS2C_FRIEND_INVITE_CANCEL_RES(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_INVITE_CANCEL_RES& operator=(const SS2C_FRIEND_INVITE_CANCEL_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_INVITE_CANCEL_RES& operator=(SS2C_FRIEND_INVITE_CANCEL_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_INVITE_CANCEL_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_INVITE_CANCEL_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_INVITE_CANCEL_RES*>(
        &_SS2C_FRIEND_INVITE_CANCEL_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(SS2C_FRIEND_INVITE_CANCEL_RES& a, SS2C_FRIEND_INVITE_CANCEL_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_INVITE_CANCEL_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_INVITE_CANCEL_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_INVITE_CANCEL_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_INVITE_CANCEL_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_INVITE_CANCEL_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_INVITE_CANCEL_RES& from) { SS2C_FRIEND_INVITE_CANCEL_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_INVITE_CANCEL_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_INVITE_CANCEL_RES"; }

 protected:
  explicit SS2C_FRIEND_INVITE_CANCEL_RES(::google::protobuf::Arena* arena);
  SS2C_FRIEND_INVITE_CANCEL_RES(::google::protobuf::Arena* arena, const SS2C_FRIEND_INVITE_CANCEL_RES& from);
  SS2C_FRIEND_INVITE_CANCEL_RES(::google::protobuf::Arena* arena, SS2C_FRIEND_INVITE_CANCEL_RES&& from) noexcept
      : SS2C_FRIEND_INVITE_CANCEL_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_INVITE_CANCEL_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_INVITE_CANCEL_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_INVITE_CANCEL_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES) */ {
 public:
  inline SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES() : SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES(nullptr) {}
  ~SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES(const SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES& from) : SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES(nullptr, from) {}
  inline SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES(SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES&& from) noexcept
      : SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES& operator=(const SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES& operator=(SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES*>(
        &_SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES& a, SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES& from) { SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES"; }

 protected:
  explicit SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES(::google::protobuf::Arena* arena);
  SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES(::google::protobuf::Arena* arena, const SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES& from);
  SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES(::google::protobuf::Arena* arena, SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES&& from) noexcept
      : SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_INVITE_ACCEPT_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_INVITE_ACCEPT_RES) */ {
 public:
  inline SS2C_FRIEND_INVITE_ACCEPT_RES() : SS2C_FRIEND_INVITE_ACCEPT_RES(nullptr) {}
  ~SS2C_FRIEND_INVITE_ACCEPT_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_INVITE_ACCEPT_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_INVITE_ACCEPT_RES(const SS2C_FRIEND_INVITE_ACCEPT_RES& from) : SS2C_FRIEND_INVITE_ACCEPT_RES(nullptr, from) {}
  inline SS2C_FRIEND_INVITE_ACCEPT_RES(SS2C_FRIEND_INVITE_ACCEPT_RES&& from) noexcept
      : SS2C_FRIEND_INVITE_ACCEPT_RES(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_INVITE_ACCEPT_RES& operator=(const SS2C_FRIEND_INVITE_ACCEPT_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_INVITE_ACCEPT_RES& operator=(SS2C_FRIEND_INVITE_ACCEPT_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_INVITE_ACCEPT_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_INVITE_ACCEPT_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_INVITE_ACCEPT_RES*>(
        &_SS2C_FRIEND_INVITE_ACCEPT_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(SS2C_FRIEND_INVITE_ACCEPT_RES& a, SS2C_FRIEND_INVITE_ACCEPT_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_INVITE_ACCEPT_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_INVITE_ACCEPT_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_INVITE_ACCEPT_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_INVITE_ACCEPT_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_INVITE_ACCEPT_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_INVITE_ACCEPT_RES& from) { SS2C_FRIEND_INVITE_ACCEPT_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_INVITE_ACCEPT_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_INVITE_ACCEPT_RES"; }

 protected:
  explicit SS2C_FRIEND_INVITE_ACCEPT_RES(::google::protobuf::Arena* arena);
  SS2C_FRIEND_INVITE_ACCEPT_RES(::google::protobuf::Arena* arena, const SS2C_FRIEND_INVITE_ACCEPT_RES& from);
  SS2C_FRIEND_INVITE_ACCEPT_RES(::google::protobuf::Arena* arena, SS2C_FRIEND_INVITE_ACCEPT_RES&& from) noexcept
      : SS2C_FRIEND_INVITE_ACCEPT_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_INVITE_ACCEPT_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_INVITE_ACCEPT_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_INVITE_ACCEPT_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_INFO_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_INFO_NOT) */ {
 public:
  inline SS2C_FRIEND_INFO_NOT() : SS2C_FRIEND_INFO_NOT(nullptr) {}
  ~SS2C_FRIEND_INFO_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_INFO_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_INFO_NOT(const SS2C_FRIEND_INFO_NOT& from) : SS2C_FRIEND_INFO_NOT(nullptr, from) {}
  inline SS2C_FRIEND_INFO_NOT(SS2C_FRIEND_INFO_NOT&& from) noexcept
      : SS2C_FRIEND_INFO_NOT(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_INFO_NOT& operator=(const SS2C_FRIEND_INFO_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_INFO_NOT& operator=(SS2C_FRIEND_INFO_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_INFO_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_INFO_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_INFO_NOT*>(
        &_SS2C_FRIEND_INFO_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(SS2C_FRIEND_INFO_NOT& a, SS2C_FRIEND_INFO_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_INFO_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_INFO_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_INFO_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_INFO_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_INFO_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_INFO_NOT& from) { SS2C_FRIEND_INFO_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_INFO_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_INFO_NOT"; }

 protected:
  explicit SS2C_FRIEND_INFO_NOT(::google::protobuf::Arena* arena);
  SS2C_FRIEND_INFO_NOT(::google::protobuf::Arena* arena, const SS2C_FRIEND_INFO_NOT& from);
  SS2C_FRIEND_INFO_NOT(::google::protobuf::Arena* arena, SS2C_FRIEND_INFO_NOT&& from) noexcept
      : SS2C_FRIEND_INFO_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountNicknameFieldNumber = 1,
    kStatusFieldNumber = 2,
    kPrivacyFieldNumber = 3,
  };
  // string accountNickname = 1;
  void clear_accountnickname() ;
  const std::string& accountnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountnickname(Arg_&& arg, Args_... args);
  std::string* mutable_accountnickname();
  PROTOBUF_NODISCARD std::string* release_accountnickname();
  void set_allocated_accountnickname(std::string* value);

  private:
  const std::string& _internal_accountnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountnickname(
      const std::string& value);
  std::string* _internal_mutable_accountnickname();

  public:
  // uint32 status = 2;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // uint32 privacy = 3;
  void clear_privacy() ;
  ::uint32_t privacy() const;
  void set_privacy(::uint32_t value);

  private:
  ::uint32_t _internal_privacy() const;
  void _internal_set_privacy(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_INFO_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_INFO_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_INFO_NOT& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountnickname_;
    ::uint32_t status_;
    ::uint32_t privacy_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_DEL_INVITE_INFOS_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_DEL_INVITE_INFOS_NOT) */ {
 public:
  inline SS2C_FRIEND_DEL_INVITE_INFOS_NOT() : SS2C_FRIEND_DEL_INVITE_INFOS_NOT(nullptr) {}
  ~SS2C_FRIEND_DEL_INVITE_INFOS_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_DEL_INVITE_INFOS_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_DEL_INVITE_INFOS_NOT(const SS2C_FRIEND_DEL_INVITE_INFOS_NOT& from) : SS2C_FRIEND_DEL_INVITE_INFOS_NOT(nullptr, from) {}
  inline SS2C_FRIEND_DEL_INVITE_INFOS_NOT(SS2C_FRIEND_DEL_INVITE_INFOS_NOT&& from) noexcept
      : SS2C_FRIEND_DEL_INVITE_INFOS_NOT(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_DEL_INVITE_INFOS_NOT& operator=(const SS2C_FRIEND_DEL_INVITE_INFOS_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_DEL_INVITE_INFOS_NOT& operator=(SS2C_FRIEND_DEL_INVITE_INFOS_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_DEL_INVITE_INFOS_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_DEL_INVITE_INFOS_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_DEL_INVITE_INFOS_NOT*>(
        &_SS2C_FRIEND_DEL_INVITE_INFOS_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(SS2C_FRIEND_DEL_INVITE_INFOS_NOT& a, SS2C_FRIEND_DEL_INVITE_INFOS_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_DEL_INVITE_INFOS_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_DEL_INVITE_INFOS_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_DEL_INVITE_INFOS_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_DEL_INVITE_INFOS_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_DEL_INVITE_INFOS_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_DEL_INVITE_INFOS_NOT& from) { SS2C_FRIEND_DEL_INVITE_INFOS_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_DEL_INVITE_INFOS_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_DEL_INVITE_INFOS_NOT"; }

 protected:
  explicit SS2C_FRIEND_DEL_INVITE_INFOS_NOT(::google::protobuf::Arena* arena);
  SS2C_FRIEND_DEL_INVITE_INFOS_NOT(::google::protobuf::Arena* arena, const SS2C_FRIEND_DEL_INVITE_INFOS_NOT& from);
  SS2C_FRIEND_DEL_INVITE_INFOS_NOT(::google::protobuf::Arena* arena, SS2C_FRIEND_DEL_INVITE_INFOS_NOT&& from) noexcept
      : SS2C_FRIEND_DEL_INVITE_INFOS_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdsFieldNumber = 1,
  };
  // repeated string accountIds = 1;
  int accountids_size() const;
  private:
  int _internal_accountids_size() const;

  public:
  void clear_accountids() ;
  const std::string& accountids(int index) const;
  std::string* mutable_accountids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountids(int index, Arg_&& value, Args_... args);
  std::string* add_accountids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_accountids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& accountids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_accountids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_accountids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_accountids();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_DEL_INVITE_INFOS_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      61, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_DEL_INVITE_INFOS_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_DEL_INVITE_INFOS_NOT& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> accountids_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_DEL_FRIEND_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_DEL_FRIEND_RES) */ {
 public:
  inline SS2C_FRIEND_DEL_FRIEND_RES() : SS2C_FRIEND_DEL_FRIEND_RES(nullptr) {}
  ~SS2C_FRIEND_DEL_FRIEND_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_DEL_FRIEND_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_DEL_FRIEND_RES(const SS2C_FRIEND_DEL_FRIEND_RES& from) : SS2C_FRIEND_DEL_FRIEND_RES(nullptr, from) {}
  inline SS2C_FRIEND_DEL_FRIEND_RES(SS2C_FRIEND_DEL_FRIEND_RES&& from) noexcept
      : SS2C_FRIEND_DEL_FRIEND_RES(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_DEL_FRIEND_RES& operator=(const SS2C_FRIEND_DEL_FRIEND_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_DEL_FRIEND_RES& operator=(SS2C_FRIEND_DEL_FRIEND_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_DEL_FRIEND_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_DEL_FRIEND_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_DEL_FRIEND_RES*>(
        &_SS2C_FRIEND_DEL_FRIEND_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(SS2C_FRIEND_DEL_FRIEND_RES& a, SS2C_FRIEND_DEL_FRIEND_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_DEL_FRIEND_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_DEL_FRIEND_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_DEL_FRIEND_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_DEL_FRIEND_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_DEL_FRIEND_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_DEL_FRIEND_RES& from) { SS2C_FRIEND_DEL_FRIEND_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_DEL_FRIEND_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_DEL_FRIEND_RES"; }

 protected:
  explicit SS2C_FRIEND_DEL_FRIEND_RES(::google::protobuf::Arena* arena);
  SS2C_FRIEND_DEL_FRIEND_RES(::google::protobuf::Arena* arena, const SS2C_FRIEND_DEL_FRIEND_RES& from);
  SS2C_FRIEND_DEL_FRIEND_RES(::google::protobuf::Arena* arena, SS2C_FRIEND_DEL_FRIEND_RES&& from) noexcept
      : SS2C_FRIEND_DEL_FRIEND_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_DEL_FRIEND_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_DEL_FRIEND_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_DEL_FRIEND_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_DEL_FRIEND_INFOS_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_DEL_FRIEND_INFOS_NOT) */ {
 public:
  inline SS2C_FRIEND_DEL_FRIEND_INFOS_NOT() : SS2C_FRIEND_DEL_FRIEND_INFOS_NOT(nullptr) {}
  ~SS2C_FRIEND_DEL_FRIEND_INFOS_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_DEL_FRIEND_INFOS_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_DEL_FRIEND_INFOS_NOT(const SS2C_FRIEND_DEL_FRIEND_INFOS_NOT& from) : SS2C_FRIEND_DEL_FRIEND_INFOS_NOT(nullptr, from) {}
  inline SS2C_FRIEND_DEL_FRIEND_INFOS_NOT(SS2C_FRIEND_DEL_FRIEND_INFOS_NOT&& from) noexcept
      : SS2C_FRIEND_DEL_FRIEND_INFOS_NOT(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_DEL_FRIEND_INFOS_NOT& operator=(const SS2C_FRIEND_DEL_FRIEND_INFOS_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_DEL_FRIEND_INFOS_NOT& operator=(SS2C_FRIEND_DEL_FRIEND_INFOS_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_DEL_FRIEND_INFOS_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_DEL_FRIEND_INFOS_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_DEL_FRIEND_INFOS_NOT*>(
        &_SS2C_FRIEND_DEL_FRIEND_INFOS_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(SS2C_FRIEND_DEL_FRIEND_INFOS_NOT& a, SS2C_FRIEND_DEL_FRIEND_INFOS_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_DEL_FRIEND_INFOS_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_DEL_FRIEND_INFOS_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_DEL_FRIEND_INFOS_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_DEL_FRIEND_INFOS_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_DEL_FRIEND_INFOS_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_DEL_FRIEND_INFOS_NOT& from) { SS2C_FRIEND_DEL_FRIEND_INFOS_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_DEL_FRIEND_INFOS_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_DEL_FRIEND_INFOS_NOT"; }

 protected:
  explicit SS2C_FRIEND_DEL_FRIEND_INFOS_NOT(::google::protobuf::Arena* arena);
  SS2C_FRIEND_DEL_FRIEND_INFOS_NOT(::google::protobuf::Arena* arena, const SS2C_FRIEND_DEL_FRIEND_INFOS_NOT& from);
  SS2C_FRIEND_DEL_FRIEND_INFOS_NOT(::google::protobuf::Arena* arena, SS2C_FRIEND_DEL_FRIEND_INFOS_NOT&& from) noexcept
      : SS2C_FRIEND_DEL_FRIEND_INFOS_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdsFieldNumber = 1,
  };
  // repeated string accountIds = 1;
  int accountids_size() const;
  private:
  int _internal_accountids_size() const;

  public:
  void clear_accountids() ;
  const std::string& accountids(int index) const;
  std::string* mutable_accountids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountids(int index, Arg_&& value, Args_... args);
  std::string* add_accountids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_accountids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& accountids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_accountids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_accountids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_accountids();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_DEL_FRIEND_INFOS_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      61, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_DEL_FRIEND_INFOS_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_DEL_FRIEND_INFOS_NOT& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> accountids_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT) */ {
 public:
  inline SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT() : SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT(nullptr) {}
  ~SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT(const SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT& from) : SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT(nullptr, from) {}
  inline SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT(SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT&& from) noexcept
      : SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT& operator=(const SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT& operator=(SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT*>(
        &_SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT& a, SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT& from) { SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT"; }

 protected:
  explicit SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT(::google::protobuf::Arena* arena);
  SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT(::google::protobuf::Arena* arena, const SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT& from);
  SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT(::google::protobuf::Arena* arena, SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT&& from) noexcept
      : SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdsFieldNumber = 1,
  };
  // repeated string accountIds = 1;
  int accountids_size() const;
  private:
  int _internal_accountids_size() const;

  public:
  void clear_accountids() ;
  const std::string& accountids(int index) const;
  std::string* mutable_accountids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountids(int index, Arg_&& value, Args_... args);
  std::string* add_accountids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_accountids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& accountids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_accountids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_accountids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_accountids();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      61, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> accountids_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES) */ {
 public:
  inline SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES() : SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES(nullptr) {}
  ~SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES(const SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES& from) : SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES(nullptr, from) {}
  inline SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES(SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES&& from) noexcept
      : SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES& operator=(const SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES& operator=(SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES*>(
        &_SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES& a, SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES& from) { SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES"; }

 protected:
  explicit SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES(::google::protobuf::Arena* arena);
  SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES(::google::protobuf::Arena* arena, const SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES& from);
  SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES(::google::protobuf::Arena* arena, SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES&& from) noexcept
      : SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountNicknameFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string accountNickname = 2;
  void clear_accountnickname() ;
  const std::string& accountnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountnickname(Arg_&& arg, Args_... args);
  std::string* mutable_accountnickname();
  PROTOBUF_NODISCARD std::string* release_accountnickname();
  void set_allocated_accountnickname(std::string* value);

  private:
  const std::string& _internal_accountnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountnickname(
      const std::string& value);
  std::string* _internal_mutable_accountnickname();

  public:
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      72, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountnickname_;
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES) */ {
 public:
  inline SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES() : SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES(nullptr) {}
  ~SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES(const SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES& from) : SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES(nullptr, from) {}
  inline SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES(SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES&& from) noexcept
      : SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES& operator=(const SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES& operator=(SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES*>(
        &_SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES& a, SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES& from) { SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES"; }

 protected:
  explicit SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES(::google::protobuf::Arena* arena);
  SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES(::google::protobuf::Arena* arena, const SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES& from);
  SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES(::google::protobuf::Arena* arena, SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES&& from) noexcept
      : SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SFRIEND_ACCOUNT_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SFRIEND_ACCOUNT_INFO) */ {
 public:
  inline SFRIEND_ACCOUNT_INFO() : SFRIEND_ACCOUNT_INFO(nullptr) {}
  ~SFRIEND_ACCOUNT_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SFRIEND_ACCOUNT_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline SFRIEND_ACCOUNT_INFO(const SFRIEND_ACCOUNT_INFO& from) : SFRIEND_ACCOUNT_INFO(nullptr, from) {}
  inline SFRIEND_ACCOUNT_INFO(SFRIEND_ACCOUNT_INFO&& from) noexcept
      : SFRIEND_ACCOUNT_INFO(nullptr, std::move(from)) {}
  inline SFRIEND_ACCOUNT_INFO& operator=(const SFRIEND_ACCOUNT_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SFRIEND_ACCOUNT_INFO& operator=(SFRIEND_ACCOUNT_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SFRIEND_ACCOUNT_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const SFRIEND_ACCOUNT_INFO* internal_default_instance() {
    return reinterpret_cast<const SFRIEND_ACCOUNT_INFO*>(
        &_SFRIEND_ACCOUNT_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(SFRIEND_ACCOUNT_INFO& a, SFRIEND_ACCOUNT_INFO& b) { a.Swap(&b); }
  inline void Swap(SFRIEND_ACCOUNT_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SFRIEND_ACCOUNT_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SFRIEND_ACCOUNT_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SFRIEND_ACCOUNT_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SFRIEND_ACCOUNT_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SFRIEND_ACCOUNT_INFO& from) { SFRIEND_ACCOUNT_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SFRIEND_ACCOUNT_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SFRIEND_ACCOUNT_INFO"; }

 protected:
  explicit SFRIEND_ACCOUNT_INFO(::google::protobuf::Arena* arena);
  SFRIEND_ACCOUNT_INFO(::google::protobuf::Arena* arena, const SFRIEND_ACCOUNT_INFO& from);
  SFRIEND_ACCOUNT_INFO(::google::protobuf::Arena* arena, SFRIEND_ACCOUNT_INFO&& from) noexcept
      : SFRIEND_ACCOUNT_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kAccountNicknameFieldNumber = 2,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string accountNickname = 2;
  void clear_accountnickname() ;
  const std::string& accountnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountnickname(Arg_&& arg, Args_... args);
  std::string* mutable_accountnickname();
  PROTOBUF_NODISCARD std::string* release_accountnickname();
  void set_allocated_accountnickname(std::string* value);

  private:
  const std::string& _internal_accountnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountnickname(
      const std::string& value);
  std::string* _internal_mutable_accountnickname();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SFRIEND_ACCOUNT_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      63, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SFRIEND_ACCOUNT_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SFRIEND_ACCOUNT_INFO& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr accountnickname_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SC2S_FRIEND_SET_STATUS_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_FRIEND_SET_STATUS_REQ) */ {
 public:
  inline SC2S_FRIEND_SET_STATUS_REQ() : SC2S_FRIEND_SET_STATUS_REQ(nullptr) {}
  ~SC2S_FRIEND_SET_STATUS_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_FRIEND_SET_STATUS_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_FRIEND_SET_STATUS_REQ(const SC2S_FRIEND_SET_STATUS_REQ& from) : SC2S_FRIEND_SET_STATUS_REQ(nullptr, from) {}
  inline SC2S_FRIEND_SET_STATUS_REQ(SC2S_FRIEND_SET_STATUS_REQ&& from) noexcept
      : SC2S_FRIEND_SET_STATUS_REQ(nullptr, std::move(from)) {}
  inline SC2S_FRIEND_SET_STATUS_REQ& operator=(const SC2S_FRIEND_SET_STATUS_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_FRIEND_SET_STATUS_REQ& operator=(SC2S_FRIEND_SET_STATUS_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_FRIEND_SET_STATUS_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_FRIEND_SET_STATUS_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_FRIEND_SET_STATUS_REQ*>(
        &_SC2S_FRIEND_SET_STATUS_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SC2S_FRIEND_SET_STATUS_REQ& a, SC2S_FRIEND_SET_STATUS_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_FRIEND_SET_STATUS_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_FRIEND_SET_STATUS_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_FRIEND_SET_STATUS_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_FRIEND_SET_STATUS_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_FRIEND_SET_STATUS_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_FRIEND_SET_STATUS_REQ& from) { SC2S_FRIEND_SET_STATUS_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_FRIEND_SET_STATUS_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_FRIEND_SET_STATUS_REQ"; }

 protected:
  explicit SC2S_FRIEND_SET_STATUS_REQ(::google::protobuf::Arena* arena);
  SC2S_FRIEND_SET_STATUS_REQ(::google::protobuf::Arena* arena, const SC2S_FRIEND_SET_STATUS_REQ& from);
  SC2S_FRIEND_SET_STATUS_REQ(::google::protobuf::Arena* arena, SC2S_FRIEND_SET_STATUS_REQ&& from) noexcept
      : SC2S_FRIEND_SET_STATUS_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 1,
    kTemporaryFieldNumber = 2,
  };
  // uint32 status = 1;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // uint32 temporary = 2;
  void clear_temporary() ;
  ::uint32_t temporary() const;
  void set_temporary(::uint32_t value);

  private:
  ::uint32_t _internal_temporary() const;
  void _internal_set_temporary(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_FRIEND_SET_STATUS_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_FRIEND_SET_STATUS_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_FRIEND_SET_STATUS_REQ& from_msg);
    ::uint32_t status_;
    ::uint32_t temporary_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SC2S_FRIEND_SET_PRIVACY_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_FRIEND_SET_PRIVACY_REQ) */ {
 public:
  inline SC2S_FRIEND_SET_PRIVACY_REQ() : SC2S_FRIEND_SET_PRIVACY_REQ(nullptr) {}
  ~SC2S_FRIEND_SET_PRIVACY_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_FRIEND_SET_PRIVACY_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_FRIEND_SET_PRIVACY_REQ(const SC2S_FRIEND_SET_PRIVACY_REQ& from) : SC2S_FRIEND_SET_PRIVACY_REQ(nullptr, from) {}
  inline SC2S_FRIEND_SET_PRIVACY_REQ(SC2S_FRIEND_SET_PRIVACY_REQ&& from) noexcept
      : SC2S_FRIEND_SET_PRIVACY_REQ(nullptr, std::move(from)) {}
  inline SC2S_FRIEND_SET_PRIVACY_REQ& operator=(const SC2S_FRIEND_SET_PRIVACY_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_FRIEND_SET_PRIVACY_REQ& operator=(SC2S_FRIEND_SET_PRIVACY_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_FRIEND_SET_PRIVACY_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_FRIEND_SET_PRIVACY_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_FRIEND_SET_PRIVACY_REQ*>(
        &_SC2S_FRIEND_SET_PRIVACY_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(SC2S_FRIEND_SET_PRIVACY_REQ& a, SC2S_FRIEND_SET_PRIVACY_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_FRIEND_SET_PRIVACY_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_FRIEND_SET_PRIVACY_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_FRIEND_SET_PRIVACY_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_FRIEND_SET_PRIVACY_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_FRIEND_SET_PRIVACY_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_FRIEND_SET_PRIVACY_REQ& from) { SC2S_FRIEND_SET_PRIVACY_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_FRIEND_SET_PRIVACY_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_FRIEND_SET_PRIVACY_REQ"; }

 protected:
  explicit SC2S_FRIEND_SET_PRIVACY_REQ(::google::protobuf::Arena* arena);
  SC2S_FRIEND_SET_PRIVACY_REQ(::google::protobuf::Arena* arena, const SC2S_FRIEND_SET_PRIVACY_REQ& from);
  SC2S_FRIEND_SET_PRIVACY_REQ(::google::protobuf::Arena* arena, SC2S_FRIEND_SET_PRIVACY_REQ&& from) noexcept
      : SC2S_FRIEND_SET_PRIVACY_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPrivacyFieldNumber = 1,
  };
  // uint32 privacy = 1;
  void clear_privacy() ;
  ::uint32_t privacy() const;
  void set_privacy(::uint32_t value);

  private:
  ::uint32_t _internal_privacy() const;
  void _internal_set_privacy(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_FRIEND_SET_PRIVACY_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_FRIEND_SET_PRIVACY_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_FRIEND_SET_PRIVACY_REQ& from_msg);
    ::uint32_t privacy_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SC2S_FRIEND_LIST_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_FRIEND_LIST_REQ) */ {
 public:
  inline SC2S_FRIEND_LIST_REQ() : SC2S_FRIEND_LIST_REQ(nullptr) {}
  ~SC2S_FRIEND_LIST_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_FRIEND_LIST_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_FRIEND_LIST_REQ(const SC2S_FRIEND_LIST_REQ& from) : SC2S_FRIEND_LIST_REQ(nullptr, from) {}
  inline SC2S_FRIEND_LIST_REQ(SC2S_FRIEND_LIST_REQ&& from) noexcept
      : SC2S_FRIEND_LIST_REQ(nullptr, std::move(from)) {}
  inline SC2S_FRIEND_LIST_REQ& operator=(const SC2S_FRIEND_LIST_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_FRIEND_LIST_REQ& operator=(SC2S_FRIEND_LIST_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_FRIEND_LIST_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_FRIEND_LIST_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_FRIEND_LIST_REQ*>(
        &_SC2S_FRIEND_LIST_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(SC2S_FRIEND_LIST_REQ& a, SC2S_FRIEND_LIST_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_FRIEND_LIST_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_FRIEND_LIST_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_FRIEND_LIST_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_FRIEND_LIST_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_FRIEND_LIST_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_FRIEND_LIST_REQ& from) { SC2S_FRIEND_LIST_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_FRIEND_LIST_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_FRIEND_LIST_REQ"; }

 protected:
  explicit SC2S_FRIEND_LIST_REQ(::google::protobuf::Arena* arena);
  SC2S_FRIEND_LIST_REQ(::google::protobuf::Arena* arena, const SC2S_FRIEND_LIST_REQ& from);
  SC2S_FRIEND_LIST_REQ(::google::protobuf::Arena* arena, SC2S_FRIEND_LIST_REQ&& from) noexcept
      : SC2S_FRIEND_LIST_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPageIndexFieldNumber = 1,
    kPageCapacityFieldNumber = 2,
  };
  // uint32 pageIndex = 1;
  void clear_pageindex() ;
  ::uint32_t pageindex() const;
  void set_pageindex(::uint32_t value);

  private:
  ::uint32_t _internal_pageindex() const;
  void _internal_set_pageindex(::uint32_t value);

  public:
  // uint32 pageCapacity = 2;
  void clear_pagecapacity() ;
  ::uint32_t pagecapacity() const;
  void set_pagecapacity(::uint32_t value);

  private:
  ::uint32_t _internal_pagecapacity() const;
  void _internal_set_pagecapacity(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_FRIEND_LIST_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_FRIEND_LIST_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_FRIEND_LIST_REQ& from_msg);
    ::uint32_t pageindex_;
    ::uint32_t pagecapacity_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SC2S_FRIEND_LIST_ALL_REQ final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_FRIEND_LIST_ALL_REQ) */ {
 public:
  inline SC2S_FRIEND_LIST_ALL_REQ() : SC2S_FRIEND_LIST_ALL_REQ(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_FRIEND_LIST_ALL_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_FRIEND_LIST_ALL_REQ(const SC2S_FRIEND_LIST_ALL_REQ& from) : SC2S_FRIEND_LIST_ALL_REQ(nullptr, from) {}
  inline SC2S_FRIEND_LIST_ALL_REQ(SC2S_FRIEND_LIST_ALL_REQ&& from) noexcept
      : SC2S_FRIEND_LIST_ALL_REQ(nullptr, std::move(from)) {}
  inline SC2S_FRIEND_LIST_ALL_REQ& operator=(const SC2S_FRIEND_LIST_ALL_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_FRIEND_LIST_ALL_REQ& operator=(SC2S_FRIEND_LIST_ALL_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_FRIEND_LIST_ALL_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_FRIEND_LIST_ALL_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_FRIEND_LIST_ALL_REQ*>(
        &_SC2S_FRIEND_LIST_ALL_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(SC2S_FRIEND_LIST_ALL_REQ& a, SC2S_FRIEND_LIST_ALL_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_FRIEND_LIST_ALL_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_FRIEND_LIST_ALL_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_FRIEND_LIST_ALL_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SC2S_FRIEND_LIST_ALL_REQ>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SC2S_FRIEND_LIST_ALL_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SC2S_FRIEND_LIST_ALL_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_FRIEND_LIST_ALL_REQ"; }

 protected:
  explicit SC2S_FRIEND_LIST_ALL_REQ(::google::protobuf::Arena* arena);
  SC2S_FRIEND_LIST_ALL_REQ(::google::protobuf::Arena* arena, const SC2S_FRIEND_LIST_ALL_REQ& from);
  SC2S_FRIEND_LIST_ALL_REQ(::google::protobuf::Arena* arena, SC2S_FRIEND_LIST_ALL_REQ&& from) noexcept
      : SC2S_FRIEND_LIST_ALL_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_FRIEND_LIST_ALL_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_FRIEND_LIST_ALL_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_FRIEND_LIST_ALL_REQ& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SC2S_FRIEND_INVITE_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_FRIEND_INVITE_REQ) */ {
 public:
  inline SC2S_FRIEND_INVITE_REQ() : SC2S_FRIEND_INVITE_REQ(nullptr) {}
  ~SC2S_FRIEND_INVITE_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_FRIEND_INVITE_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_FRIEND_INVITE_REQ(const SC2S_FRIEND_INVITE_REQ& from) : SC2S_FRIEND_INVITE_REQ(nullptr, from) {}
  inline SC2S_FRIEND_INVITE_REQ(SC2S_FRIEND_INVITE_REQ&& from) noexcept
      : SC2S_FRIEND_INVITE_REQ(nullptr, std::move(from)) {}
  inline SC2S_FRIEND_INVITE_REQ& operator=(const SC2S_FRIEND_INVITE_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_FRIEND_INVITE_REQ& operator=(SC2S_FRIEND_INVITE_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_FRIEND_INVITE_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_FRIEND_INVITE_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_FRIEND_INVITE_REQ*>(
        &_SC2S_FRIEND_INVITE_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SC2S_FRIEND_INVITE_REQ& a, SC2S_FRIEND_INVITE_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_FRIEND_INVITE_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_FRIEND_INVITE_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_FRIEND_INVITE_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_FRIEND_INVITE_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_FRIEND_INVITE_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_FRIEND_INVITE_REQ& from) { SC2S_FRIEND_INVITE_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_FRIEND_INVITE_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_FRIEND_INVITE_REQ"; }

 protected:
  explicit SC2S_FRIEND_INVITE_REQ(::google::protobuf::Arena* arena);
  SC2S_FRIEND_INVITE_REQ(::google::protobuf::Arena* arena, const SC2S_FRIEND_INVITE_REQ& from);
  SC2S_FRIEND_INVITE_REQ(::google::protobuf::Arena* arena, SC2S_FRIEND_INVITE_REQ&& from) noexcept
      : SC2S_FRIEND_INVITE_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_FRIEND_INVITE_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_FRIEND_INVITE_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_FRIEND_INVITE_REQ& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SC2S_FRIEND_INVITE_DECLINE_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_FRIEND_INVITE_DECLINE_REQ) */ {
 public:
  inline SC2S_FRIEND_INVITE_DECLINE_REQ() : SC2S_FRIEND_INVITE_DECLINE_REQ(nullptr) {}
  ~SC2S_FRIEND_INVITE_DECLINE_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_FRIEND_INVITE_DECLINE_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_FRIEND_INVITE_DECLINE_REQ(const SC2S_FRIEND_INVITE_DECLINE_REQ& from) : SC2S_FRIEND_INVITE_DECLINE_REQ(nullptr, from) {}
  inline SC2S_FRIEND_INVITE_DECLINE_REQ(SC2S_FRIEND_INVITE_DECLINE_REQ&& from) noexcept
      : SC2S_FRIEND_INVITE_DECLINE_REQ(nullptr, std::move(from)) {}
  inline SC2S_FRIEND_INVITE_DECLINE_REQ& operator=(const SC2S_FRIEND_INVITE_DECLINE_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_FRIEND_INVITE_DECLINE_REQ& operator=(SC2S_FRIEND_INVITE_DECLINE_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_FRIEND_INVITE_DECLINE_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_FRIEND_INVITE_DECLINE_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_FRIEND_INVITE_DECLINE_REQ*>(
        &_SC2S_FRIEND_INVITE_DECLINE_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(SC2S_FRIEND_INVITE_DECLINE_REQ& a, SC2S_FRIEND_INVITE_DECLINE_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_FRIEND_INVITE_DECLINE_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_FRIEND_INVITE_DECLINE_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_FRIEND_INVITE_DECLINE_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_FRIEND_INVITE_DECLINE_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_FRIEND_INVITE_DECLINE_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_FRIEND_INVITE_DECLINE_REQ& from) { SC2S_FRIEND_INVITE_DECLINE_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_FRIEND_INVITE_DECLINE_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_FRIEND_INVITE_DECLINE_REQ"; }

 protected:
  explicit SC2S_FRIEND_INVITE_DECLINE_REQ(::google::protobuf::Arena* arena);
  SC2S_FRIEND_INVITE_DECLINE_REQ(::google::protobuf::Arena* arena, const SC2S_FRIEND_INVITE_DECLINE_REQ& from);
  SC2S_FRIEND_INVITE_DECLINE_REQ(::google::protobuf::Arena* arena, SC2S_FRIEND_INVITE_DECLINE_REQ&& from) noexcept
      : SC2S_FRIEND_INVITE_DECLINE_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdsFieldNumber = 1,
  };
  // repeated string accountIds = 1;
  int accountids_size() const;
  private:
  int _internal_accountids_size() const;

  public:
  void clear_accountids() ;
  const std::string& accountids(int index) const;
  std::string* mutable_accountids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountids(int index, Arg_&& value, Args_... args);
  std::string* add_accountids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_accountids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& accountids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_accountids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_accountids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_accountids();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_FRIEND_INVITE_DECLINE_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      59, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_FRIEND_INVITE_DECLINE_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_FRIEND_INVITE_DECLINE_REQ& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> accountids_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SC2S_FRIEND_INVITE_CANCEL_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_FRIEND_INVITE_CANCEL_REQ) */ {
 public:
  inline SC2S_FRIEND_INVITE_CANCEL_REQ() : SC2S_FRIEND_INVITE_CANCEL_REQ(nullptr) {}
  ~SC2S_FRIEND_INVITE_CANCEL_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_FRIEND_INVITE_CANCEL_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_FRIEND_INVITE_CANCEL_REQ(const SC2S_FRIEND_INVITE_CANCEL_REQ& from) : SC2S_FRIEND_INVITE_CANCEL_REQ(nullptr, from) {}
  inline SC2S_FRIEND_INVITE_CANCEL_REQ(SC2S_FRIEND_INVITE_CANCEL_REQ&& from) noexcept
      : SC2S_FRIEND_INVITE_CANCEL_REQ(nullptr, std::move(from)) {}
  inline SC2S_FRIEND_INVITE_CANCEL_REQ& operator=(const SC2S_FRIEND_INVITE_CANCEL_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_FRIEND_INVITE_CANCEL_REQ& operator=(SC2S_FRIEND_INVITE_CANCEL_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_FRIEND_INVITE_CANCEL_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_FRIEND_INVITE_CANCEL_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_FRIEND_INVITE_CANCEL_REQ*>(
        &_SC2S_FRIEND_INVITE_CANCEL_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(SC2S_FRIEND_INVITE_CANCEL_REQ& a, SC2S_FRIEND_INVITE_CANCEL_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_FRIEND_INVITE_CANCEL_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_FRIEND_INVITE_CANCEL_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_FRIEND_INVITE_CANCEL_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_FRIEND_INVITE_CANCEL_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_FRIEND_INVITE_CANCEL_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_FRIEND_INVITE_CANCEL_REQ& from) { SC2S_FRIEND_INVITE_CANCEL_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_FRIEND_INVITE_CANCEL_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_FRIEND_INVITE_CANCEL_REQ"; }

 protected:
  explicit SC2S_FRIEND_INVITE_CANCEL_REQ(::google::protobuf::Arena* arena);
  SC2S_FRIEND_INVITE_CANCEL_REQ(::google::protobuf::Arena* arena, const SC2S_FRIEND_INVITE_CANCEL_REQ& from);
  SC2S_FRIEND_INVITE_CANCEL_REQ(::google::protobuf::Arena* arena, SC2S_FRIEND_INVITE_CANCEL_REQ&& from) noexcept
      : SC2S_FRIEND_INVITE_CANCEL_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdsFieldNumber = 1,
  };
  // repeated string accountIds = 1;
  int accountids_size() const;
  private:
  int _internal_accountids_size() const;

  public:
  void clear_accountids() ;
  const std::string& accountids(int index) const;
  std::string* mutable_accountids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountids(int index, Arg_&& value, Args_... args);
  std::string* add_accountids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_accountids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& accountids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_accountids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_accountids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_accountids();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_FRIEND_INVITE_CANCEL_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      58, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_FRIEND_INVITE_CANCEL_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_FRIEND_INVITE_CANCEL_REQ& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> accountids_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ) */ {
 public:
  inline SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ() : SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ(nullptr) {}
  ~SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ(const SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ& from) : SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ(nullptr, from) {}
  inline SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ(SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ&& from) noexcept
      : SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ(nullptr, std::move(from)) {}
  inline SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ& operator=(const SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ& operator=(SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ*>(
        &_SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ& a, SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ& from) { SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ"; }

 protected:
  explicit SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ(::google::protobuf::Arena* arena);
  SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ(::google::protobuf::Arena* arena, const SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ& from);
  SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ(::google::protobuf::Arena* arena, SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ&& from) noexcept
      : SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountNicknameFieldNumber = 1,
  };
  // string accountNickname = 1;
  void clear_accountnickname() ;
  const std::string& accountnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountnickname(Arg_&& arg, Args_... args);
  std::string* mutable_accountnickname();
  PROTOBUF_NODISCARD std::string* release_accountnickname();
  void set_allocated_accountnickname(std::string* value);

  private:
  const std::string& _internal_accountnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountnickname(
      const std::string& value);
  std::string* _internal_mutable_accountnickname();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      75, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountnickname_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SC2S_FRIEND_INVITE_ACCEPT_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_FRIEND_INVITE_ACCEPT_REQ) */ {
 public:
  inline SC2S_FRIEND_INVITE_ACCEPT_REQ() : SC2S_FRIEND_INVITE_ACCEPT_REQ(nullptr) {}
  ~SC2S_FRIEND_INVITE_ACCEPT_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_FRIEND_INVITE_ACCEPT_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_FRIEND_INVITE_ACCEPT_REQ(const SC2S_FRIEND_INVITE_ACCEPT_REQ& from) : SC2S_FRIEND_INVITE_ACCEPT_REQ(nullptr, from) {}
  inline SC2S_FRIEND_INVITE_ACCEPT_REQ(SC2S_FRIEND_INVITE_ACCEPT_REQ&& from) noexcept
      : SC2S_FRIEND_INVITE_ACCEPT_REQ(nullptr, std::move(from)) {}
  inline SC2S_FRIEND_INVITE_ACCEPT_REQ& operator=(const SC2S_FRIEND_INVITE_ACCEPT_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_FRIEND_INVITE_ACCEPT_REQ& operator=(SC2S_FRIEND_INVITE_ACCEPT_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_FRIEND_INVITE_ACCEPT_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_FRIEND_INVITE_ACCEPT_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_FRIEND_INVITE_ACCEPT_REQ*>(
        &_SC2S_FRIEND_INVITE_ACCEPT_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(SC2S_FRIEND_INVITE_ACCEPT_REQ& a, SC2S_FRIEND_INVITE_ACCEPT_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_FRIEND_INVITE_ACCEPT_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_FRIEND_INVITE_ACCEPT_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_FRIEND_INVITE_ACCEPT_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_FRIEND_INVITE_ACCEPT_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_FRIEND_INVITE_ACCEPT_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_FRIEND_INVITE_ACCEPT_REQ& from) { SC2S_FRIEND_INVITE_ACCEPT_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_FRIEND_INVITE_ACCEPT_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_FRIEND_INVITE_ACCEPT_REQ"; }

 protected:
  explicit SC2S_FRIEND_INVITE_ACCEPT_REQ(::google::protobuf::Arena* arena);
  SC2S_FRIEND_INVITE_ACCEPT_REQ(::google::protobuf::Arena* arena, const SC2S_FRIEND_INVITE_ACCEPT_REQ& from);
  SC2S_FRIEND_INVITE_ACCEPT_REQ(::google::protobuf::Arena* arena, SC2S_FRIEND_INVITE_ACCEPT_REQ&& from) noexcept
      : SC2S_FRIEND_INVITE_ACCEPT_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdsFieldNumber = 1,
  };
  // repeated string accountIds = 1;
  int accountids_size() const;
  private:
  int _internal_accountids_size() const;

  public:
  void clear_accountids() ;
  const std::string& accountids(int index) const;
  std::string* mutable_accountids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountids(int index, Arg_&& value, Args_... args);
  std::string* add_accountids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_accountids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& accountids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_accountids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_accountids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_accountids();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_FRIEND_INVITE_ACCEPT_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      58, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_FRIEND_INVITE_ACCEPT_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_FRIEND_INVITE_ACCEPT_REQ& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> accountids_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SC2S_FRIEND_FIND_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_FRIEND_FIND_REQ) */ {
 public:
  inline SC2S_FRIEND_FIND_REQ() : SC2S_FRIEND_FIND_REQ(nullptr) {}
  ~SC2S_FRIEND_FIND_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_FRIEND_FIND_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_FRIEND_FIND_REQ(const SC2S_FRIEND_FIND_REQ& from) : SC2S_FRIEND_FIND_REQ(nullptr, from) {}
  inline SC2S_FRIEND_FIND_REQ(SC2S_FRIEND_FIND_REQ&& from) noexcept
      : SC2S_FRIEND_FIND_REQ(nullptr, std::move(from)) {}
  inline SC2S_FRIEND_FIND_REQ& operator=(const SC2S_FRIEND_FIND_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_FRIEND_FIND_REQ& operator=(SC2S_FRIEND_FIND_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_FRIEND_FIND_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_FRIEND_FIND_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_FRIEND_FIND_REQ*>(
        &_SC2S_FRIEND_FIND_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(SC2S_FRIEND_FIND_REQ& a, SC2S_FRIEND_FIND_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_FRIEND_FIND_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_FRIEND_FIND_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_FRIEND_FIND_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_FRIEND_FIND_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_FRIEND_FIND_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_FRIEND_FIND_REQ& from) { SC2S_FRIEND_FIND_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_FRIEND_FIND_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_FRIEND_FIND_REQ"; }

 protected:
  explicit SC2S_FRIEND_FIND_REQ(::google::protobuf::Arena* arena);
  SC2S_FRIEND_FIND_REQ(::google::protobuf::Arena* arena, const SC2S_FRIEND_FIND_REQ& from);
  SC2S_FRIEND_FIND_REQ(::google::protobuf::Arena* arena, SC2S_FRIEND_FIND_REQ&& from) noexcept
      : SC2S_FRIEND_FIND_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountNicknameFieldNumber = 1,
  };
  // string accountNickname = 1;
  void clear_accountnickname() ;
  const std::string& accountnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountnickname(Arg_&& arg, Args_... args);
  std::string* mutable_accountnickname();
  PROTOBUF_NODISCARD std::string* release_accountnickname();
  void set_allocated_accountnickname(std::string* value);

  private:
  const std::string& _internal_accountnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountnickname(
      const std::string& value);
  std::string* _internal_mutable_accountnickname();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_FRIEND_FIND_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_FRIEND_FIND_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_FRIEND_FIND_REQ& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountnickname_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SC2S_FRIEND_DEL_FRIEND_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_FRIEND_DEL_FRIEND_REQ) */ {
 public:
  inline SC2S_FRIEND_DEL_FRIEND_REQ() : SC2S_FRIEND_DEL_FRIEND_REQ(nullptr) {}
  ~SC2S_FRIEND_DEL_FRIEND_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_FRIEND_DEL_FRIEND_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_FRIEND_DEL_FRIEND_REQ(const SC2S_FRIEND_DEL_FRIEND_REQ& from) : SC2S_FRIEND_DEL_FRIEND_REQ(nullptr, from) {}
  inline SC2S_FRIEND_DEL_FRIEND_REQ(SC2S_FRIEND_DEL_FRIEND_REQ&& from) noexcept
      : SC2S_FRIEND_DEL_FRIEND_REQ(nullptr, std::move(from)) {}
  inline SC2S_FRIEND_DEL_FRIEND_REQ& operator=(const SC2S_FRIEND_DEL_FRIEND_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_FRIEND_DEL_FRIEND_REQ& operator=(SC2S_FRIEND_DEL_FRIEND_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_FRIEND_DEL_FRIEND_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_FRIEND_DEL_FRIEND_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_FRIEND_DEL_FRIEND_REQ*>(
        &_SC2S_FRIEND_DEL_FRIEND_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(SC2S_FRIEND_DEL_FRIEND_REQ& a, SC2S_FRIEND_DEL_FRIEND_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_FRIEND_DEL_FRIEND_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_FRIEND_DEL_FRIEND_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_FRIEND_DEL_FRIEND_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_FRIEND_DEL_FRIEND_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_FRIEND_DEL_FRIEND_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_FRIEND_DEL_FRIEND_REQ& from) { SC2S_FRIEND_DEL_FRIEND_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_FRIEND_DEL_FRIEND_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_FRIEND_DEL_FRIEND_REQ"; }

 protected:
  explicit SC2S_FRIEND_DEL_FRIEND_REQ(::google::protobuf::Arena* arena);
  SC2S_FRIEND_DEL_FRIEND_REQ(::google::protobuf::Arena* arena, const SC2S_FRIEND_DEL_FRIEND_REQ& from);
  SC2S_FRIEND_DEL_FRIEND_REQ(::google::protobuf::Arena* arena, SC2S_FRIEND_DEL_FRIEND_REQ&& from) noexcept
      : SC2S_FRIEND_DEL_FRIEND_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_FRIEND_DEL_FRIEND_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_FRIEND_DEL_FRIEND_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_FRIEND_DEL_FRIEND_REQ& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ) */ {
 public:
  inline SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ() : SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ(nullptr) {}
  ~SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ(const SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ& from) : SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ(nullptr, from) {}
  inline SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ(SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ&& from) noexcept
      : SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ(nullptr, std::move(from)) {}
  inline SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ& operator=(const SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ& operator=(SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ*>(
        &_SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ& a, SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ& from) { SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ"; }

 protected:
  explicit SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ(::google::protobuf::Arena* arena);
  SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ(::google::protobuf::Arena* arena, const SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ& from);
  SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ(::google::protobuf::Arena* arena, SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ&& from) noexcept
      : SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountNicknameFieldNumber = 1,
  };
  // string accountNickname = 1;
  void clear_accountnickname() ;
  const std::string& accountnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountnickname(Arg_&& arg, Args_... args);
  std::string* mutable_accountnickname();
  PROTOBUF_NODISCARD std::string* release_accountnickname();
  void set_allocated_accountnickname(std::string* value);

  private:
  const std::string& _internal_accountnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountnickname(
      const std::string& value);
  std::string* _internal_mutable_accountnickname();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      72, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountnickname_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ) */ {
 public:
  inline SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ() : SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ(nullptr) {}
  ~SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ(const SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ& from) : SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ(nullptr, from) {}
  inline SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ(SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ&& from) noexcept
      : SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ(nullptr, std::move(from)) {}
  inline SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ& operator=(const SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ& operator=(SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ*>(
        &_SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ& a, SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ& from) { SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ"; }

 protected:
  explicit SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ(::google::protobuf::Arena* arena);
  SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ(::google::protobuf::Arena* arena, const SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ& from);
  SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ(::google::protobuf::Arena* arena, SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ&& from) noexcept
      : SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountNicknameFieldNumber = 1,
  };
  // string accountNickname = 1;
  void clear_accountnickname() ;
  const std::string& accountnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountnickname(Arg_&& arg, Args_... args);
  std::string* mutable_accountnickname();
  PROTOBUF_NODISCARD std::string* release_accountnickname();
  void set_allocated_accountnickname(std::string* value);

  private:
  const std::string& _internal_accountnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountnickname(
      const std::string& value);
  std::string* _internal_mutable_accountnickname();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      71, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountnickname_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SFRIEND_REQUEST_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SFRIEND_REQUEST_INFO) */ {
 public:
  inline SFRIEND_REQUEST_INFO() : SFRIEND_REQUEST_INFO(nullptr) {}
  ~SFRIEND_REQUEST_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SFRIEND_REQUEST_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline SFRIEND_REQUEST_INFO(const SFRIEND_REQUEST_INFO& from) : SFRIEND_REQUEST_INFO(nullptr, from) {}
  inline SFRIEND_REQUEST_INFO(SFRIEND_REQUEST_INFO&& from) noexcept
      : SFRIEND_REQUEST_INFO(nullptr, std::move(from)) {}
  inline SFRIEND_REQUEST_INFO& operator=(const SFRIEND_REQUEST_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SFRIEND_REQUEST_INFO& operator=(SFRIEND_REQUEST_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SFRIEND_REQUEST_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const SFRIEND_REQUEST_INFO* internal_default_instance() {
    return reinterpret_cast<const SFRIEND_REQUEST_INFO*>(
        &_SFRIEND_REQUEST_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(SFRIEND_REQUEST_INFO& a, SFRIEND_REQUEST_INFO& b) { a.Swap(&b); }
  inline void Swap(SFRIEND_REQUEST_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SFRIEND_REQUEST_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SFRIEND_REQUEST_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SFRIEND_REQUEST_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SFRIEND_REQUEST_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SFRIEND_REQUEST_INFO& from) { SFRIEND_REQUEST_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SFRIEND_REQUEST_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SFRIEND_REQUEST_INFO"; }

 protected:
  explicit SFRIEND_REQUEST_INFO(::google::protobuf::Arena* arena);
  SFRIEND_REQUEST_INFO(::google::protobuf::Arena* arena, const SFRIEND_REQUEST_INFO& from);
  SFRIEND_REQUEST_INFO(::google::protobuf::Arena* arena, SFRIEND_REQUEST_INFO&& from) noexcept
      : SFRIEND_REQUEST_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCharacterIdFieldNumber = 2,
    kCharacterClassFieldNumber = 4,
    kAccountInfoFieldNumber = 1,
    kNickNameFieldNumber = 3,
    kGenderFieldNumber = 5,
    kLevelFieldNumber = 6,
    kStatusFieldNumber = 7,
  };
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string characterClass = 4;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // .DC.Packet.SFRIEND_ACCOUNT_INFO accountInfo = 1;
  bool has_accountinfo() const;
  void clear_accountinfo() ;
  const ::DC::Packet::SFRIEND_ACCOUNT_INFO& accountinfo() const;
  PROTOBUF_NODISCARD ::DC::Packet::SFRIEND_ACCOUNT_INFO* release_accountinfo();
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* mutable_accountinfo();
  void set_allocated_accountinfo(::DC::Packet::SFRIEND_ACCOUNT_INFO* value);
  void unsafe_arena_set_allocated_accountinfo(::DC::Packet::SFRIEND_ACCOUNT_INFO* value);
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* unsafe_arena_release_accountinfo();

  private:
  const ::DC::Packet::SFRIEND_ACCOUNT_INFO& _internal_accountinfo() const;
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* _internal_mutable_accountinfo();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // uint32 gender = 5;
  void clear_gender() ;
  ::uint32_t gender() const;
  void set_gender(::uint32_t value);

  private:
  ::uint32_t _internal_gender() const;
  void _internal_set_gender(::uint32_t value);

  public:
  // uint32 level = 6;
  void clear_level() ;
  ::uint32_t level() const;
  void set_level(::uint32_t value);

  private:
  ::uint32_t _internal_level() const;
  void _internal_set_level(::uint32_t value);

  public:
  // uint32 status = 7;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SFRIEND_REQUEST_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 2,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SFRIEND_REQUEST_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SFRIEND_REQUEST_INFO& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::DC::Packet::SFRIEND_ACCOUNT_INFO* accountinfo_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    ::uint32_t gender_;
    ::uint32_t level_;
    ::uint32_t status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SFRIEND_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SFRIEND_INFO) */ {
 public:
  inline SFRIEND_INFO() : SFRIEND_INFO(nullptr) {}
  ~SFRIEND_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SFRIEND_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline SFRIEND_INFO(const SFRIEND_INFO& from) : SFRIEND_INFO(nullptr, from) {}
  inline SFRIEND_INFO(SFRIEND_INFO&& from) noexcept
      : SFRIEND_INFO(nullptr, std::move(from)) {}
  inline SFRIEND_INFO& operator=(const SFRIEND_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SFRIEND_INFO& operator=(SFRIEND_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SFRIEND_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const SFRIEND_INFO* internal_default_instance() {
    return reinterpret_cast<const SFRIEND_INFO*>(
        &_SFRIEND_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(SFRIEND_INFO& a, SFRIEND_INFO& b) { a.Swap(&b); }
  inline void Swap(SFRIEND_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SFRIEND_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SFRIEND_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SFRIEND_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SFRIEND_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SFRIEND_INFO& from) { SFRIEND_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SFRIEND_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SFRIEND_INFO"; }

 protected:
  explicit SFRIEND_INFO(::google::protobuf::Arena* arena);
  SFRIEND_INFO(::google::protobuf::Arena* arena, const SFRIEND_INFO& from);
  SFRIEND_INFO(::google::protobuf::Arena* arena, SFRIEND_INFO&& from) noexcept
      : SFRIEND_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCharacterIdFieldNumber = 2,
    kCharacterClassFieldNumber = 4,
    kAccountInfoFieldNumber = 1,
    kNickNameFieldNumber = 3,
    kGenderFieldNumber = 5,
    kLevelFieldNumber = 6,
    kStatusFieldNumber = 7,
    kLocationStatusFieldNumber = 8,
    kPartyMemeberCountFieldNumber = 9,
    kPartyMaxMemeberCountFieldNumber = 10,
  };
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string characterClass = 4;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // .DC.Packet.SFRIEND_ACCOUNT_INFO accountInfo = 1;
  bool has_accountinfo() const;
  void clear_accountinfo() ;
  const ::DC::Packet::SFRIEND_ACCOUNT_INFO& accountinfo() const;
  PROTOBUF_NODISCARD ::DC::Packet::SFRIEND_ACCOUNT_INFO* release_accountinfo();
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* mutable_accountinfo();
  void set_allocated_accountinfo(::DC::Packet::SFRIEND_ACCOUNT_INFO* value);
  void unsafe_arena_set_allocated_accountinfo(::DC::Packet::SFRIEND_ACCOUNT_INFO* value);
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* unsafe_arena_release_accountinfo();

  private:
  const ::DC::Packet::SFRIEND_ACCOUNT_INFO& _internal_accountinfo() const;
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* _internal_mutable_accountinfo();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // uint32 gender = 5;
  void clear_gender() ;
  ::uint32_t gender() const;
  void set_gender(::uint32_t value);

  private:
  ::uint32_t _internal_gender() const;
  void _internal_set_gender(::uint32_t value);

  public:
  // uint32 level = 6;
  void clear_level() ;
  ::uint32_t level() const;
  void set_level(::uint32_t value);

  private:
  ::uint32_t _internal_level() const;
  void _internal_set_level(::uint32_t value);

  public:
  // uint32 status = 7;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // uint32 locationStatus = 8;
  void clear_locationstatus() ;
  ::uint32_t locationstatus() const;
  void set_locationstatus(::uint32_t value);

  private:
  ::uint32_t _internal_locationstatus() const;
  void _internal_set_locationstatus(::uint32_t value);

  public:
  // uint32 PartyMemeberCount = 9;
  void clear_partymemebercount() ;
  ::uint32_t partymemebercount() const;
  void set_partymemebercount(::uint32_t value);

  private:
  ::uint32_t _internal_partymemebercount() const;
  void _internal_set_partymemebercount(::uint32_t value);

  public:
  // uint32 PartyMaxMemeberCount = 10;
  void clear_partymaxmemebercount() ;
  ::uint32_t partymaxmemebercount() const;
  void set_partymaxmemebercount(::uint32_t value);

  private:
  ::uint32_t _internal_partymaxmemebercount() const;
  void _internal_set_partymaxmemebercount(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SFRIEND_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 2,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SFRIEND_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SFRIEND_INFO& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::DC::Packet::SFRIEND_ACCOUNT_INFO* accountinfo_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    ::uint32_t gender_;
    ::uint32_t level_;
    ::uint32_t status_;
    ::uint32_t locationstatus_;
    ::uint32_t partymemebercount_;
    ::uint32_t partymaxmemebercount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SFRIEND_ACCEPT_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SFRIEND_ACCEPT_INFO) */ {
 public:
  inline SFRIEND_ACCEPT_INFO() : SFRIEND_ACCEPT_INFO(nullptr) {}
  ~SFRIEND_ACCEPT_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SFRIEND_ACCEPT_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline SFRIEND_ACCEPT_INFO(const SFRIEND_ACCEPT_INFO& from) : SFRIEND_ACCEPT_INFO(nullptr, from) {}
  inline SFRIEND_ACCEPT_INFO(SFRIEND_ACCEPT_INFO&& from) noexcept
      : SFRIEND_ACCEPT_INFO(nullptr, std::move(from)) {}
  inline SFRIEND_ACCEPT_INFO& operator=(const SFRIEND_ACCEPT_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SFRIEND_ACCEPT_INFO& operator=(SFRIEND_ACCEPT_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SFRIEND_ACCEPT_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const SFRIEND_ACCEPT_INFO* internal_default_instance() {
    return reinterpret_cast<const SFRIEND_ACCEPT_INFO*>(
        &_SFRIEND_ACCEPT_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(SFRIEND_ACCEPT_INFO& a, SFRIEND_ACCEPT_INFO& b) { a.Swap(&b); }
  inline void Swap(SFRIEND_ACCEPT_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SFRIEND_ACCEPT_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SFRIEND_ACCEPT_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SFRIEND_ACCEPT_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SFRIEND_ACCEPT_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SFRIEND_ACCEPT_INFO& from) { SFRIEND_ACCEPT_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SFRIEND_ACCEPT_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SFRIEND_ACCEPT_INFO"; }

 protected:
  explicit SFRIEND_ACCEPT_INFO(::google::protobuf::Arena* arena);
  SFRIEND_ACCEPT_INFO(::google::protobuf::Arena* arena, const SFRIEND_ACCEPT_INFO& from);
  SFRIEND_ACCEPT_INFO(::google::protobuf::Arena* arena, SFRIEND_ACCEPT_INFO&& from) noexcept
      : SFRIEND_ACCEPT_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCharacterIdFieldNumber = 2,
    kCharacterClassFieldNumber = 4,
    kAccountInfoFieldNumber = 1,
    kNickNameFieldNumber = 3,
    kGenderFieldNumber = 5,
    kLevelFieldNumber = 6,
    kStatusFieldNumber = 7,
  };
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string characterClass = 4;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // .DC.Packet.SFRIEND_ACCOUNT_INFO accountInfo = 1;
  bool has_accountinfo() const;
  void clear_accountinfo() ;
  const ::DC::Packet::SFRIEND_ACCOUNT_INFO& accountinfo() const;
  PROTOBUF_NODISCARD ::DC::Packet::SFRIEND_ACCOUNT_INFO* release_accountinfo();
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* mutable_accountinfo();
  void set_allocated_accountinfo(::DC::Packet::SFRIEND_ACCOUNT_INFO* value);
  void unsafe_arena_set_allocated_accountinfo(::DC::Packet::SFRIEND_ACCOUNT_INFO* value);
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* unsafe_arena_release_accountinfo();

  private:
  const ::DC::Packet::SFRIEND_ACCOUNT_INFO& _internal_accountinfo() const;
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* _internal_mutable_accountinfo();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // uint32 gender = 5;
  void clear_gender() ;
  ::uint32_t gender() const;
  void set_gender(::uint32_t value);

  private:
  ::uint32_t _internal_gender() const;
  void _internal_set_gender(::uint32_t value);

  public:
  // uint32 level = 6;
  void clear_level() ;
  ::uint32_t level() const;
  void set_level(::uint32_t value);

  private:
  ::uint32_t _internal_level() const;
  void _internal_set_level(::uint32_t value);

  public:
  // uint32 status = 7;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SFRIEND_ACCEPT_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 2,
      63, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SFRIEND_ACCEPT_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SFRIEND_ACCEPT_INFO& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::DC::Packet::SFRIEND_ACCOUNT_INFO* accountinfo_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    ::uint32_t gender_;
    ::uint32_t level_;
    ::uint32_t status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_SET_INVITE_INFOS_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_SET_INVITE_INFOS_NOT) */ {
 public:
  inline SS2C_FRIEND_SET_INVITE_INFOS_NOT() : SS2C_FRIEND_SET_INVITE_INFOS_NOT(nullptr) {}
  ~SS2C_FRIEND_SET_INVITE_INFOS_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_SET_INVITE_INFOS_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_SET_INVITE_INFOS_NOT(const SS2C_FRIEND_SET_INVITE_INFOS_NOT& from) : SS2C_FRIEND_SET_INVITE_INFOS_NOT(nullptr, from) {}
  inline SS2C_FRIEND_SET_INVITE_INFOS_NOT(SS2C_FRIEND_SET_INVITE_INFOS_NOT&& from) noexcept
      : SS2C_FRIEND_SET_INVITE_INFOS_NOT(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_SET_INVITE_INFOS_NOT& operator=(const SS2C_FRIEND_SET_INVITE_INFOS_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_SET_INVITE_INFOS_NOT& operator=(SS2C_FRIEND_SET_INVITE_INFOS_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_SET_INVITE_INFOS_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_SET_INVITE_INFOS_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_SET_INVITE_INFOS_NOT*>(
        &_SS2C_FRIEND_SET_INVITE_INFOS_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(SS2C_FRIEND_SET_INVITE_INFOS_NOT& a, SS2C_FRIEND_SET_INVITE_INFOS_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_SET_INVITE_INFOS_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_SET_INVITE_INFOS_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_SET_INVITE_INFOS_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_SET_INVITE_INFOS_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_SET_INVITE_INFOS_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_SET_INVITE_INFOS_NOT& from) { SS2C_FRIEND_SET_INVITE_INFOS_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_SET_INVITE_INFOS_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_SET_INVITE_INFOS_NOT"; }

 protected:
  explicit SS2C_FRIEND_SET_INVITE_INFOS_NOT(::google::protobuf::Arena* arena);
  SS2C_FRIEND_SET_INVITE_INFOS_NOT(::google::protobuf::Arena* arena, const SS2C_FRIEND_SET_INVITE_INFOS_NOT& from);
  SS2C_FRIEND_SET_INVITE_INFOS_NOT(::google::protobuf::Arena* arena, SS2C_FRIEND_SET_INVITE_INFOS_NOT&& from) noexcept
      : SS2C_FRIEND_SET_INVITE_INFOS_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 1,
  };
  // repeated .DC.Packet.SFRIEND_REQUEST_INFO infos = 1;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::DC::Packet::SFRIEND_REQUEST_INFO* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_REQUEST_INFO>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_REQUEST_INFO>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_REQUEST_INFO>* _internal_mutable_infos();
  public:
  const ::DC::Packet::SFRIEND_REQUEST_INFO& infos(int index) const;
  ::DC::Packet::SFRIEND_REQUEST_INFO* add_infos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_REQUEST_INFO>& infos() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_SET_INVITE_INFOS_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_SET_INVITE_INFOS_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_SET_INVITE_INFOS_NOT& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SFRIEND_REQUEST_INFO > infos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_SET_FRIEND_INFOS_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_SET_FRIEND_INFOS_NOT) */ {
 public:
  inline SS2C_FRIEND_SET_FRIEND_INFOS_NOT() : SS2C_FRIEND_SET_FRIEND_INFOS_NOT(nullptr) {}
  ~SS2C_FRIEND_SET_FRIEND_INFOS_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_SET_FRIEND_INFOS_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_SET_FRIEND_INFOS_NOT(const SS2C_FRIEND_SET_FRIEND_INFOS_NOT& from) : SS2C_FRIEND_SET_FRIEND_INFOS_NOT(nullptr, from) {}
  inline SS2C_FRIEND_SET_FRIEND_INFOS_NOT(SS2C_FRIEND_SET_FRIEND_INFOS_NOT&& from) noexcept
      : SS2C_FRIEND_SET_FRIEND_INFOS_NOT(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_SET_FRIEND_INFOS_NOT& operator=(const SS2C_FRIEND_SET_FRIEND_INFOS_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_SET_FRIEND_INFOS_NOT& operator=(SS2C_FRIEND_SET_FRIEND_INFOS_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_SET_FRIEND_INFOS_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_SET_FRIEND_INFOS_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_SET_FRIEND_INFOS_NOT*>(
        &_SS2C_FRIEND_SET_FRIEND_INFOS_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(SS2C_FRIEND_SET_FRIEND_INFOS_NOT& a, SS2C_FRIEND_SET_FRIEND_INFOS_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_SET_FRIEND_INFOS_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_SET_FRIEND_INFOS_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_SET_FRIEND_INFOS_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_SET_FRIEND_INFOS_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_SET_FRIEND_INFOS_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_SET_FRIEND_INFOS_NOT& from) { SS2C_FRIEND_SET_FRIEND_INFOS_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_SET_FRIEND_INFOS_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_SET_FRIEND_INFOS_NOT"; }

 protected:
  explicit SS2C_FRIEND_SET_FRIEND_INFOS_NOT(::google::protobuf::Arena* arena);
  SS2C_FRIEND_SET_FRIEND_INFOS_NOT(::google::protobuf::Arena* arena, const SS2C_FRIEND_SET_FRIEND_INFOS_NOT& from);
  SS2C_FRIEND_SET_FRIEND_INFOS_NOT(::google::protobuf::Arena* arena, SS2C_FRIEND_SET_FRIEND_INFOS_NOT&& from) noexcept
      : SS2C_FRIEND_SET_FRIEND_INFOS_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 1,
  };
  // repeated .DC.Packet.SFRIEND_INFO infos = 1;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::DC::Packet::SFRIEND_INFO* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_INFO>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_INFO>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_INFO>* _internal_mutable_infos();
  public:
  const ::DC::Packet::SFRIEND_INFO& infos(int index) const;
  ::DC::Packet::SFRIEND_INFO* add_infos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_INFO>& infos() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_SET_FRIEND_INFOS_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_SET_FRIEND_INFOS_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_SET_FRIEND_INFOS_NOT& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SFRIEND_INFO > infos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_SET_ACCEPT_INFOS_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_SET_ACCEPT_INFOS_NOT) */ {
 public:
  inline SS2C_FRIEND_SET_ACCEPT_INFOS_NOT() : SS2C_FRIEND_SET_ACCEPT_INFOS_NOT(nullptr) {}
  ~SS2C_FRIEND_SET_ACCEPT_INFOS_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_SET_ACCEPT_INFOS_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_SET_ACCEPT_INFOS_NOT(const SS2C_FRIEND_SET_ACCEPT_INFOS_NOT& from) : SS2C_FRIEND_SET_ACCEPT_INFOS_NOT(nullptr, from) {}
  inline SS2C_FRIEND_SET_ACCEPT_INFOS_NOT(SS2C_FRIEND_SET_ACCEPT_INFOS_NOT&& from) noexcept
      : SS2C_FRIEND_SET_ACCEPT_INFOS_NOT(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_SET_ACCEPT_INFOS_NOT& operator=(const SS2C_FRIEND_SET_ACCEPT_INFOS_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_SET_ACCEPT_INFOS_NOT& operator=(SS2C_FRIEND_SET_ACCEPT_INFOS_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_SET_ACCEPT_INFOS_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_SET_ACCEPT_INFOS_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_SET_ACCEPT_INFOS_NOT*>(
        &_SS2C_FRIEND_SET_ACCEPT_INFOS_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(SS2C_FRIEND_SET_ACCEPT_INFOS_NOT& a, SS2C_FRIEND_SET_ACCEPT_INFOS_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_SET_ACCEPT_INFOS_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_SET_ACCEPT_INFOS_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_SET_ACCEPT_INFOS_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_SET_ACCEPT_INFOS_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_SET_ACCEPT_INFOS_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_SET_ACCEPT_INFOS_NOT& from) { SS2C_FRIEND_SET_ACCEPT_INFOS_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_SET_ACCEPT_INFOS_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_SET_ACCEPT_INFOS_NOT"; }

 protected:
  explicit SS2C_FRIEND_SET_ACCEPT_INFOS_NOT(::google::protobuf::Arena* arena);
  SS2C_FRIEND_SET_ACCEPT_INFOS_NOT(::google::protobuf::Arena* arena, const SS2C_FRIEND_SET_ACCEPT_INFOS_NOT& from);
  SS2C_FRIEND_SET_ACCEPT_INFOS_NOT(::google::protobuf::Arena* arena, SS2C_FRIEND_SET_ACCEPT_INFOS_NOT&& from) noexcept
      : SS2C_FRIEND_SET_ACCEPT_INFOS_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 1,
  };
  // repeated .DC.Packet.SFRIEND_ACCEPT_INFO infos = 1;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::DC::Packet::SFRIEND_ACCEPT_INFO* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_ACCEPT_INFO>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_ACCEPT_INFO>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_ACCEPT_INFO>* _internal_mutable_infos();
  public:
  const ::DC::Packet::SFRIEND_ACCEPT_INFO& infos(int index) const;
  ::DC::Packet::SFRIEND_ACCEPT_INFO* add_infos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_ACCEPT_INFO>& infos() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_SET_ACCEPT_INFOS_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_SET_ACCEPT_INFOS_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_SET_ACCEPT_INFOS_NOT& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SFRIEND_ACCEPT_INFO > infos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_LIST_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_LIST_RES) */ {
 public:
  inline SS2C_FRIEND_LIST_RES() : SS2C_FRIEND_LIST_RES(nullptr) {}
  ~SS2C_FRIEND_LIST_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_LIST_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_LIST_RES(const SS2C_FRIEND_LIST_RES& from) : SS2C_FRIEND_LIST_RES(nullptr, from) {}
  inline SS2C_FRIEND_LIST_RES(SS2C_FRIEND_LIST_RES&& from) noexcept
      : SS2C_FRIEND_LIST_RES(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_LIST_RES& operator=(const SS2C_FRIEND_LIST_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_LIST_RES& operator=(SS2C_FRIEND_LIST_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_LIST_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_LIST_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_LIST_RES*>(
        &_SS2C_FRIEND_LIST_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(SS2C_FRIEND_LIST_RES& a, SS2C_FRIEND_LIST_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_LIST_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_LIST_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_LIST_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_LIST_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_LIST_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_LIST_RES& from) { SS2C_FRIEND_LIST_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_LIST_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_LIST_RES"; }

 protected:
  explicit SS2C_FRIEND_LIST_RES(::google::protobuf::Arena* arena);
  SS2C_FRIEND_LIST_RES(::google::protobuf::Arena* arena, const SS2C_FRIEND_LIST_RES& from);
  SS2C_FRIEND_LIST_RES(::google::protobuf::Arena* arena, SS2C_FRIEND_LIST_RES&& from) noexcept
      : SS2C_FRIEND_LIST_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFriendInfoListFieldNumber = 1,
    kPageIndexFieldNumber = 2,
    kTotalFriendCountFieldNumber = 3,
    kLobbyLocateCountFieldNumber = 4,
    kDungeonLocateCountFieldNumber = 5,
  };
  // repeated .DC.Packet.SCHARACTER_FRIEND_INFO friendInfoList = 1;
  int friendinfolist_size() const;
  private:
  int _internal_friendinfolist_size() const;

  public:
  void clear_friendinfolist() ;
  ::DC::Packet::SCHARACTER_FRIEND_INFO* mutable_friendinfolist(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_FRIEND_INFO>* mutable_friendinfolist();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_FRIEND_INFO>& _internal_friendinfolist() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_FRIEND_INFO>* _internal_mutable_friendinfolist();
  public:
  const ::DC::Packet::SCHARACTER_FRIEND_INFO& friendinfolist(int index) const;
  ::DC::Packet::SCHARACTER_FRIEND_INFO* add_friendinfolist();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_FRIEND_INFO>& friendinfolist() const;
  // uint32 pageIndex = 2;
  void clear_pageindex() ;
  ::uint32_t pageindex() const;
  void set_pageindex(::uint32_t value);

  private:
  ::uint32_t _internal_pageindex() const;
  void _internal_set_pageindex(::uint32_t value);

  public:
  // uint32 totalFriendCount = 3;
  void clear_totalfriendcount() ;
  ::uint32_t totalfriendcount() const;
  void set_totalfriendcount(::uint32_t value);

  private:
  ::uint32_t _internal_totalfriendcount() const;
  void _internal_set_totalfriendcount(::uint32_t value);

  public:
  // uint32 lobbyLocateCount = 4;
  void clear_lobbylocatecount() ;
  ::uint32_t lobbylocatecount() const;
  void set_lobbylocatecount(::uint32_t value);

  private:
  ::uint32_t _internal_lobbylocatecount() const;
  void _internal_set_lobbylocatecount(::uint32_t value);

  public:
  // uint32 dungeonLocateCount = 5;
  void clear_dungeonlocatecount() ;
  ::uint32_t dungeonlocatecount() const;
  void set_dungeonlocatecount(::uint32_t value);

  private:
  ::uint32_t _internal_dungeonlocatecount() const;
  void _internal_set_dungeonlocatecount(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_LIST_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_LIST_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_LIST_RES& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SCHARACTER_FRIEND_INFO > friendinfolist_;
    ::uint32_t pageindex_;
    ::uint32_t totalfriendcount_;
    ::uint32_t lobbylocatecount_;
    ::uint32_t dungeonlocatecount_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_LIST_ALL_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_LIST_ALL_RES) */ {
 public:
  inline SS2C_FRIEND_LIST_ALL_RES() : SS2C_FRIEND_LIST_ALL_RES(nullptr) {}
  ~SS2C_FRIEND_LIST_ALL_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_LIST_ALL_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_LIST_ALL_RES(const SS2C_FRIEND_LIST_ALL_RES& from) : SS2C_FRIEND_LIST_ALL_RES(nullptr, from) {}
  inline SS2C_FRIEND_LIST_ALL_RES(SS2C_FRIEND_LIST_ALL_RES&& from) noexcept
      : SS2C_FRIEND_LIST_ALL_RES(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_LIST_ALL_RES& operator=(const SS2C_FRIEND_LIST_ALL_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_LIST_ALL_RES& operator=(SS2C_FRIEND_LIST_ALL_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_LIST_ALL_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_LIST_ALL_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_LIST_ALL_RES*>(
        &_SS2C_FRIEND_LIST_ALL_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(SS2C_FRIEND_LIST_ALL_RES& a, SS2C_FRIEND_LIST_ALL_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_LIST_ALL_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_LIST_ALL_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_LIST_ALL_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_LIST_ALL_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_LIST_ALL_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_LIST_ALL_RES& from) { SS2C_FRIEND_LIST_ALL_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_LIST_ALL_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_LIST_ALL_RES"; }

 protected:
  explicit SS2C_FRIEND_LIST_ALL_RES(::google::protobuf::Arena* arena);
  SS2C_FRIEND_LIST_ALL_RES(::google::protobuf::Arena* arena, const SS2C_FRIEND_LIST_ALL_RES& from);
  SS2C_FRIEND_LIST_ALL_RES(::google::protobuf::Arena* arena, SS2C_FRIEND_LIST_ALL_RES&& from) noexcept
      : SS2C_FRIEND_LIST_ALL_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFriendInfoListFieldNumber = 1,
    kLoopFlagFieldNumber = 2,
    kTotalUserCountFieldNumber = 3,
    kLobbyLocateCountFieldNumber = 4,
    kDungeonLocateCountFieldNumber = 5,
  };
  // repeated .DC.Packet.SCHARACTER_FRIEND_INFO friendInfoList = 1;
  int friendinfolist_size() const;
  private:
  int _internal_friendinfolist_size() const;

  public:
  void clear_friendinfolist() ;
  ::DC::Packet::SCHARACTER_FRIEND_INFO* mutable_friendinfolist(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_FRIEND_INFO>* mutable_friendinfolist();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_FRIEND_INFO>& _internal_friendinfolist() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_FRIEND_INFO>* _internal_mutable_friendinfolist();
  public:
  const ::DC::Packet::SCHARACTER_FRIEND_INFO& friendinfolist(int index) const;
  ::DC::Packet::SCHARACTER_FRIEND_INFO* add_friendinfolist();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_FRIEND_INFO>& friendinfolist() const;
  // uint32 loopFlag = 2;
  void clear_loopflag() ;
  ::uint32_t loopflag() const;
  void set_loopflag(::uint32_t value);

  private:
  ::uint32_t _internal_loopflag() const;
  void _internal_set_loopflag(::uint32_t value);

  public:
  // uint32 totalUserCount = 3;
  void clear_totalusercount() ;
  ::uint32_t totalusercount() const;
  void set_totalusercount(::uint32_t value);

  private:
  ::uint32_t _internal_totalusercount() const;
  void _internal_set_totalusercount(::uint32_t value);

  public:
  // uint32 lobbyLocateCount = 4;
  void clear_lobbylocatecount() ;
  ::uint32_t lobbylocatecount() const;
  void set_lobbylocatecount(::uint32_t value);

  private:
  ::uint32_t _internal_lobbylocatecount() const;
  void _internal_set_lobbylocatecount(::uint32_t value);

  public:
  // uint32 dungeonLocateCount = 5;
  void clear_dungeonlocatecount() ;
  ::uint32_t dungeonlocatecount() const;
  void set_dungeonlocatecount(::uint32_t value);

  private:
  ::uint32_t _internal_dungeonlocatecount() const;
  void _internal_set_dungeonlocatecount(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_LIST_ALL_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_LIST_ALL_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_LIST_ALL_RES& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SCHARACTER_FRIEND_INFO > friendinfolist_;
    ::uint32_t loopflag_;
    ::uint32_t totalusercount_;
    ::uint32_t lobbylocatecount_;
    ::uint32_t dungeonlocatecount_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};
// -------------------------------------------------------------------

class SS2C_FRIEND_FIND_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_FRIEND_FIND_RES) */ {
 public:
  inline SS2C_FRIEND_FIND_RES() : SS2C_FRIEND_FIND_RES(nullptr) {}
  ~SS2C_FRIEND_FIND_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_FRIEND_FIND_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_FRIEND_FIND_RES(const SS2C_FRIEND_FIND_RES& from) : SS2C_FRIEND_FIND_RES(nullptr, from) {}
  inline SS2C_FRIEND_FIND_RES(SS2C_FRIEND_FIND_RES&& from) noexcept
      : SS2C_FRIEND_FIND_RES(nullptr, std::move(from)) {}
  inline SS2C_FRIEND_FIND_RES& operator=(const SS2C_FRIEND_FIND_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_FRIEND_FIND_RES& operator=(SS2C_FRIEND_FIND_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_FRIEND_FIND_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_FRIEND_FIND_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_FRIEND_FIND_RES*>(
        &_SS2C_FRIEND_FIND_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(SS2C_FRIEND_FIND_RES& a, SS2C_FRIEND_FIND_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_FRIEND_FIND_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_FRIEND_FIND_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_FRIEND_FIND_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_FRIEND_FIND_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_FRIEND_FIND_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_FRIEND_FIND_RES& from) { SS2C_FRIEND_FIND_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_FRIEND_FIND_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_FRIEND_FIND_RES"; }

 protected:
  explicit SS2C_FRIEND_FIND_RES(::google::protobuf::Arena* arena);
  SS2C_FRIEND_FIND_RES(::google::protobuf::Arena* arena, const SS2C_FRIEND_FIND_RES& from);
  SS2C_FRIEND_FIND_RES(::google::protobuf::Arena* arena, SS2C_FRIEND_FIND_RES&& from) noexcept
      : SS2C_FRIEND_FIND_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFriendInfoFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // .DC.Packet.SCHARACTER_FRIEND_INFO friendInfo = 2;
  bool has_friendinfo() const;
  void clear_friendinfo() ;
  const ::DC::Packet::SCHARACTER_FRIEND_INFO& friendinfo() const;
  PROTOBUF_NODISCARD ::DC::Packet::SCHARACTER_FRIEND_INFO* release_friendinfo();
  ::DC::Packet::SCHARACTER_FRIEND_INFO* mutable_friendinfo();
  void set_allocated_friendinfo(::DC::Packet::SCHARACTER_FRIEND_INFO* value);
  void unsafe_arena_set_allocated_friendinfo(::DC::Packet::SCHARACTER_FRIEND_INFO* value);
  ::DC::Packet::SCHARACTER_FRIEND_INFO* unsafe_arena_release_friendinfo();

  private:
  const ::DC::Packet::SCHARACTER_FRIEND_INFO& _internal_friendinfo() const;
  ::DC::Packet::SCHARACTER_FRIEND_INFO* _internal_mutable_friendinfo();

  public:
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_FRIEND_FIND_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_FRIEND_FIND_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_FRIEND_FIND_RES& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::SCHARACTER_FRIEND_INFO* friendinfo_;
    ::uint32_t result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Friend_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ

// string accountNickname = 1;
inline void SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ::clear_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.ClearToEmpty();
}
inline const std::string& SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ::accountnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ.accountNickname)
  return _internal_accountnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ::set_accountnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ.accountNickname)
}
inline std::string* SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ::mutable_accountnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ.accountNickname)
  return _s;
}
inline const std::string& SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ::_internal_accountnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountnickname_.Get();
}
inline void SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ::_internal_set_accountnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(value, GetArena());
}
inline std::string* SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ::_internal_mutable_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountnickname_.Mutable( GetArena());
}
inline std::string* SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ::release_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ.accountNickname)
  return _impl_.accountnickname_.Release();
}
inline void SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ::set_allocated_accountnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountnickname_.IsDefault()) {
          _impl_.accountnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ.accountNickname)
}

// -------------------------------------------------------------------

// SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES

// uint32 result = 1;
inline void SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES.result)
  return _internal_result();
}
inline void SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES.result)
}
inline ::uint32_t SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ

// string accountNickname = 1;
inline void SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ::clear_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.ClearToEmpty();
}
inline const std::string& SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ::accountnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ.accountNickname)
  return _internal_accountnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ::set_accountnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ.accountNickname)
}
inline std::string* SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ::mutable_accountnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ.accountNickname)
  return _s;
}
inline const std::string& SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ::_internal_accountnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountnickname_.Get();
}
inline void SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ::_internal_set_accountnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(value, GetArena());
}
inline std::string* SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ::_internal_mutable_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountnickname_.Mutable( GetArena());
}
inline std::string* SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ::release_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ.accountNickname)
  return _impl_.accountnickname_.Release();
}
inline void SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ::set_allocated_accountnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountnickname_.IsDefault()) {
          _impl_.accountnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ.accountNickname)
}

// -------------------------------------------------------------------

// SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES

// uint32 result = 1;
inline void SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES.result)
  return _internal_result();
}
inline void SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES.result)
}
inline ::uint32_t SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// string accountNickname = 2;
inline void SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES::clear_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.ClearToEmpty();
}
inline const std::string& SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES::accountnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES.accountNickname)
  return _internal_accountnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES::set_accountnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES.accountNickname)
}
inline std::string* SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES::mutable_accountnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES.accountNickname)
  return _s;
}
inline const std::string& SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES::_internal_accountnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountnickname_.Get();
}
inline void SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES::_internal_set_accountnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(value, GetArena());
}
inline std::string* SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES::_internal_mutable_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountnickname_.Mutable( GetArena());
}
inline std::string* SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES::release_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES.accountNickname)
  return _impl_.accountnickname_.Release();
}
inline void SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES::set_allocated_accountnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountnickname_.IsDefault()) {
          _impl_.accountnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES.accountNickname)
}

// -------------------------------------------------------------------

// SC2S_FRIEND_SET_STATUS_REQ

// uint32 status = 1;
inline void SC2S_FRIEND_SET_STATUS_REQ::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0u;
}
inline ::uint32_t SC2S_FRIEND_SET_STATUS_REQ::status() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_FRIEND_SET_STATUS_REQ.status)
  return _internal_status();
}
inline void SC2S_FRIEND_SET_STATUS_REQ::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_FRIEND_SET_STATUS_REQ.status)
}
inline ::uint32_t SC2S_FRIEND_SET_STATUS_REQ::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void SC2S_FRIEND_SET_STATUS_REQ::_internal_set_status(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// uint32 temporary = 2;
inline void SC2S_FRIEND_SET_STATUS_REQ::clear_temporary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.temporary_ = 0u;
}
inline ::uint32_t SC2S_FRIEND_SET_STATUS_REQ::temporary() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_FRIEND_SET_STATUS_REQ.temporary)
  return _internal_temporary();
}
inline void SC2S_FRIEND_SET_STATUS_REQ::set_temporary(::uint32_t value) {
  _internal_set_temporary(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_FRIEND_SET_STATUS_REQ.temporary)
}
inline ::uint32_t SC2S_FRIEND_SET_STATUS_REQ::_internal_temporary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.temporary_;
}
inline void SC2S_FRIEND_SET_STATUS_REQ::_internal_set_temporary(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.temporary_ = value;
}

// -------------------------------------------------------------------

// SS2C_FRIEND_SET_STATUS_RES

// uint32 result = 1;
inline void SS2C_FRIEND_SET_STATUS_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_SET_STATUS_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_SET_STATUS_RES.result)
  return _internal_result();
}
inline void SS2C_FRIEND_SET_STATUS_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_SET_STATUS_RES.result)
}
inline ::uint32_t SS2C_FRIEND_SET_STATUS_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_FRIEND_SET_STATUS_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// uint32 status = 2;
inline void SS2C_FRIEND_SET_STATUS_RES::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_SET_STATUS_RES::status() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_SET_STATUS_RES.status)
  return _internal_status();
}
inline void SS2C_FRIEND_SET_STATUS_RES::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_SET_STATUS_RES.status)
}
inline ::uint32_t SS2C_FRIEND_SET_STATUS_RES::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void SS2C_FRIEND_SET_STATUS_RES::_internal_set_status(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// SC2S_FRIEND_SET_PRIVACY_REQ

// uint32 privacy = 1;
inline void SC2S_FRIEND_SET_PRIVACY_REQ::clear_privacy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privacy_ = 0u;
}
inline ::uint32_t SC2S_FRIEND_SET_PRIVACY_REQ::privacy() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_FRIEND_SET_PRIVACY_REQ.privacy)
  return _internal_privacy();
}
inline void SC2S_FRIEND_SET_PRIVACY_REQ::set_privacy(::uint32_t value) {
  _internal_set_privacy(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_FRIEND_SET_PRIVACY_REQ.privacy)
}
inline ::uint32_t SC2S_FRIEND_SET_PRIVACY_REQ::_internal_privacy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.privacy_;
}
inline void SC2S_FRIEND_SET_PRIVACY_REQ::_internal_set_privacy(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privacy_ = value;
}

// -------------------------------------------------------------------

// SS2C_FRIEND_SET_PRIVACY_RES

// uint32 result = 1;
inline void SS2C_FRIEND_SET_PRIVACY_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_SET_PRIVACY_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_SET_PRIVACY_RES.result)
  return _internal_result();
}
inline void SS2C_FRIEND_SET_PRIVACY_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_SET_PRIVACY_RES.result)
}
inline ::uint32_t SS2C_FRIEND_SET_PRIVACY_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_FRIEND_SET_PRIVACY_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// uint32 privacy = 2;
inline void SS2C_FRIEND_SET_PRIVACY_RES::clear_privacy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privacy_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_SET_PRIVACY_RES::privacy() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_SET_PRIVACY_RES.privacy)
  return _internal_privacy();
}
inline void SS2C_FRIEND_SET_PRIVACY_RES::set_privacy(::uint32_t value) {
  _internal_set_privacy(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_SET_PRIVACY_RES.privacy)
}
inline ::uint32_t SS2C_FRIEND_SET_PRIVACY_RES::_internal_privacy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.privacy_;
}
inline void SS2C_FRIEND_SET_PRIVACY_RES::_internal_set_privacy(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privacy_ = value;
}

// -------------------------------------------------------------------

// SC2S_FRIEND_INVITE_REQ

// string accountId = 1;
inline void SC2S_FRIEND_INVITE_REQ::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SC2S_FRIEND_INVITE_REQ::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_FRIEND_INVITE_REQ.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_FRIEND_INVITE_REQ::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_FRIEND_INVITE_REQ.accountId)
}
inline std::string* SC2S_FRIEND_INVITE_REQ::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_FRIEND_INVITE_REQ.accountId)
  return _s;
}
inline const std::string& SC2S_FRIEND_INVITE_REQ::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SC2S_FRIEND_INVITE_REQ::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SC2S_FRIEND_INVITE_REQ::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SC2S_FRIEND_INVITE_REQ::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_FRIEND_INVITE_REQ.accountId)
  return _impl_.accountid_.Release();
}
inline void SC2S_FRIEND_INVITE_REQ::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_FRIEND_INVITE_REQ.accountId)
}

// -------------------------------------------------------------------

// SS2C_FRIEND_INVITE_RES

// uint32 result = 1;
inline void SS2C_FRIEND_INVITE_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_INVITE_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_INVITE_RES.result)
  return _internal_result();
}
inline void SS2C_FRIEND_INVITE_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_INVITE_RES.result)
}
inline ::uint32_t SS2C_FRIEND_INVITE_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_FRIEND_INVITE_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ

// string accountNickname = 1;
inline void SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ::clear_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.ClearToEmpty();
}
inline const std::string& SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ::accountnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ.accountNickname)
  return _internal_accountnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ::set_accountnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ.accountNickname)
}
inline std::string* SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ::mutable_accountnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ.accountNickname)
  return _s;
}
inline const std::string& SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ::_internal_accountnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountnickname_.Get();
}
inline void SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ::_internal_set_accountnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(value, GetArena());
}
inline std::string* SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ::_internal_mutable_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountnickname_.Mutable( GetArena());
}
inline std::string* SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ::release_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ.accountNickname)
  return _impl_.accountnickname_.Release();
}
inline void SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ::set_allocated_accountnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountnickname_.IsDefault()) {
          _impl_.accountnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ.accountNickname)
}

// -------------------------------------------------------------------

// SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES

// uint32 result = 1;
inline void SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES.result)
  return _internal_result();
}
inline void SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES.result)
}
inline ::uint32_t SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SC2S_FRIEND_INVITE_ACCEPT_REQ

// repeated string accountIds = 1;
inline int SC2S_FRIEND_INVITE_ACCEPT_REQ::_internal_accountids_size() const {
  return _internal_accountids().size();
}
inline int SC2S_FRIEND_INVITE_ACCEPT_REQ::accountids_size() const {
  return _internal_accountids_size();
}
inline void SC2S_FRIEND_INVITE_ACCEPT_REQ::clear_accountids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountids_.Clear();
}
inline std::string* SC2S_FRIEND_INVITE_ACCEPT_REQ::add_accountids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_accountids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.SC2S_FRIEND_INVITE_ACCEPT_REQ.accountIds)
  return _s;
}
inline const std::string& SC2S_FRIEND_INVITE_ACCEPT_REQ::accountids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_FRIEND_INVITE_ACCEPT_REQ.accountIds)
  return _internal_accountids().Get(index);
}
inline std::string* SC2S_FRIEND_INVITE_ACCEPT_REQ::mutable_accountids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_FRIEND_INVITE_ACCEPT_REQ.accountIds)
  return _internal_mutable_accountids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SC2S_FRIEND_INVITE_ACCEPT_REQ::set_accountids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_accountids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_FRIEND_INVITE_ACCEPT_REQ.accountIds)
}
template <typename Arg_, typename... Args_>
inline void SC2S_FRIEND_INVITE_ACCEPT_REQ::add_accountids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_accountids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.SC2S_FRIEND_INVITE_ACCEPT_REQ.accountIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SC2S_FRIEND_INVITE_ACCEPT_REQ::accountids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SC2S_FRIEND_INVITE_ACCEPT_REQ.accountIds)
  return _internal_accountids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SC2S_FRIEND_INVITE_ACCEPT_REQ::mutable_accountids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SC2S_FRIEND_INVITE_ACCEPT_REQ.accountIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_accountids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SC2S_FRIEND_INVITE_ACCEPT_REQ::_internal_accountids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SC2S_FRIEND_INVITE_ACCEPT_REQ::_internal_mutable_accountids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.accountids_;
}

// -------------------------------------------------------------------

// SS2C_FRIEND_INVITE_ACCEPT_RES

// uint32 result = 1;
inline void SS2C_FRIEND_INVITE_ACCEPT_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_INVITE_ACCEPT_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_INVITE_ACCEPT_RES.result)
  return _internal_result();
}
inline void SS2C_FRIEND_INVITE_ACCEPT_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_INVITE_ACCEPT_RES.result)
}
inline ::uint32_t SS2C_FRIEND_INVITE_ACCEPT_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_FRIEND_INVITE_ACCEPT_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SC2S_FRIEND_INVITE_DECLINE_REQ

// repeated string accountIds = 1;
inline int SC2S_FRIEND_INVITE_DECLINE_REQ::_internal_accountids_size() const {
  return _internal_accountids().size();
}
inline int SC2S_FRIEND_INVITE_DECLINE_REQ::accountids_size() const {
  return _internal_accountids_size();
}
inline void SC2S_FRIEND_INVITE_DECLINE_REQ::clear_accountids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountids_.Clear();
}
inline std::string* SC2S_FRIEND_INVITE_DECLINE_REQ::add_accountids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_accountids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.SC2S_FRIEND_INVITE_DECLINE_REQ.accountIds)
  return _s;
}
inline const std::string& SC2S_FRIEND_INVITE_DECLINE_REQ::accountids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_FRIEND_INVITE_DECLINE_REQ.accountIds)
  return _internal_accountids().Get(index);
}
inline std::string* SC2S_FRIEND_INVITE_DECLINE_REQ::mutable_accountids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_FRIEND_INVITE_DECLINE_REQ.accountIds)
  return _internal_mutable_accountids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SC2S_FRIEND_INVITE_DECLINE_REQ::set_accountids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_accountids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_FRIEND_INVITE_DECLINE_REQ.accountIds)
}
template <typename Arg_, typename... Args_>
inline void SC2S_FRIEND_INVITE_DECLINE_REQ::add_accountids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_accountids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.SC2S_FRIEND_INVITE_DECLINE_REQ.accountIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SC2S_FRIEND_INVITE_DECLINE_REQ::accountids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SC2S_FRIEND_INVITE_DECLINE_REQ.accountIds)
  return _internal_accountids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SC2S_FRIEND_INVITE_DECLINE_REQ::mutable_accountids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SC2S_FRIEND_INVITE_DECLINE_REQ.accountIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_accountids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SC2S_FRIEND_INVITE_DECLINE_REQ::_internal_accountids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SC2S_FRIEND_INVITE_DECLINE_REQ::_internal_mutable_accountids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.accountids_;
}

// -------------------------------------------------------------------

// SS2C_FRIEND_INVITE_DECLINE_RES

// uint32 result = 1;
inline void SS2C_FRIEND_INVITE_DECLINE_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_INVITE_DECLINE_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_INVITE_DECLINE_RES.result)
  return _internal_result();
}
inline void SS2C_FRIEND_INVITE_DECLINE_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_INVITE_DECLINE_RES.result)
}
inline ::uint32_t SS2C_FRIEND_INVITE_DECLINE_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_FRIEND_INVITE_DECLINE_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SC2S_FRIEND_INVITE_CANCEL_REQ

// repeated string accountIds = 1;
inline int SC2S_FRIEND_INVITE_CANCEL_REQ::_internal_accountids_size() const {
  return _internal_accountids().size();
}
inline int SC2S_FRIEND_INVITE_CANCEL_REQ::accountids_size() const {
  return _internal_accountids_size();
}
inline void SC2S_FRIEND_INVITE_CANCEL_REQ::clear_accountids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountids_.Clear();
}
inline std::string* SC2S_FRIEND_INVITE_CANCEL_REQ::add_accountids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_accountids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.SC2S_FRIEND_INVITE_CANCEL_REQ.accountIds)
  return _s;
}
inline const std::string& SC2S_FRIEND_INVITE_CANCEL_REQ::accountids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_FRIEND_INVITE_CANCEL_REQ.accountIds)
  return _internal_accountids().Get(index);
}
inline std::string* SC2S_FRIEND_INVITE_CANCEL_REQ::mutable_accountids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_FRIEND_INVITE_CANCEL_REQ.accountIds)
  return _internal_mutable_accountids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SC2S_FRIEND_INVITE_CANCEL_REQ::set_accountids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_accountids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_FRIEND_INVITE_CANCEL_REQ.accountIds)
}
template <typename Arg_, typename... Args_>
inline void SC2S_FRIEND_INVITE_CANCEL_REQ::add_accountids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_accountids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.SC2S_FRIEND_INVITE_CANCEL_REQ.accountIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SC2S_FRIEND_INVITE_CANCEL_REQ::accountids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SC2S_FRIEND_INVITE_CANCEL_REQ.accountIds)
  return _internal_accountids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SC2S_FRIEND_INVITE_CANCEL_REQ::mutable_accountids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SC2S_FRIEND_INVITE_CANCEL_REQ.accountIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_accountids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SC2S_FRIEND_INVITE_CANCEL_REQ::_internal_accountids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SC2S_FRIEND_INVITE_CANCEL_REQ::_internal_mutable_accountids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.accountids_;
}

// -------------------------------------------------------------------

// SS2C_FRIEND_INVITE_CANCEL_RES

// uint32 result = 1;
inline void SS2C_FRIEND_INVITE_CANCEL_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_INVITE_CANCEL_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_INVITE_CANCEL_RES.result)
  return _internal_result();
}
inline void SS2C_FRIEND_INVITE_CANCEL_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_INVITE_CANCEL_RES.result)
}
inline ::uint32_t SS2C_FRIEND_INVITE_CANCEL_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_FRIEND_INVITE_CANCEL_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SC2S_FRIEND_DEL_FRIEND_REQ

// string accountId = 1;
inline void SC2S_FRIEND_DEL_FRIEND_REQ::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SC2S_FRIEND_DEL_FRIEND_REQ::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_FRIEND_DEL_FRIEND_REQ.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_FRIEND_DEL_FRIEND_REQ::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_FRIEND_DEL_FRIEND_REQ.accountId)
}
inline std::string* SC2S_FRIEND_DEL_FRIEND_REQ::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_FRIEND_DEL_FRIEND_REQ.accountId)
  return _s;
}
inline const std::string& SC2S_FRIEND_DEL_FRIEND_REQ::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SC2S_FRIEND_DEL_FRIEND_REQ::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SC2S_FRIEND_DEL_FRIEND_REQ::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SC2S_FRIEND_DEL_FRIEND_REQ::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_FRIEND_DEL_FRIEND_REQ.accountId)
  return _impl_.accountid_.Release();
}
inline void SC2S_FRIEND_DEL_FRIEND_REQ::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_FRIEND_DEL_FRIEND_REQ.accountId)
}

// -------------------------------------------------------------------

// SS2C_FRIEND_DEL_FRIEND_RES

// uint32 result = 1;
inline void SS2C_FRIEND_DEL_FRIEND_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_DEL_FRIEND_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_DEL_FRIEND_RES.result)
  return _internal_result();
}
inline void SS2C_FRIEND_DEL_FRIEND_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_DEL_FRIEND_RES.result)
}
inline ::uint32_t SS2C_FRIEND_DEL_FRIEND_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_FRIEND_DEL_FRIEND_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SFRIEND_ACCOUNT_INFO

// string accountId = 1;
inline void SFRIEND_ACCOUNT_INFO::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SFRIEND_ACCOUNT_INFO::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_ACCOUNT_INFO.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SFRIEND_ACCOUNT_INFO::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_ACCOUNT_INFO.accountId)
}
inline std::string* SFRIEND_ACCOUNT_INFO::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SFRIEND_ACCOUNT_INFO.accountId)
  return _s;
}
inline const std::string& SFRIEND_ACCOUNT_INFO::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SFRIEND_ACCOUNT_INFO::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SFRIEND_ACCOUNT_INFO::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SFRIEND_ACCOUNT_INFO::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SFRIEND_ACCOUNT_INFO.accountId)
  return _impl_.accountid_.Release();
}
inline void SFRIEND_ACCOUNT_INFO::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SFRIEND_ACCOUNT_INFO.accountId)
}

// string accountNickname = 2;
inline void SFRIEND_ACCOUNT_INFO::clear_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.ClearToEmpty();
}
inline const std::string& SFRIEND_ACCOUNT_INFO::accountnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_ACCOUNT_INFO.accountNickname)
  return _internal_accountnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SFRIEND_ACCOUNT_INFO::set_accountnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_ACCOUNT_INFO.accountNickname)
}
inline std::string* SFRIEND_ACCOUNT_INFO::mutable_accountnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SFRIEND_ACCOUNT_INFO.accountNickname)
  return _s;
}
inline const std::string& SFRIEND_ACCOUNT_INFO::_internal_accountnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountnickname_.Get();
}
inline void SFRIEND_ACCOUNT_INFO::_internal_set_accountnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(value, GetArena());
}
inline std::string* SFRIEND_ACCOUNT_INFO::_internal_mutable_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountnickname_.Mutable( GetArena());
}
inline std::string* SFRIEND_ACCOUNT_INFO::release_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SFRIEND_ACCOUNT_INFO.accountNickname)
  return _impl_.accountnickname_.Release();
}
inline void SFRIEND_ACCOUNT_INFO::set_allocated_accountnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountnickname_.IsDefault()) {
          _impl_.accountnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SFRIEND_ACCOUNT_INFO.accountNickname)
}

// -------------------------------------------------------------------

// SFRIEND_INFO

// .DC.Packet.SFRIEND_ACCOUNT_INFO accountInfo = 1;
inline bool SFRIEND_INFO::has_accountinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.accountinfo_ != nullptr);
  return value;
}
inline void SFRIEND_INFO::clear_accountinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.accountinfo_ != nullptr) _impl_.accountinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::SFRIEND_ACCOUNT_INFO& SFRIEND_INFO::_internal_accountinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SFRIEND_ACCOUNT_INFO* p = _impl_.accountinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SFRIEND_ACCOUNT_INFO&>(::DC::Packet::_SFRIEND_ACCOUNT_INFO_default_instance_);
}
inline const ::DC::Packet::SFRIEND_ACCOUNT_INFO& SFRIEND_INFO::accountinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_INFO.accountInfo)
  return _internal_accountinfo();
}
inline void SFRIEND_INFO::unsafe_arena_set_allocated_accountinfo(::DC::Packet::SFRIEND_ACCOUNT_INFO* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.accountinfo_);
  }
  _impl_.accountinfo_ = reinterpret_cast<::DC::Packet::SFRIEND_ACCOUNT_INFO*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SFRIEND_INFO.accountInfo)
}
inline ::DC::Packet::SFRIEND_ACCOUNT_INFO* SFRIEND_INFO::release_accountinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* released = _impl_.accountinfo_;
  _impl_.accountinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SFRIEND_ACCOUNT_INFO* SFRIEND_INFO::unsafe_arena_release_accountinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SFRIEND_INFO.accountInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* temp = _impl_.accountinfo_;
  _impl_.accountinfo_ = nullptr;
  return temp;
}
inline ::DC::Packet::SFRIEND_ACCOUNT_INFO* SFRIEND_INFO::_internal_mutable_accountinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.accountinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SFRIEND_ACCOUNT_INFO>(GetArena());
    _impl_.accountinfo_ = reinterpret_cast<::DC::Packet::SFRIEND_ACCOUNT_INFO*>(p);
  }
  return _impl_.accountinfo_;
}
inline ::DC::Packet::SFRIEND_ACCOUNT_INFO* SFRIEND_INFO::mutable_accountinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* _msg = _internal_mutable_accountinfo();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SFRIEND_INFO.accountInfo)
  return _msg;
}
inline void SFRIEND_INFO::set_allocated_accountinfo(::DC::Packet::SFRIEND_ACCOUNT_INFO* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.accountinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.accountinfo_ = reinterpret_cast<::DC::Packet::SFRIEND_ACCOUNT_INFO*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SFRIEND_INFO.accountInfo)
}

// string characterId = 2;
inline void SFRIEND_INFO::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SFRIEND_INFO::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_INFO.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SFRIEND_INFO::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_INFO.characterId)
}
inline std::string* SFRIEND_INFO::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SFRIEND_INFO.characterId)
  return _s;
}
inline const std::string& SFRIEND_INFO::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SFRIEND_INFO::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SFRIEND_INFO::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SFRIEND_INFO::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SFRIEND_INFO.characterId)
  return _impl_.characterid_.Release();
}
inline void SFRIEND_INFO::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SFRIEND_INFO.characterId)
}

// .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
inline bool SFRIEND_INFO::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SFRIEND_INFO::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SFRIEND_INFO::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_INFO.nickName)
  return _internal_nickname();
}
inline void SFRIEND_INFO::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SFRIEND_INFO.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SFRIEND_INFO::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SFRIEND_INFO::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SFRIEND_INFO.nickName)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SFRIEND_INFO::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SFRIEND_INFO::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SFRIEND_INFO.nickName)
  return _msg;
}
inline void SFRIEND_INFO::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SFRIEND_INFO.nickName)
}

// string characterClass = 4;
inline void SFRIEND_INFO::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& SFRIEND_INFO::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_INFO.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SFRIEND_INFO::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_INFO.characterClass)
}
inline std::string* SFRIEND_INFO::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SFRIEND_INFO.characterClass)
  return _s;
}
inline const std::string& SFRIEND_INFO::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void SFRIEND_INFO::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* SFRIEND_INFO::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* SFRIEND_INFO::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SFRIEND_INFO.characterClass)
  return _impl_.characterclass_.Release();
}
inline void SFRIEND_INFO::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SFRIEND_INFO.characterClass)
}

// uint32 gender = 5;
inline void SFRIEND_INFO::clear_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = 0u;
}
inline ::uint32_t SFRIEND_INFO::gender() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_INFO.gender)
  return _internal_gender();
}
inline void SFRIEND_INFO::set_gender(::uint32_t value) {
  _internal_set_gender(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_INFO.gender)
}
inline ::uint32_t SFRIEND_INFO::_internal_gender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gender_;
}
inline void SFRIEND_INFO::_internal_set_gender(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = value;
}

// uint32 level = 6;
inline void SFRIEND_INFO::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0u;
}
inline ::uint32_t SFRIEND_INFO::level() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_INFO.level)
  return _internal_level();
}
inline void SFRIEND_INFO::set_level(::uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_INFO.level)
}
inline ::uint32_t SFRIEND_INFO::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void SFRIEND_INFO::_internal_set_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// uint32 status = 7;
inline void SFRIEND_INFO::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0u;
}
inline ::uint32_t SFRIEND_INFO::status() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_INFO.status)
  return _internal_status();
}
inline void SFRIEND_INFO::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_INFO.status)
}
inline ::uint32_t SFRIEND_INFO::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void SFRIEND_INFO::_internal_set_status(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// uint32 locationStatus = 8;
inline void SFRIEND_INFO::clear_locationstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locationstatus_ = 0u;
}
inline ::uint32_t SFRIEND_INFO::locationstatus() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_INFO.locationStatus)
  return _internal_locationstatus();
}
inline void SFRIEND_INFO::set_locationstatus(::uint32_t value) {
  _internal_set_locationstatus(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_INFO.locationStatus)
}
inline ::uint32_t SFRIEND_INFO::_internal_locationstatus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.locationstatus_;
}
inline void SFRIEND_INFO::_internal_set_locationstatus(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locationstatus_ = value;
}

// uint32 PartyMemeberCount = 9;
inline void SFRIEND_INFO::clear_partymemebercount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partymemebercount_ = 0u;
}
inline ::uint32_t SFRIEND_INFO::partymemebercount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_INFO.PartyMemeberCount)
  return _internal_partymemebercount();
}
inline void SFRIEND_INFO::set_partymemebercount(::uint32_t value) {
  _internal_set_partymemebercount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_INFO.PartyMemeberCount)
}
inline ::uint32_t SFRIEND_INFO::_internal_partymemebercount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partymemebercount_;
}
inline void SFRIEND_INFO::_internal_set_partymemebercount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partymemebercount_ = value;
}

// uint32 PartyMaxMemeberCount = 10;
inline void SFRIEND_INFO::clear_partymaxmemebercount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partymaxmemebercount_ = 0u;
}
inline ::uint32_t SFRIEND_INFO::partymaxmemebercount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_INFO.PartyMaxMemeberCount)
  return _internal_partymaxmemebercount();
}
inline void SFRIEND_INFO::set_partymaxmemebercount(::uint32_t value) {
  _internal_set_partymaxmemebercount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_INFO.PartyMaxMemeberCount)
}
inline ::uint32_t SFRIEND_INFO::_internal_partymaxmemebercount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partymaxmemebercount_;
}
inline void SFRIEND_INFO::_internal_set_partymaxmemebercount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partymaxmemebercount_ = value;
}

// -------------------------------------------------------------------

// SFRIEND_ACCEPT_INFO

// .DC.Packet.SFRIEND_ACCOUNT_INFO accountInfo = 1;
inline bool SFRIEND_ACCEPT_INFO::has_accountinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.accountinfo_ != nullptr);
  return value;
}
inline void SFRIEND_ACCEPT_INFO::clear_accountinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.accountinfo_ != nullptr) _impl_.accountinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::SFRIEND_ACCOUNT_INFO& SFRIEND_ACCEPT_INFO::_internal_accountinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SFRIEND_ACCOUNT_INFO* p = _impl_.accountinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SFRIEND_ACCOUNT_INFO&>(::DC::Packet::_SFRIEND_ACCOUNT_INFO_default_instance_);
}
inline const ::DC::Packet::SFRIEND_ACCOUNT_INFO& SFRIEND_ACCEPT_INFO::accountinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_ACCEPT_INFO.accountInfo)
  return _internal_accountinfo();
}
inline void SFRIEND_ACCEPT_INFO::unsafe_arena_set_allocated_accountinfo(::DC::Packet::SFRIEND_ACCOUNT_INFO* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.accountinfo_);
  }
  _impl_.accountinfo_ = reinterpret_cast<::DC::Packet::SFRIEND_ACCOUNT_INFO*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SFRIEND_ACCEPT_INFO.accountInfo)
}
inline ::DC::Packet::SFRIEND_ACCOUNT_INFO* SFRIEND_ACCEPT_INFO::release_accountinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* released = _impl_.accountinfo_;
  _impl_.accountinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SFRIEND_ACCOUNT_INFO* SFRIEND_ACCEPT_INFO::unsafe_arena_release_accountinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SFRIEND_ACCEPT_INFO.accountInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* temp = _impl_.accountinfo_;
  _impl_.accountinfo_ = nullptr;
  return temp;
}
inline ::DC::Packet::SFRIEND_ACCOUNT_INFO* SFRIEND_ACCEPT_INFO::_internal_mutable_accountinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.accountinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SFRIEND_ACCOUNT_INFO>(GetArena());
    _impl_.accountinfo_ = reinterpret_cast<::DC::Packet::SFRIEND_ACCOUNT_INFO*>(p);
  }
  return _impl_.accountinfo_;
}
inline ::DC::Packet::SFRIEND_ACCOUNT_INFO* SFRIEND_ACCEPT_INFO::mutable_accountinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* _msg = _internal_mutable_accountinfo();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SFRIEND_ACCEPT_INFO.accountInfo)
  return _msg;
}
inline void SFRIEND_ACCEPT_INFO::set_allocated_accountinfo(::DC::Packet::SFRIEND_ACCOUNT_INFO* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.accountinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.accountinfo_ = reinterpret_cast<::DC::Packet::SFRIEND_ACCOUNT_INFO*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SFRIEND_ACCEPT_INFO.accountInfo)
}

// string characterId = 2;
inline void SFRIEND_ACCEPT_INFO::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SFRIEND_ACCEPT_INFO::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_ACCEPT_INFO.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SFRIEND_ACCEPT_INFO::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_ACCEPT_INFO.characterId)
}
inline std::string* SFRIEND_ACCEPT_INFO::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SFRIEND_ACCEPT_INFO.characterId)
  return _s;
}
inline const std::string& SFRIEND_ACCEPT_INFO::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SFRIEND_ACCEPT_INFO::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SFRIEND_ACCEPT_INFO::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SFRIEND_ACCEPT_INFO::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SFRIEND_ACCEPT_INFO.characterId)
  return _impl_.characterid_.Release();
}
inline void SFRIEND_ACCEPT_INFO::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SFRIEND_ACCEPT_INFO.characterId)
}

// .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
inline bool SFRIEND_ACCEPT_INFO::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SFRIEND_ACCEPT_INFO::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SFRIEND_ACCEPT_INFO::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_ACCEPT_INFO.nickName)
  return _internal_nickname();
}
inline void SFRIEND_ACCEPT_INFO::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SFRIEND_ACCEPT_INFO.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SFRIEND_ACCEPT_INFO::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SFRIEND_ACCEPT_INFO::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SFRIEND_ACCEPT_INFO.nickName)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SFRIEND_ACCEPT_INFO::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SFRIEND_ACCEPT_INFO::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SFRIEND_ACCEPT_INFO.nickName)
  return _msg;
}
inline void SFRIEND_ACCEPT_INFO::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SFRIEND_ACCEPT_INFO.nickName)
}

// string characterClass = 4;
inline void SFRIEND_ACCEPT_INFO::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& SFRIEND_ACCEPT_INFO::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_ACCEPT_INFO.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SFRIEND_ACCEPT_INFO::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_ACCEPT_INFO.characterClass)
}
inline std::string* SFRIEND_ACCEPT_INFO::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SFRIEND_ACCEPT_INFO.characterClass)
  return _s;
}
inline const std::string& SFRIEND_ACCEPT_INFO::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void SFRIEND_ACCEPT_INFO::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* SFRIEND_ACCEPT_INFO::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* SFRIEND_ACCEPT_INFO::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SFRIEND_ACCEPT_INFO.characterClass)
  return _impl_.characterclass_.Release();
}
inline void SFRIEND_ACCEPT_INFO::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SFRIEND_ACCEPT_INFO.characterClass)
}

// uint32 gender = 5;
inline void SFRIEND_ACCEPT_INFO::clear_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = 0u;
}
inline ::uint32_t SFRIEND_ACCEPT_INFO::gender() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_ACCEPT_INFO.gender)
  return _internal_gender();
}
inline void SFRIEND_ACCEPT_INFO::set_gender(::uint32_t value) {
  _internal_set_gender(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_ACCEPT_INFO.gender)
}
inline ::uint32_t SFRIEND_ACCEPT_INFO::_internal_gender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gender_;
}
inline void SFRIEND_ACCEPT_INFO::_internal_set_gender(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = value;
}

// uint32 level = 6;
inline void SFRIEND_ACCEPT_INFO::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0u;
}
inline ::uint32_t SFRIEND_ACCEPT_INFO::level() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_ACCEPT_INFO.level)
  return _internal_level();
}
inline void SFRIEND_ACCEPT_INFO::set_level(::uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_ACCEPT_INFO.level)
}
inline ::uint32_t SFRIEND_ACCEPT_INFO::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void SFRIEND_ACCEPT_INFO::_internal_set_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// uint32 status = 7;
inline void SFRIEND_ACCEPT_INFO::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0u;
}
inline ::uint32_t SFRIEND_ACCEPT_INFO::status() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_ACCEPT_INFO.status)
  return _internal_status();
}
inline void SFRIEND_ACCEPT_INFO::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_ACCEPT_INFO.status)
}
inline ::uint32_t SFRIEND_ACCEPT_INFO::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void SFRIEND_ACCEPT_INFO::_internal_set_status(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// SFRIEND_REQUEST_INFO

// .DC.Packet.SFRIEND_ACCOUNT_INFO accountInfo = 1;
inline bool SFRIEND_REQUEST_INFO::has_accountinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.accountinfo_ != nullptr);
  return value;
}
inline void SFRIEND_REQUEST_INFO::clear_accountinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.accountinfo_ != nullptr) _impl_.accountinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::SFRIEND_ACCOUNT_INFO& SFRIEND_REQUEST_INFO::_internal_accountinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SFRIEND_ACCOUNT_INFO* p = _impl_.accountinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SFRIEND_ACCOUNT_INFO&>(::DC::Packet::_SFRIEND_ACCOUNT_INFO_default_instance_);
}
inline const ::DC::Packet::SFRIEND_ACCOUNT_INFO& SFRIEND_REQUEST_INFO::accountinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_REQUEST_INFO.accountInfo)
  return _internal_accountinfo();
}
inline void SFRIEND_REQUEST_INFO::unsafe_arena_set_allocated_accountinfo(::DC::Packet::SFRIEND_ACCOUNT_INFO* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.accountinfo_);
  }
  _impl_.accountinfo_ = reinterpret_cast<::DC::Packet::SFRIEND_ACCOUNT_INFO*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SFRIEND_REQUEST_INFO.accountInfo)
}
inline ::DC::Packet::SFRIEND_ACCOUNT_INFO* SFRIEND_REQUEST_INFO::release_accountinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* released = _impl_.accountinfo_;
  _impl_.accountinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SFRIEND_ACCOUNT_INFO* SFRIEND_REQUEST_INFO::unsafe_arena_release_accountinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SFRIEND_REQUEST_INFO.accountInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* temp = _impl_.accountinfo_;
  _impl_.accountinfo_ = nullptr;
  return temp;
}
inline ::DC::Packet::SFRIEND_ACCOUNT_INFO* SFRIEND_REQUEST_INFO::_internal_mutable_accountinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.accountinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SFRIEND_ACCOUNT_INFO>(GetArena());
    _impl_.accountinfo_ = reinterpret_cast<::DC::Packet::SFRIEND_ACCOUNT_INFO*>(p);
  }
  return _impl_.accountinfo_;
}
inline ::DC::Packet::SFRIEND_ACCOUNT_INFO* SFRIEND_REQUEST_INFO::mutable_accountinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SFRIEND_ACCOUNT_INFO* _msg = _internal_mutable_accountinfo();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SFRIEND_REQUEST_INFO.accountInfo)
  return _msg;
}
inline void SFRIEND_REQUEST_INFO::set_allocated_accountinfo(::DC::Packet::SFRIEND_ACCOUNT_INFO* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.accountinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.accountinfo_ = reinterpret_cast<::DC::Packet::SFRIEND_ACCOUNT_INFO*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SFRIEND_REQUEST_INFO.accountInfo)
}

// string characterId = 2;
inline void SFRIEND_REQUEST_INFO::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SFRIEND_REQUEST_INFO::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_REQUEST_INFO.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SFRIEND_REQUEST_INFO::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_REQUEST_INFO.characterId)
}
inline std::string* SFRIEND_REQUEST_INFO::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SFRIEND_REQUEST_INFO.characterId)
  return _s;
}
inline const std::string& SFRIEND_REQUEST_INFO::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SFRIEND_REQUEST_INFO::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SFRIEND_REQUEST_INFO::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SFRIEND_REQUEST_INFO::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SFRIEND_REQUEST_INFO.characterId)
  return _impl_.characterid_.Release();
}
inline void SFRIEND_REQUEST_INFO::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SFRIEND_REQUEST_INFO.characterId)
}

// .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
inline bool SFRIEND_REQUEST_INFO::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SFRIEND_REQUEST_INFO::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SFRIEND_REQUEST_INFO::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_REQUEST_INFO.nickName)
  return _internal_nickname();
}
inline void SFRIEND_REQUEST_INFO::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SFRIEND_REQUEST_INFO.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SFRIEND_REQUEST_INFO::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SFRIEND_REQUEST_INFO::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SFRIEND_REQUEST_INFO.nickName)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SFRIEND_REQUEST_INFO::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SFRIEND_REQUEST_INFO::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SFRIEND_REQUEST_INFO.nickName)
  return _msg;
}
inline void SFRIEND_REQUEST_INFO::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SFRIEND_REQUEST_INFO.nickName)
}

// string characterClass = 4;
inline void SFRIEND_REQUEST_INFO::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& SFRIEND_REQUEST_INFO::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_REQUEST_INFO.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SFRIEND_REQUEST_INFO::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_REQUEST_INFO.characterClass)
}
inline std::string* SFRIEND_REQUEST_INFO::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SFRIEND_REQUEST_INFO.characterClass)
  return _s;
}
inline const std::string& SFRIEND_REQUEST_INFO::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void SFRIEND_REQUEST_INFO::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* SFRIEND_REQUEST_INFO::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* SFRIEND_REQUEST_INFO::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SFRIEND_REQUEST_INFO.characterClass)
  return _impl_.characterclass_.Release();
}
inline void SFRIEND_REQUEST_INFO::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SFRIEND_REQUEST_INFO.characterClass)
}

// uint32 gender = 5;
inline void SFRIEND_REQUEST_INFO::clear_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = 0u;
}
inline ::uint32_t SFRIEND_REQUEST_INFO::gender() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_REQUEST_INFO.gender)
  return _internal_gender();
}
inline void SFRIEND_REQUEST_INFO::set_gender(::uint32_t value) {
  _internal_set_gender(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_REQUEST_INFO.gender)
}
inline ::uint32_t SFRIEND_REQUEST_INFO::_internal_gender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gender_;
}
inline void SFRIEND_REQUEST_INFO::_internal_set_gender(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = value;
}

// uint32 level = 6;
inline void SFRIEND_REQUEST_INFO::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0u;
}
inline ::uint32_t SFRIEND_REQUEST_INFO::level() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_REQUEST_INFO.level)
  return _internal_level();
}
inline void SFRIEND_REQUEST_INFO::set_level(::uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_REQUEST_INFO.level)
}
inline ::uint32_t SFRIEND_REQUEST_INFO::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void SFRIEND_REQUEST_INFO::_internal_set_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// uint32 status = 7;
inline void SFRIEND_REQUEST_INFO::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0u;
}
inline ::uint32_t SFRIEND_REQUEST_INFO::status() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SFRIEND_REQUEST_INFO.status)
  return _internal_status();
}
inline void SFRIEND_REQUEST_INFO::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SFRIEND_REQUEST_INFO.status)
}
inline ::uint32_t SFRIEND_REQUEST_INFO::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void SFRIEND_REQUEST_INFO::_internal_set_status(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// SS2C_FRIEND_INFO_NOT

// string accountNickname = 1;
inline void SS2C_FRIEND_INFO_NOT::clear_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.ClearToEmpty();
}
inline const std::string& SS2C_FRIEND_INFO_NOT::accountnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_INFO_NOT.accountNickname)
  return _internal_accountnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_FRIEND_INFO_NOT::set_accountnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_INFO_NOT.accountNickname)
}
inline std::string* SS2C_FRIEND_INFO_NOT::mutable_accountnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_FRIEND_INFO_NOT.accountNickname)
  return _s;
}
inline const std::string& SS2C_FRIEND_INFO_NOT::_internal_accountnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountnickname_.Get();
}
inline void SS2C_FRIEND_INFO_NOT::_internal_set_accountnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(value, GetArena());
}
inline std::string* SS2C_FRIEND_INFO_NOT::_internal_mutable_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountnickname_.Mutable( GetArena());
}
inline std::string* SS2C_FRIEND_INFO_NOT::release_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_FRIEND_INFO_NOT.accountNickname)
  return _impl_.accountnickname_.Release();
}
inline void SS2C_FRIEND_INFO_NOT::set_allocated_accountnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountnickname_.IsDefault()) {
          _impl_.accountnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_FRIEND_INFO_NOT.accountNickname)
}

// uint32 status = 2;
inline void SS2C_FRIEND_INFO_NOT::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_INFO_NOT::status() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_INFO_NOT.status)
  return _internal_status();
}
inline void SS2C_FRIEND_INFO_NOT::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_INFO_NOT.status)
}
inline ::uint32_t SS2C_FRIEND_INFO_NOT::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void SS2C_FRIEND_INFO_NOT::_internal_set_status(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// uint32 privacy = 3;
inline void SS2C_FRIEND_INFO_NOT::clear_privacy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privacy_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_INFO_NOT::privacy() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_INFO_NOT.privacy)
  return _internal_privacy();
}
inline void SS2C_FRIEND_INFO_NOT::set_privacy(::uint32_t value) {
  _internal_set_privacy(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_INFO_NOT.privacy)
}
inline ::uint32_t SS2C_FRIEND_INFO_NOT::_internal_privacy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.privacy_;
}
inline void SS2C_FRIEND_INFO_NOT::_internal_set_privacy(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privacy_ = value;
}

// -------------------------------------------------------------------

// SS2C_FRIEND_SET_FRIEND_INFOS_NOT

// repeated .DC.Packet.SFRIEND_INFO infos = 1;
inline int SS2C_FRIEND_SET_FRIEND_INFOS_NOT::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int SS2C_FRIEND_SET_FRIEND_INFOS_NOT::infos_size() const {
  return _internal_infos_size();
}
inline void SS2C_FRIEND_SET_FRIEND_INFOS_NOT::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::DC::Packet::SFRIEND_INFO* SS2C_FRIEND_SET_FRIEND_INFOS_NOT::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_FRIEND_SET_FRIEND_INFOS_NOT.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_INFO>* SS2C_FRIEND_SET_FRIEND_INFOS_NOT::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_FRIEND_SET_FRIEND_INFOS_NOT.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::DC::Packet::SFRIEND_INFO& SS2C_FRIEND_SET_FRIEND_INFOS_NOT::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_SET_FRIEND_INFOS_NOT.infos)
  return _internal_infos().Get(index);
}
inline ::DC::Packet::SFRIEND_INFO* SS2C_FRIEND_SET_FRIEND_INFOS_NOT::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SFRIEND_INFO* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_FRIEND_SET_FRIEND_INFOS_NOT.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_INFO>& SS2C_FRIEND_SET_FRIEND_INFOS_NOT::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_FRIEND_SET_FRIEND_INFOS_NOT.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_INFO>&
SS2C_FRIEND_SET_FRIEND_INFOS_NOT::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_INFO>*
SS2C_FRIEND_SET_FRIEND_INFOS_NOT::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

// -------------------------------------------------------------------

// SS2C_FRIEND_DEL_FRIEND_INFOS_NOT

// repeated string accountIds = 1;
inline int SS2C_FRIEND_DEL_FRIEND_INFOS_NOT::_internal_accountids_size() const {
  return _internal_accountids().size();
}
inline int SS2C_FRIEND_DEL_FRIEND_INFOS_NOT::accountids_size() const {
  return _internal_accountids_size();
}
inline void SS2C_FRIEND_DEL_FRIEND_INFOS_NOT::clear_accountids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountids_.Clear();
}
inline std::string* SS2C_FRIEND_DEL_FRIEND_INFOS_NOT::add_accountids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_accountids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.SS2C_FRIEND_DEL_FRIEND_INFOS_NOT.accountIds)
  return _s;
}
inline const std::string& SS2C_FRIEND_DEL_FRIEND_INFOS_NOT::accountids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_DEL_FRIEND_INFOS_NOT.accountIds)
  return _internal_accountids().Get(index);
}
inline std::string* SS2C_FRIEND_DEL_FRIEND_INFOS_NOT::mutable_accountids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_FRIEND_DEL_FRIEND_INFOS_NOT.accountIds)
  return _internal_mutable_accountids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SS2C_FRIEND_DEL_FRIEND_INFOS_NOT::set_accountids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_accountids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_DEL_FRIEND_INFOS_NOT.accountIds)
}
template <typename Arg_, typename... Args_>
inline void SS2C_FRIEND_DEL_FRIEND_INFOS_NOT::add_accountids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_accountids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_FRIEND_DEL_FRIEND_INFOS_NOT.accountIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SS2C_FRIEND_DEL_FRIEND_INFOS_NOT::accountids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_FRIEND_DEL_FRIEND_INFOS_NOT.accountIds)
  return _internal_accountids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SS2C_FRIEND_DEL_FRIEND_INFOS_NOT::mutable_accountids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_FRIEND_DEL_FRIEND_INFOS_NOT.accountIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_accountids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SS2C_FRIEND_DEL_FRIEND_INFOS_NOT::_internal_accountids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SS2C_FRIEND_DEL_FRIEND_INFOS_NOT::_internal_mutable_accountids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.accountids_;
}

// -------------------------------------------------------------------

// SS2C_FRIEND_SET_ACCEPT_INFOS_NOT

// repeated .DC.Packet.SFRIEND_ACCEPT_INFO infos = 1;
inline int SS2C_FRIEND_SET_ACCEPT_INFOS_NOT::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int SS2C_FRIEND_SET_ACCEPT_INFOS_NOT::infos_size() const {
  return _internal_infos_size();
}
inline void SS2C_FRIEND_SET_ACCEPT_INFOS_NOT::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::DC::Packet::SFRIEND_ACCEPT_INFO* SS2C_FRIEND_SET_ACCEPT_INFOS_NOT::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_FRIEND_SET_ACCEPT_INFOS_NOT.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_ACCEPT_INFO>* SS2C_FRIEND_SET_ACCEPT_INFOS_NOT::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_FRIEND_SET_ACCEPT_INFOS_NOT.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::DC::Packet::SFRIEND_ACCEPT_INFO& SS2C_FRIEND_SET_ACCEPT_INFOS_NOT::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_SET_ACCEPT_INFOS_NOT.infos)
  return _internal_infos().Get(index);
}
inline ::DC::Packet::SFRIEND_ACCEPT_INFO* SS2C_FRIEND_SET_ACCEPT_INFOS_NOT::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SFRIEND_ACCEPT_INFO* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_FRIEND_SET_ACCEPT_INFOS_NOT.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_ACCEPT_INFO>& SS2C_FRIEND_SET_ACCEPT_INFOS_NOT::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_FRIEND_SET_ACCEPT_INFOS_NOT.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_ACCEPT_INFO>&
SS2C_FRIEND_SET_ACCEPT_INFOS_NOT::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_ACCEPT_INFO>*
SS2C_FRIEND_SET_ACCEPT_INFOS_NOT::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

// -------------------------------------------------------------------

// SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT

// repeated string accountIds = 1;
inline int SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT::_internal_accountids_size() const {
  return _internal_accountids().size();
}
inline int SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT::accountids_size() const {
  return _internal_accountids_size();
}
inline void SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT::clear_accountids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountids_.Clear();
}
inline std::string* SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT::add_accountids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_accountids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT.accountIds)
  return _s;
}
inline const std::string& SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT::accountids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT.accountIds)
  return _internal_accountids().Get(index);
}
inline std::string* SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT::mutable_accountids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT.accountIds)
  return _internal_mutable_accountids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT::set_accountids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_accountids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT.accountIds)
}
template <typename Arg_, typename... Args_>
inline void SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT::add_accountids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_accountids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT.accountIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT::accountids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT.accountIds)
  return _internal_accountids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT::mutable_accountids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT.accountIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_accountids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT::_internal_accountids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SS2C_FRIEND_DEL_ACCEPT_INFOS_NOT::_internal_mutable_accountids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.accountids_;
}

// -------------------------------------------------------------------

// SS2C_FRIEND_SET_INVITE_INFOS_NOT

// repeated .DC.Packet.SFRIEND_REQUEST_INFO infos = 1;
inline int SS2C_FRIEND_SET_INVITE_INFOS_NOT::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int SS2C_FRIEND_SET_INVITE_INFOS_NOT::infos_size() const {
  return _internal_infos_size();
}
inline void SS2C_FRIEND_SET_INVITE_INFOS_NOT::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::DC::Packet::SFRIEND_REQUEST_INFO* SS2C_FRIEND_SET_INVITE_INFOS_NOT::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_FRIEND_SET_INVITE_INFOS_NOT.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_REQUEST_INFO>* SS2C_FRIEND_SET_INVITE_INFOS_NOT::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_FRIEND_SET_INVITE_INFOS_NOT.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::DC::Packet::SFRIEND_REQUEST_INFO& SS2C_FRIEND_SET_INVITE_INFOS_NOT::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_SET_INVITE_INFOS_NOT.infos)
  return _internal_infos().Get(index);
}
inline ::DC::Packet::SFRIEND_REQUEST_INFO* SS2C_FRIEND_SET_INVITE_INFOS_NOT::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SFRIEND_REQUEST_INFO* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_FRIEND_SET_INVITE_INFOS_NOT.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_REQUEST_INFO>& SS2C_FRIEND_SET_INVITE_INFOS_NOT::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_FRIEND_SET_INVITE_INFOS_NOT.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_REQUEST_INFO>&
SS2C_FRIEND_SET_INVITE_INFOS_NOT::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SFRIEND_REQUEST_INFO>*
SS2C_FRIEND_SET_INVITE_INFOS_NOT::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

// -------------------------------------------------------------------

// SS2C_FRIEND_DEL_INVITE_INFOS_NOT

// repeated string accountIds = 1;
inline int SS2C_FRIEND_DEL_INVITE_INFOS_NOT::_internal_accountids_size() const {
  return _internal_accountids().size();
}
inline int SS2C_FRIEND_DEL_INVITE_INFOS_NOT::accountids_size() const {
  return _internal_accountids_size();
}
inline void SS2C_FRIEND_DEL_INVITE_INFOS_NOT::clear_accountids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountids_.Clear();
}
inline std::string* SS2C_FRIEND_DEL_INVITE_INFOS_NOT::add_accountids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_accountids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.SS2C_FRIEND_DEL_INVITE_INFOS_NOT.accountIds)
  return _s;
}
inline const std::string& SS2C_FRIEND_DEL_INVITE_INFOS_NOT::accountids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_DEL_INVITE_INFOS_NOT.accountIds)
  return _internal_accountids().Get(index);
}
inline std::string* SS2C_FRIEND_DEL_INVITE_INFOS_NOT::mutable_accountids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_FRIEND_DEL_INVITE_INFOS_NOT.accountIds)
  return _internal_mutable_accountids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SS2C_FRIEND_DEL_INVITE_INFOS_NOT::set_accountids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_accountids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_DEL_INVITE_INFOS_NOT.accountIds)
}
template <typename Arg_, typename... Args_>
inline void SS2C_FRIEND_DEL_INVITE_INFOS_NOT::add_accountids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_accountids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_FRIEND_DEL_INVITE_INFOS_NOT.accountIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SS2C_FRIEND_DEL_INVITE_INFOS_NOT::accountids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_FRIEND_DEL_INVITE_INFOS_NOT.accountIds)
  return _internal_accountids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SS2C_FRIEND_DEL_INVITE_INFOS_NOT::mutable_accountids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_FRIEND_DEL_INVITE_INFOS_NOT.accountIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_accountids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SS2C_FRIEND_DEL_INVITE_INFOS_NOT::_internal_accountids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SS2C_FRIEND_DEL_INVITE_INFOS_NOT::_internal_mutable_accountids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.accountids_;
}

// -------------------------------------------------------------------

// SS2C_FRIEND_SET_STATUS_NOT

// string accountId = 1;
inline void SS2C_FRIEND_SET_STATUS_NOT::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SS2C_FRIEND_SET_STATUS_NOT::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_SET_STATUS_NOT.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_FRIEND_SET_STATUS_NOT::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_SET_STATUS_NOT.accountId)
}
inline std::string* SS2C_FRIEND_SET_STATUS_NOT::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_FRIEND_SET_STATUS_NOT.accountId)
  return _s;
}
inline const std::string& SS2C_FRIEND_SET_STATUS_NOT::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SS2C_FRIEND_SET_STATUS_NOT::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SS2C_FRIEND_SET_STATUS_NOT::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SS2C_FRIEND_SET_STATUS_NOT::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_FRIEND_SET_STATUS_NOT.accountId)
  return _impl_.accountid_.Release();
}
inline void SS2C_FRIEND_SET_STATUS_NOT::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_FRIEND_SET_STATUS_NOT.accountId)
}

// uint32 status = 2;
inline void SS2C_FRIEND_SET_STATUS_NOT::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_SET_STATUS_NOT::status() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_SET_STATUS_NOT.status)
  return _internal_status();
}
inline void SS2C_FRIEND_SET_STATUS_NOT::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_SET_STATUS_NOT.status)
}
inline ::uint32_t SS2C_FRIEND_SET_STATUS_NOT::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void SS2C_FRIEND_SET_STATUS_NOT::_internal_set_status(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// SC2S_FRIEND_LIST_REQ

// uint32 pageIndex = 1;
inline void SC2S_FRIEND_LIST_REQ::clear_pageindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pageindex_ = 0u;
}
inline ::uint32_t SC2S_FRIEND_LIST_REQ::pageindex() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_FRIEND_LIST_REQ.pageIndex)
  return _internal_pageindex();
}
inline void SC2S_FRIEND_LIST_REQ::set_pageindex(::uint32_t value) {
  _internal_set_pageindex(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_FRIEND_LIST_REQ.pageIndex)
}
inline ::uint32_t SC2S_FRIEND_LIST_REQ::_internal_pageindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pageindex_;
}
inline void SC2S_FRIEND_LIST_REQ::_internal_set_pageindex(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pageindex_ = value;
}

// uint32 pageCapacity = 2;
inline void SC2S_FRIEND_LIST_REQ::clear_pagecapacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pagecapacity_ = 0u;
}
inline ::uint32_t SC2S_FRIEND_LIST_REQ::pagecapacity() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_FRIEND_LIST_REQ.pageCapacity)
  return _internal_pagecapacity();
}
inline void SC2S_FRIEND_LIST_REQ::set_pagecapacity(::uint32_t value) {
  _internal_set_pagecapacity(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_FRIEND_LIST_REQ.pageCapacity)
}
inline ::uint32_t SC2S_FRIEND_LIST_REQ::_internal_pagecapacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pagecapacity_;
}
inline void SC2S_FRIEND_LIST_REQ::_internal_set_pagecapacity(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pagecapacity_ = value;
}

// -------------------------------------------------------------------

// SS2C_FRIEND_LIST_RES

// repeated .DC.Packet.SCHARACTER_FRIEND_INFO friendInfoList = 1;
inline int SS2C_FRIEND_LIST_RES::_internal_friendinfolist_size() const {
  return _internal_friendinfolist().size();
}
inline int SS2C_FRIEND_LIST_RES::friendinfolist_size() const {
  return _internal_friendinfolist_size();
}
inline ::DC::Packet::SCHARACTER_FRIEND_INFO* SS2C_FRIEND_LIST_RES::mutable_friendinfolist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_FRIEND_LIST_RES.friendInfoList)
  return _internal_mutable_friendinfolist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_FRIEND_INFO>* SS2C_FRIEND_LIST_RES::mutable_friendinfolist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_FRIEND_LIST_RES.friendInfoList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_friendinfolist();
}
inline const ::DC::Packet::SCHARACTER_FRIEND_INFO& SS2C_FRIEND_LIST_RES::friendinfolist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_LIST_RES.friendInfoList)
  return _internal_friendinfolist().Get(index);
}
inline ::DC::Packet::SCHARACTER_FRIEND_INFO* SS2C_FRIEND_LIST_RES::add_friendinfolist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SCHARACTER_FRIEND_INFO* _add = _internal_mutable_friendinfolist()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_FRIEND_LIST_RES.friendInfoList)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_FRIEND_INFO>& SS2C_FRIEND_LIST_RES::friendinfolist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_FRIEND_LIST_RES.friendInfoList)
  return _internal_friendinfolist();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_FRIEND_INFO>&
SS2C_FRIEND_LIST_RES::_internal_friendinfolist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.friendinfolist_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_FRIEND_INFO>*
SS2C_FRIEND_LIST_RES::_internal_mutable_friendinfolist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.friendinfolist_;
}

// uint32 pageIndex = 2;
inline void SS2C_FRIEND_LIST_RES::clear_pageindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pageindex_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_LIST_RES::pageindex() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_LIST_RES.pageIndex)
  return _internal_pageindex();
}
inline void SS2C_FRIEND_LIST_RES::set_pageindex(::uint32_t value) {
  _internal_set_pageindex(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_LIST_RES.pageIndex)
}
inline ::uint32_t SS2C_FRIEND_LIST_RES::_internal_pageindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pageindex_;
}
inline void SS2C_FRIEND_LIST_RES::_internal_set_pageindex(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pageindex_ = value;
}

// uint32 totalFriendCount = 3;
inline void SS2C_FRIEND_LIST_RES::clear_totalfriendcount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.totalfriendcount_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_LIST_RES::totalfriendcount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_LIST_RES.totalFriendCount)
  return _internal_totalfriendcount();
}
inline void SS2C_FRIEND_LIST_RES::set_totalfriendcount(::uint32_t value) {
  _internal_set_totalfriendcount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_LIST_RES.totalFriendCount)
}
inline ::uint32_t SS2C_FRIEND_LIST_RES::_internal_totalfriendcount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.totalfriendcount_;
}
inline void SS2C_FRIEND_LIST_RES::_internal_set_totalfriendcount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.totalfriendcount_ = value;
}

// uint32 lobbyLocateCount = 4;
inline void SS2C_FRIEND_LIST_RES::clear_lobbylocatecount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lobbylocatecount_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_LIST_RES::lobbylocatecount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_LIST_RES.lobbyLocateCount)
  return _internal_lobbylocatecount();
}
inline void SS2C_FRIEND_LIST_RES::set_lobbylocatecount(::uint32_t value) {
  _internal_set_lobbylocatecount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_LIST_RES.lobbyLocateCount)
}
inline ::uint32_t SS2C_FRIEND_LIST_RES::_internal_lobbylocatecount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lobbylocatecount_;
}
inline void SS2C_FRIEND_LIST_RES::_internal_set_lobbylocatecount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lobbylocatecount_ = value;
}

// uint32 dungeonLocateCount = 5;
inline void SS2C_FRIEND_LIST_RES::clear_dungeonlocatecount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonlocatecount_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_LIST_RES::dungeonlocatecount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_LIST_RES.dungeonLocateCount)
  return _internal_dungeonlocatecount();
}
inline void SS2C_FRIEND_LIST_RES::set_dungeonlocatecount(::uint32_t value) {
  _internal_set_dungeonlocatecount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_LIST_RES.dungeonLocateCount)
}
inline ::uint32_t SS2C_FRIEND_LIST_RES::_internal_dungeonlocatecount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dungeonlocatecount_;
}
inline void SS2C_FRIEND_LIST_RES::_internal_set_dungeonlocatecount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonlocatecount_ = value;
}

// -------------------------------------------------------------------

// SC2S_FRIEND_LIST_ALL_REQ

// -------------------------------------------------------------------

// SS2C_FRIEND_LIST_ALL_RES

// repeated .DC.Packet.SCHARACTER_FRIEND_INFO friendInfoList = 1;
inline int SS2C_FRIEND_LIST_ALL_RES::_internal_friendinfolist_size() const {
  return _internal_friendinfolist().size();
}
inline int SS2C_FRIEND_LIST_ALL_RES::friendinfolist_size() const {
  return _internal_friendinfolist_size();
}
inline ::DC::Packet::SCHARACTER_FRIEND_INFO* SS2C_FRIEND_LIST_ALL_RES::mutable_friendinfolist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_FRIEND_LIST_ALL_RES.friendInfoList)
  return _internal_mutable_friendinfolist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_FRIEND_INFO>* SS2C_FRIEND_LIST_ALL_RES::mutable_friendinfolist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_FRIEND_LIST_ALL_RES.friendInfoList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_friendinfolist();
}
inline const ::DC::Packet::SCHARACTER_FRIEND_INFO& SS2C_FRIEND_LIST_ALL_RES::friendinfolist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_LIST_ALL_RES.friendInfoList)
  return _internal_friendinfolist().Get(index);
}
inline ::DC::Packet::SCHARACTER_FRIEND_INFO* SS2C_FRIEND_LIST_ALL_RES::add_friendinfolist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SCHARACTER_FRIEND_INFO* _add = _internal_mutable_friendinfolist()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_FRIEND_LIST_ALL_RES.friendInfoList)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_FRIEND_INFO>& SS2C_FRIEND_LIST_ALL_RES::friendinfolist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_FRIEND_LIST_ALL_RES.friendInfoList)
  return _internal_friendinfolist();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_FRIEND_INFO>&
SS2C_FRIEND_LIST_ALL_RES::_internal_friendinfolist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.friendinfolist_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_FRIEND_INFO>*
SS2C_FRIEND_LIST_ALL_RES::_internal_mutable_friendinfolist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.friendinfolist_;
}

// uint32 loopFlag = 2;
inline void SS2C_FRIEND_LIST_ALL_RES::clear_loopflag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.loopflag_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_LIST_ALL_RES::loopflag() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_LIST_ALL_RES.loopFlag)
  return _internal_loopflag();
}
inline void SS2C_FRIEND_LIST_ALL_RES::set_loopflag(::uint32_t value) {
  _internal_set_loopflag(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_LIST_ALL_RES.loopFlag)
}
inline ::uint32_t SS2C_FRIEND_LIST_ALL_RES::_internal_loopflag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.loopflag_;
}
inline void SS2C_FRIEND_LIST_ALL_RES::_internal_set_loopflag(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.loopflag_ = value;
}

// uint32 totalUserCount = 3;
inline void SS2C_FRIEND_LIST_ALL_RES::clear_totalusercount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.totalusercount_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_LIST_ALL_RES::totalusercount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_LIST_ALL_RES.totalUserCount)
  return _internal_totalusercount();
}
inline void SS2C_FRIEND_LIST_ALL_RES::set_totalusercount(::uint32_t value) {
  _internal_set_totalusercount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_LIST_ALL_RES.totalUserCount)
}
inline ::uint32_t SS2C_FRIEND_LIST_ALL_RES::_internal_totalusercount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.totalusercount_;
}
inline void SS2C_FRIEND_LIST_ALL_RES::_internal_set_totalusercount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.totalusercount_ = value;
}

// uint32 lobbyLocateCount = 4;
inline void SS2C_FRIEND_LIST_ALL_RES::clear_lobbylocatecount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lobbylocatecount_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_LIST_ALL_RES::lobbylocatecount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_LIST_ALL_RES.lobbyLocateCount)
  return _internal_lobbylocatecount();
}
inline void SS2C_FRIEND_LIST_ALL_RES::set_lobbylocatecount(::uint32_t value) {
  _internal_set_lobbylocatecount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_LIST_ALL_RES.lobbyLocateCount)
}
inline ::uint32_t SS2C_FRIEND_LIST_ALL_RES::_internal_lobbylocatecount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lobbylocatecount_;
}
inline void SS2C_FRIEND_LIST_ALL_RES::_internal_set_lobbylocatecount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lobbylocatecount_ = value;
}

// uint32 dungeonLocateCount = 5;
inline void SS2C_FRIEND_LIST_ALL_RES::clear_dungeonlocatecount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonlocatecount_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_LIST_ALL_RES::dungeonlocatecount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_LIST_ALL_RES.dungeonLocateCount)
  return _internal_dungeonlocatecount();
}
inline void SS2C_FRIEND_LIST_ALL_RES::set_dungeonlocatecount(::uint32_t value) {
  _internal_set_dungeonlocatecount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_LIST_ALL_RES.dungeonLocateCount)
}
inline ::uint32_t SS2C_FRIEND_LIST_ALL_RES::_internal_dungeonlocatecount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dungeonlocatecount_;
}
inline void SS2C_FRIEND_LIST_ALL_RES::_internal_set_dungeonlocatecount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonlocatecount_ = value;
}

// -------------------------------------------------------------------

// SC2S_FRIEND_FIND_REQ

// string accountNickname = 1;
inline void SC2S_FRIEND_FIND_REQ::clear_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.ClearToEmpty();
}
inline const std::string& SC2S_FRIEND_FIND_REQ::accountnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_FRIEND_FIND_REQ.accountNickname)
  return _internal_accountnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_FRIEND_FIND_REQ::set_accountnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_FRIEND_FIND_REQ.accountNickname)
}
inline std::string* SC2S_FRIEND_FIND_REQ::mutable_accountnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_FRIEND_FIND_REQ.accountNickname)
  return _s;
}
inline const std::string& SC2S_FRIEND_FIND_REQ::_internal_accountnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountnickname_.Get();
}
inline void SC2S_FRIEND_FIND_REQ::_internal_set_accountnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(value, GetArena());
}
inline std::string* SC2S_FRIEND_FIND_REQ::_internal_mutable_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountnickname_.Mutable( GetArena());
}
inline std::string* SC2S_FRIEND_FIND_REQ::release_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_FRIEND_FIND_REQ.accountNickname)
  return _impl_.accountnickname_.Release();
}
inline void SC2S_FRIEND_FIND_REQ::set_allocated_accountnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountnickname_.IsDefault()) {
          _impl_.accountnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_FRIEND_FIND_REQ.accountNickname)
}

// -------------------------------------------------------------------

// SS2C_FRIEND_FIND_RES

// uint32 result = 1;
inline void SS2C_FRIEND_FIND_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_FRIEND_FIND_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_FIND_RES.result)
  return _internal_result();
}
inline void SS2C_FRIEND_FIND_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_FRIEND_FIND_RES.result)
}
inline ::uint32_t SS2C_FRIEND_FIND_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_FRIEND_FIND_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// .DC.Packet.SCHARACTER_FRIEND_INFO friendInfo = 2;
inline bool SS2C_FRIEND_FIND_RES::has_friendinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.friendinfo_ != nullptr);
  return value;
}
inline const ::DC::Packet::SCHARACTER_FRIEND_INFO& SS2C_FRIEND_FIND_RES::_internal_friendinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SCHARACTER_FRIEND_INFO* p = _impl_.friendinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SCHARACTER_FRIEND_INFO&>(::DC::Packet::_SCHARACTER_FRIEND_INFO_default_instance_);
}
inline const ::DC::Packet::SCHARACTER_FRIEND_INFO& SS2C_FRIEND_FIND_RES::friendinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_FRIEND_FIND_RES.friendInfo)
  return _internal_friendinfo();
}
inline void SS2C_FRIEND_FIND_RES::unsafe_arena_set_allocated_friendinfo(::DC::Packet::SCHARACTER_FRIEND_INFO* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.friendinfo_);
  }
  _impl_.friendinfo_ = reinterpret_cast<::DC::Packet::SCHARACTER_FRIEND_INFO*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_FRIEND_FIND_RES.friendInfo)
}
inline ::DC::Packet::SCHARACTER_FRIEND_INFO* SS2C_FRIEND_FIND_RES::release_friendinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SCHARACTER_FRIEND_INFO* released = _impl_.friendinfo_;
  _impl_.friendinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SCHARACTER_FRIEND_INFO* SS2C_FRIEND_FIND_RES::unsafe_arena_release_friendinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_FRIEND_FIND_RES.friendInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SCHARACTER_FRIEND_INFO* temp = _impl_.friendinfo_;
  _impl_.friendinfo_ = nullptr;
  return temp;
}
inline ::DC::Packet::SCHARACTER_FRIEND_INFO* SS2C_FRIEND_FIND_RES::_internal_mutable_friendinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.friendinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SCHARACTER_FRIEND_INFO>(GetArena());
    _impl_.friendinfo_ = reinterpret_cast<::DC::Packet::SCHARACTER_FRIEND_INFO*>(p);
  }
  return _impl_.friendinfo_;
}
inline ::DC::Packet::SCHARACTER_FRIEND_INFO* SS2C_FRIEND_FIND_RES::mutable_friendinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SCHARACTER_FRIEND_INFO* _msg = _internal_mutable_friendinfo();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_FRIEND_FIND_RES.friendInfo)
  return _msg;
}
inline void SS2C_FRIEND_FIND_RES::set_allocated_friendinfo(::DC::Packet::SCHARACTER_FRIEND_INFO* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.friendinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.friendinfo_ = reinterpret_cast<::DC::Packet::SCHARACTER_FRIEND_INFO*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_FRIEND_FIND_RES.friendInfo)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Packet
}  // namespace DC


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Friend_2eproto_2epb_2eh
