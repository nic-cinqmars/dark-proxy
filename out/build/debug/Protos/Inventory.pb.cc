// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Inventory.proto
// Protobuf C++ Version: 5.29.0-dev

#include "Inventory.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace DC {
namespace Packet {
              template <typename>
PROTOBUF_CONSTEXPR SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES::SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RESDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RESDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RESDefaultTypeInternal() {}
  union {
    SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RESDefaultTypeInternal _SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SS2C_INVENTORY_SWAP_RES::SS2C_INVENTORY_SWAP_RES(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SS2C_INVENTORY_SWAP_RESDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SS2C_INVENTORY_SWAP_RESDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SS2C_INVENTORY_SWAP_RESDefaultTypeInternal() {}
  union {
    SS2C_INVENTORY_SWAP_RES _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SS2C_INVENTORY_SWAP_RESDefaultTypeInternal _SS2C_INVENTORY_SWAP_RES_default_instance_;

inline constexpr SS2C_INVENTORY_SPLIT_SWAP_RES::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : newuniqueid_{::uint64_t{0u}},
        newinventoryid_{0u},
        newslotid_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SS2C_INVENTORY_SPLIT_SWAP_RES::SS2C_INVENTORY_SPLIT_SWAP_RES(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SS2C_INVENTORY_SPLIT_SWAP_RESDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SS2C_INVENTORY_SPLIT_SWAP_RESDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SS2C_INVENTORY_SPLIT_SWAP_RESDefaultTypeInternal() {}
  union {
    SS2C_INVENTORY_SPLIT_SWAP_RES _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SS2C_INVENTORY_SPLIT_SWAP_RESDefaultTypeInternal _SS2C_INVENTORY_SPLIT_SWAP_RES_default_instance_;

inline constexpr SS2C_INVENTORY_SPLIT_MOVE_RES::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : newuniqueid_{::uint64_t{0u}},
        newinventoryid_{0u},
        newslotid_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SS2C_INVENTORY_SPLIT_MOVE_RES::SS2C_INVENTORY_SPLIT_MOVE_RES(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SS2C_INVENTORY_SPLIT_MOVE_RESDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SS2C_INVENTORY_SPLIT_MOVE_RESDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SS2C_INVENTORY_SPLIT_MOVE_RESDefaultTypeInternal() {}
  union {
    SS2C_INVENTORY_SPLIT_MOVE_RES _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SS2C_INVENTORY_SPLIT_MOVE_RESDefaultTypeInternal _SS2C_INVENTORY_SPLIT_MOVE_RES_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SS2C_INVENTORY_SPLIT_MERGE_RES::SS2C_INVENTORY_SPLIT_MERGE_RES(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SS2C_INVENTORY_SPLIT_MERGE_RESDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SS2C_INVENTORY_SPLIT_MERGE_RESDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SS2C_INVENTORY_SPLIT_MERGE_RESDefaultTypeInternal() {}
  union {
    SS2C_INVENTORY_SPLIT_MERGE_RES _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SS2C_INVENTORY_SPLIT_MERGE_RESDefaultTypeInternal _SS2C_INVENTORY_SPLIT_MERGE_RES_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SS2C_INVENTORY_MOVE_RES::SS2C_INVENTORY_MOVE_RES(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SS2C_INVENTORY_MOVE_RESDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SS2C_INVENTORY_MOVE_RESDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SS2C_INVENTORY_MOVE_RESDefaultTypeInternal() {}
  union {
    SS2C_INVENTORY_MOVE_RES _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SS2C_INVENTORY_MOVE_RESDefaultTypeInternal _SS2C_INVENTORY_MOVE_RES_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SS2C_INVENTORY_MERGE_RES::SS2C_INVENTORY_MERGE_RES(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SS2C_INVENTORY_MERGE_RESDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SS2C_INVENTORY_MERGE_RESDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SS2C_INVENTORY_MERGE_RESDefaultTypeInternal() {}
  union {
    SS2C_INVENTORY_MERGE_RES _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SS2C_INVENTORY_MERGE_RESDefaultTypeInternal _SS2C_INVENTORY_MERGE_RES_default_instance_;

inline constexpr SS2C_INVENTORY_EXPAND_STORAGE_RES::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SS2C_INVENTORY_EXPAND_STORAGE_RES::SS2C_INVENTORY_EXPAND_STORAGE_RES(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SS2C_INVENTORY_EXPAND_STORAGE_RESDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SS2C_INVENTORY_EXPAND_STORAGE_RESDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SS2C_INVENTORY_EXPAND_STORAGE_RESDefaultTypeInternal() {}
  union {
    SS2C_INVENTORY_EXPAND_STORAGE_RES _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SS2C_INVENTORY_EXPAND_STORAGE_RESDefaultTypeInternal _SS2C_INVENTORY_EXPAND_STORAGE_RES_default_instance_;

inline constexpr SINVENTORY_ITEM_REQ_INFO::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : uniqueid_{::uint64_t{0u}},
        inventoryid_{0u},
        slotid_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SINVENTORY_ITEM_REQ_INFO::SINVENTORY_ITEM_REQ_INFO(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SINVENTORY_ITEM_REQ_INFODefaultTypeInternal {
  PROTOBUF_CONSTEXPR SINVENTORY_ITEM_REQ_INFODefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SINVENTORY_ITEM_REQ_INFODefaultTypeInternal() {}
  union {
    SINVENTORY_ITEM_REQ_INFO _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SINVENTORY_ITEM_REQ_INFODefaultTypeInternal _SINVENTORY_ITEM_REQ_INFO_default_instance_;

inline constexpr SC2S_STORAGE_INFO_REQ::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : isrefresh_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SC2S_STORAGE_INFO_REQ::SC2S_STORAGE_INFO_REQ(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC2S_STORAGE_INFO_REQDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC2S_STORAGE_INFO_REQDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC2S_STORAGE_INFO_REQDefaultTypeInternal() {}
  union {
    SC2S_STORAGE_INFO_REQ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC2S_STORAGE_INFO_REQDefaultTypeInternal _SC2S_STORAGE_INFO_REQ_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SC2S_INVENTORY_INFO_REQ::SC2S_INVENTORY_INFO_REQ(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SC2S_INVENTORY_INFO_REQDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC2S_INVENTORY_INFO_REQDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC2S_INVENTORY_INFO_REQDefaultTypeInternal() {}
  union {
    SC2S_INVENTORY_INFO_REQ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC2S_INVENTORY_INFO_REQDefaultTypeInternal _SC2S_INVENTORY_INFO_REQ_default_instance_;

inline constexpr SC2S_INVENTORY_EXPAND_STORAGE_REQ::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : buyinventoryid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SC2S_INVENTORY_EXPAND_STORAGE_REQ::SC2S_INVENTORY_EXPAND_STORAGE_REQ(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC2S_INVENTORY_EXPAND_STORAGE_REQDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC2S_INVENTORY_EXPAND_STORAGE_REQDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC2S_INVENTORY_EXPAND_STORAGE_REQDefaultTypeInternal() {}
  union {
    SC2S_INVENTORY_EXPAND_STORAGE_REQ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC2S_INVENTORY_EXPAND_STORAGE_REQDefaultTypeInternal _SC2S_INVENTORY_EXPAND_STORAGE_REQ_default_instance_;

inline constexpr SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        srcinfo_{nullptr},
        dstinfo_{nullptr},
        newslotid_{0u},
        newinventoryid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQDefaultTypeInternal() {}
  union {
    SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQDefaultTypeInternal _SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ_default_instance_;

inline constexpr SC2S_INVENTORY_SPLIT_SWAP_REQ::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        srcinfo_{nullptr},
        dstinfo_{nullptr},
        count_{0u},
        newslotid_{0u},
        newinventoryid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SC2S_INVENTORY_SPLIT_SWAP_REQ::SC2S_INVENTORY_SPLIT_SWAP_REQ(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC2S_INVENTORY_SPLIT_SWAP_REQDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC2S_INVENTORY_SPLIT_SWAP_REQDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC2S_INVENTORY_SPLIT_SWAP_REQDefaultTypeInternal() {}
  union {
    SC2S_INVENTORY_SPLIT_SWAP_REQ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC2S_INVENTORY_SPLIT_SWAP_REQDefaultTypeInternal _SC2S_INVENTORY_SPLIT_SWAP_REQ_default_instance_;

inline constexpr SC2S_INVENTORY_SPLIT_MOVE_REQ::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        srcinfo_{nullptr},
        count_{0u},
        dstinventoryid_{0u},
        dstslotid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SC2S_INVENTORY_SPLIT_MOVE_REQ::SC2S_INVENTORY_SPLIT_MOVE_REQ(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC2S_INVENTORY_SPLIT_MOVE_REQDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC2S_INVENTORY_SPLIT_MOVE_REQDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC2S_INVENTORY_SPLIT_MOVE_REQDefaultTypeInternal() {}
  union {
    SC2S_INVENTORY_SPLIT_MOVE_REQ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC2S_INVENTORY_SPLIT_MOVE_REQDefaultTypeInternal _SC2S_INVENTORY_SPLIT_MOVE_REQ_default_instance_;

inline constexpr SC2S_INVENTORY_SPLIT_MERGE_REQ::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        srcinfo_{nullptr},
        dstinfo_{nullptr},
        count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SC2S_INVENTORY_SPLIT_MERGE_REQ::SC2S_INVENTORY_SPLIT_MERGE_REQ(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC2S_INVENTORY_SPLIT_MERGE_REQDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC2S_INVENTORY_SPLIT_MERGE_REQDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC2S_INVENTORY_SPLIT_MERGE_REQDefaultTypeInternal() {}
  union {
    SC2S_INVENTORY_SPLIT_MERGE_REQ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC2S_INVENTORY_SPLIT_MERGE_REQDefaultTypeInternal _SC2S_INVENTORY_SPLIT_MERGE_REQ_default_instance_;

inline constexpr SC2S_INVENTORY_MOVE_REQ::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        srcinfo_{nullptr},
        dstinventoryid_{0u},
        dstslotid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SC2S_INVENTORY_MOVE_REQ::SC2S_INVENTORY_MOVE_REQ(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC2S_INVENTORY_MOVE_REQDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC2S_INVENTORY_MOVE_REQDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC2S_INVENTORY_MOVE_REQDefaultTypeInternal() {}
  union {
    SC2S_INVENTORY_MOVE_REQ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC2S_INVENTORY_MOVE_REQDefaultTypeInternal _SC2S_INVENTORY_MOVE_REQ_default_instance_;

inline constexpr SC2S_INVENTORY_MERGE_REQ::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        srcinfo_{nullptr},
        dstinfo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SC2S_INVENTORY_MERGE_REQ::SC2S_INVENTORY_MERGE_REQ(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC2S_INVENTORY_MERGE_REQDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC2S_INVENTORY_MERGE_REQDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC2S_INVENTORY_MERGE_REQDefaultTypeInternal() {}
  union {
    SC2S_INVENTORY_MERGE_REQ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC2S_INVENTORY_MERGE_REQDefaultTypeInternal _SC2S_INVENTORY_MERGE_REQ_default_instance_;

inline constexpr INVENTORY_SWAP_DST_INFO::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dstinfo_{nullptr},
        newslotid_{0u},
        newinventoryid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR INVENTORY_SWAP_DST_INFO::INVENTORY_SWAP_DST_INFO(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct INVENTORY_SWAP_DST_INFODefaultTypeInternal {
  PROTOBUF_CONSTEXPR INVENTORY_SWAP_DST_INFODefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~INVENTORY_SWAP_DST_INFODefaultTypeInternal() {}
  union {
    INVENTORY_SWAP_DST_INFO _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 INVENTORY_SWAP_DST_INFODefaultTypeInternal _INVENTORY_SWAP_DST_INFO_default_instance_;

inline constexpr SS2C_STORAGE_INFO_RES::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : storageitems_{},
        result_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SS2C_STORAGE_INFO_RES::SS2C_STORAGE_INFO_RES(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SS2C_STORAGE_INFO_RESDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SS2C_STORAGE_INFO_RESDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SS2C_STORAGE_INFO_RESDefaultTypeInternal() {}
  union {
    SS2C_STORAGE_INFO_RES _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SS2C_STORAGE_INFO_RESDefaultTypeInternal _SS2C_STORAGE_INFO_RES_default_instance_;

inline constexpr SS2C_INVENTORY_SINGLE_UPDATE_RES::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : olditem_{},
        newitem_{},
        result_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SS2C_INVENTORY_SINGLE_UPDATE_RES::SS2C_INVENTORY_SINGLE_UPDATE_RES(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SS2C_INVENTORY_SINGLE_UPDATE_RESDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SS2C_INVENTORY_SINGLE_UPDATE_RESDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SS2C_INVENTORY_SINGLE_UPDATE_RESDefaultTypeInternal() {}
  union {
    SS2C_INVENTORY_SINGLE_UPDATE_RES _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SS2C_INVENTORY_SINGLE_UPDATE_RESDefaultTypeInternal _SS2C_INVENTORY_SINGLE_UPDATE_RES_default_instance_;

inline constexpr SS2C_INVENTORY_INFO_RES::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : inventoryitems_{},
        result_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SS2C_INVENTORY_INFO_RES::SS2C_INVENTORY_INFO_RES(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SS2C_INVENTORY_INFO_RESDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SS2C_INVENTORY_INFO_RESDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SS2C_INVENTORY_INFO_RESDefaultTypeInternal() {}
  union {
    SS2C_INVENTORY_INFO_RES _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SS2C_INVENTORY_INFO_RESDefaultTypeInternal _SS2C_INVENTORY_INFO_RES_default_instance_;

inline constexpr SS2C_INVENTORY_ALL_UPDATE_RES::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : inventoryitems_{},
        result_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SS2C_INVENTORY_ALL_UPDATE_RES::SS2C_INVENTORY_ALL_UPDATE_RES(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SS2C_INVENTORY_ALL_UPDATE_RESDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SS2C_INVENTORY_ALL_UPDATE_RESDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SS2C_INVENTORY_ALL_UPDATE_RESDefaultTypeInternal() {}
  union {
    SS2C_INVENTORY_ALL_UPDATE_RES _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SS2C_INVENTORY_ALL_UPDATE_RESDefaultTypeInternal _SS2C_INVENTORY_ALL_UPDATE_RES_default_instance_;

inline constexpr SC2S_INVENTORY_SWAP_REQ::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        swapinfos_{},
        srcinfo_{nullptr},
        dstinfo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SC2S_INVENTORY_SWAP_REQ::SC2S_INVENTORY_SWAP_REQ(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC2S_INVENTORY_SWAP_REQDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC2S_INVENTORY_SWAP_REQDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC2S_INVENTORY_SWAP_REQDefaultTypeInternal() {}
  union {
    SC2S_INVENTORY_SWAP_REQ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC2S_INVENTORY_SWAP_REQDefaultTypeInternal _SC2S_INVENTORY_SWAP_REQ_default_instance_;

inline constexpr SC2S_INVENTORY_SINGLE_UPDATE_REQ::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : olditem_{},
        newitem_{},
        singleupdateflag_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SC2S_INVENTORY_SINGLE_UPDATE_REQ::SC2S_INVENTORY_SINGLE_UPDATE_REQ(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC2S_INVENTORY_SINGLE_UPDATE_REQDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC2S_INVENTORY_SINGLE_UPDATE_REQDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC2S_INVENTORY_SINGLE_UPDATE_REQDefaultTypeInternal() {}
  union {
    SC2S_INVENTORY_SINGLE_UPDATE_REQ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC2S_INVENTORY_SINGLE_UPDATE_REQDefaultTypeInternal _SC2S_INVENTORY_SINGLE_UPDATE_REQ_default_instance_;

inline constexpr SC2S_INVENTORY_ALL_UPDATE_REQ::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : inventoryitems_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SC2S_INVENTORY_ALL_UPDATE_REQ::SC2S_INVENTORY_ALL_UPDATE_REQ(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC2S_INVENTORY_ALL_UPDATE_REQDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC2S_INVENTORY_ALL_UPDATE_REQDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC2S_INVENTORY_ALL_UPDATE_REQDefaultTypeInternal() {}
  union {
    SC2S_INVENTORY_ALL_UPDATE_REQ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC2S_INVENTORY_ALL_UPDATE_REQDefaultTypeInternal _SC2S_INVENTORY_ALL_UPDATE_REQ_default_instance_;
}  // namespace Packet
}  // namespace DC
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_Inventory_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Inventory_2eproto = nullptr;
const ::uint32_t
    TableStruct_Inventory_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_INFO_REQ, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_INFO_RES, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_INFO_RES, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_INFO_RES, _impl_.inventoryitems_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_ALL_UPDATE_REQ, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_ALL_UPDATE_REQ, _impl_.inventoryitems_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_ALL_UPDATE_RES, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_ALL_UPDATE_RES, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_ALL_UPDATE_RES, _impl_.inventoryitems_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SINVENTORY_ITEM_REQ_INFO, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SINVENTORY_ITEM_REQ_INFO, _impl_.uniqueid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SINVENTORY_ITEM_REQ_INFO, _impl_.inventoryid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SINVENTORY_ITEM_REQ_INFO, _impl_.slotid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_MOVE_REQ, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_MOVE_REQ, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_MOVE_REQ, _impl_.srcinfo_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_MOVE_REQ, _impl_.dstinventoryid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_MOVE_REQ, _impl_.dstslotid_),
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_MOVE_RES, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_MERGE_REQ, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_MERGE_REQ, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_MERGE_REQ, _impl_.srcinfo_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_MERGE_REQ, _impl_.dstinfo_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_MERGE_RES, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::INVENTORY_SWAP_DST_INFO, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::INVENTORY_SWAP_DST_INFO, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::INVENTORY_SWAP_DST_INFO, _impl_.dstinfo_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::INVENTORY_SWAP_DST_INFO, _impl_.newslotid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::INVENTORY_SWAP_DST_INFO, _impl_.newinventoryid_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SWAP_REQ, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SWAP_REQ, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SWAP_REQ, _impl_.srcinfo_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SWAP_REQ, _impl_.dstinfo_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SWAP_REQ, _impl_.swapinfos_),
        0,
        1,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_SWAP_RES, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_MOVE_REQ, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.srcinfo_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.dstinventoryid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.dstslotid_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_SPLIT_MOVE_RES, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_SPLIT_MOVE_RES, _impl_.newuniqueid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_SPLIT_MOVE_RES, _impl_.newinventoryid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_SPLIT_MOVE_RES, _impl_.newslotid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_MERGE_REQ, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_MERGE_REQ, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_MERGE_REQ, _impl_.srcinfo_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_MERGE_REQ, _impl_.dstinfo_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_MERGE_REQ, _impl_.count_),
        0,
        1,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_SPLIT_MERGE_RES, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_SWAP_REQ, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.srcinfo_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.dstinfo_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.newslotid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.newinventoryid_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_SPLIT_SWAP_RES, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_SPLIT_SWAP_RES, _impl_.newuniqueid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_SPLIT_SWAP_RES, _impl_.newinventoryid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_SPLIT_SWAP_RES, _impl_.newslotid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_.srcinfo_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_.dstinfo_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_.newslotid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_.newinventoryid_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SINGLE_UPDATE_REQ, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SINGLE_UPDATE_REQ, _impl_.singleupdateflag_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SINGLE_UPDATE_REQ, _impl_.olditem_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_SINGLE_UPDATE_REQ, _impl_.newitem_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_SINGLE_UPDATE_RES, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_SINGLE_UPDATE_RES, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_SINGLE_UPDATE_RES, _impl_.olditem_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_SINGLE_UPDATE_RES, _impl_.newitem_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_STORAGE_INFO_REQ, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_STORAGE_INFO_REQ, _impl_.isrefresh_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_STORAGE_INFO_RES, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_STORAGE_INFO_RES, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_STORAGE_INFO_RES, _impl_.storageitems_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_EXPAND_STORAGE_REQ, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_INVENTORY_EXPAND_STORAGE_REQ, _impl_.buyinventoryid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_EXPAND_STORAGE_RES, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_INVENTORY_EXPAND_STORAGE_RES, _impl_.result_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::DC::Packet::SC2S_INVENTORY_INFO_REQ)},
        {8, -1, -1, sizeof(::DC::Packet::SS2C_INVENTORY_INFO_RES)},
        {18, -1, -1, sizeof(::DC::Packet::SC2S_INVENTORY_ALL_UPDATE_REQ)},
        {27, -1, -1, sizeof(::DC::Packet::SS2C_INVENTORY_ALL_UPDATE_RES)},
        {37, -1, -1, sizeof(::DC::Packet::SINVENTORY_ITEM_REQ_INFO)},
        {48, 59, -1, sizeof(::DC::Packet::SC2S_INVENTORY_MOVE_REQ)},
        {62, -1, -1, sizeof(::DC::Packet::SS2C_INVENTORY_MOVE_RES)},
        {70, 80, -1, sizeof(::DC::Packet::SC2S_INVENTORY_MERGE_REQ)},
        {82, -1, -1, sizeof(::DC::Packet::SS2C_INVENTORY_MERGE_RES)},
        {90, 101, -1, sizeof(::DC::Packet::INVENTORY_SWAP_DST_INFO)},
        {104, 115, -1, sizeof(::DC::Packet::SC2S_INVENTORY_SWAP_REQ)},
        {118, -1, -1, sizeof(::DC::Packet::SS2C_INVENTORY_SWAP_RES)},
        {126, 138, -1, sizeof(::DC::Packet::SC2S_INVENTORY_SPLIT_MOVE_REQ)},
        {142, -1, -1, sizeof(::DC::Packet::SS2C_INVENTORY_SPLIT_MOVE_RES)},
        {153, 164, -1, sizeof(::DC::Packet::SC2S_INVENTORY_SPLIT_MERGE_REQ)},
        {167, -1, -1, sizeof(::DC::Packet::SS2C_INVENTORY_SPLIT_MERGE_RES)},
        {175, 188, -1, sizeof(::DC::Packet::SC2S_INVENTORY_SPLIT_SWAP_REQ)},
        {193, -1, -1, sizeof(::DC::Packet::SS2C_INVENTORY_SPLIT_SWAP_RES)},
        {204, 216, -1, sizeof(::DC::Packet::SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ)},
        {220, -1, -1, sizeof(::DC::Packet::SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES)},
        {228, -1, -1, sizeof(::DC::Packet::SC2S_INVENTORY_SINGLE_UPDATE_REQ)},
        {239, -1, -1, sizeof(::DC::Packet::SS2C_INVENTORY_SINGLE_UPDATE_RES)},
        {250, -1, -1, sizeof(::DC::Packet::SC2S_STORAGE_INFO_REQ)},
        {259, -1, -1, sizeof(::DC::Packet::SS2C_STORAGE_INFO_RES)},
        {269, -1, -1, sizeof(::DC::Packet::SC2S_INVENTORY_EXPAND_STORAGE_REQ)},
        {278, -1, -1, sizeof(::DC::Packet::SS2C_INVENTORY_EXPAND_STORAGE_RES)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::DC::Packet::_SC2S_INVENTORY_INFO_REQ_default_instance_._instance,
    &::DC::Packet::_SS2C_INVENTORY_INFO_RES_default_instance_._instance,
    &::DC::Packet::_SC2S_INVENTORY_ALL_UPDATE_REQ_default_instance_._instance,
    &::DC::Packet::_SS2C_INVENTORY_ALL_UPDATE_RES_default_instance_._instance,
    &::DC::Packet::_SINVENTORY_ITEM_REQ_INFO_default_instance_._instance,
    &::DC::Packet::_SC2S_INVENTORY_MOVE_REQ_default_instance_._instance,
    &::DC::Packet::_SS2C_INVENTORY_MOVE_RES_default_instance_._instance,
    &::DC::Packet::_SC2S_INVENTORY_MERGE_REQ_default_instance_._instance,
    &::DC::Packet::_SS2C_INVENTORY_MERGE_RES_default_instance_._instance,
    &::DC::Packet::_INVENTORY_SWAP_DST_INFO_default_instance_._instance,
    &::DC::Packet::_SC2S_INVENTORY_SWAP_REQ_default_instance_._instance,
    &::DC::Packet::_SS2C_INVENTORY_SWAP_RES_default_instance_._instance,
    &::DC::Packet::_SC2S_INVENTORY_SPLIT_MOVE_REQ_default_instance_._instance,
    &::DC::Packet::_SS2C_INVENTORY_SPLIT_MOVE_RES_default_instance_._instance,
    &::DC::Packet::_SC2S_INVENTORY_SPLIT_MERGE_REQ_default_instance_._instance,
    &::DC::Packet::_SS2C_INVENTORY_SPLIT_MERGE_RES_default_instance_._instance,
    &::DC::Packet::_SC2S_INVENTORY_SPLIT_SWAP_REQ_default_instance_._instance,
    &::DC::Packet::_SS2C_INVENTORY_SPLIT_SWAP_RES_default_instance_._instance,
    &::DC::Packet::_SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ_default_instance_._instance,
    &::DC::Packet::_SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES_default_instance_._instance,
    &::DC::Packet::_SC2S_INVENTORY_SINGLE_UPDATE_REQ_default_instance_._instance,
    &::DC::Packet::_SS2C_INVENTORY_SINGLE_UPDATE_RES_default_instance_._instance,
    &::DC::Packet::_SC2S_STORAGE_INFO_REQ_default_instance_._instance,
    &::DC::Packet::_SS2C_STORAGE_INFO_RES_default_instance_._instance,
    &::DC::Packet::_SC2S_INVENTORY_EXPAND_STORAGE_REQ_default_instance_._instance,
    &::DC::Packet::_SS2C_INVENTORY_EXPAND_STORAGE_RES_default_instance_._instance,
};
const char descriptor_table_protodef_Inventory_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017Inventory.proto\022\tDC.Packet\032\013_Item.prot"
    "o\"\031\n\027SC2S_INVENTORY_INFO_REQ\"\252\001\n\027SS2C_IN"
    "VENTORY_INFO_RES\022\016\n\006result\030\001 \001(\r\022(\n\016inve"
    "ntoryItems\030\002 \003(\0132\020.DC.Packet.SItem\"U\n\032RE"
    "SULT_INVENTORY_INFO_INFO\022\010\n\004NONE\020\000\022\020\n\014OK"
    "_SEND_DATA\020\001\022\021\n\rOK_NOT_CHANGE\020\002\022\010\n\004FAIL\020"
    "\003\"I\n\035SC2S_INVENTORY_ALL_UPDATE_REQ\022(\n\016in"
    "ventoryItems\030\001 \003(\0132\020.DC.Packet.SItem\"\220\001\n"
    "\035SS2C_INVENTORY_ALL_UPDATE_RES\022\016\n\006result"
    "\030\001 \001(\r\022(\n\016inventoryItems\030\002 \003(\0132\020.DC.Pack"
    "et.SItem\"5\n\027RESULT_INVENTORY_UPDATE\022\010\n\004N"
    "ONE\020\000\022\006\n\002OK\020\001\022\010\n\004FAIL\020\002\"Q\n\030SINVENTORY_IT"
    "EM_REQ_INFO\022\020\n\010uniqueId\030\001 \001(\004\022\023\n\013invento"
    "ryId\030\002 \001(\r\022\016\n\006slotId\030\003 \001(\r\"z\n\027SC2S_INVEN"
    "TORY_MOVE_REQ\0224\n\007srcInfo\030\001 \001(\0132#.DC.Pack"
    "et.SINVENTORY_ITEM_REQ_INFO\022\026\n\016dstInvent"
    "oryId\030\002 \001(\r\022\021\n\tdstSlotId\030\003 \001(\r\"\031\n\027SS2C_I"
    "NVENTORY_MOVE_RES\"\206\001\n\030SC2S_INVENTORY_MER"
    "GE_REQ\0224\n\007srcInfo\030\001 \001(\0132#.DC.Packet.SINV"
    "ENTORY_ITEM_REQ_INFO\0224\n\007dstInfo\030\002 \001(\0132#."
    "DC.Packet.SINVENTORY_ITEM_REQ_INFO\"\032\n\030SS"
    "2C_INVENTORY_MERGE_RES\"z\n\027INVENTORY_SWAP"
    "_DST_INFO\0224\n\007dstInfo\030\001 \001(\0132#.DC.Packet.S"
    "INVENTORY_ITEM_REQ_INFO\022\021\n\tnewSlotId\030\002 \001"
    "(\r\022\026\n\016newInventoryId\030\003 \001(\r\"\274\001\n\027SC2S_INVE"
    "NTORY_SWAP_REQ\0224\n\007srcInfo\030\001 \001(\0132#.DC.Pac"
    "ket.SINVENTORY_ITEM_REQ_INFO\0224\n\007dstInfo\030"
    "\002 \001(\0132#.DC.Packet.SINVENTORY_ITEM_REQ_IN"
    "FO\0225\n\tswapInfos\030\003 \003(\0132\".DC.Packet.INVENT"
    "ORY_SWAP_DST_INFO\"\031\n\027SS2C_INVENTORY_SWAP"
    "_RES\"\217\001\n\035SC2S_INVENTORY_SPLIT_MOVE_REQ\0224"
    "\n\007srcInfo\030\001 \001(\0132#.DC.Packet.SINVENTORY_I"
    "TEM_REQ_INFO\022\r\n\005count\030\002 \001(\r\022\026\n\016dstInvent"
    "oryId\030\003 \001(\r\022\021\n\tdstSlotId\030\004 \001(\r\"_\n\035SS2C_I"
    "NVENTORY_SPLIT_MOVE_RES\022\023\n\013newUniqueId\030\001"
    " \001(\004\022\026\n\016newInventoryId\030\002 \001(\r\022\021\n\tnewSlotI"
    "d\030\003 \001(\r\"\233\001\n\036SC2S_INVENTORY_SPLIT_MERGE_R"
    "EQ\0224\n\007srcInfo\030\001 \001(\0132#.DC.Packet.SINVENTO"
    "RY_ITEM_REQ_INFO\0224\n\007dstInfo\030\002 \001(\0132#.DC.P"
    "acket.SINVENTORY_ITEM_REQ_INFO\022\r\n\005count\030"
    "\003 \001(\r\" \n\036SS2C_INVENTORY_SPLIT_MERGE_RES\""
    "\305\001\n\035SC2S_INVENTORY_SPLIT_SWAP_REQ\0224\n\007src"
    "Info\030\001 \001(\0132#.DC.Packet.SINVENTORY_ITEM_R"
    "EQ_INFO\0224\n\007dstInfo\030\002 \001(\0132#.DC.Packet.SIN"
    "VENTORY_ITEM_REQ_INFO\022\r\n\005count\030\003 \001(\r\022\021\n\t"
    "newSlotId\030\004 \001(\r\022\026\n\016newInventoryId\030\005 \001(\r\""
    "_\n\035SS2C_INVENTORY_SPLIT_SWAP_RES\022\023\n\013newU"
    "niqueId\030\001 \001(\004\022\026\n\016newInventoryId\030\002 \001(\r\022\021\n"
    "\tnewSlotId\030\003 \001(\r\"\302\001\n)SC2S_INVENTORY_TWO_"
    "HANDED_WEAPON_SWAP_REQ\0224\n\007srcInfo\030\001 \001(\0132"
    "#.DC.Packet.SINVENTORY_ITEM_REQ_INFO\0224\n\007"
    "dstInfo\030\002 \001(\0132#.DC.Packet.SINVENTORY_ITE"
    "M_REQ_INFO\022\021\n\tnewSlotId\030\003 \001(\r\022\026\n\016newInve"
    "ntoryId\030\004 \001(\r\"+\n)SS2C_INVENTORY_TWO_HAND"
    "ED_WEAPON_SWAP_RES\"\202\001\n SC2S_INVENTORY_SI"
    "NGLE_UPDATE_REQ\022\030\n\020singleUpdateFlag\030\001 \001("
    "\r\022!\n\007oldItem\030\002 \003(\0132\020.DC.Packet.SItem\022!\n\007"
    "newItem\030\003 \003(\0132\020.DC.Packet.SItem\"\217\002\n SS2C"
    "_INVENTORY_SINGLE_UPDATE_RES\022\016\n\006result\030\001"
    " \001(\r\022!\n\007oldItem\030\002 \003(\0132\020.DC.Packet.SItem\022"
    "!\n\007newItem\030\003 \003(\0132\020.DC.Packet.SItem\"\224\001\n\036R"
    "ESULT_INVENTORY_SINGLE_UPDATE\022\010\n\004NONE\020\000\022"
    "\006\n\002OK\020\001\022\010\n\004FAIL\020\002\022\035\n\031FAIL_VALID_CHECK_OL"
    "D_ITEM\020\003\022\035\n\031FAIL_VALID_CHECK_NEW_ITEM\020\004\022"
    "\030\n\024FAIL_CHECK_LOGIC_LOG\020\005\"*\n\025SC2S_STORAG"
    "E_INFO_REQ\022\021\n\tisRefresh\030\001 \001(\r\"\237\001\n\025SS2C_S"
    "TORAGE_INFO_RES\022\016\n\006result\030\001 \001(\r\022&\n\014stora"
    "geItems\030\002 \003(\0132\020.DC.Packet.SItem\"N\n\023RESUL"
    "T_STORAGE_INFO\022\010\n\004NONE\020\000\022\020\n\014OK_SEND_DATA"
    "\020\001\022\021\n\rOK_NOT_CHANGE\020\002\022\010\n\004FAIL\020\003\";\n!SC2S_"
    "INVENTORY_EXPAND_STORAGE_REQ\022\026\n\016buyInven"
    "toryId\030\001 \001(\005\"3\n!SS2C_INVENTORY_EXPAND_ST"
    "ORAGE_RES\022\016\n\006result\030\001 \001(\rB$\n\025com.packets"
    ".inventoryB\tinventoryP\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_Inventory_2eproto_deps[1] =
    {
        &::descriptor_table__5fItem_2eproto,
};
static ::absl::once_flag descriptor_table_Inventory_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_Inventory_2eproto = {
    false,
    false,
    2951,
    descriptor_table_protodef_Inventory_2eproto,
    "Inventory.proto",
    &descriptor_table_Inventory_2eproto_once,
    descriptor_table_Inventory_2eproto_deps,
    1,
    26,
    schemas,
    file_default_instances,
    TableStruct_Inventory_2eproto::offsets,
    file_level_enum_descriptors_Inventory_2eproto,
    file_level_service_descriptors_Inventory_2eproto,
};
namespace DC {
namespace Packet {
const ::google::protobuf::EnumDescriptor* SS2C_INVENTORY_INFO_RES_RESULT_INVENTORY_INFO_INFO_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Inventory_2eproto);
  return file_level_enum_descriptors_Inventory_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t SS2C_INVENTORY_INFO_RES_RESULT_INVENTORY_INFO_INFO_internal_data_[] = {
    262144u, 0u, };
bool SS2C_INVENTORY_INFO_RES_RESULT_INVENTORY_INFO_INFO_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SS2C_INVENTORY_INFO_RES_RESULT_INVENTORY_INFO_INFO SS2C_INVENTORY_INFO_RES::NONE;
constexpr SS2C_INVENTORY_INFO_RES_RESULT_INVENTORY_INFO_INFO SS2C_INVENTORY_INFO_RES::OK_SEND_DATA;
constexpr SS2C_INVENTORY_INFO_RES_RESULT_INVENTORY_INFO_INFO SS2C_INVENTORY_INFO_RES::OK_NOT_CHANGE;
constexpr SS2C_INVENTORY_INFO_RES_RESULT_INVENTORY_INFO_INFO SS2C_INVENTORY_INFO_RES::FAIL;
constexpr SS2C_INVENTORY_INFO_RES_RESULT_INVENTORY_INFO_INFO SS2C_INVENTORY_INFO_RES::RESULT_INVENTORY_INFO_INFO_MIN;
constexpr SS2C_INVENTORY_INFO_RES_RESULT_INVENTORY_INFO_INFO SS2C_INVENTORY_INFO_RES::RESULT_INVENTORY_INFO_INFO_MAX;
constexpr int SS2C_INVENTORY_INFO_RES::RESULT_INVENTORY_INFO_INFO_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SS2C_INVENTORY_ALL_UPDATE_RES_RESULT_INVENTORY_UPDATE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Inventory_2eproto);
  return file_level_enum_descriptors_Inventory_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t SS2C_INVENTORY_ALL_UPDATE_RES_RESULT_INVENTORY_UPDATE_internal_data_[] = {
    196608u, 0u, };
bool SS2C_INVENTORY_ALL_UPDATE_RES_RESULT_INVENTORY_UPDATE_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SS2C_INVENTORY_ALL_UPDATE_RES_RESULT_INVENTORY_UPDATE SS2C_INVENTORY_ALL_UPDATE_RES::NONE;
constexpr SS2C_INVENTORY_ALL_UPDATE_RES_RESULT_INVENTORY_UPDATE SS2C_INVENTORY_ALL_UPDATE_RES::OK;
constexpr SS2C_INVENTORY_ALL_UPDATE_RES_RESULT_INVENTORY_UPDATE SS2C_INVENTORY_ALL_UPDATE_RES::FAIL;
constexpr SS2C_INVENTORY_ALL_UPDATE_RES_RESULT_INVENTORY_UPDATE SS2C_INVENTORY_ALL_UPDATE_RES::RESULT_INVENTORY_UPDATE_MIN;
constexpr SS2C_INVENTORY_ALL_UPDATE_RES_RESULT_INVENTORY_UPDATE SS2C_INVENTORY_ALL_UPDATE_RES::RESULT_INVENTORY_UPDATE_MAX;
constexpr int SS2C_INVENTORY_ALL_UPDATE_RES::RESULT_INVENTORY_UPDATE_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SS2C_INVENTORY_SINGLE_UPDATE_RES_RESULT_INVENTORY_SINGLE_UPDATE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Inventory_2eproto);
  return file_level_enum_descriptors_Inventory_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t SS2C_INVENTORY_SINGLE_UPDATE_RES_RESULT_INVENTORY_SINGLE_UPDATE_internal_data_[] = {
    393216u, 0u, };
bool SS2C_INVENTORY_SINGLE_UPDATE_RES_RESULT_INVENTORY_SINGLE_UPDATE_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SS2C_INVENTORY_SINGLE_UPDATE_RES_RESULT_INVENTORY_SINGLE_UPDATE SS2C_INVENTORY_SINGLE_UPDATE_RES::NONE;
constexpr SS2C_INVENTORY_SINGLE_UPDATE_RES_RESULT_INVENTORY_SINGLE_UPDATE SS2C_INVENTORY_SINGLE_UPDATE_RES::OK;
constexpr SS2C_INVENTORY_SINGLE_UPDATE_RES_RESULT_INVENTORY_SINGLE_UPDATE SS2C_INVENTORY_SINGLE_UPDATE_RES::FAIL;
constexpr SS2C_INVENTORY_SINGLE_UPDATE_RES_RESULT_INVENTORY_SINGLE_UPDATE SS2C_INVENTORY_SINGLE_UPDATE_RES::FAIL_VALID_CHECK_OLD_ITEM;
constexpr SS2C_INVENTORY_SINGLE_UPDATE_RES_RESULT_INVENTORY_SINGLE_UPDATE SS2C_INVENTORY_SINGLE_UPDATE_RES::FAIL_VALID_CHECK_NEW_ITEM;
constexpr SS2C_INVENTORY_SINGLE_UPDATE_RES_RESULT_INVENTORY_SINGLE_UPDATE SS2C_INVENTORY_SINGLE_UPDATE_RES::FAIL_CHECK_LOGIC_LOG;
constexpr SS2C_INVENTORY_SINGLE_UPDATE_RES_RESULT_INVENTORY_SINGLE_UPDATE SS2C_INVENTORY_SINGLE_UPDATE_RES::RESULT_INVENTORY_SINGLE_UPDATE_MIN;
constexpr SS2C_INVENTORY_SINGLE_UPDATE_RES_RESULT_INVENTORY_SINGLE_UPDATE SS2C_INVENTORY_SINGLE_UPDATE_RES::RESULT_INVENTORY_SINGLE_UPDATE_MAX;
constexpr int SS2C_INVENTORY_SINGLE_UPDATE_RES::RESULT_INVENTORY_SINGLE_UPDATE_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SS2C_STORAGE_INFO_RES_RESULT_STORAGE_INFO_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Inventory_2eproto);
  return file_level_enum_descriptors_Inventory_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t SS2C_STORAGE_INFO_RES_RESULT_STORAGE_INFO_internal_data_[] = {
    262144u, 0u, };
bool SS2C_STORAGE_INFO_RES_RESULT_STORAGE_INFO_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SS2C_STORAGE_INFO_RES_RESULT_STORAGE_INFO SS2C_STORAGE_INFO_RES::NONE;
constexpr SS2C_STORAGE_INFO_RES_RESULT_STORAGE_INFO SS2C_STORAGE_INFO_RES::OK_SEND_DATA;
constexpr SS2C_STORAGE_INFO_RES_RESULT_STORAGE_INFO SS2C_STORAGE_INFO_RES::OK_NOT_CHANGE;
constexpr SS2C_STORAGE_INFO_RES_RESULT_STORAGE_INFO SS2C_STORAGE_INFO_RES::FAIL;
constexpr SS2C_STORAGE_INFO_RES_RESULT_STORAGE_INFO SS2C_STORAGE_INFO_RES::RESULT_STORAGE_INFO_MIN;
constexpr SS2C_STORAGE_INFO_RES_RESULT_STORAGE_INFO SS2C_STORAGE_INFO_RES::RESULT_STORAGE_INFO_MAX;
constexpr int SS2C_STORAGE_INFO_RES::RESULT_STORAGE_INFO_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class SC2S_INVENTORY_INFO_REQ::_Internal {
 public:
};

SC2S_INVENTORY_INFO_REQ::SC2S_INVENTORY_INFO_REQ(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SC2S_INVENTORY_INFO_REQ)
}
SC2S_INVENTORY_INFO_REQ::SC2S_INVENTORY_INFO_REQ(
    ::google::protobuf::Arena* arena,
    const SC2S_INVENTORY_INFO_REQ& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC2S_INVENTORY_INFO_REQ* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SC2S_INVENTORY_INFO_REQ)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SC2S_INVENTORY_INFO_REQ::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_SC2S_INVENTORY_INFO_REQ_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SC2S_INVENTORY_INFO_REQ::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<SC2S_INVENTORY_INFO_REQ>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SC2S_INVENTORY_INFO_REQ>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SC2S_INVENTORY_INFO_REQ>(), &SC2S_INVENTORY_INFO_REQ::ByteSizeLong,
                &SC2S_INVENTORY_INFO_REQ::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_INFO_REQ, _impl_._cached_size_),
            false,
        },
        &SC2S_INVENTORY_INFO_REQ::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SC2S_INVENTORY_INFO_REQ::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SC2S_INVENTORY_INFO_REQ::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SC2S_INVENTORY_INFO_REQ>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SC2S_INVENTORY_INFO_REQ::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SS2C_INVENTORY_INFO_RES::_Internal {
 public:
};

void SS2C_INVENTORY_INFO_RES::clear_inventoryitems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inventoryitems_.Clear();
}
SS2C_INVENTORY_INFO_RES::SS2C_INVENTORY_INFO_RES(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SS2C_INVENTORY_INFO_RES)
}
inline PROTOBUF_NDEBUG_INLINE SS2C_INVENTORY_INFO_RES::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SS2C_INVENTORY_INFO_RES& from_msg)
      : inventoryitems_{visibility, arena, from.inventoryitems_},
        _cached_size_{0} {}

SS2C_INVENTORY_INFO_RES::SS2C_INVENTORY_INFO_RES(
    ::google::protobuf::Arena* arena,
    const SS2C_INVENTORY_INFO_RES& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SS2C_INVENTORY_INFO_RES* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SS2C_INVENTORY_INFO_RES)
}
inline PROTOBUF_NDEBUG_INLINE SS2C_INVENTORY_INFO_RES::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : inventoryitems_{visibility, arena},
        _cached_size_{0} {}

inline void SS2C_INVENTORY_INFO_RES::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
SS2C_INVENTORY_INFO_RES::~SS2C_INVENTORY_INFO_RES() {
  // @@protoc_insertion_point(destructor:DC.Packet.SS2C_INVENTORY_INFO_RES)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SS2C_INVENTORY_INFO_RES::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SS2C_INVENTORY_INFO_RES::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SS2C_INVENTORY_INFO_RES_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SS2C_INVENTORY_INFO_RES::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SS2C_INVENTORY_INFO_RES>(),
            ::google::protobuf::Message::GetNewImpl<SS2C_INVENTORY_INFO_RES>(),
            ::google::protobuf::Message::GetClearImpl<SS2C_INVENTORY_INFO_RES>(), &SS2C_INVENTORY_INFO_RES::ByteSizeLong,
                &SS2C_INVENTORY_INFO_RES::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_INFO_RES, _impl_._cached_size_),
            false,
        },
        &SS2C_INVENTORY_INFO_RES::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SS2C_INVENTORY_INFO_RES::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SS2C_INVENTORY_INFO_RES::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SS2C_INVENTORY_INFO_RES>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.SItem inventoryItems = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_INFO_RES, _impl_.inventoryitems_)}},
    // uint32 result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_INVENTORY_INFO_RES, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_INFO_RES, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 result = 1;
    {PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_INFO_RES, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .DC.Packet.SItem inventoryItems = 2;
    {PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_INFO_RES, _impl_.inventoryitems_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SS2C_INVENTORY_INFO_RES::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SS2C_INVENTORY_INFO_RES)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inventoryitems_.Clear();
  _impl_.result_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SS2C_INVENTORY_INFO_RES::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SS2C_INVENTORY_INFO_RES& this_ = static_cast<const SS2C_INVENTORY_INFO_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SS2C_INVENTORY_INFO_RES::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SS2C_INVENTORY_INFO_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SS2C_INVENTORY_INFO_RES)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 result = 1;
          if (this_._internal_result() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_result(), target);
          }

          // repeated .DC.Packet.SItem inventoryItems = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_inventoryitems_size());
               i < n; i++) {
            const auto& repfield = this_._internal_inventoryitems().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SS2C_INVENTORY_INFO_RES)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SS2C_INVENTORY_INFO_RES::ByteSizeLong(const MessageLite& base) {
          const SS2C_INVENTORY_INFO_RES& this_ = static_cast<const SS2C_INVENTORY_INFO_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SS2C_INVENTORY_INFO_RES::ByteSizeLong() const {
          const SS2C_INVENTORY_INFO_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SS2C_INVENTORY_INFO_RES)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SItem inventoryItems = 2;
            {
              total_size += 1UL * this_._internal_inventoryitems_size();
              for (const auto& msg : this_._internal_inventoryitems()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 result = 1;
            if (this_._internal_result() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_result());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SS2C_INVENTORY_INFO_RES::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SS2C_INVENTORY_INFO_RES*>(&to_msg);
  auto& from = static_cast<const SS2C_INVENTORY_INFO_RES&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SS2C_INVENTORY_INFO_RES)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inventoryitems()->MergeFrom(
      from._internal_inventoryitems());
  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SS2C_INVENTORY_INFO_RES::CopyFrom(const SS2C_INVENTORY_INFO_RES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SS2C_INVENTORY_INFO_RES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SS2C_INVENTORY_INFO_RES::InternalSwap(SS2C_INVENTORY_INFO_RES* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.inventoryitems_.InternalSwap(&other->_impl_.inventoryitems_);
        swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata SS2C_INVENTORY_INFO_RES::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC2S_INVENTORY_ALL_UPDATE_REQ::_Internal {
 public:
};

void SC2S_INVENTORY_ALL_UPDATE_REQ::clear_inventoryitems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inventoryitems_.Clear();
}
SC2S_INVENTORY_ALL_UPDATE_REQ::SC2S_INVENTORY_ALL_UPDATE_REQ(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SC2S_INVENTORY_ALL_UPDATE_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_ALL_UPDATE_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SC2S_INVENTORY_ALL_UPDATE_REQ& from_msg)
      : inventoryitems_{visibility, arena, from.inventoryitems_},
        _cached_size_{0} {}

SC2S_INVENTORY_ALL_UPDATE_REQ::SC2S_INVENTORY_ALL_UPDATE_REQ(
    ::google::protobuf::Arena* arena,
    const SC2S_INVENTORY_ALL_UPDATE_REQ& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC2S_INVENTORY_ALL_UPDATE_REQ* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SC2S_INVENTORY_ALL_UPDATE_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_ALL_UPDATE_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : inventoryitems_{visibility, arena},
        _cached_size_{0} {}

inline void SC2S_INVENTORY_ALL_UPDATE_REQ::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SC2S_INVENTORY_ALL_UPDATE_REQ::~SC2S_INVENTORY_ALL_UPDATE_REQ() {
  // @@protoc_insertion_point(destructor:DC.Packet.SC2S_INVENTORY_ALL_UPDATE_REQ)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SC2S_INVENTORY_ALL_UPDATE_REQ::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SC2S_INVENTORY_ALL_UPDATE_REQ::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SC2S_INVENTORY_ALL_UPDATE_REQ_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SC2S_INVENTORY_ALL_UPDATE_REQ::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SC2S_INVENTORY_ALL_UPDATE_REQ>(),
            ::google::protobuf::Message::GetNewImpl<SC2S_INVENTORY_ALL_UPDATE_REQ>(),
            ::google::protobuf::Message::GetClearImpl<SC2S_INVENTORY_ALL_UPDATE_REQ>(), &SC2S_INVENTORY_ALL_UPDATE_REQ::ByteSizeLong,
                &SC2S_INVENTORY_ALL_UPDATE_REQ::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_ALL_UPDATE_REQ, _impl_._cached_size_),
            false,
        },
        &SC2S_INVENTORY_ALL_UPDATE_REQ::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SC2S_INVENTORY_ALL_UPDATE_REQ::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SC2S_INVENTORY_ALL_UPDATE_REQ::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SC2S_INVENTORY_ALL_UPDATE_REQ>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.SItem inventoryItems = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_ALL_UPDATE_REQ, _impl_.inventoryitems_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.SItem inventoryItems = 1;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_ALL_UPDATE_REQ, _impl_.inventoryitems_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC2S_INVENTORY_ALL_UPDATE_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SC2S_INVENTORY_ALL_UPDATE_REQ)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inventoryitems_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC2S_INVENTORY_ALL_UPDATE_REQ::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC2S_INVENTORY_ALL_UPDATE_REQ& this_ = static_cast<const SC2S_INVENTORY_ALL_UPDATE_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC2S_INVENTORY_ALL_UPDATE_REQ::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC2S_INVENTORY_ALL_UPDATE_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SC2S_INVENTORY_ALL_UPDATE_REQ)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.SItem inventoryItems = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_inventoryitems_size());
               i < n; i++) {
            const auto& repfield = this_._internal_inventoryitems().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SC2S_INVENTORY_ALL_UPDATE_REQ)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC2S_INVENTORY_ALL_UPDATE_REQ::ByteSizeLong(const MessageLite& base) {
          const SC2S_INVENTORY_ALL_UPDATE_REQ& this_ = static_cast<const SC2S_INVENTORY_ALL_UPDATE_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC2S_INVENTORY_ALL_UPDATE_REQ::ByteSizeLong() const {
          const SC2S_INVENTORY_ALL_UPDATE_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SC2S_INVENTORY_ALL_UPDATE_REQ)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SItem inventoryItems = 1;
            {
              total_size += 1UL * this_._internal_inventoryitems_size();
              for (const auto& msg : this_._internal_inventoryitems()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC2S_INVENTORY_ALL_UPDATE_REQ::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC2S_INVENTORY_ALL_UPDATE_REQ*>(&to_msg);
  auto& from = static_cast<const SC2S_INVENTORY_ALL_UPDATE_REQ&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SC2S_INVENTORY_ALL_UPDATE_REQ)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inventoryitems()->MergeFrom(
      from._internal_inventoryitems());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC2S_INVENTORY_ALL_UPDATE_REQ::CopyFrom(const SC2S_INVENTORY_ALL_UPDATE_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SC2S_INVENTORY_ALL_UPDATE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC2S_INVENTORY_ALL_UPDATE_REQ::InternalSwap(SC2S_INVENTORY_ALL_UPDATE_REQ* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.inventoryitems_.InternalSwap(&other->_impl_.inventoryitems_);
}

::google::protobuf::Metadata SC2S_INVENTORY_ALL_UPDATE_REQ::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SS2C_INVENTORY_ALL_UPDATE_RES::_Internal {
 public:
};

void SS2C_INVENTORY_ALL_UPDATE_RES::clear_inventoryitems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inventoryitems_.Clear();
}
SS2C_INVENTORY_ALL_UPDATE_RES::SS2C_INVENTORY_ALL_UPDATE_RES(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SS2C_INVENTORY_ALL_UPDATE_RES)
}
inline PROTOBUF_NDEBUG_INLINE SS2C_INVENTORY_ALL_UPDATE_RES::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SS2C_INVENTORY_ALL_UPDATE_RES& from_msg)
      : inventoryitems_{visibility, arena, from.inventoryitems_},
        _cached_size_{0} {}

SS2C_INVENTORY_ALL_UPDATE_RES::SS2C_INVENTORY_ALL_UPDATE_RES(
    ::google::protobuf::Arena* arena,
    const SS2C_INVENTORY_ALL_UPDATE_RES& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SS2C_INVENTORY_ALL_UPDATE_RES* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SS2C_INVENTORY_ALL_UPDATE_RES)
}
inline PROTOBUF_NDEBUG_INLINE SS2C_INVENTORY_ALL_UPDATE_RES::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : inventoryitems_{visibility, arena},
        _cached_size_{0} {}

inline void SS2C_INVENTORY_ALL_UPDATE_RES::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
SS2C_INVENTORY_ALL_UPDATE_RES::~SS2C_INVENTORY_ALL_UPDATE_RES() {
  // @@protoc_insertion_point(destructor:DC.Packet.SS2C_INVENTORY_ALL_UPDATE_RES)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SS2C_INVENTORY_ALL_UPDATE_RES::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SS2C_INVENTORY_ALL_UPDATE_RES::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SS2C_INVENTORY_ALL_UPDATE_RES_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SS2C_INVENTORY_ALL_UPDATE_RES::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SS2C_INVENTORY_ALL_UPDATE_RES>(),
            ::google::protobuf::Message::GetNewImpl<SS2C_INVENTORY_ALL_UPDATE_RES>(),
            ::google::protobuf::Message::GetClearImpl<SS2C_INVENTORY_ALL_UPDATE_RES>(), &SS2C_INVENTORY_ALL_UPDATE_RES::ByteSizeLong,
                &SS2C_INVENTORY_ALL_UPDATE_RES::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_ALL_UPDATE_RES, _impl_._cached_size_),
            false,
        },
        &SS2C_INVENTORY_ALL_UPDATE_RES::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SS2C_INVENTORY_ALL_UPDATE_RES::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SS2C_INVENTORY_ALL_UPDATE_RES::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SS2C_INVENTORY_ALL_UPDATE_RES>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.SItem inventoryItems = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_ALL_UPDATE_RES, _impl_.inventoryitems_)}},
    // uint32 result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_INVENTORY_ALL_UPDATE_RES, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_ALL_UPDATE_RES, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 result = 1;
    {PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_ALL_UPDATE_RES, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .DC.Packet.SItem inventoryItems = 2;
    {PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_ALL_UPDATE_RES, _impl_.inventoryitems_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SS2C_INVENTORY_ALL_UPDATE_RES::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SS2C_INVENTORY_ALL_UPDATE_RES)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inventoryitems_.Clear();
  _impl_.result_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SS2C_INVENTORY_ALL_UPDATE_RES::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SS2C_INVENTORY_ALL_UPDATE_RES& this_ = static_cast<const SS2C_INVENTORY_ALL_UPDATE_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SS2C_INVENTORY_ALL_UPDATE_RES::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SS2C_INVENTORY_ALL_UPDATE_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SS2C_INVENTORY_ALL_UPDATE_RES)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 result = 1;
          if (this_._internal_result() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_result(), target);
          }

          // repeated .DC.Packet.SItem inventoryItems = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_inventoryitems_size());
               i < n; i++) {
            const auto& repfield = this_._internal_inventoryitems().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SS2C_INVENTORY_ALL_UPDATE_RES)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SS2C_INVENTORY_ALL_UPDATE_RES::ByteSizeLong(const MessageLite& base) {
          const SS2C_INVENTORY_ALL_UPDATE_RES& this_ = static_cast<const SS2C_INVENTORY_ALL_UPDATE_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SS2C_INVENTORY_ALL_UPDATE_RES::ByteSizeLong() const {
          const SS2C_INVENTORY_ALL_UPDATE_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SS2C_INVENTORY_ALL_UPDATE_RES)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SItem inventoryItems = 2;
            {
              total_size += 1UL * this_._internal_inventoryitems_size();
              for (const auto& msg : this_._internal_inventoryitems()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 result = 1;
            if (this_._internal_result() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_result());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SS2C_INVENTORY_ALL_UPDATE_RES::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SS2C_INVENTORY_ALL_UPDATE_RES*>(&to_msg);
  auto& from = static_cast<const SS2C_INVENTORY_ALL_UPDATE_RES&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SS2C_INVENTORY_ALL_UPDATE_RES)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inventoryitems()->MergeFrom(
      from._internal_inventoryitems());
  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SS2C_INVENTORY_ALL_UPDATE_RES::CopyFrom(const SS2C_INVENTORY_ALL_UPDATE_RES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SS2C_INVENTORY_ALL_UPDATE_RES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SS2C_INVENTORY_ALL_UPDATE_RES::InternalSwap(SS2C_INVENTORY_ALL_UPDATE_RES* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.inventoryitems_.InternalSwap(&other->_impl_.inventoryitems_);
        swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata SS2C_INVENTORY_ALL_UPDATE_RES::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SINVENTORY_ITEM_REQ_INFO::_Internal {
 public:
};

SINVENTORY_ITEM_REQ_INFO::SINVENTORY_ITEM_REQ_INFO(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SINVENTORY_ITEM_REQ_INFO)
}
SINVENTORY_ITEM_REQ_INFO::SINVENTORY_ITEM_REQ_INFO(
    ::google::protobuf::Arena* arena, const SINVENTORY_ITEM_REQ_INFO& from)
    : SINVENTORY_ITEM_REQ_INFO(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SINVENTORY_ITEM_REQ_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SINVENTORY_ITEM_REQ_INFO::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, uniqueid_),
           0,
           offsetof(Impl_, slotid_) -
               offsetof(Impl_, uniqueid_) +
               sizeof(Impl_::slotid_));
}
SINVENTORY_ITEM_REQ_INFO::~SINVENTORY_ITEM_REQ_INFO() {
  // @@protoc_insertion_point(destructor:DC.Packet.SINVENTORY_ITEM_REQ_INFO)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SINVENTORY_ITEM_REQ_INFO::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SINVENTORY_ITEM_REQ_INFO::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SINVENTORY_ITEM_REQ_INFO_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SINVENTORY_ITEM_REQ_INFO::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SINVENTORY_ITEM_REQ_INFO>(),
            ::google::protobuf::Message::GetNewImpl<SINVENTORY_ITEM_REQ_INFO>(),
            ::google::protobuf::Message::GetClearImpl<SINVENTORY_ITEM_REQ_INFO>(), &SINVENTORY_ITEM_REQ_INFO::ByteSizeLong,
                &SINVENTORY_ITEM_REQ_INFO::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SINVENTORY_ITEM_REQ_INFO, _impl_._cached_size_),
            false,
        },
        &SINVENTORY_ITEM_REQ_INFO::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SINVENTORY_ITEM_REQ_INFO::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SINVENTORY_ITEM_REQ_INFO::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 uniqueId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SINVENTORY_ITEM_REQ_INFO, _impl_.uniqueid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SINVENTORY_ITEM_REQ_INFO, _impl_.uniqueid_)}},
    // uint32 inventoryId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SINVENTORY_ITEM_REQ_INFO, _impl_.inventoryid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SINVENTORY_ITEM_REQ_INFO, _impl_.inventoryid_)}},
    // uint32 slotId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SINVENTORY_ITEM_REQ_INFO, _impl_.slotid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SINVENTORY_ITEM_REQ_INFO, _impl_.slotid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 uniqueId = 1;
    {PROTOBUF_FIELD_OFFSET(SINVENTORY_ITEM_REQ_INFO, _impl_.uniqueid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 inventoryId = 2;
    {PROTOBUF_FIELD_OFFSET(SINVENTORY_ITEM_REQ_INFO, _impl_.inventoryid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 slotId = 3;
    {PROTOBUF_FIELD_OFFSET(SINVENTORY_ITEM_REQ_INFO, _impl_.slotid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SINVENTORY_ITEM_REQ_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SINVENTORY_ITEM_REQ_INFO)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.uniqueid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.slotid_) -
      reinterpret_cast<char*>(&_impl_.uniqueid_)) + sizeof(_impl_.slotid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SINVENTORY_ITEM_REQ_INFO::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SINVENTORY_ITEM_REQ_INFO& this_ = static_cast<const SINVENTORY_ITEM_REQ_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SINVENTORY_ITEM_REQ_INFO::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SINVENTORY_ITEM_REQ_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SINVENTORY_ITEM_REQ_INFO)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 uniqueId = 1;
          if (this_._internal_uniqueid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_uniqueid(), target);
          }

          // uint32 inventoryId = 2;
          if (this_._internal_inventoryid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_inventoryid(), target);
          }

          // uint32 slotId = 3;
          if (this_._internal_slotid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_slotid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SINVENTORY_ITEM_REQ_INFO)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SINVENTORY_ITEM_REQ_INFO::ByteSizeLong(const MessageLite& base) {
          const SINVENTORY_ITEM_REQ_INFO& this_ = static_cast<const SINVENTORY_ITEM_REQ_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SINVENTORY_ITEM_REQ_INFO::ByteSizeLong() const {
          const SINVENTORY_ITEM_REQ_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SINVENTORY_ITEM_REQ_INFO)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 uniqueId = 1;
            if (this_._internal_uniqueid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_uniqueid());
            }
            // uint32 inventoryId = 2;
            if (this_._internal_inventoryid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_inventoryid());
            }
            // uint32 slotId = 3;
            if (this_._internal_slotid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_slotid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SINVENTORY_ITEM_REQ_INFO::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SINVENTORY_ITEM_REQ_INFO*>(&to_msg);
  auto& from = static_cast<const SINVENTORY_ITEM_REQ_INFO&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SINVENTORY_ITEM_REQ_INFO)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_uniqueid() != 0) {
    _this->_impl_.uniqueid_ = from._impl_.uniqueid_;
  }
  if (from._internal_inventoryid() != 0) {
    _this->_impl_.inventoryid_ = from._impl_.inventoryid_;
  }
  if (from._internal_slotid() != 0) {
    _this->_impl_.slotid_ = from._impl_.slotid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SINVENTORY_ITEM_REQ_INFO::CopyFrom(const SINVENTORY_ITEM_REQ_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SINVENTORY_ITEM_REQ_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SINVENTORY_ITEM_REQ_INFO::InternalSwap(SINVENTORY_ITEM_REQ_INFO* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SINVENTORY_ITEM_REQ_INFO, _impl_.slotid_)
      + sizeof(SINVENTORY_ITEM_REQ_INFO::_impl_.slotid_)
      - PROTOBUF_FIELD_OFFSET(SINVENTORY_ITEM_REQ_INFO, _impl_.uniqueid_)>(
          reinterpret_cast<char*>(&_impl_.uniqueid_),
          reinterpret_cast<char*>(&other->_impl_.uniqueid_));
}

::google::protobuf::Metadata SINVENTORY_ITEM_REQ_INFO::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC2S_INVENTORY_MOVE_REQ::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SC2S_INVENTORY_MOVE_REQ>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MOVE_REQ, _impl_._has_bits_);
};

SC2S_INVENTORY_MOVE_REQ::SC2S_INVENTORY_MOVE_REQ(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SC2S_INVENTORY_MOVE_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_MOVE_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SC2S_INVENTORY_MOVE_REQ& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SC2S_INVENTORY_MOVE_REQ::SC2S_INVENTORY_MOVE_REQ(
    ::google::protobuf::Arena* arena,
    const SC2S_INVENTORY_MOVE_REQ& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC2S_INVENTORY_MOVE_REQ* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.srcinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(
                              arena, *from._impl_.srcinfo_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dstinventoryid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, dstinventoryid_),
           offsetof(Impl_, dstslotid_) -
               offsetof(Impl_, dstinventoryid_) +
               sizeof(Impl_::dstslotid_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SC2S_INVENTORY_MOVE_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_MOVE_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SC2S_INVENTORY_MOVE_REQ::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, srcinfo_),
           0,
           offsetof(Impl_, dstslotid_) -
               offsetof(Impl_, srcinfo_) +
               sizeof(Impl_::dstslotid_));
}
SC2S_INVENTORY_MOVE_REQ::~SC2S_INVENTORY_MOVE_REQ() {
  // @@protoc_insertion_point(destructor:DC.Packet.SC2S_INVENTORY_MOVE_REQ)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SC2S_INVENTORY_MOVE_REQ::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.srcinfo_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SC2S_INVENTORY_MOVE_REQ::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SC2S_INVENTORY_MOVE_REQ_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SC2S_INVENTORY_MOVE_REQ::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SC2S_INVENTORY_MOVE_REQ>(),
            ::google::protobuf::Message::GetNewImpl<SC2S_INVENTORY_MOVE_REQ>(),
            ::google::protobuf::Message::GetClearImpl<SC2S_INVENTORY_MOVE_REQ>(), &SC2S_INVENTORY_MOVE_REQ::ByteSizeLong,
                &SC2S_INVENTORY_MOVE_REQ::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MOVE_REQ, _impl_._cached_size_),
            false,
        },
        &SC2S_INVENTORY_MOVE_REQ::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SC2S_INVENTORY_MOVE_REQ::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> SC2S_INVENTORY_MOVE_REQ::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MOVE_REQ, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SC2S_INVENTORY_MOVE_REQ>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MOVE_REQ, _impl_.srcinfo_)}},
    // uint32 dstInventoryId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC2S_INVENTORY_MOVE_REQ, _impl_.dstinventoryid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MOVE_REQ, _impl_.dstinventoryid_)}},
    // uint32 dstSlotId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC2S_INVENTORY_MOVE_REQ, _impl_.dstslotid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MOVE_REQ, _impl_.dstslotid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MOVE_REQ, _impl_.srcinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 dstInventoryId = 2;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MOVE_REQ, _impl_.dstinventoryid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 dstSlotId = 3;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MOVE_REQ, _impl_.dstslotid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC2S_INVENTORY_MOVE_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SC2S_INVENTORY_MOVE_REQ)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.srcinfo_ != nullptr);
    _impl_.srcinfo_->Clear();
  }
  ::memset(&_impl_.dstinventoryid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.dstslotid_) -
      reinterpret_cast<char*>(&_impl_.dstinventoryid_)) + sizeof(_impl_.dstslotid_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC2S_INVENTORY_MOVE_REQ::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC2S_INVENTORY_MOVE_REQ& this_ = static_cast<const SC2S_INVENTORY_MOVE_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC2S_INVENTORY_MOVE_REQ::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC2S_INVENTORY_MOVE_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SC2S_INVENTORY_MOVE_REQ)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.srcinfo_, this_._impl_.srcinfo_->GetCachedSize(), target,
                stream);
          }

          // uint32 dstInventoryId = 2;
          if (this_._internal_dstinventoryid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_dstinventoryid(), target);
          }

          // uint32 dstSlotId = 3;
          if (this_._internal_dstslotid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_dstslotid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SC2S_INVENTORY_MOVE_REQ)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC2S_INVENTORY_MOVE_REQ::ByteSizeLong(const MessageLite& base) {
          const SC2S_INVENTORY_MOVE_REQ& this_ = static_cast<const SC2S_INVENTORY_MOVE_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC2S_INVENTORY_MOVE_REQ::ByteSizeLong() const {
          const SC2S_INVENTORY_MOVE_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SC2S_INVENTORY_MOVE_REQ)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.srcinfo_);
            }
          }
           {
            // uint32 dstInventoryId = 2;
            if (this_._internal_dstinventoryid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_dstinventoryid());
            }
            // uint32 dstSlotId = 3;
            if (this_._internal_dstslotid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_dstslotid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC2S_INVENTORY_MOVE_REQ::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC2S_INVENTORY_MOVE_REQ*>(&to_msg);
  auto& from = static_cast<const SC2S_INVENTORY_MOVE_REQ&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SC2S_INVENTORY_MOVE_REQ)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.srcinfo_ != nullptr);
    if (_this->_impl_.srcinfo_ == nullptr) {
      _this->_impl_.srcinfo_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(arena, *from._impl_.srcinfo_);
    } else {
      _this->_impl_.srcinfo_->MergeFrom(*from._impl_.srcinfo_);
    }
  }
  if (from._internal_dstinventoryid() != 0) {
    _this->_impl_.dstinventoryid_ = from._impl_.dstinventoryid_;
  }
  if (from._internal_dstslotid() != 0) {
    _this->_impl_.dstslotid_ = from._impl_.dstslotid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC2S_INVENTORY_MOVE_REQ::CopyFrom(const SC2S_INVENTORY_MOVE_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SC2S_INVENTORY_MOVE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC2S_INVENTORY_MOVE_REQ::InternalSwap(SC2S_INVENTORY_MOVE_REQ* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MOVE_REQ, _impl_.dstslotid_)
      + sizeof(SC2S_INVENTORY_MOVE_REQ::_impl_.dstslotid_)
      - PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MOVE_REQ, _impl_.srcinfo_)>(
          reinterpret_cast<char*>(&_impl_.srcinfo_),
          reinterpret_cast<char*>(&other->_impl_.srcinfo_));
}

::google::protobuf::Metadata SC2S_INVENTORY_MOVE_REQ::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SS2C_INVENTORY_MOVE_RES::_Internal {
 public:
};

SS2C_INVENTORY_MOVE_RES::SS2C_INVENTORY_MOVE_RES(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SS2C_INVENTORY_MOVE_RES)
}
SS2C_INVENTORY_MOVE_RES::SS2C_INVENTORY_MOVE_RES(
    ::google::protobuf::Arena* arena,
    const SS2C_INVENTORY_MOVE_RES& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SS2C_INVENTORY_MOVE_RES* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SS2C_INVENTORY_MOVE_RES)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SS2C_INVENTORY_MOVE_RES::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_SS2C_INVENTORY_MOVE_RES_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SS2C_INVENTORY_MOVE_RES::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<SS2C_INVENTORY_MOVE_RES>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SS2C_INVENTORY_MOVE_RES>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SS2C_INVENTORY_MOVE_RES>(), &SS2C_INVENTORY_MOVE_RES::ByteSizeLong,
                &SS2C_INVENTORY_MOVE_RES::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_MOVE_RES, _impl_._cached_size_),
            false,
        },
        &SS2C_INVENTORY_MOVE_RES::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SS2C_INVENTORY_MOVE_RES::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SS2C_INVENTORY_MOVE_RES::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SS2C_INVENTORY_MOVE_RES>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SS2C_INVENTORY_MOVE_RES::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC2S_INVENTORY_MERGE_REQ::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SC2S_INVENTORY_MERGE_REQ>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MERGE_REQ, _impl_._has_bits_);
};

SC2S_INVENTORY_MERGE_REQ::SC2S_INVENTORY_MERGE_REQ(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SC2S_INVENTORY_MERGE_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_MERGE_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SC2S_INVENTORY_MERGE_REQ& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SC2S_INVENTORY_MERGE_REQ::SC2S_INVENTORY_MERGE_REQ(
    ::google::protobuf::Arena* arena,
    const SC2S_INVENTORY_MERGE_REQ& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC2S_INVENTORY_MERGE_REQ* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.srcinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(
                              arena, *from._impl_.srcinfo_)
                        : nullptr;
  _impl_.dstinfo_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(
                              arena, *from._impl_.dstinfo_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SC2S_INVENTORY_MERGE_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_MERGE_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SC2S_INVENTORY_MERGE_REQ::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, srcinfo_),
           0,
           offsetof(Impl_, dstinfo_) -
               offsetof(Impl_, srcinfo_) +
               sizeof(Impl_::dstinfo_));
}
SC2S_INVENTORY_MERGE_REQ::~SC2S_INVENTORY_MERGE_REQ() {
  // @@protoc_insertion_point(destructor:DC.Packet.SC2S_INVENTORY_MERGE_REQ)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SC2S_INVENTORY_MERGE_REQ::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.srcinfo_;
  delete _impl_.dstinfo_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SC2S_INVENTORY_MERGE_REQ::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SC2S_INVENTORY_MERGE_REQ_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SC2S_INVENTORY_MERGE_REQ::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SC2S_INVENTORY_MERGE_REQ>(),
            ::google::protobuf::Message::GetNewImpl<SC2S_INVENTORY_MERGE_REQ>(),
            ::google::protobuf::Message::GetClearImpl<SC2S_INVENTORY_MERGE_REQ>(), &SC2S_INVENTORY_MERGE_REQ::ByteSizeLong,
                &SC2S_INVENTORY_MERGE_REQ::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MERGE_REQ, _impl_._cached_size_),
            false,
        },
        &SC2S_INVENTORY_MERGE_REQ::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SC2S_INVENTORY_MERGE_REQ::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> SC2S_INVENTORY_MERGE_REQ::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MERGE_REQ, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SC2S_INVENTORY_MERGE_REQ>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MERGE_REQ, _impl_.dstinfo_)}},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MERGE_REQ, _impl_.srcinfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MERGE_REQ, _impl_.srcinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MERGE_REQ, _impl_.dstinfo_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC2S_INVENTORY_MERGE_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SC2S_INVENTORY_MERGE_REQ)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.srcinfo_ != nullptr);
      _impl_.srcinfo_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.dstinfo_ != nullptr);
      _impl_.dstinfo_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC2S_INVENTORY_MERGE_REQ::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC2S_INVENTORY_MERGE_REQ& this_ = static_cast<const SC2S_INVENTORY_MERGE_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC2S_INVENTORY_MERGE_REQ::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC2S_INVENTORY_MERGE_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SC2S_INVENTORY_MERGE_REQ)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.srcinfo_, this_._impl_.srcinfo_->GetCachedSize(), target,
                stream);
          }

          // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.dstinfo_, this_._impl_.dstinfo_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SC2S_INVENTORY_MERGE_REQ)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC2S_INVENTORY_MERGE_REQ::ByteSizeLong(const MessageLite& base) {
          const SC2S_INVENTORY_MERGE_REQ& this_ = static_cast<const SC2S_INVENTORY_MERGE_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC2S_INVENTORY_MERGE_REQ::ByteSizeLong() const {
          const SC2S_INVENTORY_MERGE_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SC2S_INVENTORY_MERGE_REQ)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.srcinfo_);
            }
            // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dstinfo_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC2S_INVENTORY_MERGE_REQ::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC2S_INVENTORY_MERGE_REQ*>(&to_msg);
  auto& from = static_cast<const SC2S_INVENTORY_MERGE_REQ&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SC2S_INVENTORY_MERGE_REQ)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.srcinfo_ != nullptr);
      if (_this->_impl_.srcinfo_ == nullptr) {
        _this->_impl_.srcinfo_ =
            ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(arena, *from._impl_.srcinfo_);
      } else {
        _this->_impl_.srcinfo_->MergeFrom(*from._impl_.srcinfo_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.dstinfo_ != nullptr);
      if (_this->_impl_.dstinfo_ == nullptr) {
        _this->_impl_.dstinfo_ =
            ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(arena, *from._impl_.dstinfo_);
      } else {
        _this->_impl_.dstinfo_->MergeFrom(*from._impl_.dstinfo_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC2S_INVENTORY_MERGE_REQ::CopyFrom(const SC2S_INVENTORY_MERGE_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SC2S_INVENTORY_MERGE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC2S_INVENTORY_MERGE_REQ::InternalSwap(SC2S_INVENTORY_MERGE_REQ* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MERGE_REQ, _impl_.dstinfo_)
      + sizeof(SC2S_INVENTORY_MERGE_REQ::_impl_.dstinfo_)
      - PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_MERGE_REQ, _impl_.srcinfo_)>(
          reinterpret_cast<char*>(&_impl_.srcinfo_),
          reinterpret_cast<char*>(&other->_impl_.srcinfo_));
}

::google::protobuf::Metadata SC2S_INVENTORY_MERGE_REQ::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SS2C_INVENTORY_MERGE_RES::_Internal {
 public:
};

SS2C_INVENTORY_MERGE_RES::SS2C_INVENTORY_MERGE_RES(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SS2C_INVENTORY_MERGE_RES)
}
SS2C_INVENTORY_MERGE_RES::SS2C_INVENTORY_MERGE_RES(
    ::google::protobuf::Arena* arena,
    const SS2C_INVENTORY_MERGE_RES& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SS2C_INVENTORY_MERGE_RES* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SS2C_INVENTORY_MERGE_RES)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SS2C_INVENTORY_MERGE_RES::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_SS2C_INVENTORY_MERGE_RES_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SS2C_INVENTORY_MERGE_RES::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<SS2C_INVENTORY_MERGE_RES>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SS2C_INVENTORY_MERGE_RES>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SS2C_INVENTORY_MERGE_RES>(), &SS2C_INVENTORY_MERGE_RES::ByteSizeLong,
                &SS2C_INVENTORY_MERGE_RES::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_MERGE_RES, _impl_._cached_size_),
            false,
        },
        &SS2C_INVENTORY_MERGE_RES::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SS2C_INVENTORY_MERGE_RES::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SS2C_INVENTORY_MERGE_RES::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SS2C_INVENTORY_MERGE_RES>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SS2C_INVENTORY_MERGE_RES::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class INVENTORY_SWAP_DST_INFO::_Internal {
 public:
  using HasBits =
      decltype(std::declval<INVENTORY_SWAP_DST_INFO>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(INVENTORY_SWAP_DST_INFO, _impl_._has_bits_);
};

INVENTORY_SWAP_DST_INFO::INVENTORY_SWAP_DST_INFO(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.INVENTORY_SWAP_DST_INFO)
}
inline PROTOBUF_NDEBUG_INLINE INVENTORY_SWAP_DST_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::INVENTORY_SWAP_DST_INFO& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

INVENTORY_SWAP_DST_INFO::INVENTORY_SWAP_DST_INFO(
    ::google::protobuf::Arena* arena,
    const INVENTORY_SWAP_DST_INFO& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  INVENTORY_SWAP_DST_INFO* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.dstinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(
                              arena, *from._impl_.dstinfo_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, newslotid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, newslotid_),
           offsetof(Impl_, newinventoryid_) -
               offsetof(Impl_, newslotid_) +
               sizeof(Impl_::newinventoryid_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.INVENTORY_SWAP_DST_INFO)
}
inline PROTOBUF_NDEBUG_INLINE INVENTORY_SWAP_DST_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void INVENTORY_SWAP_DST_INFO::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dstinfo_),
           0,
           offsetof(Impl_, newinventoryid_) -
               offsetof(Impl_, dstinfo_) +
               sizeof(Impl_::newinventoryid_));
}
INVENTORY_SWAP_DST_INFO::~INVENTORY_SWAP_DST_INFO() {
  // @@protoc_insertion_point(destructor:DC.Packet.INVENTORY_SWAP_DST_INFO)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void INVENTORY_SWAP_DST_INFO::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.dstinfo_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    INVENTORY_SWAP_DST_INFO::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_INVENTORY_SWAP_DST_INFO_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &INVENTORY_SWAP_DST_INFO::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<INVENTORY_SWAP_DST_INFO>(),
            ::google::protobuf::Message::GetNewImpl<INVENTORY_SWAP_DST_INFO>(),
            ::google::protobuf::Message::GetClearImpl<INVENTORY_SWAP_DST_INFO>(), &INVENTORY_SWAP_DST_INFO::ByteSizeLong,
                &INVENTORY_SWAP_DST_INFO::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(INVENTORY_SWAP_DST_INFO, _impl_._cached_size_),
            false,
        },
        &INVENTORY_SWAP_DST_INFO::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* INVENTORY_SWAP_DST_INFO::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> INVENTORY_SWAP_DST_INFO::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(INVENTORY_SWAP_DST_INFO, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::INVENTORY_SWAP_DST_INFO>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(INVENTORY_SWAP_DST_INFO, _impl_.dstinfo_)}},
    // uint32 newSlotId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(INVENTORY_SWAP_DST_INFO, _impl_.newslotid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(INVENTORY_SWAP_DST_INFO, _impl_.newslotid_)}},
    // uint32 newInventoryId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(INVENTORY_SWAP_DST_INFO, _impl_.newinventoryid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(INVENTORY_SWAP_DST_INFO, _impl_.newinventoryid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 1;
    {PROTOBUF_FIELD_OFFSET(INVENTORY_SWAP_DST_INFO, _impl_.dstinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 newSlotId = 2;
    {PROTOBUF_FIELD_OFFSET(INVENTORY_SWAP_DST_INFO, _impl_.newslotid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 newInventoryId = 3;
    {PROTOBUF_FIELD_OFFSET(INVENTORY_SWAP_DST_INFO, _impl_.newinventoryid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void INVENTORY_SWAP_DST_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.INVENTORY_SWAP_DST_INFO)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.dstinfo_ != nullptr);
    _impl_.dstinfo_->Clear();
  }
  ::memset(&_impl_.newslotid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.newinventoryid_) -
      reinterpret_cast<char*>(&_impl_.newslotid_)) + sizeof(_impl_.newinventoryid_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* INVENTORY_SWAP_DST_INFO::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const INVENTORY_SWAP_DST_INFO& this_ = static_cast<const INVENTORY_SWAP_DST_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* INVENTORY_SWAP_DST_INFO::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const INVENTORY_SWAP_DST_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.INVENTORY_SWAP_DST_INFO)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.dstinfo_, this_._impl_.dstinfo_->GetCachedSize(), target,
                stream);
          }

          // uint32 newSlotId = 2;
          if (this_._internal_newslotid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_newslotid(), target);
          }

          // uint32 newInventoryId = 3;
          if (this_._internal_newinventoryid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_newinventoryid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.INVENTORY_SWAP_DST_INFO)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t INVENTORY_SWAP_DST_INFO::ByteSizeLong(const MessageLite& base) {
          const INVENTORY_SWAP_DST_INFO& this_ = static_cast<const INVENTORY_SWAP_DST_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t INVENTORY_SWAP_DST_INFO::ByteSizeLong() const {
          const INVENTORY_SWAP_DST_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.INVENTORY_SWAP_DST_INFO)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dstinfo_);
            }
          }
           {
            // uint32 newSlotId = 2;
            if (this_._internal_newslotid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_newslotid());
            }
            // uint32 newInventoryId = 3;
            if (this_._internal_newinventoryid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_newinventoryid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void INVENTORY_SWAP_DST_INFO::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<INVENTORY_SWAP_DST_INFO*>(&to_msg);
  auto& from = static_cast<const INVENTORY_SWAP_DST_INFO&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.INVENTORY_SWAP_DST_INFO)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.dstinfo_ != nullptr);
    if (_this->_impl_.dstinfo_ == nullptr) {
      _this->_impl_.dstinfo_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(arena, *from._impl_.dstinfo_);
    } else {
      _this->_impl_.dstinfo_->MergeFrom(*from._impl_.dstinfo_);
    }
  }
  if (from._internal_newslotid() != 0) {
    _this->_impl_.newslotid_ = from._impl_.newslotid_;
  }
  if (from._internal_newinventoryid() != 0) {
    _this->_impl_.newinventoryid_ = from._impl_.newinventoryid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void INVENTORY_SWAP_DST_INFO::CopyFrom(const INVENTORY_SWAP_DST_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.INVENTORY_SWAP_DST_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void INVENTORY_SWAP_DST_INFO::InternalSwap(INVENTORY_SWAP_DST_INFO* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(INVENTORY_SWAP_DST_INFO, _impl_.newinventoryid_)
      + sizeof(INVENTORY_SWAP_DST_INFO::_impl_.newinventoryid_)
      - PROTOBUF_FIELD_OFFSET(INVENTORY_SWAP_DST_INFO, _impl_.dstinfo_)>(
          reinterpret_cast<char*>(&_impl_.dstinfo_),
          reinterpret_cast<char*>(&other->_impl_.dstinfo_));
}

::google::protobuf::Metadata INVENTORY_SWAP_DST_INFO::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC2S_INVENTORY_SWAP_REQ::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SC2S_INVENTORY_SWAP_REQ>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SWAP_REQ, _impl_._has_bits_);
};

SC2S_INVENTORY_SWAP_REQ::SC2S_INVENTORY_SWAP_REQ(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SC2S_INVENTORY_SWAP_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_SWAP_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SC2S_INVENTORY_SWAP_REQ& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        swapinfos_{visibility, arena, from.swapinfos_} {}

SC2S_INVENTORY_SWAP_REQ::SC2S_INVENTORY_SWAP_REQ(
    ::google::protobuf::Arena* arena,
    const SC2S_INVENTORY_SWAP_REQ& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC2S_INVENTORY_SWAP_REQ* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.srcinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(
                              arena, *from._impl_.srcinfo_)
                        : nullptr;
  _impl_.dstinfo_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(
                              arena, *from._impl_.dstinfo_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SC2S_INVENTORY_SWAP_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_SWAP_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        swapinfos_{visibility, arena} {}

inline void SC2S_INVENTORY_SWAP_REQ::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, srcinfo_),
           0,
           offsetof(Impl_, dstinfo_) -
               offsetof(Impl_, srcinfo_) +
               sizeof(Impl_::dstinfo_));
}
SC2S_INVENTORY_SWAP_REQ::~SC2S_INVENTORY_SWAP_REQ() {
  // @@protoc_insertion_point(destructor:DC.Packet.SC2S_INVENTORY_SWAP_REQ)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SC2S_INVENTORY_SWAP_REQ::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.srcinfo_;
  delete _impl_.dstinfo_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SC2S_INVENTORY_SWAP_REQ::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SC2S_INVENTORY_SWAP_REQ_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SC2S_INVENTORY_SWAP_REQ::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SC2S_INVENTORY_SWAP_REQ>(),
            ::google::protobuf::Message::GetNewImpl<SC2S_INVENTORY_SWAP_REQ>(),
            ::google::protobuf::Message::GetClearImpl<SC2S_INVENTORY_SWAP_REQ>(), &SC2S_INVENTORY_SWAP_REQ::ByteSizeLong,
                &SC2S_INVENTORY_SWAP_REQ::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SWAP_REQ, _impl_._cached_size_),
            false,
        },
        &SC2S_INVENTORY_SWAP_REQ::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SC2S_INVENTORY_SWAP_REQ::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> SC2S_INVENTORY_SWAP_REQ::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SWAP_REQ, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SC2S_INVENTORY_SWAP_REQ>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SWAP_REQ, _impl_.srcinfo_)}},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SWAP_REQ, _impl_.dstinfo_)}},
    // repeated .DC.Packet.INVENTORY_SWAP_DST_INFO swapInfos = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SWAP_REQ, _impl_.swapinfos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SWAP_REQ, _impl_.srcinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SWAP_REQ, _impl_.dstinfo_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.INVENTORY_SWAP_DST_INFO swapInfos = 3;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SWAP_REQ, _impl_.swapinfos_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::INVENTORY_SWAP_DST_INFO>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC2S_INVENTORY_SWAP_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SC2S_INVENTORY_SWAP_REQ)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swapinfos_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.srcinfo_ != nullptr);
      _impl_.srcinfo_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.dstinfo_ != nullptr);
      _impl_.dstinfo_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC2S_INVENTORY_SWAP_REQ::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC2S_INVENTORY_SWAP_REQ& this_ = static_cast<const SC2S_INVENTORY_SWAP_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC2S_INVENTORY_SWAP_REQ::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC2S_INVENTORY_SWAP_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SC2S_INVENTORY_SWAP_REQ)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.srcinfo_, this_._impl_.srcinfo_->GetCachedSize(), target,
                stream);
          }

          // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.dstinfo_, this_._impl_.dstinfo_->GetCachedSize(), target,
                stream);
          }

          // repeated .DC.Packet.INVENTORY_SWAP_DST_INFO swapInfos = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_swapinfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_swapinfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SC2S_INVENTORY_SWAP_REQ)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC2S_INVENTORY_SWAP_REQ::ByteSizeLong(const MessageLite& base) {
          const SC2S_INVENTORY_SWAP_REQ& this_ = static_cast<const SC2S_INVENTORY_SWAP_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC2S_INVENTORY_SWAP_REQ::ByteSizeLong() const {
          const SC2S_INVENTORY_SWAP_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SC2S_INVENTORY_SWAP_REQ)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.INVENTORY_SWAP_DST_INFO swapInfos = 3;
            {
              total_size += 1UL * this_._internal_swapinfos_size();
              for (const auto& msg : this_._internal_swapinfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.srcinfo_);
            }
            // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dstinfo_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC2S_INVENTORY_SWAP_REQ::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC2S_INVENTORY_SWAP_REQ*>(&to_msg);
  auto& from = static_cast<const SC2S_INVENTORY_SWAP_REQ&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SC2S_INVENTORY_SWAP_REQ)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_swapinfos()->MergeFrom(
      from._internal_swapinfos());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.srcinfo_ != nullptr);
      if (_this->_impl_.srcinfo_ == nullptr) {
        _this->_impl_.srcinfo_ =
            ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(arena, *from._impl_.srcinfo_);
      } else {
        _this->_impl_.srcinfo_->MergeFrom(*from._impl_.srcinfo_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.dstinfo_ != nullptr);
      if (_this->_impl_.dstinfo_ == nullptr) {
        _this->_impl_.dstinfo_ =
            ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(arena, *from._impl_.dstinfo_);
      } else {
        _this->_impl_.dstinfo_->MergeFrom(*from._impl_.dstinfo_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC2S_INVENTORY_SWAP_REQ::CopyFrom(const SC2S_INVENTORY_SWAP_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SC2S_INVENTORY_SWAP_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC2S_INVENTORY_SWAP_REQ::InternalSwap(SC2S_INVENTORY_SWAP_REQ* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.swapinfos_.InternalSwap(&other->_impl_.swapinfos_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SWAP_REQ, _impl_.dstinfo_)
      + sizeof(SC2S_INVENTORY_SWAP_REQ::_impl_.dstinfo_)
      - PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SWAP_REQ, _impl_.srcinfo_)>(
          reinterpret_cast<char*>(&_impl_.srcinfo_),
          reinterpret_cast<char*>(&other->_impl_.srcinfo_));
}

::google::protobuf::Metadata SC2S_INVENTORY_SWAP_REQ::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SS2C_INVENTORY_SWAP_RES::_Internal {
 public:
};

SS2C_INVENTORY_SWAP_RES::SS2C_INVENTORY_SWAP_RES(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SS2C_INVENTORY_SWAP_RES)
}
SS2C_INVENTORY_SWAP_RES::SS2C_INVENTORY_SWAP_RES(
    ::google::protobuf::Arena* arena,
    const SS2C_INVENTORY_SWAP_RES& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SS2C_INVENTORY_SWAP_RES* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SS2C_INVENTORY_SWAP_RES)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SS2C_INVENTORY_SWAP_RES::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_SS2C_INVENTORY_SWAP_RES_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SS2C_INVENTORY_SWAP_RES::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<SS2C_INVENTORY_SWAP_RES>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SS2C_INVENTORY_SWAP_RES>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SS2C_INVENTORY_SWAP_RES>(), &SS2C_INVENTORY_SWAP_RES::ByteSizeLong,
                &SS2C_INVENTORY_SWAP_RES::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SWAP_RES, _impl_._cached_size_),
            false,
        },
        &SS2C_INVENTORY_SWAP_RES::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SS2C_INVENTORY_SWAP_RES::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SS2C_INVENTORY_SWAP_RES::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SS2C_INVENTORY_SWAP_RES>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SS2C_INVENTORY_SWAP_RES::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC2S_INVENTORY_SPLIT_MOVE_REQ::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SC2S_INVENTORY_SPLIT_MOVE_REQ>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_._has_bits_);
};

SC2S_INVENTORY_SPLIT_MOVE_REQ::SC2S_INVENTORY_SPLIT_MOVE_REQ(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SC2S_INVENTORY_SPLIT_MOVE_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_SPLIT_MOVE_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SC2S_INVENTORY_SPLIT_MOVE_REQ& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SC2S_INVENTORY_SPLIT_MOVE_REQ::SC2S_INVENTORY_SPLIT_MOVE_REQ(
    ::google::protobuf::Arena* arena,
    const SC2S_INVENTORY_SPLIT_MOVE_REQ& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC2S_INVENTORY_SPLIT_MOVE_REQ* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.srcinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(
                              arena, *from._impl_.srcinfo_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, count_),
           offsetof(Impl_, dstslotid_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::dstslotid_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SC2S_INVENTORY_SPLIT_MOVE_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_SPLIT_MOVE_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SC2S_INVENTORY_SPLIT_MOVE_REQ::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, srcinfo_),
           0,
           offsetof(Impl_, dstslotid_) -
               offsetof(Impl_, srcinfo_) +
               sizeof(Impl_::dstslotid_));
}
SC2S_INVENTORY_SPLIT_MOVE_REQ::~SC2S_INVENTORY_SPLIT_MOVE_REQ() {
  // @@protoc_insertion_point(destructor:DC.Packet.SC2S_INVENTORY_SPLIT_MOVE_REQ)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SC2S_INVENTORY_SPLIT_MOVE_REQ::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.srcinfo_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SC2S_INVENTORY_SPLIT_MOVE_REQ::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SC2S_INVENTORY_SPLIT_MOVE_REQ_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SC2S_INVENTORY_SPLIT_MOVE_REQ::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SC2S_INVENTORY_SPLIT_MOVE_REQ>(),
            ::google::protobuf::Message::GetNewImpl<SC2S_INVENTORY_SPLIT_MOVE_REQ>(),
            ::google::protobuf::Message::GetClearImpl<SC2S_INVENTORY_SPLIT_MOVE_REQ>(), &SC2S_INVENTORY_SPLIT_MOVE_REQ::ByteSizeLong,
                &SC2S_INVENTORY_SPLIT_MOVE_REQ::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_._cached_size_),
            false,
        },
        &SC2S_INVENTORY_SPLIT_MOVE_REQ::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SC2S_INVENTORY_SPLIT_MOVE_REQ::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> SC2S_INVENTORY_SPLIT_MOVE_REQ::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SC2S_INVENTORY_SPLIT_MOVE_REQ>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 dstSlotId = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.dstslotid_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.dstslotid_)}},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.srcinfo_)}},
    // uint32 count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.count_)}},
    // uint32 dstInventoryId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.dstinventoryid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.dstinventoryid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.srcinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 count = 2;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 dstInventoryId = 3;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.dstinventoryid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 dstSlotId = 4;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.dstslotid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC2S_INVENTORY_SPLIT_MOVE_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SC2S_INVENTORY_SPLIT_MOVE_REQ)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.srcinfo_ != nullptr);
    _impl_.srcinfo_->Clear();
  }
  ::memset(&_impl_.count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.dstslotid_) -
      reinterpret_cast<char*>(&_impl_.count_)) + sizeof(_impl_.dstslotid_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC2S_INVENTORY_SPLIT_MOVE_REQ::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC2S_INVENTORY_SPLIT_MOVE_REQ& this_ = static_cast<const SC2S_INVENTORY_SPLIT_MOVE_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC2S_INVENTORY_SPLIT_MOVE_REQ::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC2S_INVENTORY_SPLIT_MOVE_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SC2S_INVENTORY_SPLIT_MOVE_REQ)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.srcinfo_, this_._impl_.srcinfo_->GetCachedSize(), target,
                stream);
          }

          // uint32 count = 2;
          if (this_._internal_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_count(), target);
          }

          // uint32 dstInventoryId = 3;
          if (this_._internal_dstinventoryid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_dstinventoryid(), target);
          }

          // uint32 dstSlotId = 4;
          if (this_._internal_dstslotid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_dstslotid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SC2S_INVENTORY_SPLIT_MOVE_REQ)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC2S_INVENTORY_SPLIT_MOVE_REQ::ByteSizeLong(const MessageLite& base) {
          const SC2S_INVENTORY_SPLIT_MOVE_REQ& this_ = static_cast<const SC2S_INVENTORY_SPLIT_MOVE_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC2S_INVENTORY_SPLIT_MOVE_REQ::ByteSizeLong() const {
          const SC2S_INVENTORY_SPLIT_MOVE_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SC2S_INVENTORY_SPLIT_MOVE_REQ)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.srcinfo_);
            }
          }
           {
            // uint32 count = 2;
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_count());
            }
            // uint32 dstInventoryId = 3;
            if (this_._internal_dstinventoryid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_dstinventoryid());
            }
            // uint32 dstSlotId = 4;
            if (this_._internal_dstslotid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_dstslotid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC2S_INVENTORY_SPLIT_MOVE_REQ::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC2S_INVENTORY_SPLIT_MOVE_REQ*>(&to_msg);
  auto& from = static_cast<const SC2S_INVENTORY_SPLIT_MOVE_REQ&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SC2S_INVENTORY_SPLIT_MOVE_REQ)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.srcinfo_ != nullptr);
    if (_this->_impl_.srcinfo_ == nullptr) {
      _this->_impl_.srcinfo_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(arena, *from._impl_.srcinfo_);
    } else {
      _this->_impl_.srcinfo_->MergeFrom(*from._impl_.srcinfo_);
    }
  }
  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  if (from._internal_dstinventoryid() != 0) {
    _this->_impl_.dstinventoryid_ = from._impl_.dstinventoryid_;
  }
  if (from._internal_dstslotid() != 0) {
    _this->_impl_.dstslotid_ = from._impl_.dstslotid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC2S_INVENTORY_SPLIT_MOVE_REQ::CopyFrom(const SC2S_INVENTORY_SPLIT_MOVE_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SC2S_INVENTORY_SPLIT_MOVE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC2S_INVENTORY_SPLIT_MOVE_REQ::InternalSwap(SC2S_INVENTORY_SPLIT_MOVE_REQ* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.dstslotid_)
      + sizeof(SC2S_INVENTORY_SPLIT_MOVE_REQ::_impl_.dstslotid_)
      - PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MOVE_REQ, _impl_.srcinfo_)>(
          reinterpret_cast<char*>(&_impl_.srcinfo_),
          reinterpret_cast<char*>(&other->_impl_.srcinfo_));
}

::google::protobuf::Metadata SC2S_INVENTORY_SPLIT_MOVE_REQ::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SS2C_INVENTORY_SPLIT_MOVE_RES::_Internal {
 public:
};

SS2C_INVENTORY_SPLIT_MOVE_RES::SS2C_INVENTORY_SPLIT_MOVE_RES(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SS2C_INVENTORY_SPLIT_MOVE_RES)
}
SS2C_INVENTORY_SPLIT_MOVE_RES::SS2C_INVENTORY_SPLIT_MOVE_RES(
    ::google::protobuf::Arena* arena, const SS2C_INVENTORY_SPLIT_MOVE_RES& from)
    : SS2C_INVENTORY_SPLIT_MOVE_RES(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SS2C_INVENTORY_SPLIT_MOVE_RES::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SS2C_INVENTORY_SPLIT_MOVE_RES::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, newuniqueid_),
           0,
           offsetof(Impl_, newslotid_) -
               offsetof(Impl_, newuniqueid_) +
               sizeof(Impl_::newslotid_));
}
SS2C_INVENTORY_SPLIT_MOVE_RES::~SS2C_INVENTORY_SPLIT_MOVE_RES() {
  // @@protoc_insertion_point(destructor:DC.Packet.SS2C_INVENTORY_SPLIT_MOVE_RES)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SS2C_INVENTORY_SPLIT_MOVE_RES::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SS2C_INVENTORY_SPLIT_MOVE_RES::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SS2C_INVENTORY_SPLIT_MOVE_RES_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SS2C_INVENTORY_SPLIT_MOVE_RES::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SS2C_INVENTORY_SPLIT_MOVE_RES>(),
            ::google::protobuf::Message::GetNewImpl<SS2C_INVENTORY_SPLIT_MOVE_RES>(),
            ::google::protobuf::Message::GetClearImpl<SS2C_INVENTORY_SPLIT_MOVE_RES>(), &SS2C_INVENTORY_SPLIT_MOVE_RES::ByteSizeLong,
                &SS2C_INVENTORY_SPLIT_MOVE_RES::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_MOVE_RES, _impl_._cached_size_),
            false,
        },
        &SS2C_INVENTORY_SPLIT_MOVE_RES::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SS2C_INVENTORY_SPLIT_MOVE_RES::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SS2C_INVENTORY_SPLIT_MOVE_RES::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SS2C_INVENTORY_SPLIT_MOVE_RES>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 newUniqueId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SS2C_INVENTORY_SPLIT_MOVE_RES, _impl_.newuniqueid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_MOVE_RES, _impl_.newuniqueid_)}},
    // uint32 newInventoryId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_INVENTORY_SPLIT_MOVE_RES, _impl_.newinventoryid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_MOVE_RES, _impl_.newinventoryid_)}},
    // uint32 newSlotId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_INVENTORY_SPLIT_MOVE_RES, _impl_.newslotid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_MOVE_RES, _impl_.newslotid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 newUniqueId = 1;
    {PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_MOVE_RES, _impl_.newuniqueid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 newInventoryId = 2;
    {PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_MOVE_RES, _impl_.newinventoryid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 newSlotId = 3;
    {PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_MOVE_RES, _impl_.newslotid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SS2C_INVENTORY_SPLIT_MOVE_RES::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SS2C_INVENTORY_SPLIT_MOVE_RES)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.newuniqueid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.newslotid_) -
      reinterpret_cast<char*>(&_impl_.newuniqueid_)) + sizeof(_impl_.newslotid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SS2C_INVENTORY_SPLIT_MOVE_RES::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SS2C_INVENTORY_SPLIT_MOVE_RES& this_ = static_cast<const SS2C_INVENTORY_SPLIT_MOVE_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SS2C_INVENTORY_SPLIT_MOVE_RES::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SS2C_INVENTORY_SPLIT_MOVE_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SS2C_INVENTORY_SPLIT_MOVE_RES)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 newUniqueId = 1;
          if (this_._internal_newuniqueid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_newuniqueid(), target);
          }

          // uint32 newInventoryId = 2;
          if (this_._internal_newinventoryid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_newinventoryid(), target);
          }

          // uint32 newSlotId = 3;
          if (this_._internal_newslotid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_newslotid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SS2C_INVENTORY_SPLIT_MOVE_RES)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SS2C_INVENTORY_SPLIT_MOVE_RES::ByteSizeLong(const MessageLite& base) {
          const SS2C_INVENTORY_SPLIT_MOVE_RES& this_ = static_cast<const SS2C_INVENTORY_SPLIT_MOVE_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SS2C_INVENTORY_SPLIT_MOVE_RES::ByteSizeLong() const {
          const SS2C_INVENTORY_SPLIT_MOVE_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SS2C_INVENTORY_SPLIT_MOVE_RES)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 newUniqueId = 1;
            if (this_._internal_newuniqueid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_newuniqueid());
            }
            // uint32 newInventoryId = 2;
            if (this_._internal_newinventoryid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_newinventoryid());
            }
            // uint32 newSlotId = 3;
            if (this_._internal_newslotid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_newslotid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SS2C_INVENTORY_SPLIT_MOVE_RES::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SS2C_INVENTORY_SPLIT_MOVE_RES*>(&to_msg);
  auto& from = static_cast<const SS2C_INVENTORY_SPLIT_MOVE_RES&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SS2C_INVENTORY_SPLIT_MOVE_RES)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_newuniqueid() != 0) {
    _this->_impl_.newuniqueid_ = from._impl_.newuniqueid_;
  }
  if (from._internal_newinventoryid() != 0) {
    _this->_impl_.newinventoryid_ = from._impl_.newinventoryid_;
  }
  if (from._internal_newslotid() != 0) {
    _this->_impl_.newslotid_ = from._impl_.newslotid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SS2C_INVENTORY_SPLIT_MOVE_RES::CopyFrom(const SS2C_INVENTORY_SPLIT_MOVE_RES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SS2C_INVENTORY_SPLIT_MOVE_RES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SS2C_INVENTORY_SPLIT_MOVE_RES::InternalSwap(SS2C_INVENTORY_SPLIT_MOVE_RES* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_MOVE_RES, _impl_.newslotid_)
      + sizeof(SS2C_INVENTORY_SPLIT_MOVE_RES::_impl_.newslotid_)
      - PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_MOVE_RES, _impl_.newuniqueid_)>(
          reinterpret_cast<char*>(&_impl_.newuniqueid_),
          reinterpret_cast<char*>(&other->_impl_.newuniqueid_));
}

::google::protobuf::Metadata SS2C_INVENTORY_SPLIT_MOVE_RES::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC2S_INVENTORY_SPLIT_MERGE_REQ::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SC2S_INVENTORY_SPLIT_MERGE_REQ>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MERGE_REQ, _impl_._has_bits_);
};

SC2S_INVENTORY_SPLIT_MERGE_REQ::SC2S_INVENTORY_SPLIT_MERGE_REQ(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SC2S_INVENTORY_SPLIT_MERGE_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_SPLIT_MERGE_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SC2S_INVENTORY_SPLIT_MERGE_REQ& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SC2S_INVENTORY_SPLIT_MERGE_REQ::SC2S_INVENTORY_SPLIT_MERGE_REQ(
    ::google::protobuf::Arena* arena,
    const SC2S_INVENTORY_SPLIT_MERGE_REQ& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC2S_INVENTORY_SPLIT_MERGE_REQ* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.srcinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(
                              arena, *from._impl_.srcinfo_)
                        : nullptr;
  _impl_.dstinfo_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(
                              arena, *from._impl_.dstinfo_)
                        : nullptr;
  _impl_.count_ = from._impl_.count_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SC2S_INVENTORY_SPLIT_MERGE_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_SPLIT_MERGE_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SC2S_INVENTORY_SPLIT_MERGE_REQ::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, srcinfo_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, srcinfo_) +
               sizeof(Impl_::count_));
}
SC2S_INVENTORY_SPLIT_MERGE_REQ::~SC2S_INVENTORY_SPLIT_MERGE_REQ() {
  // @@protoc_insertion_point(destructor:DC.Packet.SC2S_INVENTORY_SPLIT_MERGE_REQ)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SC2S_INVENTORY_SPLIT_MERGE_REQ::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.srcinfo_;
  delete _impl_.dstinfo_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SC2S_INVENTORY_SPLIT_MERGE_REQ::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SC2S_INVENTORY_SPLIT_MERGE_REQ_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SC2S_INVENTORY_SPLIT_MERGE_REQ::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SC2S_INVENTORY_SPLIT_MERGE_REQ>(),
            ::google::protobuf::Message::GetNewImpl<SC2S_INVENTORY_SPLIT_MERGE_REQ>(),
            ::google::protobuf::Message::GetClearImpl<SC2S_INVENTORY_SPLIT_MERGE_REQ>(), &SC2S_INVENTORY_SPLIT_MERGE_REQ::ByteSizeLong,
                &SC2S_INVENTORY_SPLIT_MERGE_REQ::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MERGE_REQ, _impl_._cached_size_),
            false,
        },
        &SC2S_INVENTORY_SPLIT_MERGE_REQ::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SC2S_INVENTORY_SPLIT_MERGE_REQ::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> SC2S_INVENTORY_SPLIT_MERGE_REQ::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MERGE_REQ, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SC2S_INVENTORY_SPLIT_MERGE_REQ>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MERGE_REQ, _impl_.srcinfo_)}},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MERGE_REQ, _impl_.dstinfo_)}},
    // uint32 count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC2S_INVENTORY_SPLIT_MERGE_REQ, _impl_.count_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MERGE_REQ, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MERGE_REQ, _impl_.srcinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MERGE_REQ, _impl_.dstinfo_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 count = 3;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MERGE_REQ, _impl_.count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC2S_INVENTORY_SPLIT_MERGE_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SC2S_INVENTORY_SPLIT_MERGE_REQ)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.srcinfo_ != nullptr);
      _impl_.srcinfo_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.dstinfo_ != nullptr);
      _impl_.dstinfo_->Clear();
    }
  }
  _impl_.count_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC2S_INVENTORY_SPLIT_MERGE_REQ::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC2S_INVENTORY_SPLIT_MERGE_REQ& this_ = static_cast<const SC2S_INVENTORY_SPLIT_MERGE_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC2S_INVENTORY_SPLIT_MERGE_REQ::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC2S_INVENTORY_SPLIT_MERGE_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SC2S_INVENTORY_SPLIT_MERGE_REQ)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.srcinfo_, this_._impl_.srcinfo_->GetCachedSize(), target,
                stream);
          }

          // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.dstinfo_, this_._impl_.dstinfo_->GetCachedSize(), target,
                stream);
          }

          // uint32 count = 3;
          if (this_._internal_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SC2S_INVENTORY_SPLIT_MERGE_REQ)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC2S_INVENTORY_SPLIT_MERGE_REQ::ByteSizeLong(const MessageLite& base) {
          const SC2S_INVENTORY_SPLIT_MERGE_REQ& this_ = static_cast<const SC2S_INVENTORY_SPLIT_MERGE_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC2S_INVENTORY_SPLIT_MERGE_REQ::ByteSizeLong() const {
          const SC2S_INVENTORY_SPLIT_MERGE_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SC2S_INVENTORY_SPLIT_MERGE_REQ)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.srcinfo_);
            }
            // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dstinfo_);
            }
          }
           {
            // uint32 count = 3;
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC2S_INVENTORY_SPLIT_MERGE_REQ::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC2S_INVENTORY_SPLIT_MERGE_REQ*>(&to_msg);
  auto& from = static_cast<const SC2S_INVENTORY_SPLIT_MERGE_REQ&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SC2S_INVENTORY_SPLIT_MERGE_REQ)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.srcinfo_ != nullptr);
      if (_this->_impl_.srcinfo_ == nullptr) {
        _this->_impl_.srcinfo_ =
            ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(arena, *from._impl_.srcinfo_);
      } else {
        _this->_impl_.srcinfo_->MergeFrom(*from._impl_.srcinfo_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.dstinfo_ != nullptr);
      if (_this->_impl_.dstinfo_ == nullptr) {
        _this->_impl_.dstinfo_ =
            ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(arena, *from._impl_.dstinfo_);
      } else {
        _this->_impl_.dstinfo_->MergeFrom(*from._impl_.dstinfo_);
      }
    }
  }
  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC2S_INVENTORY_SPLIT_MERGE_REQ::CopyFrom(const SC2S_INVENTORY_SPLIT_MERGE_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SC2S_INVENTORY_SPLIT_MERGE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC2S_INVENTORY_SPLIT_MERGE_REQ::InternalSwap(SC2S_INVENTORY_SPLIT_MERGE_REQ* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MERGE_REQ, _impl_.count_)
      + sizeof(SC2S_INVENTORY_SPLIT_MERGE_REQ::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_MERGE_REQ, _impl_.srcinfo_)>(
          reinterpret_cast<char*>(&_impl_.srcinfo_),
          reinterpret_cast<char*>(&other->_impl_.srcinfo_));
}

::google::protobuf::Metadata SC2S_INVENTORY_SPLIT_MERGE_REQ::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SS2C_INVENTORY_SPLIT_MERGE_RES::_Internal {
 public:
};

SS2C_INVENTORY_SPLIT_MERGE_RES::SS2C_INVENTORY_SPLIT_MERGE_RES(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SS2C_INVENTORY_SPLIT_MERGE_RES)
}
SS2C_INVENTORY_SPLIT_MERGE_RES::SS2C_INVENTORY_SPLIT_MERGE_RES(
    ::google::protobuf::Arena* arena,
    const SS2C_INVENTORY_SPLIT_MERGE_RES& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SS2C_INVENTORY_SPLIT_MERGE_RES* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SS2C_INVENTORY_SPLIT_MERGE_RES)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SS2C_INVENTORY_SPLIT_MERGE_RES::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_SS2C_INVENTORY_SPLIT_MERGE_RES_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SS2C_INVENTORY_SPLIT_MERGE_RES::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<SS2C_INVENTORY_SPLIT_MERGE_RES>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SS2C_INVENTORY_SPLIT_MERGE_RES>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SS2C_INVENTORY_SPLIT_MERGE_RES>(), &SS2C_INVENTORY_SPLIT_MERGE_RES::ByteSizeLong,
                &SS2C_INVENTORY_SPLIT_MERGE_RES::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_MERGE_RES, _impl_._cached_size_),
            false,
        },
        &SS2C_INVENTORY_SPLIT_MERGE_RES::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SS2C_INVENTORY_SPLIT_MERGE_RES::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SS2C_INVENTORY_SPLIT_MERGE_RES::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SS2C_INVENTORY_SPLIT_MERGE_RES>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SS2C_INVENTORY_SPLIT_MERGE_RES::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC2S_INVENTORY_SPLIT_SWAP_REQ::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SC2S_INVENTORY_SPLIT_SWAP_REQ>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_._has_bits_);
};

SC2S_INVENTORY_SPLIT_SWAP_REQ::SC2S_INVENTORY_SPLIT_SWAP_REQ(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SC2S_INVENTORY_SPLIT_SWAP_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_SPLIT_SWAP_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SC2S_INVENTORY_SPLIT_SWAP_REQ& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SC2S_INVENTORY_SPLIT_SWAP_REQ::SC2S_INVENTORY_SPLIT_SWAP_REQ(
    ::google::protobuf::Arena* arena,
    const SC2S_INVENTORY_SPLIT_SWAP_REQ& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC2S_INVENTORY_SPLIT_SWAP_REQ* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.srcinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(
                              arena, *from._impl_.srcinfo_)
                        : nullptr;
  _impl_.dstinfo_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(
                              arena, *from._impl_.dstinfo_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, count_),
           offsetof(Impl_, newinventoryid_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::newinventoryid_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SC2S_INVENTORY_SPLIT_SWAP_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_SPLIT_SWAP_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SC2S_INVENTORY_SPLIT_SWAP_REQ::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, srcinfo_),
           0,
           offsetof(Impl_, newinventoryid_) -
               offsetof(Impl_, srcinfo_) +
               sizeof(Impl_::newinventoryid_));
}
SC2S_INVENTORY_SPLIT_SWAP_REQ::~SC2S_INVENTORY_SPLIT_SWAP_REQ() {
  // @@protoc_insertion_point(destructor:DC.Packet.SC2S_INVENTORY_SPLIT_SWAP_REQ)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SC2S_INVENTORY_SPLIT_SWAP_REQ::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.srcinfo_;
  delete _impl_.dstinfo_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SC2S_INVENTORY_SPLIT_SWAP_REQ::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SC2S_INVENTORY_SPLIT_SWAP_REQ_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SC2S_INVENTORY_SPLIT_SWAP_REQ::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SC2S_INVENTORY_SPLIT_SWAP_REQ>(),
            ::google::protobuf::Message::GetNewImpl<SC2S_INVENTORY_SPLIT_SWAP_REQ>(),
            ::google::protobuf::Message::GetClearImpl<SC2S_INVENTORY_SPLIT_SWAP_REQ>(), &SC2S_INVENTORY_SPLIT_SWAP_REQ::ByteSizeLong,
                &SC2S_INVENTORY_SPLIT_SWAP_REQ::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_._cached_size_),
            false,
        },
        &SC2S_INVENTORY_SPLIT_SWAP_REQ::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SC2S_INVENTORY_SPLIT_SWAP_REQ::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> SC2S_INVENTORY_SPLIT_SWAP_REQ::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SC2S_INVENTORY_SPLIT_SWAP_REQ>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.srcinfo_)}},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.dstinfo_)}},
    // uint32 count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.count_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.count_)}},
    // uint32 newSlotId = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.newslotid_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.newslotid_)}},
    // uint32 newInventoryId = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.newinventoryid_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.newinventoryid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.srcinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.dstinfo_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 count = 3;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 newSlotId = 4;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.newslotid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 newInventoryId = 5;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.newinventoryid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC2S_INVENTORY_SPLIT_SWAP_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SC2S_INVENTORY_SPLIT_SWAP_REQ)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.srcinfo_ != nullptr);
      _impl_.srcinfo_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.dstinfo_ != nullptr);
      _impl_.dstinfo_->Clear();
    }
  }
  ::memset(&_impl_.count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.newinventoryid_) -
      reinterpret_cast<char*>(&_impl_.count_)) + sizeof(_impl_.newinventoryid_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC2S_INVENTORY_SPLIT_SWAP_REQ::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC2S_INVENTORY_SPLIT_SWAP_REQ& this_ = static_cast<const SC2S_INVENTORY_SPLIT_SWAP_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC2S_INVENTORY_SPLIT_SWAP_REQ::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC2S_INVENTORY_SPLIT_SWAP_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SC2S_INVENTORY_SPLIT_SWAP_REQ)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.srcinfo_, this_._impl_.srcinfo_->GetCachedSize(), target,
                stream);
          }

          // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.dstinfo_, this_._impl_.dstinfo_->GetCachedSize(), target,
                stream);
          }

          // uint32 count = 3;
          if (this_._internal_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_count(), target);
          }

          // uint32 newSlotId = 4;
          if (this_._internal_newslotid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_newslotid(), target);
          }

          // uint32 newInventoryId = 5;
          if (this_._internal_newinventoryid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_newinventoryid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SC2S_INVENTORY_SPLIT_SWAP_REQ)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC2S_INVENTORY_SPLIT_SWAP_REQ::ByteSizeLong(const MessageLite& base) {
          const SC2S_INVENTORY_SPLIT_SWAP_REQ& this_ = static_cast<const SC2S_INVENTORY_SPLIT_SWAP_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC2S_INVENTORY_SPLIT_SWAP_REQ::ByteSizeLong() const {
          const SC2S_INVENTORY_SPLIT_SWAP_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SC2S_INVENTORY_SPLIT_SWAP_REQ)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.srcinfo_);
            }
            // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dstinfo_);
            }
          }
           {
            // uint32 count = 3;
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_count());
            }
            // uint32 newSlotId = 4;
            if (this_._internal_newslotid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_newslotid());
            }
            // uint32 newInventoryId = 5;
            if (this_._internal_newinventoryid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_newinventoryid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC2S_INVENTORY_SPLIT_SWAP_REQ::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC2S_INVENTORY_SPLIT_SWAP_REQ*>(&to_msg);
  auto& from = static_cast<const SC2S_INVENTORY_SPLIT_SWAP_REQ&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SC2S_INVENTORY_SPLIT_SWAP_REQ)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.srcinfo_ != nullptr);
      if (_this->_impl_.srcinfo_ == nullptr) {
        _this->_impl_.srcinfo_ =
            ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(arena, *from._impl_.srcinfo_);
      } else {
        _this->_impl_.srcinfo_->MergeFrom(*from._impl_.srcinfo_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.dstinfo_ != nullptr);
      if (_this->_impl_.dstinfo_ == nullptr) {
        _this->_impl_.dstinfo_ =
            ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(arena, *from._impl_.dstinfo_);
      } else {
        _this->_impl_.dstinfo_->MergeFrom(*from._impl_.dstinfo_);
      }
    }
  }
  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  if (from._internal_newslotid() != 0) {
    _this->_impl_.newslotid_ = from._impl_.newslotid_;
  }
  if (from._internal_newinventoryid() != 0) {
    _this->_impl_.newinventoryid_ = from._impl_.newinventoryid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC2S_INVENTORY_SPLIT_SWAP_REQ::CopyFrom(const SC2S_INVENTORY_SPLIT_SWAP_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SC2S_INVENTORY_SPLIT_SWAP_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC2S_INVENTORY_SPLIT_SWAP_REQ::InternalSwap(SC2S_INVENTORY_SPLIT_SWAP_REQ* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.newinventoryid_)
      + sizeof(SC2S_INVENTORY_SPLIT_SWAP_REQ::_impl_.newinventoryid_)
      - PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SPLIT_SWAP_REQ, _impl_.srcinfo_)>(
          reinterpret_cast<char*>(&_impl_.srcinfo_),
          reinterpret_cast<char*>(&other->_impl_.srcinfo_));
}

::google::protobuf::Metadata SC2S_INVENTORY_SPLIT_SWAP_REQ::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SS2C_INVENTORY_SPLIT_SWAP_RES::_Internal {
 public:
};

SS2C_INVENTORY_SPLIT_SWAP_RES::SS2C_INVENTORY_SPLIT_SWAP_RES(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SS2C_INVENTORY_SPLIT_SWAP_RES)
}
SS2C_INVENTORY_SPLIT_SWAP_RES::SS2C_INVENTORY_SPLIT_SWAP_RES(
    ::google::protobuf::Arena* arena, const SS2C_INVENTORY_SPLIT_SWAP_RES& from)
    : SS2C_INVENTORY_SPLIT_SWAP_RES(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SS2C_INVENTORY_SPLIT_SWAP_RES::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SS2C_INVENTORY_SPLIT_SWAP_RES::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, newuniqueid_),
           0,
           offsetof(Impl_, newslotid_) -
               offsetof(Impl_, newuniqueid_) +
               sizeof(Impl_::newslotid_));
}
SS2C_INVENTORY_SPLIT_SWAP_RES::~SS2C_INVENTORY_SPLIT_SWAP_RES() {
  // @@protoc_insertion_point(destructor:DC.Packet.SS2C_INVENTORY_SPLIT_SWAP_RES)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SS2C_INVENTORY_SPLIT_SWAP_RES::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SS2C_INVENTORY_SPLIT_SWAP_RES::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SS2C_INVENTORY_SPLIT_SWAP_RES_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SS2C_INVENTORY_SPLIT_SWAP_RES::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SS2C_INVENTORY_SPLIT_SWAP_RES>(),
            ::google::protobuf::Message::GetNewImpl<SS2C_INVENTORY_SPLIT_SWAP_RES>(),
            ::google::protobuf::Message::GetClearImpl<SS2C_INVENTORY_SPLIT_SWAP_RES>(), &SS2C_INVENTORY_SPLIT_SWAP_RES::ByteSizeLong,
                &SS2C_INVENTORY_SPLIT_SWAP_RES::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_SWAP_RES, _impl_._cached_size_),
            false,
        },
        &SS2C_INVENTORY_SPLIT_SWAP_RES::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SS2C_INVENTORY_SPLIT_SWAP_RES::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SS2C_INVENTORY_SPLIT_SWAP_RES::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SS2C_INVENTORY_SPLIT_SWAP_RES>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 newUniqueId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SS2C_INVENTORY_SPLIT_SWAP_RES, _impl_.newuniqueid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_SWAP_RES, _impl_.newuniqueid_)}},
    // uint32 newInventoryId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_INVENTORY_SPLIT_SWAP_RES, _impl_.newinventoryid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_SWAP_RES, _impl_.newinventoryid_)}},
    // uint32 newSlotId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_INVENTORY_SPLIT_SWAP_RES, _impl_.newslotid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_SWAP_RES, _impl_.newslotid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 newUniqueId = 1;
    {PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_SWAP_RES, _impl_.newuniqueid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 newInventoryId = 2;
    {PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_SWAP_RES, _impl_.newinventoryid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 newSlotId = 3;
    {PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_SWAP_RES, _impl_.newslotid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SS2C_INVENTORY_SPLIT_SWAP_RES::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SS2C_INVENTORY_SPLIT_SWAP_RES)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.newuniqueid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.newslotid_) -
      reinterpret_cast<char*>(&_impl_.newuniqueid_)) + sizeof(_impl_.newslotid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SS2C_INVENTORY_SPLIT_SWAP_RES::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SS2C_INVENTORY_SPLIT_SWAP_RES& this_ = static_cast<const SS2C_INVENTORY_SPLIT_SWAP_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SS2C_INVENTORY_SPLIT_SWAP_RES::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SS2C_INVENTORY_SPLIT_SWAP_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SS2C_INVENTORY_SPLIT_SWAP_RES)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 newUniqueId = 1;
          if (this_._internal_newuniqueid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_newuniqueid(), target);
          }

          // uint32 newInventoryId = 2;
          if (this_._internal_newinventoryid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_newinventoryid(), target);
          }

          // uint32 newSlotId = 3;
          if (this_._internal_newslotid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_newslotid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SS2C_INVENTORY_SPLIT_SWAP_RES)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SS2C_INVENTORY_SPLIT_SWAP_RES::ByteSizeLong(const MessageLite& base) {
          const SS2C_INVENTORY_SPLIT_SWAP_RES& this_ = static_cast<const SS2C_INVENTORY_SPLIT_SWAP_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SS2C_INVENTORY_SPLIT_SWAP_RES::ByteSizeLong() const {
          const SS2C_INVENTORY_SPLIT_SWAP_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SS2C_INVENTORY_SPLIT_SWAP_RES)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 newUniqueId = 1;
            if (this_._internal_newuniqueid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_newuniqueid());
            }
            // uint32 newInventoryId = 2;
            if (this_._internal_newinventoryid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_newinventoryid());
            }
            // uint32 newSlotId = 3;
            if (this_._internal_newslotid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_newslotid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SS2C_INVENTORY_SPLIT_SWAP_RES::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SS2C_INVENTORY_SPLIT_SWAP_RES*>(&to_msg);
  auto& from = static_cast<const SS2C_INVENTORY_SPLIT_SWAP_RES&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SS2C_INVENTORY_SPLIT_SWAP_RES)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_newuniqueid() != 0) {
    _this->_impl_.newuniqueid_ = from._impl_.newuniqueid_;
  }
  if (from._internal_newinventoryid() != 0) {
    _this->_impl_.newinventoryid_ = from._impl_.newinventoryid_;
  }
  if (from._internal_newslotid() != 0) {
    _this->_impl_.newslotid_ = from._impl_.newslotid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SS2C_INVENTORY_SPLIT_SWAP_RES::CopyFrom(const SS2C_INVENTORY_SPLIT_SWAP_RES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SS2C_INVENTORY_SPLIT_SWAP_RES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SS2C_INVENTORY_SPLIT_SWAP_RES::InternalSwap(SS2C_INVENTORY_SPLIT_SWAP_RES* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_SWAP_RES, _impl_.newslotid_)
      + sizeof(SS2C_INVENTORY_SPLIT_SWAP_RES::_impl_.newslotid_)
      - PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SPLIT_SWAP_RES, _impl_.newuniqueid_)>(
          reinterpret_cast<char*>(&_impl_.newuniqueid_),
          reinterpret_cast<char*>(&other->_impl_.newuniqueid_));
}

::google::protobuf::Metadata SS2C_INVENTORY_SPLIT_SWAP_RES::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_._has_bits_);
};

SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ(
    ::google::protobuf::Arena* arena,
    const SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.srcinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(
                              arena, *from._impl_.srcinfo_)
                        : nullptr;
  _impl_.dstinfo_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(
                              arena, *from._impl_.dstinfo_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, newslotid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, newslotid_),
           offsetof(Impl_, newinventoryid_) -
               offsetof(Impl_, newslotid_) +
               sizeof(Impl_::newinventoryid_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, srcinfo_),
           0,
           offsetof(Impl_, newinventoryid_) -
               offsetof(Impl_, srcinfo_) +
               sizeof(Impl_::newinventoryid_));
}
SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::~SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ() {
  // @@protoc_insertion_point(destructor:DC.Packet.SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.srcinfo_;
  delete _impl_.dstinfo_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ>(),
            ::google::protobuf::Message::GetNewImpl<SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ>(),
            ::google::protobuf::Message::GetClearImpl<SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ>(), &SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::ByteSizeLong,
                &SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_._cached_size_),
            false,
        },
        &SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2> SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 newInventoryId = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_.newinventoryid_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_.newinventoryid_)}},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_.srcinfo_)}},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_.dstinfo_)}},
    // uint32 newSlotId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_.newslotid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_.newslotid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_.srcinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_.dstinfo_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 newSlotId = 3;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_.newslotid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 newInventoryId = 4;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_.newinventoryid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.srcinfo_ != nullptr);
      _impl_.srcinfo_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.dstinfo_ != nullptr);
      _impl_.dstinfo_->Clear();
    }
  }
  ::memset(&_impl_.newslotid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.newinventoryid_) -
      reinterpret_cast<char*>(&_impl_.newslotid_)) + sizeof(_impl_.newinventoryid_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ& this_ = static_cast<const SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.srcinfo_, this_._impl_.srcinfo_->GetCachedSize(), target,
                stream);
          }

          // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.dstinfo_, this_._impl_.dstinfo_->GetCachedSize(), target,
                stream);
          }

          // uint32 newSlotId = 3;
          if (this_._internal_newslotid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_newslotid(), target);
          }

          // uint32 newInventoryId = 4;
          if (this_._internal_newinventoryid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_newinventoryid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::ByteSizeLong(const MessageLite& base) {
          const SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ& this_ = static_cast<const SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::ByteSizeLong() const {
          const SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .DC.Packet.SINVENTORY_ITEM_REQ_INFO srcInfo = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.srcinfo_);
            }
            // .DC.Packet.SINVENTORY_ITEM_REQ_INFO dstInfo = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dstinfo_);
            }
          }
           {
            // uint32 newSlotId = 3;
            if (this_._internal_newslotid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_newslotid());
            }
            // uint32 newInventoryId = 4;
            if (this_._internal_newinventoryid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_newinventoryid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ*>(&to_msg);
  auto& from = static_cast<const SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.srcinfo_ != nullptr);
      if (_this->_impl_.srcinfo_ == nullptr) {
        _this->_impl_.srcinfo_ =
            ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(arena, *from._impl_.srcinfo_);
      } else {
        _this->_impl_.srcinfo_->MergeFrom(*from._impl_.srcinfo_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.dstinfo_ != nullptr);
      if (_this->_impl_.dstinfo_ == nullptr) {
        _this->_impl_.dstinfo_ =
            ::google::protobuf::Message::CopyConstruct<::DC::Packet::SINVENTORY_ITEM_REQ_INFO>(arena, *from._impl_.dstinfo_);
      } else {
        _this->_impl_.dstinfo_->MergeFrom(*from._impl_.dstinfo_);
      }
    }
  }
  if (from._internal_newslotid() != 0) {
    _this->_impl_.newslotid_ = from._impl_.newslotid_;
  }
  if (from._internal_newinventoryid() != 0) {
    _this->_impl_.newinventoryid_ = from._impl_.newinventoryid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::CopyFrom(const SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::InternalSwap(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_.newinventoryid_)
      + sizeof(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::_impl_.newinventoryid_)
      - PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ, _impl_.srcinfo_)>(
          reinterpret_cast<char*>(&_impl_.srcinfo_),
          reinterpret_cast<char*>(&other->_impl_.srcinfo_));
}

::google::protobuf::Metadata SC2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES::_Internal {
 public:
};

SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES::SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES)
}
SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES::SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES(
    ::google::protobuf::Arena* arena,
    const SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES>(), &SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES::ByteSizeLong,
                &SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES, _impl_._cached_size_),
            false,
        },
        &SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SS2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC2S_INVENTORY_SINGLE_UPDATE_REQ::_Internal {
 public:
};

void SC2S_INVENTORY_SINGLE_UPDATE_REQ::clear_olditem() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.olditem_.Clear();
}
void SC2S_INVENTORY_SINGLE_UPDATE_REQ::clear_newitem() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newitem_.Clear();
}
SC2S_INVENTORY_SINGLE_UPDATE_REQ::SC2S_INVENTORY_SINGLE_UPDATE_REQ(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SC2S_INVENTORY_SINGLE_UPDATE_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_SINGLE_UPDATE_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SC2S_INVENTORY_SINGLE_UPDATE_REQ& from_msg)
      : olditem_{visibility, arena, from.olditem_},
        newitem_{visibility, arena, from.newitem_},
        _cached_size_{0} {}

SC2S_INVENTORY_SINGLE_UPDATE_REQ::SC2S_INVENTORY_SINGLE_UPDATE_REQ(
    ::google::protobuf::Arena* arena,
    const SC2S_INVENTORY_SINGLE_UPDATE_REQ& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC2S_INVENTORY_SINGLE_UPDATE_REQ* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.singleupdateflag_ = from._impl_.singleupdateflag_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SC2S_INVENTORY_SINGLE_UPDATE_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_SINGLE_UPDATE_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : olditem_{visibility, arena},
        newitem_{visibility, arena},
        _cached_size_{0} {}

inline void SC2S_INVENTORY_SINGLE_UPDATE_REQ::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.singleupdateflag_ = {};
}
SC2S_INVENTORY_SINGLE_UPDATE_REQ::~SC2S_INVENTORY_SINGLE_UPDATE_REQ() {
  // @@protoc_insertion_point(destructor:DC.Packet.SC2S_INVENTORY_SINGLE_UPDATE_REQ)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SC2S_INVENTORY_SINGLE_UPDATE_REQ::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SC2S_INVENTORY_SINGLE_UPDATE_REQ::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SC2S_INVENTORY_SINGLE_UPDATE_REQ_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SC2S_INVENTORY_SINGLE_UPDATE_REQ::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SC2S_INVENTORY_SINGLE_UPDATE_REQ>(),
            ::google::protobuf::Message::GetNewImpl<SC2S_INVENTORY_SINGLE_UPDATE_REQ>(),
            ::google::protobuf::Message::GetClearImpl<SC2S_INVENTORY_SINGLE_UPDATE_REQ>(), &SC2S_INVENTORY_SINGLE_UPDATE_REQ::ByteSizeLong,
                &SC2S_INVENTORY_SINGLE_UPDATE_REQ::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SINGLE_UPDATE_REQ, _impl_._cached_size_),
            false,
        },
        &SC2S_INVENTORY_SINGLE_UPDATE_REQ::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SC2S_INVENTORY_SINGLE_UPDATE_REQ::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> SC2S_INVENTORY_SINGLE_UPDATE_REQ::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SC2S_INVENTORY_SINGLE_UPDATE_REQ>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 singleUpdateFlag = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC2S_INVENTORY_SINGLE_UPDATE_REQ, _impl_.singleupdateflag_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SINGLE_UPDATE_REQ, _impl_.singleupdateflag_)}},
    // repeated .DC.Packet.SItem oldItem = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SINGLE_UPDATE_REQ, _impl_.olditem_)}},
    // repeated .DC.Packet.SItem newItem = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SINGLE_UPDATE_REQ, _impl_.newitem_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 singleUpdateFlag = 1;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SINGLE_UPDATE_REQ, _impl_.singleupdateflag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .DC.Packet.SItem oldItem = 2;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SINGLE_UPDATE_REQ, _impl_.olditem_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SItem newItem = 3;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_SINGLE_UPDATE_REQ, _impl_.newitem_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SC2S_INVENTORY_SINGLE_UPDATE_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SC2S_INVENTORY_SINGLE_UPDATE_REQ)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.olditem_.Clear();
  _impl_.newitem_.Clear();
  _impl_.singleupdateflag_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC2S_INVENTORY_SINGLE_UPDATE_REQ::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC2S_INVENTORY_SINGLE_UPDATE_REQ& this_ = static_cast<const SC2S_INVENTORY_SINGLE_UPDATE_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC2S_INVENTORY_SINGLE_UPDATE_REQ::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC2S_INVENTORY_SINGLE_UPDATE_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SC2S_INVENTORY_SINGLE_UPDATE_REQ)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 singleUpdateFlag = 1;
          if (this_._internal_singleupdateflag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_singleupdateflag(), target);
          }

          // repeated .DC.Packet.SItem oldItem = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_olditem_size());
               i < n; i++) {
            const auto& repfield = this_._internal_olditem().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SItem newItem = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_newitem_size());
               i < n; i++) {
            const auto& repfield = this_._internal_newitem().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SC2S_INVENTORY_SINGLE_UPDATE_REQ)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC2S_INVENTORY_SINGLE_UPDATE_REQ::ByteSizeLong(const MessageLite& base) {
          const SC2S_INVENTORY_SINGLE_UPDATE_REQ& this_ = static_cast<const SC2S_INVENTORY_SINGLE_UPDATE_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC2S_INVENTORY_SINGLE_UPDATE_REQ::ByteSizeLong() const {
          const SC2S_INVENTORY_SINGLE_UPDATE_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SC2S_INVENTORY_SINGLE_UPDATE_REQ)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SItem oldItem = 2;
            {
              total_size += 1UL * this_._internal_olditem_size();
              for (const auto& msg : this_._internal_olditem()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SItem newItem = 3;
            {
              total_size += 1UL * this_._internal_newitem_size();
              for (const auto& msg : this_._internal_newitem()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 singleUpdateFlag = 1;
            if (this_._internal_singleupdateflag() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_singleupdateflag());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC2S_INVENTORY_SINGLE_UPDATE_REQ::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC2S_INVENTORY_SINGLE_UPDATE_REQ*>(&to_msg);
  auto& from = static_cast<const SC2S_INVENTORY_SINGLE_UPDATE_REQ&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SC2S_INVENTORY_SINGLE_UPDATE_REQ)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_olditem()->MergeFrom(
      from._internal_olditem());
  _this->_internal_mutable_newitem()->MergeFrom(
      from._internal_newitem());
  if (from._internal_singleupdateflag() != 0) {
    _this->_impl_.singleupdateflag_ = from._impl_.singleupdateflag_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC2S_INVENTORY_SINGLE_UPDATE_REQ::CopyFrom(const SC2S_INVENTORY_SINGLE_UPDATE_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SC2S_INVENTORY_SINGLE_UPDATE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC2S_INVENTORY_SINGLE_UPDATE_REQ::InternalSwap(SC2S_INVENTORY_SINGLE_UPDATE_REQ* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.olditem_.InternalSwap(&other->_impl_.olditem_);
  _impl_.newitem_.InternalSwap(&other->_impl_.newitem_);
        swap(_impl_.singleupdateflag_, other->_impl_.singleupdateflag_);
}

::google::protobuf::Metadata SC2S_INVENTORY_SINGLE_UPDATE_REQ::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SS2C_INVENTORY_SINGLE_UPDATE_RES::_Internal {
 public:
};

void SS2C_INVENTORY_SINGLE_UPDATE_RES::clear_olditem() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.olditem_.Clear();
}
void SS2C_INVENTORY_SINGLE_UPDATE_RES::clear_newitem() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newitem_.Clear();
}
SS2C_INVENTORY_SINGLE_UPDATE_RES::SS2C_INVENTORY_SINGLE_UPDATE_RES(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SS2C_INVENTORY_SINGLE_UPDATE_RES)
}
inline PROTOBUF_NDEBUG_INLINE SS2C_INVENTORY_SINGLE_UPDATE_RES::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SS2C_INVENTORY_SINGLE_UPDATE_RES& from_msg)
      : olditem_{visibility, arena, from.olditem_},
        newitem_{visibility, arena, from.newitem_},
        _cached_size_{0} {}

SS2C_INVENTORY_SINGLE_UPDATE_RES::SS2C_INVENTORY_SINGLE_UPDATE_RES(
    ::google::protobuf::Arena* arena,
    const SS2C_INVENTORY_SINGLE_UPDATE_RES& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SS2C_INVENTORY_SINGLE_UPDATE_RES* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SS2C_INVENTORY_SINGLE_UPDATE_RES)
}
inline PROTOBUF_NDEBUG_INLINE SS2C_INVENTORY_SINGLE_UPDATE_RES::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : olditem_{visibility, arena},
        newitem_{visibility, arena},
        _cached_size_{0} {}

inline void SS2C_INVENTORY_SINGLE_UPDATE_RES::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
SS2C_INVENTORY_SINGLE_UPDATE_RES::~SS2C_INVENTORY_SINGLE_UPDATE_RES() {
  // @@protoc_insertion_point(destructor:DC.Packet.SS2C_INVENTORY_SINGLE_UPDATE_RES)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SS2C_INVENTORY_SINGLE_UPDATE_RES::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SS2C_INVENTORY_SINGLE_UPDATE_RES::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SS2C_INVENTORY_SINGLE_UPDATE_RES_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SS2C_INVENTORY_SINGLE_UPDATE_RES::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SS2C_INVENTORY_SINGLE_UPDATE_RES>(),
            ::google::protobuf::Message::GetNewImpl<SS2C_INVENTORY_SINGLE_UPDATE_RES>(),
            ::google::protobuf::Message::GetClearImpl<SS2C_INVENTORY_SINGLE_UPDATE_RES>(), &SS2C_INVENTORY_SINGLE_UPDATE_RES::ByteSizeLong,
                &SS2C_INVENTORY_SINGLE_UPDATE_RES::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SINGLE_UPDATE_RES, _impl_._cached_size_),
            false,
        },
        &SS2C_INVENTORY_SINGLE_UPDATE_RES::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SS2C_INVENTORY_SINGLE_UPDATE_RES::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> SS2C_INVENTORY_SINGLE_UPDATE_RES::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SS2C_INVENTORY_SINGLE_UPDATE_RES>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_INVENTORY_SINGLE_UPDATE_RES, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SINGLE_UPDATE_RES, _impl_.result_)}},
    // repeated .DC.Packet.SItem oldItem = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SINGLE_UPDATE_RES, _impl_.olditem_)}},
    // repeated .DC.Packet.SItem newItem = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SINGLE_UPDATE_RES, _impl_.newitem_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 result = 1;
    {PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SINGLE_UPDATE_RES, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .DC.Packet.SItem oldItem = 2;
    {PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SINGLE_UPDATE_RES, _impl_.olditem_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SItem newItem = 3;
    {PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_SINGLE_UPDATE_RES, _impl_.newitem_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SS2C_INVENTORY_SINGLE_UPDATE_RES::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SS2C_INVENTORY_SINGLE_UPDATE_RES)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.olditem_.Clear();
  _impl_.newitem_.Clear();
  _impl_.result_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SS2C_INVENTORY_SINGLE_UPDATE_RES::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SS2C_INVENTORY_SINGLE_UPDATE_RES& this_ = static_cast<const SS2C_INVENTORY_SINGLE_UPDATE_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SS2C_INVENTORY_SINGLE_UPDATE_RES::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SS2C_INVENTORY_SINGLE_UPDATE_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SS2C_INVENTORY_SINGLE_UPDATE_RES)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 result = 1;
          if (this_._internal_result() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_result(), target);
          }

          // repeated .DC.Packet.SItem oldItem = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_olditem_size());
               i < n; i++) {
            const auto& repfield = this_._internal_olditem().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SItem newItem = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_newitem_size());
               i < n; i++) {
            const auto& repfield = this_._internal_newitem().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SS2C_INVENTORY_SINGLE_UPDATE_RES)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SS2C_INVENTORY_SINGLE_UPDATE_RES::ByteSizeLong(const MessageLite& base) {
          const SS2C_INVENTORY_SINGLE_UPDATE_RES& this_ = static_cast<const SS2C_INVENTORY_SINGLE_UPDATE_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SS2C_INVENTORY_SINGLE_UPDATE_RES::ByteSizeLong() const {
          const SS2C_INVENTORY_SINGLE_UPDATE_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SS2C_INVENTORY_SINGLE_UPDATE_RES)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SItem oldItem = 2;
            {
              total_size += 1UL * this_._internal_olditem_size();
              for (const auto& msg : this_._internal_olditem()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SItem newItem = 3;
            {
              total_size += 1UL * this_._internal_newitem_size();
              for (const auto& msg : this_._internal_newitem()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 result = 1;
            if (this_._internal_result() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_result());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SS2C_INVENTORY_SINGLE_UPDATE_RES::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SS2C_INVENTORY_SINGLE_UPDATE_RES*>(&to_msg);
  auto& from = static_cast<const SS2C_INVENTORY_SINGLE_UPDATE_RES&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SS2C_INVENTORY_SINGLE_UPDATE_RES)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_olditem()->MergeFrom(
      from._internal_olditem());
  _this->_internal_mutable_newitem()->MergeFrom(
      from._internal_newitem());
  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SS2C_INVENTORY_SINGLE_UPDATE_RES::CopyFrom(const SS2C_INVENTORY_SINGLE_UPDATE_RES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SS2C_INVENTORY_SINGLE_UPDATE_RES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SS2C_INVENTORY_SINGLE_UPDATE_RES::InternalSwap(SS2C_INVENTORY_SINGLE_UPDATE_RES* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.olditem_.InternalSwap(&other->_impl_.olditem_);
  _impl_.newitem_.InternalSwap(&other->_impl_.newitem_);
        swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata SS2C_INVENTORY_SINGLE_UPDATE_RES::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC2S_STORAGE_INFO_REQ::_Internal {
 public:
};

SC2S_STORAGE_INFO_REQ::SC2S_STORAGE_INFO_REQ(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SC2S_STORAGE_INFO_REQ)
}
SC2S_STORAGE_INFO_REQ::SC2S_STORAGE_INFO_REQ(
    ::google::protobuf::Arena* arena, const SC2S_STORAGE_INFO_REQ& from)
    : SC2S_STORAGE_INFO_REQ(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SC2S_STORAGE_INFO_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SC2S_STORAGE_INFO_REQ::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.isrefresh_ = {};
}
SC2S_STORAGE_INFO_REQ::~SC2S_STORAGE_INFO_REQ() {
  // @@protoc_insertion_point(destructor:DC.Packet.SC2S_STORAGE_INFO_REQ)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SC2S_STORAGE_INFO_REQ::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SC2S_STORAGE_INFO_REQ::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SC2S_STORAGE_INFO_REQ_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SC2S_STORAGE_INFO_REQ::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SC2S_STORAGE_INFO_REQ>(),
            ::google::protobuf::Message::GetNewImpl<SC2S_STORAGE_INFO_REQ>(),
            ::google::protobuf::Message::GetClearImpl<SC2S_STORAGE_INFO_REQ>(), &SC2S_STORAGE_INFO_REQ::ByteSizeLong,
                &SC2S_STORAGE_INFO_REQ::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SC2S_STORAGE_INFO_REQ, _impl_._cached_size_),
            false,
        },
        &SC2S_STORAGE_INFO_REQ::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SC2S_STORAGE_INFO_REQ::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SC2S_STORAGE_INFO_REQ::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SC2S_STORAGE_INFO_REQ>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 isRefresh = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC2S_STORAGE_INFO_REQ, _impl_.isrefresh_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_STORAGE_INFO_REQ, _impl_.isrefresh_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 isRefresh = 1;
    {PROTOBUF_FIELD_OFFSET(SC2S_STORAGE_INFO_REQ, _impl_.isrefresh_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SC2S_STORAGE_INFO_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SC2S_STORAGE_INFO_REQ)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.isrefresh_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC2S_STORAGE_INFO_REQ::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC2S_STORAGE_INFO_REQ& this_ = static_cast<const SC2S_STORAGE_INFO_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC2S_STORAGE_INFO_REQ::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC2S_STORAGE_INFO_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SC2S_STORAGE_INFO_REQ)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 isRefresh = 1;
          if (this_._internal_isrefresh() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_isrefresh(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SC2S_STORAGE_INFO_REQ)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC2S_STORAGE_INFO_REQ::ByteSizeLong(const MessageLite& base) {
          const SC2S_STORAGE_INFO_REQ& this_ = static_cast<const SC2S_STORAGE_INFO_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC2S_STORAGE_INFO_REQ::ByteSizeLong() const {
          const SC2S_STORAGE_INFO_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SC2S_STORAGE_INFO_REQ)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint32 isRefresh = 1;
            if (this_._internal_isrefresh() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_isrefresh());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC2S_STORAGE_INFO_REQ::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC2S_STORAGE_INFO_REQ*>(&to_msg);
  auto& from = static_cast<const SC2S_STORAGE_INFO_REQ&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SC2S_STORAGE_INFO_REQ)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_isrefresh() != 0) {
    _this->_impl_.isrefresh_ = from._impl_.isrefresh_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC2S_STORAGE_INFO_REQ::CopyFrom(const SC2S_STORAGE_INFO_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SC2S_STORAGE_INFO_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC2S_STORAGE_INFO_REQ::InternalSwap(SC2S_STORAGE_INFO_REQ* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.isrefresh_, other->_impl_.isrefresh_);
}

::google::protobuf::Metadata SC2S_STORAGE_INFO_REQ::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SS2C_STORAGE_INFO_RES::_Internal {
 public:
};

void SS2C_STORAGE_INFO_RES::clear_storageitems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storageitems_.Clear();
}
SS2C_STORAGE_INFO_RES::SS2C_STORAGE_INFO_RES(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SS2C_STORAGE_INFO_RES)
}
inline PROTOBUF_NDEBUG_INLINE SS2C_STORAGE_INFO_RES::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SS2C_STORAGE_INFO_RES& from_msg)
      : storageitems_{visibility, arena, from.storageitems_},
        _cached_size_{0} {}

SS2C_STORAGE_INFO_RES::SS2C_STORAGE_INFO_RES(
    ::google::protobuf::Arena* arena,
    const SS2C_STORAGE_INFO_RES& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SS2C_STORAGE_INFO_RES* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SS2C_STORAGE_INFO_RES)
}
inline PROTOBUF_NDEBUG_INLINE SS2C_STORAGE_INFO_RES::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : storageitems_{visibility, arena},
        _cached_size_{0} {}

inline void SS2C_STORAGE_INFO_RES::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
SS2C_STORAGE_INFO_RES::~SS2C_STORAGE_INFO_RES() {
  // @@protoc_insertion_point(destructor:DC.Packet.SS2C_STORAGE_INFO_RES)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SS2C_STORAGE_INFO_RES::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SS2C_STORAGE_INFO_RES::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SS2C_STORAGE_INFO_RES_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SS2C_STORAGE_INFO_RES::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SS2C_STORAGE_INFO_RES>(),
            ::google::protobuf::Message::GetNewImpl<SS2C_STORAGE_INFO_RES>(),
            ::google::protobuf::Message::GetClearImpl<SS2C_STORAGE_INFO_RES>(), &SS2C_STORAGE_INFO_RES::ByteSizeLong,
                &SS2C_STORAGE_INFO_RES::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SS2C_STORAGE_INFO_RES, _impl_._cached_size_),
            false,
        },
        &SS2C_STORAGE_INFO_RES::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SS2C_STORAGE_INFO_RES::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SS2C_STORAGE_INFO_RES::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SS2C_STORAGE_INFO_RES>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.SItem storageItems = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_STORAGE_INFO_RES, _impl_.storageitems_)}},
    // uint32 result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_STORAGE_INFO_RES, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_STORAGE_INFO_RES, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 result = 1;
    {PROTOBUF_FIELD_OFFSET(SS2C_STORAGE_INFO_RES, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .DC.Packet.SItem storageItems = 2;
    {PROTOBUF_FIELD_OFFSET(SS2C_STORAGE_INFO_RES, _impl_.storageitems_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SS2C_STORAGE_INFO_RES::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SS2C_STORAGE_INFO_RES)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.storageitems_.Clear();
  _impl_.result_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SS2C_STORAGE_INFO_RES::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SS2C_STORAGE_INFO_RES& this_ = static_cast<const SS2C_STORAGE_INFO_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SS2C_STORAGE_INFO_RES::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SS2C_STORAGE_INFO_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SS2C_STORAGE_INFO_RES)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 result = 1;
          if (this_._internal_result() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_result(), target);
          }

          // repeated .DC.Packet.SItem storageItems = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_storageitems_size());
               i < n; i++) {
            const auto& repfield = this_._internal_storageitems().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SS2C_STORAGE_INFO_RES)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SS2C_STORAGE_INFO_RES::ByteSizeLong(const MessageLite& base) {
          const SS2C_STORAGE_INFO_RES& this_ = static_cast<const SS2C_STORAGE_INFO_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SS2C_STORAGE_INFO_RES::ByteSizeLong() const {
          const SS2C_STORAGE_INFO_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SS2C_STORAGE_INFO_RES)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SItem storageItems = 2;
            {
              total_size += 1UL * this_._internal_storageitems_size();
              for (const auto& msg : this_._internal_storageitems()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 result = 1;
            if (this_._internal_result() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_result());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SS2C_STORAGE_INFO_RES::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SS2C_STORAGE_INFO_RES*>(&to_msg);
  auto& from = static_cast<const SS2C_STORAGE_INFO_RES&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SS2C_STORAGE_INFO_RES)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_storageitems()->MergeFrom(
      from._internal_storageitems());
  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SS2C_STORAGE_INFO_RES::CopyFrom(const SS2C_STORAGE_INFO_RES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SS2C_STORAGE_INFO_RES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SS2C_STORAGE_INFO_RES::InternalSwap(SS2C_STORAGE_INFO_RES* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.storageitems_.InternalSwap(&other->_impl_.storageitems_);
        swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata SS2C_STORAGE_INFO_RES::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC2S_INVENTORY_EXPAND_STORAGE_REQ::_Internal {
 public:
};

SC2S_INVENTORY_EXPAND_STORAGE_REQ::SC2S_INVENTORY_EXPAND_STORAGE_REQ(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SC2S_INVENTORY_EXPAND_STORAGE_REQ)
}
SC2S_INVENTORY_EXPAND_STORAGE_REQ::SC2S_INVENTORY_EXPAND_STORAGE_REQ(
    ::google::protobuf::Arena* arena, const SC2S_INVENTORY_EXPAND_STORAGE_REQ& from)
    : SC2S_INVENTORY_EXPAND_STORAGE_REQ(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SC2S_INVENTORY_EXPAND_STORAGE_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SC2S_INVENTORY_EXPAND_STORAGE_REQ::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.buyinventoryid_ = {};
}
SC2S_INVENTORY_EXPAND_STORAGE_REQ::~SC2S_INVENTORY_EXPAND_STORAGE_REQ() {
  // @@protoc_insertion_point(destructor:DC.Packet.SC2S_INVENTORY_EXPAND_STORAGE_REQ)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SC2S_INVENTORY_EXPAND_STORAGE_REQ::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SC2S_INVENTORY_EXPAND_STORAGE_REQ::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SC2S_INVENTORY_EXPAND_STORAGE_REQ_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SC2S_INVENTORY_EXPAND_STORAGE_REQ::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SC2S_INVENTORY_EXPAND_STORAGE_REQ>(),
            ::google::protobuf::Message::GetNewImpl<SC2S_INVENTORY_EXPAND_STORAGE_REQ>(),
            ::google::protobuf::Message::GetClearImpl<SC2S_INVENTORY_EXPAND_STORAGE_REQ>(), &SC2S_INVENTORY_EXPAND_STORAGE_REQ::ByteSizeLong,
                &SC2S_INVENTORY_EXPAND_STORAGE_REQ::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_EXPAND_STORAGE_REQ, _impl_._cached_size_),
            false,
        },
        &SC2S_INVENTORY_EXPAND_STORAGE_REQ::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SC2S_INVENTORY_EXPAND_STORAGE_REQ::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SC2S_INVENTORY_EXPAND_STORAGE_REQ::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SC2S_INVENTORY_EXPAND_STORAGE_REQ>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 buyInventoryId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC2S_INVENTORY_EXPAND_STORAGE_REQ, _impl_.buyinventoryid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_EXPAND_STORAGE_REQ, _impl_.buyinventoryid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 buyInventoryId = 1;
    {PROTOBUF_FIELD_OFFSET(SC2S_INVENTORY_EXPAND_STORAGE_REQ, _impl_.buyinventoryid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SC2S_INVENTORY_EXPAND_STORAGE_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SC2S_INVENTORY_EXPAND_STORAGE_REQ)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.buyinventoryid_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC2S_INVENTORY_EXPAND_STORAGE_REQ::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC2S_INVENTORY_EXPAND_STORAGE_REQ& this_ = static_cast<const SC2S_INVENTORY_EXPAND_STORAGE_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC2S_INVENTORY_EXPAND_STORAGE_REQ::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC2S_INVENTORY_EXPAND_STORAGE_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SC2S_INVENTORY_EXPAND_STORAGE_REQ)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 buyInventoryId = 1;
          if (this_._internal_buyinventoryid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_buyinventoryid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SC2S_INVENTORY_EXPAND_STORAGE_REQ)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC2S_INVENTORY_EXPAND_STORAGE_REQ::ByteSizeLong(const MessageLite& base) {
          const SC2S_INVENTORY_EXPAND_STORAGE_REQ& this_ = static_cast<const SC2S_INVENTORY_EXPAND_STORAGE_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC2S_INVENTORY_EXPAND_STORAGE_REQ::ByteSizeLong() const {
          const SC2S_INVENTORY_EXPAND_STORAGE_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SC2S_INVENTORY_EXPAND_STORAGE_REQ)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 buyInventoryId = 1;
            if (this_._internal_buyinventoryid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_buyinventoryid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC2S_INVENTORY_EXPAND_STORAGE_REQ::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC2S_INVENTORY_EXPAND_STORAGE_REQ*>(&to_msg);
  auto& from = static_cast<const SC2S_INVENTORY_EXPAND_STORAGE_REQ&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SC2S_INVENTORY_EXPAND_STORAGE_REQ)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_buyinventoryid() != 0) {
    _this->_impl_.buyinventoryid_ = from._impl_.buyinventoryid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC2S_INVENTORY_EXPAND_STORAGE_REQ::CopyFrom(const SC2S_INVENTORY_EXPAND_STORAGE_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SC2S_INVENTORY_EXPAND_STORAGE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC2S_INVENTORY_EXPAND_STORAGE_REQ::InternalSwap(SC2S_INVENTORY_EXPAND_STORAGE_REQ* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.buyinventoryid_, other->_impl_.buyinventoryid_);
}

::google::protobuf::Metadata SC2S_INVENTORY_EXPAND_STORAGE_REQ::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SS2C_INVENTORY_EXPAND_STORAGE_RES::_Internal {
 public:
};

SS2C_INVENTORY_EXPAND_STORAGE_RES::SS2C_INVENTORY_EXPAND_STORAGE_RES(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SS2C_INVENTORY_EXPAND_STORAGE_RES)
}
SS2C_INVENTORY_EXPAND_STORAGE_RES::SS2C_INVENTORY_EXPAND_STORAGE_RES(
    ::google::protobuf::Arena* arena, const SS2C_INVENTORY_EXPAND_STORAGE_RES& from)
    : SS2C_INVENTORY_EXPAND_STORAGE_RES(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SS2C_INVENTORY_EXPAND_STORAGE_RES::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SS2C_INVENTORY_EXPAND_STORAGE_RES::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
SS2C_INVENTORY_EXPAND_STORAGE_RES::~SS2C_INVENTORY_EXPAND_STORAGE_RES() {
  // @@protoc_insertion_point(destructor:DC.Packet.SS2C_INVENTORY_EXPAND_STORAGE_RES)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SS2C_INVENTORY_EXPAND_STORAGE_RES::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SS2C_INVENTORY_EXPAND_STORAGE_RES::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SS2C_INVENTORY_EXPAND_STORAGE_RES_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SS2C_INVENTORY_EXPAND_STORAGE_RES::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SS2C_INVENTORY_EXPAND_STORAGE_RES>(),
            ::google::protobuf::Message::GetNewImpl<SS2C_INVENTORY_EXPAND_STORAGE_RES>(),
            ::google::protobuf::Message::GetClearImpl<SS2C_INVENTORY_EXPAND_STORAGE_RES>(), &SS2C_INVENTORY_EXPAND_STORAGE_RES::ByteSizeLong,
                &SS2C_INVENTORY_EXPAND_STORAGE_RES::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_EXPAND_STORAGE_RES, _impl_._cached_size_),
            false,
        },
        &SS2C_INVENTORY_EXPAND_STORAGE_RES::kDescriptorMethods,
        &descriptor_table_Inventory_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SS2C_INVENTORY_EXPAND_STORAGE_RES::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SS2C_INVENTORY_EXPAND_STORAGE_RES::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SS2C_INVENTORY_EXPAND_STORAGE_RES>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_INVENTORY_EXPAND_STORAGE_RES, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_EXPAND_STORAGE_RES, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 result = 1;
    {PROTOBUF_FIELD_OFFSET(SS2C_INVENTORY_EXPAND_STORAGE_RES, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SS2C_INVENTORY_EXPAND_STORAGE_RES::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SS2C_INVENTORY_EXPAND_STORAGE_RES)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SS2C_INVENTORY_EXPAND_STORAGE_RES::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SS2C_INVENTORY_EXPAND_STORAGE_RES& this_ = static_cast<const SS2C_INVENTORY_EXPAND_STORAGE_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SS2C_INVENTORY_EXPAND_STORAGE_RES::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SS2C_INVENTORY_EXPAND_STORAGE_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SS2C_INVENTORY_EXPAND_STORAGE_RES)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 result = 1;
          if (this_._internal_result() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_result(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SS2C_INVENTORY_EXPAND_STORAGE_RES)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SS2C_INVENTORY_EXPAND_STORAGE_RES::ByteSizeLong(const MessageLite& base) {
          const SS2C_INVENTORY_EXPAND_STORAGE_RES& this_ = static_cast<const SS2C_INVENTORY_EXPAND_STORAGE_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SS2C_INVENTORY_EXPAND_STORAGE_RES::ByteSizeLong() const {
          const SS2C_INVENTORY_EXPAND_STORAGE_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SS2C_INVENTORY_EXPAND_STORAGE_RES)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint32 result = 1;
            if (this_._internal_result() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_result());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SS2C_INVENTORY_EXPAND_STORAGE_RES::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SS2C_INVENTORY_EXPAND_STORAGE_RES*>(&to_msg);
  auto& from = static_cast<const SS2C_INVENTORY_EXPAND_STORAGE_RES&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SS2C_INVENTORY_EXPAND_STORAGE_RES)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SS2C_INVENTORY_EXPAND_STORAGE_RES::CopyFrom(const SS2C_INVENTORY_EXPAND_STORAGE_RES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SS2C_INVENTORY_EXPAND_STORAGE_RES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SS2C_INVENTORY_EXPAND_STORAGE_RES::InternalSwap(SS2C_INVENTORY_EXPAND_STORAGE_RES* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata SS2C_INVENTORY_EXPAND_STORAGE_RES::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Packet
}  // namespace DC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_Inventory_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
