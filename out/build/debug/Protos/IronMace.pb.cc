// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: IronMace.proto
// Protobuf C++ Version: 5.29.0-dev

#include "IronMace.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace DC {
namespace Packet {

inline constexpr IronMace_Token_Res::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IronMace_Token_Res::IronMace_Token_Res(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IronMace_Token_ResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IronMace_Token_ResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IronMace_Token_ResDefaultTypeInternal() {}
  union {
    IronMace_Token_Res _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IronMace_Token_ResDefaultTypeInternal _IronMace_Token_Res_default_instance_;

inline constexpr IronMace_Token::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : loginid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IronMace_Token::IronMace_Token(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IronMace_TokenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IronMace_TokenDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IronMace_TokenDefaultTypeInternal() {}
  union {
    IronMace_Token _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IronMace_TokenDefaultTypeInternal _IronMace_Token_default_instance_;

inline constexpr IronMace_Login_Res::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : errormessage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IronMace_Login_Res::IronMace_Login_Res(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IronMace_Login_ResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IronMace_Login_ResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IronMace_Login_ResDefaultTypeInternal() {}
  union {
    IronMace_Login_Res _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IronMace_Login_ResDefaultTypeInternal _IronMace_Login_Res_default_instance_;

inline constexpr IronMace_Login::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : loginid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IronMace_Login::IronMace_Login(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IronMace_LoginDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IronMace_LoginDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IronMace_LoginDefaultTypeInternal() {}
  union {
    IronMace_Login _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IronMace_LoginDefaultTypeInternal _IronMace_Login_default_instance_;
}  // namespace Packet
}  // namespace DC
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_IronMace_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_IronMace_2eproto = nullptr;
const ::uint32_t
    TableStruct_IronMace_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::IronMace_Login, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::IronMace_Login, _impl_.loginid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::IronMace_Login, _impl_.password_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::IronMace_Login_Res, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::IronMace_Login_Res, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::IronMace_Login_Res, _impl_.errormessage_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::IronMace_Token, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::IronMace_Token, _impl_.loginid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::IronMace_Token, _impl_.password_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::IronMace_Token_Res, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::IronMace_Token_Res, _impl_.token_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::DC::Packet::IronMace_Login)},
        {10, -1, -1, sizeof(::DC::Packet::IronMace_Login_Res)},
        {20, -1, -1, sizeof(::DC::Packet::IronMace_Token)},
        {30, -1, -1, sizeof(::DC::Packet::IronMace_Token_Res)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::DC::Packet::_IronMace_Login_default_instance_._instance,
    &::DC::Packet::_IronMace_Login_Res_default_instance_._instance,
    &::DC::Packet::_IronMace_Token_default_instance_._instance,
    &::DC::Packet::_IronMace_Token_Res_default_instance_._instance,
};
const char descriptor_table_protodef_IronMace_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016IronMace.proto\022\tDC.Packet\"3\n\016IronMace_"
    "Login\022\017\n\007loginId\030\001 \001(\t\022\020\n\010password\030\002 \001(\t"
    "\"\237\001\n\022IronMace_Login_Res\022\016\n\006result\030\001 \001(\r\022"
    "\024\n\014errorMessage\030\002 \001(\t\"c\n\025IronMace_Login_"
    "Result\022\010\n\004NONE\020\000\022\013\n\007SUCCESS\020\001\022\032\n\026FAIL_NO"
    "T_FOUND_ACCOUNT\020d\022\027\n\023FAIL_WRONG_PASSWORD"
    "\020e\"3\n\016IronMace_Token\022\017\n\007loginId\030\001 \001(\t\022\020\n"
    "\010password\030\002 \001(\t\"#\n\022IronMace_Token_Res\022\r\n"
    "\005token\030\002 \001(\tB\"\n\024com.packets.ironMaceB\010Ir"
    "onMaceP\000b\006proto3"
};
static ::absl::once_flag descriptor_table_IronMace_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_IronMace_2eproto = {
    false,
    false,
    376,
    descriptor_table_protodef_IronMace_2eproto,
    "IronMace.proto",
    &descriptor_table_IronMace_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_IronMace_2eproto::offsets,
    file_level_enum_descriptors_IronMace_2eproto,
    file_level_service_descriptors_IronMace_2eproto,
};
namespace DC {
namespace Packet {
const ::google::protobuf::EnumDescriptor* IronMace_Login_Res_IronMace_Login_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_IronMace_2eproto);
  return file_level_enum_descriptors_IronMace_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t IronMace_Login_Res_IronMace_Login_Result_internal_data_[] = {
    131072u, 131072u, 101u, 100u, };
bool IronMace_Login_Res_IronMace_Login_Result_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, IronMace_Login_Res_IronMace_Login_Result_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr IronMace_Login_Res_IronMace_Login_Result IronMace_Login_Res::NONE;
constexpr IronMace_Login_Res_IronMace_Login_Result IronMace_Login_Res::SUCCESS;
constexpr IronMace_Login_Res_IronMace_Login_Result IronMace_Login_Res::FAIL_NOT_FOUND_ACCOUNT;
constexpr IronMace_Login_Res_IronMace_Login_Result IronMace_Login_Res::FAIL_WRONG_PASSWORD;
constexpr IronMace_Login_Res_IronMace_Login_Result IronMace_Login_Res::IronMace_Login_Result_MIN;
constexpr IronMace_Login_Res_IronMace_Login_Result IronMace_Login_Res::IronMace_Login_Result_MAX;
constexpr int IronMace_Login_Res::IronMace_Login_Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class IronMace_Login::_Internal {
 public:
};

IronMace_Login::IronMace_Login(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.IronMace_Login)
}
inline PROTOBUF_NDEBUG_INLINE IronMace_Login::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::IronMace_Login& from_msg)
      : loginid_(arena, from.loginid_),
        password_(arena, from.password_),
        _cached_size_{0} {}

IronMace_Login::IronMace_Login(
    ::google::protobuf::Arena* arena,
    const IronMace_Login& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  IronMace_Login* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.IronMace_Login)
}
inline PROTOBUF_NDEBUG_INLINE IronMace_Login::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : loginid_(arena),
        password_(arena),
        _cached_size_{0} {}

inline void IronMace_Login::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
IronMace_Login::~IronMace_Login() {
  // @@protoc_insertion_point(destructor:DC.Packet.IronMace_Login)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IronMace_Login::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.loginid_.Destroy();
  _impl_.password_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    IronMace_Login::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_IronMace_Login_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &IronMace_Login::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<IronMace_Login>(),
            ::google::protobuf::Message::GetNewImpl<IronMace_Login>(),
            ::google::protobuf::Message::GetClearImpl<IronMace_Login>(), &IronMace_Login::ByteSizeLong,
                &IronMace_Login::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(IronMace_Login, _impl_._cached_size_),
            false,
        },
        &IronMace_Login::kDescriptorMethods,
        &descriptor_table_IronMace_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* IronMace_Login::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 48, 2> IronMace_Login::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::IronMace_Login>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(IronMace_Login, _impl_.password_)}},
    // string loginId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(IronMace_Login, _impl_.loginid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string loginId = 1;
    {PROTOBUF_FIELD_OFFSET(IronMace_Login, _impl_.loginid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(IronMace_Login, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\7\10\0\0\0\0\0"
    "DC.Packet.IronMace_Login"
    "loginId"
    "password"
  }},
};

PROTOBUF_NOINLINE void IronMace_Login::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.IronMace_Login)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.loginid_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* IronMace_Login::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const IronMace_Login& this_ = static_cast<const IronMace_Login&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* IronMace_Login::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const IronMace_Login& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.IronMace_Login)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string loginId = 1;
          if (!this_._internal_loginid().empty()) {
            const std::string& _s = this_._internal_loginid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.IronMace_Login.loginId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string password = 2;
          if (!this_._internal_password().empty()) {
            const std::string& _s = this_._internal_password();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.IronMace_Login.password");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.IronMace_Login)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t IronMace_Login::ByteSizeLong(const MessageLite& base) {
          const IronMace_Login& this_ = static_cast<const IronMace_Login&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t IronMace_Login::ByteSizeLong() const {
          const IronMace_Login& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.IronMace_Login)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string loginId = 1;
            if (!this_._internal_loginid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_loginid());
            }
            // string password = 2;
            if (!this_._internal_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_password());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void IronMace_Login::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IronMace_Login*>(&to_msg);
  auto& from = static_cast<const IronMace_Login&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.IronMace_Login)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_loginid().empty()) {
    _this->_internal_set_loginid(from._internal_loginid());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IronMace_Login::CopyFrom(const IronMace_Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.IronMace_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IronMace_Login::InternalSwap(IronMace_Login* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.loginid_, &other->_impl_.loginid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
}

::google::protobuf::Metadata IronMace_Login::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IronMace_Login_Res::_Internal {
 public:
};

IronMace_Login_Res::IronMace_Login_Res(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.IronMace_Login_Res)
}
inline PROTOBUF_NDEBUG_INLINE IronMace_Login_Res::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::IronMace_Login_Res& from_msg)
      : errormessage_(arena, from.errormessage_),
        _cached_size_{0} {}

IronMace_Login_Res::IronMace_Login_Res(
    ::google::protobuf::Arena* arena,
    const IronMace_Login_Res& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  IronMace_Login_Res* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.IronMace_Login_Res)
}
inline PROTOBUF_NDEBUG_INLINE IronMace_Login_Res::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : errormessage_(arena),
        _cached_size_{0} {}

inline void IronMace_Login_Res::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
IronMace_Login_Res::~IronMace_Login_Res() {
  // @@protoc_insertion_point(destructor:DC.Packet.IronMace_Login_Res)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IronMace_Login_Res::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.errormessage_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    IronMace_Login_Res::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_IronMace_Login_Res_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &IronMace_Login_Res::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<IronMace_Login_Res>(),
            ::google::protobuf::Message::GetNewImpl<IronMace_Login_Res>(),
            ::google::protobuf::Message::GetClearImpl<IronMace_Login_Res>(), &IronMace_Login_Res::ByteSizeLong,
                &IronMace_Login_Res::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(IronMace_Login_Res, _impl_._cached_size_),
            false,
        },
        &IronMace_Login_Res::kDescriptorMethods,
        &descriptor_table_IronMace_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* IronMace_Login_Res::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> IronMace_Login_Res::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::IronMace_Login_Res>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string errorMessage = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(IronMace_Login_Res, _impl_.errormessage_)}},
    // uint32 result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IronMace_Login_Res, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(IronMace_Login_Res, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 result = 1;
    {PROTOBUF_FIELD_OFFSET(IronMace_Login_Res, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string errorMessage = 2;
    {PROTOBUF_FIELD_OFFSET(IronMace_Login_Res, _impl_.errormessage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\0\14\0\0\0\0\0"
    "DC.Packet.IronMace_Login_Res"
    "errorMessage"
  }},
};

PROTOBUF_NOINLINE void IronMace_Login_Res::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.IronMace_Login_Res)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errormessage_.ClearToEmpty();
  _impl_.result_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* IronMace_Login_Res::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const IronMace_Login_Res& this_ = static_cast<const IronMace_Login_Res&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* IronMace_Login_Res::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const IronMace_Login_Res& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.IronMace_Login_Res)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 result = 1;
          if (this_._internal_result() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_result(), target);
          }

          // string errorMessage = 2;
          if (!this_._internal_errormessage().empty()) {
            const std::string& _s = this_._internal_errormessage();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.IronMace_Login_Res.errorMessage");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.IronMace_Login_Res)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t IronMace_Login_Res::ByteSizeLong(const MessageLite& base) {
          const IronMace_Login_Res& this_ = static_cast<const IronMace_Login_Res&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t IronMace_Login_Res::ByteSizeLong() const {
          const IronMace_Login_Res& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.IronMace_Login_Res)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string errorMessage = 2;
            if (!this_._internal_errormessage().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_errormessage());
            }
            // uint32 result = 1;
            if (this_._internal_result() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_result());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void IronMace_Login_Res::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IronMace_Login_Res*>(&to_msg);
  auto& from = static_cast<const IronMace_Login_Res&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.IronMace_Login_Res)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_errormessage().empty()) {
    _this->_internal_set_errormessage(from._internal_errormessage());
  }
  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IronMace_Login_Res::CopyFrom(const IronMace_Login_Res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.IronMace_Login_Res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IronMace_Login_Res::InternalSwap(IronMace_Login_Res* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.errormessage_, &other->_impl_.errormessage_, arena);
        swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata IronMace_Login_Res::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IronMace_Token::_Internal {
 public:
};

IronMace_Token::IronMace_Token(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.IronMace_Token)
}
inline PROTOBUF_NDEBUG_INLINE IronMace_Token::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::IronMace_Token& from_msg)
      : loginid_(arena, from.loginid_),
        password_(arena, from.password_),
        _cached_size_{0} {}

IronMace_Token::IronMace_Token(
    ::google::protobuf::Arena* arena,
    const IronMace_Token& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  IronMace_Token* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.IronMace_Token)
}
inline PROTOBUF_NDEBUG_INLINE IronMace_Token::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : loginid_(arena),
        password_(arena),
        _cached_size_{0} {}

inline void IronMace_Token::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
IronMace_Token::~IronMace_Token() {
  // @@protoc_insertion_point(destructor:DC.Packet.IronMace_Token)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IronMace_Token::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.loginid_.Destroy();
  _impl_.password_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    IronMace_Token::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_IronMace_Token_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &IronMace_Token::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<IronMace_Token>(),
            ::google::protobuf::Message::GetNewImpl<IronMace_Token>(),
            ::google::protobuf::Message::GetClearImpl<IronMace_Token>(), &IronMace_Token::ByteSizeLong,
                &IronMace_Token::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(IronMace_Token, _impl_._cached_size_),
            false,
        },
        &IronMace_Token::kDescriptorMethods,
        &descriptor_table_IronMace_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* IronMace_Token::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 48, 2> IronMace_Token::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::IronMace_Token>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(IronMace_Token, _impl_.password_)}},
    // string loginId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(IronMace_Token, _impl_.loginid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string loginId = 1;
    {PROTOBUF_FIELD_OFFSET(IronMace_Token, _impl_.loginid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(IronMace_Token, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\7\10\0\0\0\0\0"
    "DC.Packet.IronMace_Token"
    "loginId"
    "password"
  }},
};

PROTOBUF_NOINLINE void IronMace_Token::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.IronMace_Token)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.loginid_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* IronMace_Token::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const IronMace_Token& this_ = static_cast<const IronMace_Token&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* IronMace_Token::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const IronMace_Token& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.IronMace_Token)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string loginId = 1;
          if (!this_._internal_loginid().empty()) {
            const std::string& _s = this_._internal_loginid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.IronMace_Token.loginId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string password = 2;
          if (!this_._internal_password().empty()) {
            const std::string& _s = this_._internal_password();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.IronMace_Token.password");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.IronMace_Token)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t IronMace_Token::ByteSizeLong(const MessageLite& base) {
          const IronMace_Token& this_ = static_cast<const IronMace_Token&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t IronMace_Token::ByteSizeLong() const {
          const IronMace_Token& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.IronMace_Token)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string loginId = 1;
            if (!this_._internal_loginid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_loginid());
            }
            // string password = 2;
            if (!this_._internal_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_password());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void IronMace_Token::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IronMace_Token*>(&to_msg);
  auto& from = static_cast<const IronMace_Token&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.IronMace_Token)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_loginid().empty()) {
    _this->_internal_set_loginid(from._internal_loginid());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IronMace_Token::CopyFrom(const IronMace_Token& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.IronMace_Token)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IronMace_Token::InternalSwap(IronMace_Token* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.loginid_, &other->_impl_.loginid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
}

::google::protobuf::Metadata IronMace_Token::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IronMace_Token_Res::_Internal {
 public:
};

IronMace_Token_Res::IronMace_Token_Res(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.IronMace_Token_Res)
}
inline PROTOBUF_NDEBUG_INLINE IronMace_Token_Res::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::IronMace_Token_Res& from_msg)
      : token_(arena, from.token_),
        _cached_size_{0} {}

IronMace_Token_Res::IronMace_Token_Res(
    ::google::protobuf::Arena* arena,
    const IronMace_Token_Res& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  IronMace_Token_Res* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.IronMace_Token_Res)
}
inline PROTOBUF_NDEBUG_INLINE IronMace_Token_Res::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : token_(arena),
        _cached_size_{0} {}

inline void IronMace_Token_Res::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
IronMace_Token_Res::~IronMace_Token_Res() {
  // @@protoc_insertion_point(destructor:DC.Packet.IronMace_Token_Res)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IronMace_Token_Res::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.token_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    IronMace_Token_Res::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_IronMace_Token_Res_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &IronMace_Token_Res::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<IronMace_Token_Res>(),
            ::google::protobuf::Message::GetNewImpl<IronMace_Token_Res>(),
            ::google::protobuf::Message::GetClearImpl<IronMace_Token_Res>(), &IronMace_Token_Res::ByteSizeLong,
                &IronMace_Token_Res::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(IronMace_Token_Res, _impl_._cached_size_),
            false,
        },
        &IronMace_Token_Res::kDescriptorMethods,
        &descriptor_table_IronMace_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* IronMace_Token_Res::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 42, 2> IronMace_Token_Res::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::IronMace_Token_Res>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(IronMace_Token_Res, _impl_.token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string token = 2;
    {PROTOBUF_FIELD_OFFSET(IronMace_Token_Res, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\5\0\0\0\0\0\0"
    "DC.Packet.IronMace_Token_Res"
    "token"
  }},
};

PROTOBUF_NOINLINE void IronMace_Token_Res::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.IronMace_Token_Res)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* IronMace_Token_Res::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const IronMace_Token_Res& this_ = static_cast<const IronMace_Token_Res&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* IronMace_Token_Res::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const IronMace_Token_Res& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.IronMace_Token_Res)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string token = 2;
          if (!this_._internal_token().empty()) {
            const std::string& _s = this_._internal_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.IronMace_Token_Res.token");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.IronMace_Token_Res)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t IronMace_Token_Res::ByteSizeLong(const MessageLite& base) {
          const IronMace_Token_Res& this_ = static_cast<const IronMace_Token_Res&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t IronMace_Token_Res::ByteSizeLong() const {
          const IronMace_Token_Res& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.IronMace_Token_Res)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string token = 2;
            if (!this_._internal_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void IronMace_Token_Res::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IronMace_Token_Res*>(&to_msg);
  auto& from = static_cast<const IronMace_Token_Res&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.IronMace_Token_Res)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IronMace_Token_Res::CopyFrom(const IronMace_Token_Res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.IronMace_Token_Res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IronMace_Token_Res::InternalSwap(IronMace_Token_Res* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
}

::google::protobuf::Metadata IronMace_Token_Res::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Packet
}  // namespace DC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_IronMace_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
