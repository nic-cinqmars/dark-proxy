// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Karma.proto
// Protobuf C++ Version: 5.29.0-dev

#include "Karma.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace DC {
namespace Packet {

inline constexpr SS2C_KARMA_RATING_UPDATE_NOT::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        updatekarmarating_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SS2C_KARMA_RATING_UPDATE_NOT::SS2C_KARMA_RATING_UPDATE_NOT(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SS2C_KARMA_RATING_UPDATE_NOTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SS2C_KARMA_RATING_UPDATE_NOTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SS2C_KARMA_RATING_UPDATE_NOTDefaultTypeInternal() {}
  union {
    SS2C_KARMA_RATING_UPDATE_NOT _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SS2C_KARMA_RATING_UPDATE_NOTDefaultTypeInternal _SS2C_KARMA_RATING_UPDATE_NOT_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SC2S_KARMA_REPORT_LIST_REQ::SC2S_KARMA_REPORT_LIST_REQ(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SC2S_KARMA_REPORT_LIST_REQDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC2S_KARMA_REPORT_LIST_REQDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC2S_KARMA_REPORT_LIST_REQDefaultTypeInternal() {}
  union {
    SC2S_KARMA_REPORT_LIST_REQ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC2S_KARMA_REPORT_LIST_REQDefaultTypeInternal _SC2S_KARMA_REPORT_LIST_REQ_default_instance_;

inline constexpr SC2S_KARMA_REPORT_ACTION_REQ::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        matchidx_{0u},
        action_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SC2S_KARMA_REPORT_ACTION_REQ::SC2S_KARMA_REPORT_ACTION_REQ(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SC2S_KARMA_REPORT_ACTION_REQDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SC2S_KARMA_REPORT_ACTION_REQDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SC2S_KARMA_REPORT_ACTION_REQDefaultTypeInternal() {}
  union {
    SC2S_KARMA_REPORT_ACTION_REQ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SC2S_KARMA_REPORT_ACTION_REQDefaultTypeInternal _SC2S_KARMA_REPORT_ACTION_REQ_default_instance_;

inline constexpr SKARMA_CHARACTER_INFO::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterclass_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_{nullptr},
        gender_{0u},
        isvote_{0u},
        karmaaction_{0u},
        karmastatus_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SKARMA_CHARACTER_INFO::SKARMA_CHARACTER_INFO(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SKARMA_CHARACTER_INFODefaultTypeInternal {
  PROTOBUF_CONSTEXPR SKARMA_CHARACTER_INFODefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SKARMA_CHARACTER_INFODefaultTypeInternal() {}
  union {
    SKARMA_CHARACTER_INFO _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SKARMA_CHARACTER_INFODefaultTypeInternal _SKARMA_CHARACTER_INFO_default_instance_;

inline constexpr SS2C_KARMA_REPORT_ACTION_RES::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        updatecharacterinfo_{nullptr},
        result_{0u},
        matchidx_{0u},
        currentticketcount_{0u},
        collectionstepcount_{0u},
        maxcollectioncount_{0u},
        maxticketcount_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SS2C_KARMA_REPORT_ACTION_RES::SS2C_KARMA_REPORT_ACTION_RES(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SS2C_KARMA_REPORT_ACTION_RESDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SS2C_KARMA_REPORT_ACTION_RESDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SS2C_KARMA_REPORT_ACTION_RESDefaultTypeInternal() {}
  union {
    SS2C_KARMA_REPORT_ACTION_RES _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SS2C_KARMA_REPORT_ACTION_RESDefaultTypeInternal _SS2C_KARMA_REPORT_ACTION_RES_default_instance_;

inline constexpr SKARMA_MOST_RECENT_MATCH_INFO::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : characterinfos_{},
        matchidx_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SKARMA_MOST_RECENT_MATCH_INFO::SKARMA_MOST_RECENT_MATCH_INFO(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SKARMA_MOST_RECENT_MATCH_INFODefaultTypeInternal {
  PROTOBUF_CONSTEXPR SKARMA_MOST_RECENT_MATCH_INFODefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SKARMA_MOST_RECENT_MATCH_INFODefaultTypeInternal() {}
  union {
    SKARMA_MOST_RECENT_MATCH_INFO _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SKARMA_MOST_RECENT_MATCH_INFODefaultTypeInternal _SKARMA_MOST_RECENT_MATCH_INFO_default_instance_;

inline constexpr SS2C_KARMA_REPORT_LIST_RES::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : matchinfos_{},
        currentticketcount_{0u},
        collectionstepcount_{0u},
        maxcollectioncount_{0u},
        maxticketcount_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SS2C_KARMA_REPORT_LIST_RES::SS2C_KARMA_REPORT_LIST_RES(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SS2C_KARMA_REPORT_LIST_RESDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SS2C_KARMA_REPORT_LIST_RESDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SS2C_KARMA_REPORT_LIST_RESDefaultTypeInternal() {}
  union {
    SS2C_KARMA_REPORT_LIST_RES _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SS2C_KARMA_REPORT_LIST_RESDefaultTypeInternal _SS2C_KARMA_REPORT_LIST_RES_default_instance_;
}  // namespace Packet
}  // namespace DC
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_Karma_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Karma_2eproto = nullptr;
const ::uint32_t
    TableStruct_Karma_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SKARMA_CHARACTER_INFO, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SKARMA_CHARACTER_INFO, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SKARMA_CHARACTER_INFO, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SKARMA_CHARACTER_INFO, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SKARMA_CHARACTER_INFO, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SKARMA_CHARACTER_INFO, _impl_.characterclass_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SKARMA_CHARACTER_INFO, _impl_.gender_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SKARMA_CHARACTER_INFO, _impl_.isvote_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SKARMA_CHARACTER_INFO, _impl_.karmaaction_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SKARMA_CHARACTER_INFO, _impl_.karmastatus_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO, _impl_.matchidx_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO, _impl_.characterinfos_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_KARMA_REPORT_LIST_REQ, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_REPORT_LIST_RES, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_REPORT_LIST_RES, _impl_.matchinfos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_REPORT_LIST_RES, _impl_.currentticketcount_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_REPORT_LIST_RES, _impl_.collectionstepcount_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_REPORT_LIST_RES, _impl_.maxcollectioncount_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_REPORT_LIST_RES, _impl_.maxticketcount_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_KARMA_REPORT_ACTION_REQ, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_KARMA_REPORT_ACTION_REQ, _impl_.matchidx_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_KARMA_REPORT_ACTION_REQ, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_KARMA_REPORT_ACTION_REQ, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SC2S_KARMA_REPORT_ACTION_REQ, _impl_.action_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_REPORT_ACTION_RES, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_REPORT_ACTION_RES, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_REPORT_ACTION_RES, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_REPORT_ACTION_RES, _impl_.matchidx_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_REPORT_ACTION_RES, _impl_.updatecharacterinfo_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_REPORT_ACTION_RES, _impl_.currentticketcount_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_REPORT_ACTION_RES, _impl_.collectionstepcount_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_REPORT_ACTION_RES, _impl_.maxcollectioncount_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_REPORT_ACTION_RES, _impl_.maxticketcount_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_RATING_UPDATE_NOT, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_RATING_UPDATE_NOT, _impl_.updatekarmarating_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_RATING_UPDATE_NOT, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SS2C_KARMA_RATING_UPDATE_NOT, _impl_.characterid_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 16, -1, sizeof(::DC::Packet::SKARMA_CHARACTER_INFO)},
        {24, -1, -1, sizeof(::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO)},
        {34, -1, -1, sizeof(::DC::Packet::SC2S_KARMA_REPORT_LIST_REQ)},
        {42, -1, -1, sizeof(::DC::Packet::SS2C_KARMA_REPORT_LIST_RES)},
        {55, -1, -1, sizeof(::DC::Packet::SC2S_KARMA_REPORT_ACTION_REQ)},
        {67, 82, -1, sizeof(::DC::Packet::SS2C_KARMA_REPORT_ACTION_RES)},
        {89, -1, -1, sizeof(::DC::Packet::SS2C_KARMA_RATING_UPDATE_NOT)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::DC::Packet::_SKARMA_CHARACTER_INFO_default_instance_._instance,
    &::DC::Packet::_SKARMA_MOST_RECENT_MATCH_INFO_default_instance_._instance,
    &::DC::Packet::_SC2S_KARMA_REPORT_LIST_REQ_default_instance_._instance,
    &::DC::Packet::_SS2C_KARMA_REPORT_LIST_RES_default_instance_._instance,
    &::DC::Packet::_SC2S_KARMA_REPORT_ACTION_REQ_default_instance_._instance,
    &::DC::Packet::_SS2C_KARMA_REPORT_ACTION_RES_default_instance_._instance,
    &::DC::Packet::_SS2C_KARMA_RATING_UPDATE_NOT_default_instance_._instance,
};
const char descriptor_table_protodef_Karma_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013Karma.proto\022\tDC.Packet\032\020_Character.pro"
    "to\"\321\001\n\025SKARMA_CHARACTER_INFO\022\021\n\taccountI"
    "d\030\001 \001(\t\022\023\n\013characterId\030\002 \001(\t\022.\n\010nickName"
    "\030\003 \001(\0132\034.DC.Packet.SACCOUNT_NICKNAME\022\026\n\016"
    "characterClass\030\004 \001(\t\022\016\n\006gender\030\005 \001(\r\022\016\n\006"
    "isVote\030\006 \001(\r\022\023\n\013karmaAction\030\007 \001(\r\022\023\n\013kar"
    "maStatus\030\010 \001(\r\"k\n\035SKARMA_MOST_RECENT_MAT"
    "CH_INFO\022\020\n\010matchIdx\030\001 \001(\r\0228\n\016characterIn"
    "fos\030\002 \003(\0132 .DC.Packet.SKARMA_CHARACTER_I"
    "NFO\"\034\n\032SC2S_KARMA_REPORT_LIST_REQ\"\307\001\n\032SS"
    "2C_KARMA_REPORT_LIST_RES\022<\n\nmatchInfos\030\001"
    " \003(\0132(.DC.Packet.SKARMA_MOST_RECENT_MATC"
    "H_INFO\022\032\n\022currentTicketCount\030\002 \001(\r\022\033\n\023co"
    "llectionStepCount\030\003 \001(\r\022\032\n\022maxCollection"
    "Count\030\004 \001(\r\022\026\n\016maxTicketCount\030\005 \001(\r\"h\n\034S"
    "C2S_KARMA_REPORT_ACTION_REQ\022\020\n\010matchIdx\030"
    "\001 \001(\r\022\021\n\taccountId\030\002 \001(\t\022\023\n\013characterId\030"
    "\003 \001(\t\022\016\n\006action\030\004 \001(\r\"\354\001\n\034SS2C_KARMA_REP"
    "ORT_ACTION_RES\022\016\n\006result\030\001 \001(\r\022\020\n\010matchI"
    "dx\030\002 \001(\r\022=\n\023updateCharacterInfo\030\003 \001(\0132 ."
    "DC.Packet.SKARMA_CHARACTER_INFO\022\032\n\022curre"
    "ntTicketCount\030\004 \001(\r\022\033\n\023collectionStepCou"
    "nt\030\005 \001(\r\022\032\n\022maxCollectionCount\030\006 \001(\r\022\026\n\016"
    "maxTicketCount\030\007 \001(\r\"a\n\034SS2C_KARMA_RATIN"
    "G_UPDATE_NOT\022\031\n\021updateKarmaRating\030\001 \001(\005\022"
    "\021\n\taccountId\030\002 \001(\t\022\023\n\013characterId\030\003 \001(\tB"
    "\034\n\021com.packets.karmaB\005karmaP\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_Karma_2eproto_deps[1] =
    {
        &::descriptor_table__5fCharacter_2eproto,
};
static ::absl::once_flag descriptor_table_Karma_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_Karma_2eproto = {
    false,
    false,
    1077,
    descriptor_table_protodef_Karma_2eproto,
    "Karma.proto",
    &descriptor_table_Karma_2eproto_once,
    descriptor_table_Karma_2eproto_deps,
    1,
    7,
    schemas,
    file_default_instances,
    TableStruct_Karma_2eproto::offsets,
    file_level_enum_descriptors_Karma_2eproto,
    file_level_service_descriptors_Karma_2eproto,
};
namespace DC {
namespace Packet {
// ===================================================================

class SKARMA_CHARACTER_INFO::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SKARMA_CHARACTER_INFO>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_._has_bits_);
};

void SKARMA_CHARACTER_INFO::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ != nullptr) _impl_.nickname_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SKARMA_CHARACTER_INFO::SKARMA_CHARACTER_INFO(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SKARMA_CHARACTER_INFO)
}
inline PROTOBUF_NDEBUG_INLINE SKARMA_CHARACTER_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SKARMA_CHARACTER_INFO& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        characterclass_(arena, from.characterclass_) {}

SKARMA_CHARACTER_INFO::SKARMA_CHARACTER_INFO(
    ::google::protobuf::Arena* arena,
    const SKARMA_CHARACTER_INFO& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SKARMA_CHARACTER_INFO* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.nickname_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(
                              arena, *from._impl_.nickname_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gender_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gender_),
           offsetof(Impl_, karmastatus_) -
               offsetof(Impl_, gender_) +
               sizeof(Impl_::karmastatus_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SKARMA_CHARACTER_INFO)
}
inline PROTOBUF_NDEBUG_INLINE SKARMA_CHARACTER_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        accountid_(arena),
        characterid_(arena),
        characterclass_(arena) {}

inline void SKARMA_CHARACTER_INFO::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nickname_),
           0,
           offsetof(Impl_, karmastatus_) -
               offsetof(Impl_, nickname_) +
               sizeof(Impl_::karmastatus_));
}
SKARMA_CHARACTER_INFO::~SKARMA_CHARACTER_INFO() {
  // @@protoc_insertion_point(destructor:DC.Packet.SKARMA_CHARACTER_INFO)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SKARMA_CHARACTER_INFO::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.characterclass_.Destroy();
  delete _impl_.nickname_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SKARMA_CHARACTER_INFO::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SKARMA_CHARACTER_INFO_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SKARMA_CHARACTER_INFO::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SKARMA_CHARACTER_INFO>(),
            ::google::protobuf::Message::GetNewImpl<SKARMA_CHARACTER_INFO>(),
            ::google::protobuf::Message::GetClearImpl<SKARMA_CHARACTER_INFO>(), &SKARMA_CHARACTER_INFO::ByteSizeLong,
                &SKARMA_CHARACTER_INFO::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_._cached_size_),
            false,
        },
        &SKARMA_CHARACTER_INFO::kDescriptorMethods,
        &descriptor_table_Karma_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SKARMA_CHARACTER_INFO::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 82, 2> SKARMA_CHARACTER_INFO::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SKARMA_CHARACTER_INFO>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 karmaStatus = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SKARMA_CHARACTER_INFO, _impl_.karmastatus_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.karmastatus_)}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.accountid_)}},
    // string characterId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.characterid_)}},
    // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.nickname_)}},
    // string characterClass = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.characterclass_)}},
    // uint32 gender = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SKARMA_CHARACTER_INFO, _impl_.gender_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.gender_)}},
    // uint32 isVote = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SKARMA_CHARACTER_INFO, _impl_.isvote_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.isvote_)}},
    // uint32 karmaAction = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SKARMA_CHARACTER_INFO, _impl_.karmaaction_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.karmaaction_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.accountid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 2;
    {PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.characterid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
    {PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.nickname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string characterClass = 4;
    {PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.characterclass_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 gender = 5;
    {PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.gender_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 isVote = 6;
    {PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.isvote_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 karmaAction = 7;
    {PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.karmaaction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 karmaStatus = 8;
    {PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.karmastatus_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SACCOUNT_NICKNAME>()},
  }}, {{
    "\37\11\13\0\16\0\0\0\0\0\0\0\0\0\0\0"
    "DC.Packet.SKARMA_CHARACTER_INFO"
    "accountId"
    "characterId"
    "characterClass"
  }},
};

PROTOBUF_NOINLINE void SKARMA_CHARACTER_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SKARMA_CHARACTER_INFO)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.characterclass_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.nickname_ != nullptr);
    _impl_.nickname_->Clear();
  }
  ::memset(&_impl_.gender_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.karmastatus_) -
      reinterpret_cast<char*>(&_impl_.gender_)) + sizeof(_impl_.karmastatus_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SKARMA_CHARACTER_INFO::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SKARMA_CHARACTER_INFO& this_ = static_cast<const SKARMA_CHARACTER_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SKARMA_CHARACTER_INFO::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SKARMA_CHARACTER_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SKARMA_CHARACTER_INFO)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SKARMA_CHARACTER_INFO.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string characterId = 2;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SKARMA_CHARACTER_INFO.characterId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.nickname_, this_._impl_.nickname_->GetCachedSize(), target,
                stream);
          }

          // string characterClass = 4;
          if (!this_._internal_characterclass().empty()) {
            const std::string& _s = this_._internal_characterclass();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SKARMA_CHARACTER_INFO.characterClass");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // uint32 gender = 5;
          if (this_._internal_gender() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_gender(), target);
          }

          // uint32 isVote = 6;
          if (this_._internal_isvote() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_isvote(), target);
          }

          // uint32 karmaAction = 7;
          if (this_._internal_karmaaction() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_karmaaction(), target);
          }

          // uint32 karmaStatus = 8;
          if (this_._internal_karmastatus() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_karmastatus(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SKARMA_CHARACTER_INFO)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SKARMA_CHARACTER_INFO::ByteSizeLong(const MessageLite& base) {
          const SKARMA_CHARACTER_INFO& this_ = static_cast<const SKARMA_CHARACTER_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SKARMA_CHARACTER_INFO::ByteSizeLong() const {
          const SKARMA_CHARACTER_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SKARMA_CHARACTER_INFO)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 2;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // string characterClass = 4;
            if (!this_._internal_characterclass().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterclass());
            }
          }
           {
            // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.nickname_);
            }
          }
           {
            // uint32 gender = 5;
            if (this_._internal_gender() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gender());
            }
            // uint32 isVote = 6;
            if (this_._internal_isvote() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_isvote());
            }
            // uint32 karmaAction = 7;
            if (this_._internal_karmaaction() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_karmaaction());
            }
            // uint32 karmaStatus = 8;
            if (this_._internal_karmastatus() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_karmastatus());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SKARMA_CHARACTER_INFO::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SKARMA_CHARACTER_INFO*>(&to_msg);
  auto& from = static_cast<const SKARMA_CHARACTER_INFO&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SKARMA_CHARACTER_INFO)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (!from._internal_characterclass().empty()) {
    _this->_internal_set_characterclass(from._internal_characterclass());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.nickname_ != nullptr);
    if (_this->_impl_.nickname_ == nullptr) {
      _this->_impl_.nickname_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(arena, *from._impl_.nickname_);
    } else {
      _this->_impl_.nickname_->MergeFrom(*from._impl_.nickname_);
    }
  }
  if (from._internal_gender() != 0) {
    _this->_impl_.gender_ = from._impl_.gender_;
  }
  if (from._internal_isvote() != 0) {
    _this->_impl_.isvote_ = from._impl_.isvote_;
  }
  if (from._internal_karmaaction() != 0) {
    _this->_impl_.karmaaction_ = from._impl_.karmaaction_;
  }
  if (from._internal_karmastatus() != 0) {
    _this->_impl_.karmastatus_ = from._impl_.karmastatus_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SKARMA_CHARACTER_INFO::CopyFrom(const SKARMA_CHARACTER_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SKARMA_CHARACTER_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SKARMA_CHARACTER_INFO::InternalSwap(SKARMA_CHARACTER_INFO* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterclass_, &other->_impl_.characterclass_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.karmastatus_)
      + sizeof(SKARMA_CHARACTER_INFO::_impl_.karmastatus_)
      - PROTOBUF_FIELD_OFFSET(SKARMA_CHARACTER_INFO, _impl_.nickname_)>(
          reinterpret_cast<char*>(&_impl_.nickname_),
          reinterpret_cast<char*>(&other->_impl_.nickname_));
}

::google::protobuf::Metadata SKARMA_CHARACTER_INFO::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SKARMA_MOST_RECENT_MATCH_INFO::_Internal {
 public:
};

SKARMA_MOST_RECENT_MATCH_INFO::SKARMA_MOST_RECENT_MATCH_INFO(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO)
}
inline PROTOBUF_NDEBUG_INLINE SKARMA_MOST_RECENT_MATCH_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO& from_msg)
      : characterinfos_{visibility, arena, from.characterinfos_},
        _cached_size_{0} {}

SKARMA_MOST_RECENT_MATCH_INFO::SKARMA_MOST_RECENT_MATCH_INFO(
    ::google::protobuf::Arena* arena,
    const SKARMA_MOST_RECENT_MATCH_INFO& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SKARMA_MOST_RECENT_MATCH_INFO* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.matchidx_ = from._impl_.matchidx_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO)
}
inline PROTOBUF_NDEBUG_INLINE SKARMA_MOST_RECENT_MATCH_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : characterinfos_{visibility, arena},
        _cached_size_{0} {}

inline void SKARMA_MOST_RECENT_MATCH_INFO::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.matchidx_ = {};
}
SKARMA_MOST_RECENT_MATCH_INFO::~SKARMA_MOST_RECENT_MATCH_INFO() {
  // @@protoc_insertion_point(destructor:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SKARMA_MOST_RECENT_MATCH_INFO::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SKARMA_MOST_RECENT_MATCH_INFO::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SKARMA_MOST_RECENT_MATCH_INFO_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SKARMA_MOST_RECENT_MATCH_INFO::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SKARMA_MOST_RECENT_MATCH_INFO>(),
            ::google::protobuf::Message::GetNewImpl<SKARMA_MOST_RECENT_MATCH_INFO>(),
            ::google::protobuf::Message::GetClearImpl<SKARMA_MOST_RECENT_MATCH_INFO>(), &SKARMA_MOST_RECENT_MATCH_INFO::ByteSizeLong,
                &SKARMA_MOST_RECENT_MATCH_INFO::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SKARMA_MOST_RECENT_MATCH_INFO, _impl_._cached_size_),
            false,
        },
        &SKARMA_MOST_RECENT_MATCH_INFO::kDescriptorMethods,
        &descriptor_table_Karma_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SKARMA_MOST_RECENT_MATCH_INFO::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SKARMA_MOST_RECENT_MATCH_INFO::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.SKARMA_CHARACTER_INFO characterInfos = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SKARMA_MOST_RECENT_MATCH_INFO, _impl_.characterinfos_)}},
    // uint32 matchIdx = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SKARMA_MOST_RECENT_MATCH_INFO, _impl_.matchidx_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SKARMA_MOST_RECENT_MATCH_INFO, _impl_.matchidx_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 matchIdx = 1;
    {PROTOBUF_FIELD_OFFSET(SKARMA_MOST_RECENT_MATCH_INFO, _impl_.matchidx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .DC.Packet.SKARMA_CHARACTER_INFO characterInfos = 2;
    {PROTOBUF_FIELD_OFFSET(SKARMA_MOST_RECENT_MATCH_INFO, _impl_.characterinfos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SKARMA_CHARACTER_INFO>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SKARMA_MOST_RECENT_MATCH_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.characterinfos_.Clear();
  _impl_.matchidx_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SKARMA_MOST_RECENT_MATCH_INFO::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SKARMA_MOST_RECENT_MATCH_INFO& this_ = static_cast<const SKARMA_MOST_RECENT_MATCH_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SKARMA_MOST_RECENT_MATCH_INFO::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SKARMA_MOST_RECENT_MATCH_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 matchIdx = 1;
          if (this_._internal_matchidx() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_matchidx(), target);
          }

          // repeated .DC.Packet.SKARMA_CHARACTER_INFO characterInfos = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_characterinfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_characterinfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SKARMA_MOST_RECENT_MATCH_INFO::ByteSizeLong(const MessageLite& base) {
          const SKARMA_MOST_RECENT_MATCH_INFO& this_ = static_cast<const SKARMA_MOST_RECENT_MATCH_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SKARMA_MOST_RECENT_MATCH_INFO::ByteSizeLong() const {
          const SKARMA_MOST_RECENT_MATCH_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SKARMA_CHARACTER_INFO characterInfos = 2;
            {
              total_size += 1UL * this_._internal_characterinfos_size();
              for (const auto& msg : this_._internal_characterinfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 matchIdx = 1;
            if (this_._internal_matchidx() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_matchidx());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SKARMA_MOST_RECENT_MATCH_INFO::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SKARMA_MOST_RECENT_MATCH_INFO*>(&to_msg);
  auto& from = static_cast<const SKARMA_MOST_RECENT_MATCH_INFO&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_characterinfos()->MergeFrom(
      from._internal_characterinfos());
  if (from._internal_matchidx() != 0) {
    _this->_impl_.matchidx_ = from._impl_.matchidx_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SKARMA_MOST_RECENT_MATCH_INFO::CopyFrom(const SKARMA_MOST_RECENT_MATCH_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SKARMA_MOST_RECENT_MATCH_INFO::InternalSwap(SKARMA_MOST_RECENT_MATCH_INFO* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.characterinfos_.InternalSwap(&other->_impl_.characterinfos_);
        swap(_impl_.matchidx_, other->_impl_.matchidx_);
}

::google::protobuf::Metadata SKARMA_MOST_RECENT_MATCH_INFO::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC2S_KARMA_REPORT_LIST_REQ::_Internal {
 public:
};

SC2S_KARMA_REPORT_LIST_REQ::SC2S_KARMA_REPORT_LIST_REQ(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SC2S_KARMA_REPORT_LIST_REQ)
}
SC2S_KARMA_REPORT_LIST_REQ::SC2S_KARMA_REPORT_LIST_REQ(
    ::google::protobuf::Arena* arena,
    const SC2S_KARMA_REPORT_LIST_REQ& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC2S_KARMA_REPORT_LIST_REQ* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SC2S_KARMA_REPORT_LIST_REQ)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SC2S_KARMA_REPORT_LIST_REQ::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_SC2S_KARMA_REPORT_LIST_REQ_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SC2S_KARMA_REPORT_LIST_REQ::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<SC2S_KARMA_REPORT_LIST_REQ>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SC2S_KARMA_REPORT_LIST_REQ>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SC2S_KARMA_REPORT_LIST_REQ>(), &SC2S_KARMA_REPORT_LIST_REQ::ByteSizeLong,
                &SC2S_KARMA_REPORT_LIST_REQ::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SC2S_KARMA_REPORT_LIST_REQ, _impl_._cached_size_),
            false,
        },
        &SC2S_KARMA_REPORT_LIST_REQ::kDescriptorMethods,
        &descriptor_table_Karma_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SC2S_KARMA_REPORT_LIST_REQ::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SC2S_KARMA_REPORT_LIST_REQ::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SC2S_KARMA_REPORT_LIST_REQ>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SC2S_KARMA_REPORT_LIST_REQ::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SS2C_KARMA_REPORT_LIST_RES::_Internal {
 public:
};

SS2C_KARMA_REPORT_LIST_RES::SS2C_KARMA_REPORT_LIST_RES(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SS2C_KARMA_REPORT_LIST_RES)
}
inline PROTOBUF_NDEBUG_INLINE SS2C_KARMA_REPORT_LIST_RES::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SS2C_KARMA_REPORT_LIST_RES& from_msg)
      : matchinfos_{visibility, arena, from.matchinfos_},
        _cached_size_{0} {}

SS2C_KARMA_REPORT_LIST_RES::SS2C_KARMA_REPORT_LIST_RES(
    ::google::protobuf::Arena* arena,
    const SS2C_KARMA_REPORT_LIST_RES& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SS2C_KARMA_REPORT_LIST_RES* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, currentticketcount_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, currentticketcount_),
           offsetof(Impl_, maxticketcount_) -
               offsetof(Impl_, currentticketcount_) +
               sizeof(Impl_::maxticketcount_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SS2C_KARMA_REPORT_LIST_RES)
}
inline PROTOBUF_NDEBUG_INLINE SS2C_KARMA_REPORT_LIST_RES::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : matchinfos_{visibility, arena},
        _cached_size_{0} {}

inline void SS2C_KARMA_REPORT_LIST_RES::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, currentticketcount_),
           0,
           offsetof(Impl_, maxticketcount_) -
               offsetof(Impl_, currentticketcount_) +
               sizeof(Impl_::maxticketcount_));
}
SS2C_KARMA_REPORT_LIST_RES::~SS2C_KARMA_REPORT_LIST_RES() {
  // @@protoc_insertion_point(destructor:DC.Packet.SS2C_KARMA_REPORT_LIST_RES)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SS2C_KARMA_REPORT_LIST_RES::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SS2C_KARMA_REPORT_LIST_RES::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SS2C_KARMA_REPORT_LIST_RES_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SS2C_KARMA_REPORT_LIST_RES::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SS2C_KARMA_REPORT_LIST_RES>(),
            ::google::protobuf::Message::GetNewImpl<SS2C_KARMA_REPORT_LIST_RES>(),
            ::google::protobuf::Message::GetClearImpl<SS2C_KARMA_REPORT_LIST_RES>(), &SS2C_KARMA_REPORT_LIST_RES::ByteSizeLong,
                &SS2C_KARMA_REPORT_LIST_RES::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_LIST_RES, _impl_._cached_size_),
            false,
        },
        &SS2C_KARMA_REPORT_LIST_RES::kDescriptorMethods,
        &descriptor_table_Karma_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SS2C_KARMA_REPORT_LIST_RES::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> SS2C_KARMA_REPORT_LIST_RES::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SS2C_KARMA_REPORT_LIST_RES>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO matchInfos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_LIST_RES, _impl_.matchinfos_)}},
    // uint32 currentTicketCount = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_KARMA_REPORT_LIST_RES, _impl_.currentticketcount_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_LIST_RES, _impl_.currentticketcount_)}},
    // uint32 collectionStepCount = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_KARMA_REPORT_LIST_RES, _impl_.collectionstepcount_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_LIST_RES, _impl_.collectionstepcount_)}},
    // uint32 maxCollectionCount = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_KARMA_REPORT_LIST_RES, _impl_.maxcollectioncount_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_LIST_RES, _impl_.maxcollectioncount_)}},
    // uint32 maxTicketCount = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_KARMA_REPORT_LIST_RES, _impl_.maxticketcount_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_LIST_RES, _impl_.maxticketcount_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO matchInfos = 1;
    {PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_LIST_RES, _impl_.matchinfos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 currentTicketCount = 2;
    {PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_LIST_RES, _impl_.currentticketcount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 collectionStepCount = 3;
    {PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_LIST_RES, _impl_.collectionstepcount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 maxCollectionCount = 4;
    {PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_LIST_RES, _impl_.maxcollectioncount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 maxTicketCount = 5;
    {PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_LIST_RES, _impl_.maxticketcount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SS2C_KARMA_REPORT_LIST_RES::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SS2C_KARMA_REPORT_LIST_RES)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.matchinfos_.Clear();
  ::memset(&_impl_.currentticketcount_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.maxticketcount_) -
      reinterpret_cast<char*>(&_impl_.currentticketcount_)) + sizeof(_impl_.maxticketcount_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SS2C_KARMA_REPORT_LIST_RES::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SS2C_KARMA_REPORT_LIST_RES& this_ = static_cast<const SS2C_KARMA_REPORT_LIST_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SS2C_KARMA_REPORT_LIST_RES::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SS2C_KARMA_REPORT_LIST_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SS2C_KARMA_REPORT_LIST_RES)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO matchInfos = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_matchinfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_matchinfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint32 currentTicketCount = 2;
          if (this_._internal_currentticketcount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_currentticketcount(), target);
          }

          // uint32 collectionStepCount = 3;
          if (this_._internal_collectionstepcount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_collectionstepcount(), target);
          }

          // uint32 maxCollectionCount = 4;
          if (this_._internal_maxcollectioncount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_maxcollectioncount(), target);
          }

          // uint32 maxTicketCount = 5;
          if (this_._internal_maxticketcount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_maxticketcount(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SS2C_KARMA_REPORT_LIST_RES)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SS2C_KARMA_REPORT_LIST_RES::ByteSizeLong(const MessageLite& base) {
          const SS2C_KARMA_REPORT_LIST_RES& this_ = static_cast<const SS2C_KARMA_REPORT_LIST_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SS2C_KARMA_REPORT_LIST_RES::ByteSizeLong() const {
          const SS2C_KARMA_REPORT_LIST_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SS2C_KARMA_REPORT_LIST_RES)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO matchInfos = 1;
            {
              total_size += 1UL * this_._internal_matchinfos_size();
              for (const auto& msg : this_._internal_matchinfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 currentTicketCount = 2;
            if (this_._internal_currentticketcount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_currentticketcount());
            }
            // uint32 collectionStepCount = 3;
            if (this_._internal_collectionstepcount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_collectionstepcount());
            }
            // uint32 maxCollectionCount = 4;
            if (this_._internal_maxcollectioncount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_maxcollectioncount());
            }
            // uint32 maxTicketCount = 5;
            if (this_._internal_maxticketcount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_maxticketcount());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SS2C_KARMA_REPORT_LIST_RES::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SS2C_KARMA_REPORT_LIST_RES*>(&to_msg);
  auto& from = static_cast<const SS2C_KARMA_REPORT_LIST_RES&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SS2C_KARMA_REPORT_LIST_RES)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_matchinfos()->MergeFrom(
      from._internal_matchinfos());
  if (from._internal_currentticketcount() != 0) {
    _this->_impl_.currentticketcount_ = from._impl_.currentticketcount_;
  }
  if (from._internal_collectionstepcount() != 0) {
    _this->_impl_.collectionstepcount_ = from._impl_.collectionstepcount_;
  }
  if (from._internal_maxcollectioncount() != 0) {
    _this->_impl_.maxcollectioncount_ = from._impl_.maxcollectioncount_;
  }
  if (from._internal_maxticketcount() != 0) {
    _this->_impl_.maxticketcount_ = from._impl_.maxticketcount_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SS2C_KARMA_REPORT_LIST_RES::CopyFrom(const SS2C_KARMA_REPORT_LIST_RES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SS2C_KARMA_REPORT_LIST_RES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SS2C_KARMA_REPORT_LIST_RES::InternalSwap(SS2C_KARMA_REPORT_LIST_RES* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.matchinfos_.InternalSwap(&other->_impl_.matchinfos_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_LIST_RES, _impl_.maxticketcount_)
      + sizeof(SS2C_KARMA_REPORT_LIST_RES::_impl_.maxticketcount_)
      - PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_LIST_RES, _impl_.currentticketcount_)>(
          reinterpret_cast<char*>(&_impl_.currentticketcount_),
          reinterpret_cast<char*>(&other->_impl_.currentticketcount_));
}

::google::protobuf::Metadata SS2C_KARMA_REPORT_LIST_RES::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SC2S_KARMA_REPORT_ACTION_REQ::_Internal {
 public:
};

SC2S_KARMA_REPORT_ACTION_REQ::SC2S_KARMA_REPORT_ACTION_REQ(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_KARMA_REPORT_ACTION_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SC2S_KARMA_REPORT_ACTION_REQ& from_msg)
      : accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        _cached_size_{0} {}

SC2S_KARMA_REPORT_ACTION_REQ::SC2S_KARMA_REPORT_ACTION_REQ(
    ::google::protobuf::Arena* arena,
    const SC2S_KARMA_REPORT_ACTION_REQ& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SC2S_KARMA_REPORT_ACTION_REQ* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, matchidx_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, matchidx_),
           offsetof(Impl_, action_) -
               offsetof(Impl_, matchidx_) +
               sizeof(Impl_::action_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ)
}
inline PROTOBUF_NDEBUG_INLINE SC2S_KARMA_REPORT_ACTION_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accountid_(arena),
        characterid_(arena),
        _cached_size_{0} {}

inline void SC2S_KARMA_REPORT_ACTION_REQ::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, matchidx_),
           0,
           offsetof(Impl_, action_) -
               offsetof(Impl_, matchidx_) +
               sizeof(Impl_::action_));
}
SC2S_KARMA_REPORT_ACTION_REQ::~SC2S_KARMA_REPORT_ACTION_REQ() {
  // @@protoc_insertion_point(destructor:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SC2S_KARMA_REPORT_ACTION_REQ::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SC2S_KARMA_REPORT_ACTION_REQ::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SC2S_KARMA_REPORT_ACTION_REQ_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SC2S_KARMA_REPORT_ACTION_REQ::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SC2S_KARMA_REPORT_ACTION_REQ>(),
            ::google::protobuf::Message::GetNewImpl<SC2S_KARMA_REPORT_ACTION_REQ>(),
            ::google::protobuf::Message::GetClearImpl<SC2S_KARMA_REPORT_ACTION_REQ>(), &SC2S_KARMA_REPORT_ACTION_REQ::ByteSizeLong,
                &SC2S_KARMA_REPORT_ACTION_REQ::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SC2S_KARMA_REPORT_ACTION_REQ, _impl_._cached_size_),
            false,
        },
        &SC2S_KARMA_REPORT_ACTION_REQ::kDescriptorMethods,
        &descriptor_table_Karma_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SC2S_KARMA_REPORT_ACTION_REQ::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 67, 2> SC2S_KARMA_REPORT_ACTION_REQ::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SC2S_KARMA_REPORT_ACTION_REQ>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 action = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC2S_KARMA_REPORT_ACTION_REQ, _impl_.action_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_KARMA_REPORT_ACTION_REQ, _impl_.action_)}},
    // uint32 matchIdx = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SC2S_KARMA_REPORT_ACTION_REQ, _impl_.matchidx_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_KARMA_REPORT_ACTION_REQ, _impl_.matchidx_)}},
    // string accountId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_KARMA_REPORT_ACTION_REQ, _impl_.accountid_)}},
    // string characterId = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SC2S_KARMA_REPORT_ACTION_REQ, _impl_.characterid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 matchIdx = 1;
    {PROTOBUF_FIELD_OFFSET(SC2S_KARMA_REPORT_ACTION_REQ, _impl_.matchidx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string accountId = 2;
    {PROTOBUF_FIELD_OFFSET(SC2S_KARMA_REPORT_ACTION_REQ, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 3;
    {PROTOBUF_FIELD_OFFSET(SC2S_KARMA_REPORT_ACTION_REQ, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 action = 4;
    {PROTOBUF_FIELD_OFFSET(SC2S_KARMA_REPORT_ACTION_REQ, _impl_.action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\46\0\11\13\0\0\0\0"
    "DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ"
    "accountId"
    "characterId"
  }},
};

PROTOBUF_NOINLINE void SC2S_KARMA_REPORT_ACTION_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  ::memset(&_impl_.matchidx_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.action_) -
      reinterpret_cast<char*>(&_impl_.matchidx_)) + sizeof(_impl_.action_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SC2S_KARMA_REPORT_ACTION_REQ::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SC2S_KARMA_REPORT_ACTION_REQ& this_ = static_cast<const SC2S_KARMA_REPORT_ACTION_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SC2S_KARMA_REPORT_ACTION_REQ::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SC2S_KARMA_REPORT_ACTION_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 matchIdx = 1;
          if (this_._internal_matchidx() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_matchidx(), target);
          }

          // string accountId = 2;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ.accountId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string characterId = 3;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ.characterId");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint32 action = 4;
          if (this_._internal_action() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_action(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SC2S_KARMA_REPORT_ACTION_REQ::ByteSizeLong(const MessageLite& base) {
          const SC2S_KARMA_REPORT_ACTION_REQ& this_ = static_cast<const SC2S_KARMA_REPORT_ACTION_REQ&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SC2S_KARMA_REPORT_ACTION_REQ::ByteSizeLong() const {
          const SC2S_KARMA_REPORT_ACTION_REQ& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 2;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 3;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // uint32 matchIdx = 1;
            if (this_._internal_matchidx() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_matchidx());
            }
            // uint32 action = 4;
            if (this_._internal_action() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_action());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SC2S_KARMA_REPORT_ACTION_REQ::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SC2S_KARMA_REPORT_ACTION_REQ*>(&to_msg);
  auto& from = static_cast<const SC2S_KARMA_REPORT_ACTION_REQ&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (from._internal_matchidx() != 0) {
    _this->_impl_.matchidx_ = from._impl_.matchidx_;
  }
  if (from._internal_action() != 0) {
    _this->_impl_.action_ = from._impl_.action_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SC2S_KARMA_REPORT_ACTION_REQ::CopyFrom(const SC2S_KARMA_REPORT_ACTION_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SC2S_KARMA_REPORT_ACTION_REQ::InternalSwap(SC2S_KARMA_REPORT_ACTION_REQ* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SC2S_KARMA_REPORT_ACTION_REQ, _impl_.action_)
      + sizeof(SC2S_KARMA_REPORT_ACTION_REQ::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SC2S_KARMA_REPORT_ACTION_REQ, _impl_.matchidx_)>(
          reinterpret_cast<char*>(&_impl_.matchidx_),
          reinterpret_cast<char*>(&other->_impl_.matchidx_));
}

::google::protobuf::Metadata SC2S_KARMA_REPORT_ACTION_REQ::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SS2C_KARMA_REPORT_ACTION_RES::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SS2C_KARMA_REPORT_ACTION_RES>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_._has_bits_);
};

SS2C_KARMA_REPORT_ACTION_RES::SS2C_KARMA_REPORT_ACTION_RES(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES)
}
inline PROTOBUF_NDEBUG_INLINE SS2C_KARMA_REPORT_ACTION_RES::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SS2C_KARMA_REPORT_ACTION_RES& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SS2C_KARMA_REPORT_ACTION_RES::SS2C_KARMA_REPORT_ACTION_RES(
    ::google::protobuf::Arena* arena,
    const SS2C_KARMA_REPORT_ACTION_RES& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SS2C_KARMA_REPORT_ACTION_RES* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.updatecharacterinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SKARMA_CHARACTER_INFO>(
                              arena, *from._impl_.updatecharacterinfo_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, result_),
           offsetof(Impl_, maxticketcount_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::maxticketcount_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES)
}
inline PROTOBUF_NDEBUG_INLINE SS2C_KARMA_REPORT_ACTION_RES::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SS2C_KARMA_REPORT_ACTION_RES::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, updatecharacterinfo_),
           0,
           offsetof(Impl_, maxticketcount_) -
               offsetof(Impl_, updatecharacterinfo_) +
               sizeof(Impl_::maxticketcount_));
}
SS2C_KARMA_REPORT_ACTION_RES::~SS2C_KARMA_REPORT_ACTION_RES() {
  // @@protoc_insertion_point(destructor:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SS2C_KARMA_REPORT_ACTION_RES::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.updatecharacterinfo_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SS2C_KARMA_REPORT_ACTION_RES::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SS2C_KARMA_REPORT_ACTION_RES_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SS2C_KARMA_REPORT_ACTION_RES::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SS2C_KARMA_REPORT_ACTION_RES>(),
            ::google::protobuf::Message::GetNewImpl<SS2C_KARMA_REPORT_ACTION_RES>(),
            ::google::protobuf::Message::GetClearImpl<SS2C_KARMA_REPORT_ACTION_RES>(), &SS2C_KARMA_REPORT_ACTION_RES::ByteSizeLong,
                &SS2C_KARMA_REPORT_ACTION_RES::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_._cached_size_),
            false,
        },
        &SS2C_KARMA_REPORT_ACTION_RES::kDescriptorMethods,
        &descriptor_table_Karma_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SS2C_KARMA_REPORT_ACTION_RES::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 0, 2> SS2C_KARMA_REPORT_ACTION_RES::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SS2C_KARMA_REPORT_ACTION_RES>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_KARMA_REPORT_ACTION_RES, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_.result_)}},
    // uint32 matchIdx = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_KARMA_REPORT_ACTION_RES, _impl_.matchidx_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_.matchidx_)}},
    // .DC.Packet.SKARMA_CHARACTER_INFO updateCharacterInfo = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_.updatecharacterinfo_)}},
    // uint32 currentTicketCount = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_KARMA_REPORT_ACTION_RES, _impl_.currentticketcount_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_.currentticketcount_)}},
    // uint32 collectionStepCount = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_KARMA_REPORT_ACTION_RES, _impl_.collectionstepcount_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_.collectionstepcount_)}},
    // uint32 maxCollectionCount = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_KARMA_REPORT_ACTION_RES, _impl_.maxcollectioncount_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_.maxcollectioncount_)}},
    // uint32 maxTicketCount = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_KARMA_REPORT_ACTION_RES, _impl_.maxticketcount_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_.maxticketcount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 result = 1;
    {PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_.result_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 matchIdx = 2;
    {PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_.matchidx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .DC.Packet.SKARMA_CHARACTER_INFO updateCharacterInfo = 3;
    {PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_.updatecharacterinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 currentTicketCount = 4;
    {PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_.currentticketcount_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 collectionStepCount = 5;
    {PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_.collectionstepcount_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 maxCollectionCount = 6;
    {PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_.maxcollectioncount_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 maxTicketCount = 7;
    {PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_.maxticketcount_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SKARMA_CHARACTER_INFO>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SS2C_KARMA_REPORT_ACTION_RES::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.updatecharacterinfo_ != nullptr);
    _impl_.updatecharacterinfo_->Clear();
  }
  ::memset(&_impl_.result_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.maxticketcount_) -
      reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.maxticketcount_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SS2C_KARMA_REPORT_ACTION_RES::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SS2C_KARMA_REPORT_ACTION_RES& this_ = static_cast<const SS2C_KARMA_REPORT_ACTION_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SS2C_KARMA_REPORT_ACTION_RES::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SS2C_KARMA_REPORT_ACTION_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 result = 1;
          if (this_._internal_result() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_result(), target);
          }

          // uint32 matchIdx = 2;
          if (this_._internal_matchidx() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_matchidx(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SKARMA_CHARACTER_INFO updateCharacterInfo = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.updatecharacterinfo_, this_._impl_.updatecharacterinfo_->GetCachedSize(), target,
                stream);
          }

          // uint32 currentTicketCount = 4;
          if (this_._internal_currentticketcount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_currentticketcount(), target);
          }

          // uint32 collectionStepCount = 5;
          if (this_._internal_collectionstepcount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_collectionstepcount(), target);
          }

          // uint32 maxCollectionCount = 6;
          if (this_._internal_maxcollectioncount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_maxcollectioncount(), target);
          }

          // uint32 maxTicketCount = 7;
          if (this_._internal_maxticketcount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_maxticketcount(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SS2C_KARMA_REPORT_ACTION_RES::ByteSizeLong(const MessageLite& base) {
          const SS2C_KARMA_REPORT_ACTION_RES& this_ = static_cast<const SS2C_KARMA_REPORT_ACTION_RES&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SS2C_KARMA_REPORT_ACTION_RES::ByteSizeLong() const {
          const SS2C_KARMA_REPORT_ACTION_RES& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .DC.Packet.SKARMA_CHARACTER_INFO updateCharacterInfo = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.updatecharacterinfo_);
            }
          }
           {
            // uint32 result = 1;
            if (this_._internal_result() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_result());
            }
            // uint32 matchIdx = 2;
            if (this_._internal_matchidx() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_matchidx());
            }
            // uint32 currentTicketCount = 4;
            if (this_._internal_currentticketcount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_currentticketcount());
            }
            // uint32 collectionStepCount = 5;
            if (this_._internal_collectionstepcount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_collectionstepcount());
            }
            // uint32 maxCollectionCount = 6;
            if (this_._internal_maxcollectioncount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_maxcollectioncount());
            }
            // uint32 maxTicketCount = 7;
            if (this_._internal_maxticketcount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_maxticketcount());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SS2C_KARMA_REPORT_ACTION_RES::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SS2C_KARMA_REPORT_ACTION_RES*>(&to_msg);
  auto& from = static_cast<const SS2C_KARMA_REPORT_ACTION_RES&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.updatecharacterinfo_ != nullptr);
    if (_this->_impl_.updatecharacterinfo_ == nullptr) {
      _this->_impl_.updatecharacterinfo_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SKARMA_CHARACTER_INFO>(arena, *from._impl_.updatecharacterinfo_);
    } else {
      _this->_impl_.updatecharacterinfo_->MergeFrom(*from._impl_.updatecharacterinfo_);
    }
  }
  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  if (from._internal_matchidx() != 0) {
    _this->_impl_.matchidx_ = from._impl_.matchidx_;
  }
  if (from._internal_currentticketcount() != 0) {
    _this->_impl_.currentticketcount_ = from._impl_.currentticketcount_;
  }
  if (from._internal_collectionstepcount() != 0) {
    _this->_impl_.collectionstepcount_ = from._impl_.collectionstepcount_;
  }
  if (from._internal_maxcollectioncount() != 0) {
    _this->_impl_.maxcollectioncount_ = from._impl_.maxcollectioncount_;
  }
  if (from._internal_maxticketcount() != 0) {
    _this->_impl_.maxticketcount_ = from._impl_.maxticketcount_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SS2C_KARMA_REPORT_ACTION_RES::CopyFrom(const SS2C_KARMA_REPORT_ACTION_RES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SS2C_KARMA_REPORT_ACTION_RES::InternalSwap(SS2C_KARMA_REPORT_ACTION_RES* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_.maxticketcount_)
      + sizeof(SS2C_KARMA_REPORT_ACTION_RES::_impl_.maxticketcount_)
      - PROTOBUF_FIELD_OFFSET(SS2C_KARMA_REPORT_ACTION_RES, _impl_.updatecharacterinfo_)>(
          reinterpret_cast<char*>(&_impl_.updatecharacterinfo_),
          reinterpret_cast<char*>(&other->_impl_.updatecharacterinfo_));
}

::google::protobuf::Metadata SS2C_KARMA_REPORT_ACTION_RES::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SS2C_KARMA_RATING_UPDATE_NOT::_Internal {
 public:
};

SS2C_KARMA_RATING_UPDATE_NOT::SS2C_KARMA_RATING_UPDATE_NOT(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT)
}
inline PROTOBUF_NDEBUG_INLINE SS2C_KARMA_RATING_UPDATE_NOT::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SS2C_KARMA_RATING_UPDATE_NOT& from_msg)
      : accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        _cached_size_{0} {}

SS2C_KARMA_RATING_UPDATE_NOT::SS2C_KARMA_RATING_UPDATE_NOT(
    ::google::protobuf::Arena* arena,
    const SS2C_KARMA_RATING_UPDATE_NOT& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SS2C_KARMA_RATING_UPDATE_NOT* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.updatekarmarating_ = from._impl_.updatekarmarating_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT)
}
inline PROTOBUF_NDEBUG_INLINE SS2C_KARMA_RATING_UPDATE_NOT::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accountid_(arena),
        characterid_(arena),
        _cached_size_{0} {}

inline void SS2C_KARMA_RATING_UPDATE_NOT::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.updatekarmarating_ = {};
}
SS2C_KARMA_RATING_UPDATE_NOT::~SS2C_KARMA_RATING_UPDATE_NOT() {
  // @@protoc_insertion_point(destructor:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SS2C_KARMA_RATING_UPDATE_NOT::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SS2C_KARMA_RATING_UPDATE_NOT::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SS2C_KARMA_RATING_UPDATE_NOT_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SS2C_KARMA_RATING_UPDATE_NOT::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SS2C_KARMA_RATING_UPDATE_NOT>(),
            ::google::protobuf::Message::GetNewImpl<SS2C_KARMA_RATING_UPDATE_NOT>(),
            ::google::protobuf::Message::GetClearImpl<SS2C_KARMA_RATING_UPDATE_NOT>(), &SS2C_KARMA_RATING_UPDATE_NOT::ByteSizeLong,
                &SS2C_KARMA_RATING_UPDATE_NOT::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SS2C_KARMA_RATING_UPDATE_NOT, _impl_._cached_size_),
            false,
        },
        &SS2C_KARMA_RATING_UPDATE_NOT::kDescriptorMethods,
        &descriptor_table_Karma_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SS2C_KARMA_RATING_UPDATE_NOT::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 67, 2> SS2C_KARMA_RATING_UPDATE_NOT::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SS2C_KARMA_RATING_UPDATE_NOT>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 updateKarmaRating = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SS2C_KARMA_RATING_UPDATE_NOT, _impl_.updatekarmarating_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_KARMA_RATING_UPDATE_NOT, _impl_.updatekarmarating_)}},
    // string accountId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_KARMA_RATING_UPDATE_NOT, _impl_.accountid_)}},
    // string characterId = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SS2C_KARMA_RATING_UPDATE_NOT, _impl_.characterid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 updateKarmaRating = 1;
    {PROTOBUF_FIELD_OFFSET(SS2C_KARMA_RATING_UPDATE_NOT, _impl_.updatekarmarating_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string accountId = 2;
    {PROTOBUF_FIELD_OFFSET(SS2C_KARMA_RATING_UPDATE_NOT, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 3;
    {PROTOBUF_FIELD_OFFSET(SS2C_KARMA_RATING_UPDATE_NOT, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\0\11\13\0\0\0\0"
    "DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT"
    "accountId"
    "characterId"
  }},
};

PROTOBUF_NOINLINE void SS2C_KARMA_RATING_UPDATE_NOT::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.updatekarmarating_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SS2C_KARMA_RATING_UPDATE_NOT::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SS2C_KARMA_RATING_UPDATE_NOT& this_ = static_cast<const SS2C_KARMA_RATING_UPDATE_NOT&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SS2C_KARMA_RATING_UPDATE_NOT::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SS2C_KARMA_RATING_UPDATE_NOT& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 updateKarmaRating = 1;
          if (this_._internal_updatekarmarating() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_updatekarmarating(), target);
          }

          // string accountId = 2;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT.accountId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string characterId = 3;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT.characterId");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SS2C_KARMA_RATING_UPDATE_NOT::ByteSizeLong(const MessageLite& base) {
          const SS2C_KARMA_RATING_UPDATE_NOT& this_ = static_cast<const SS2C_KARMA_RATING_UPDATE_NOT&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SS2C_KARMA_RATING_UPDATE_NOT::ByteSizeLong() const {
          const SS2C_KARMA_RATING_UPDATE_NOT& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 2;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 3;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // int32 updateKarmaRating = 1;
            if (this_._internal_updatekarmarating() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_updatekarmarating());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SS2C_KARMA_RATING_UPDATE_NOT::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SS2C_KARMA_RATING_UPDATE_NOT*>(&to_msg);
  auto& from = static_cast<const SS2C_KARMA_RATING_UPDATE_NOT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (from._internal_updatekarmarating() != 0) {
    _this->_impl_.updatekarmarating_ = from._impl_.updatekarmarating_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SS2C_KARMA_RATING_UPDATE_NOT::CopyFrom(const SS2C_KARMA_RATING_UPDATE_NOT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SS2C_KARMA_RATING_UPDATE_NOT::InternalSwap(SS2C_KARMA_RATING_UPDATE_NOT* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
        swap(_impl_.updatekarmarating_, other->_impl_.updatekarmarating_);
}

::google::protobuf::Metadata SS2C_KARMA_RATING_UPDATE_NOT::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Packet
}  // namespace DC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_Karma_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
