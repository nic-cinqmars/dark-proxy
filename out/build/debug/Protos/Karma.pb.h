// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Karma.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_Karma_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Karma_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "_Character.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Karma_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Karma_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Karma_2eproto;
namespace DC {
namespace Packet {
class SC2S_KARMA_REPORT_ACTION_REQ;
struct SC2S_KARMA_REPORT_ACTION_REQDefaultTypeInternal;
extern SC2S_KARMA_REPORT_ACTION_REQDefaultTypeInternal _SC2S_KARMA_REPORT_ACTION_REQ_default_instance_;
class SC2S_KARMA_REPORT_LIST_REQ;
struct SC2S_KARMA_REPORT_LIST_REQDefaultTypeInternal;
extern SC2S_KARMA_REPORT_LIST_REQDefaultTypeInternal _SC2S_KARMA_REPORT_LIST_REQ_default_instance_;
class SKARMA_CHARACTER_INFO;
struct SKARMA_CHARACTER_INFODefaultTypeInternal;
extern SKARMA_CHARACTER_INFODefaultTypeInternal _SKARMA_CHARACTER_INFO_default_instance_;
class SKARMA_MOST_RECENT_MATCH_INFO;
struct SKARMA_MOST_RECENT_MATCH_INFODefaultTypeInternal;
extern SKARMA_MOST_RECENT_MATCH_INFODefaultTypeInternal _SKARMA_MOST_RECENT_MATCH_INFO_default_instance_;
class SS2C_KARMA_RATING_UPDATE_NOT;
struct SS2C_KARMA_RATING_UPDATE_NOTDefaultTypeInternal;
extern SS2C_KARMA_RATING_UPDATE_NOTDefaultTypeInternal _SS2C_KARMA_RATING_UPDATE_NOT_default_instance_;
class SS2C_KARMA_REPORT_ACTION_RES;
struct SS2C_KARMA_REPORT_ACTION_RESDefaultTypeInternal;
extern SS2C_KARMA_REPORT_ACTION_RESDefaultTypeInternal _SS2C_KARMA_REPORT_ACTION_RES_default_instance_;
class SS2C_KARMA_REPORT_LIST_RES;
struct SS2C_KARMA_REPORT_LIST_RESDefaultTypeInternal;
extern SS2C_KARMA_REPORT_LIST_RESDefaultTypeInternal _SS2C_KARMA_REPORT_LIST_RES_default_instance_;
}  // namespace Packet
}  // namespace DC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace DC {
namespace Packet {

// ===================================================================


// -------------------------------------------------------------------

class SS2C_KARMA_RATING_UPDATE_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT) */ {
 public:
  inline SS2C_KARMA_RATING_UPDATE_NOT() : SS2C_KARMA_RATING_UPDATE_NOT(nullptr) {}
  ~SS2C_KARMA_RATING_UPDATE_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_KARMA_RATING_UPDATE_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_KARMA_RATING_UPDATE_NOT(const SS2C_KARMA_RATING_UPDATE_NOT& from) : SS2C_KARMA_RATING_UPDATE_NOT(nullptr, from) {}
  inline SS2C_KARMA_RATING_UPDATE_NOT(SS2C_KARMA_RATING_UPDATE_NOT&& from) noexcept
      : SS2C_KARMA_RATING_UPDATE_NOT(nullptr, std::move(from)) {}
  inline SS2C_KARMA_RATING_UPDATE_NOT& operator=(const SS2C_KARMA_RATING_UPDATE_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_KARMA_RATING_UPDATE_NOT& operator=(SS2C_KARMA_RATING_UPDATE_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_KARMA_RATING_UPDATE_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_KARMA_RATING_UPDATE_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_KARMA_RATING_UPDATE_NOT*>(
        &_SS2C_KARMA_RATING_UPDATE_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(SS2C_KARMA_RATING_UPDATE_NOT& a, SS2C_KARMA_RATING_UPDATE_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_KARMA_RATING_UPDATE_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_KARMA_RATING_UPDATE_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_KARMA_RATING_UPDATE_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_KARMA_RATING_UPDATE_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_KARMA_RATING_UPDATE_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_KARMA_RATING_UPDATE_NOT& from) { SS2C_KARMA_RATING_UPDATE_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_KARMA_RATING_UPDATE_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT"; }

 protected:
  explicit SS2C_KARMA_RATING_UPDATE_NOT(::google::protobuf::Arena* arena);
  SS2C_KARMA_RATING_UPDATE_NOT(::google::protobuf::Arena* arena, const SS2C_KARMA_RATING_UPDATE_NOT& from);
  SS2C_KARMA_RATING_UPDATE_NOT(::google::protobuf::Arena* arena, SS2C_KARMA_RATING_UPDATE_NOT&& from) noexcept
      : SS2C_KARMA_RATING_UPDATE_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 2,
    kCharacterIdFieldNumber = 3,
    kUpdateKarmaRatingFieldNumber = 1,
  };
  // string accountId = 2;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 3;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // int32 updateKarmaRating = 1;
  void clear_updatekarmarating() ;
  ::int32_t updatekarmarating() const;
  void set_updatekarmarating(::int32_t value);

  private:
  ::int32_t _internal_updatekarmarating() const;
  void _internal_set_updatekarmarating(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      67, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_KARMA_RATING_UPDATE_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_KARMA_RATING_UPDATE_NOT& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::int32_t updatekarmarating_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Karma_2eproto;
};
// -------------------------------------------------------------------

class SC2S_KARMA_REPORT_LIST_REQ final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_KARMA_REPORT_LIST_REQ) */ {
 public:
  inline SC2S_KARMA_REPORT_LIST_REQ() : SC2S_KARMA_REPORT_LIST_REQ(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_KARMA_REPORT_LIST_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_KARMA_REPORT_LIST_REQ(const SC2S_KARMA_REPORT_LIST_REQ& from) : SC2S_KARMA_REPORT_LIST_REQ(nullptr, from) {}
  inline SC2S_KARMA_REPORT_LIST_REQ(SC2S_KARMA_REPORT_LIST_REQ&& from) noexcept
      : SC2S_KARMA_REPORT_LIST_REQ(nullptr, std::move(from)) {}
  inline SC2S_KARMA_REPORT_LIST_REQ& operator=(const SC2S_KARMA_REPORT_LIST_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_KARMA_REPORT_LIST_REQ& operator=(SC2S_KARMA_REPORT_LIST_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_KARMA_REPORT_LIST_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_KARMA_REPORT_LIST_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_KARMA_REPORT_LIST_REQ*>(
        &_SC2S_KARMA_REPORT_LIST_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SC2S_KARMA_REPORT_LIST_REQ& a, SC2S_KARMA_REPORT_LIST_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_KARMA_REPORT_LIST_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_KARMA_REPORT_LIST_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_KARMA_REPORT_LIST_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SC2S_KARMA_REPORT_LIST_REQ>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SC2S_KARMA_REPORT_LIST_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SC2S_KARMA_REPORT_LIST_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_KARMA_REPORT_LIST_REQ"; }

 protected:
  explicit SC2S_KARMA_REPORT_LIST_REQ(::google::protobuf::Arena* arena);
  SC2S_KARMA_REPORT_LIST_REQ(::google::protobuf::Arena* arena, const SC2S_KARMA_REPORT_LIST_REQ& from);
  SC2S_KARMA_REPORT_LIST_REQ(::google::protobuf::Arena* arena, SC2S_KARMA_REPORT_LIST_REQ&& from) noexcept
      : SC2S_KARMA_REPORT_LIST_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_KARMA_REPORT_LIST_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_KARMA_REPORT_LIST_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_KARMA_REPORT_LIST_REQ& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Karma_2eproto;
};
// -------------------------------------------------------------------

class SC2S_KARMA_REPORT_ACTION_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ) */ {
 public:
  inline SC2S_KARMA_REPORT_ACTION_REQ() : SC2S_KARMA_REPORT_ACTION_REQ(nullptr) {}
  ~SC2S_KARMA_REPORT_ACTION_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_KARMA_REPORT_ACTION_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_KARMA_REPORT_ACTION_REQ(const SC2S_KARMA_REPORT_ACTION_REQ& from) : SC2S_KARMA_REPORT_ACTION_REQ(nullptr, from) {}
  inline SC2S_KARMA_REPORT_ACTION_REQ(SC2S_KARMA_REPORT_ACTION_REQ&& from) noexcept
      : SC2S_KARMA_REPORT_ACTION_REQ(nullptr, std::move(from)) {}
  inline SC2S_KARMA_REPORT_ACTION_REQ& operator=(const SC2S_KARMA_REPORT_ACTION_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_KARMA_REPORT_ACTION_REQ& operator=(SC2S_KARMA_REPORT_ACTION_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_KARMA_REPORT_ACTION_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_KARMA_REPORT_ACTION_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_KARMA_REPORT_ACTION_REQ*>(
        &_SC2S_KARMA_REPORT_ACTION_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SC2S_KARMA_REPORT_ACTION_REQ& a, SC2S_KARMA_REPORT_ACTION_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_KARMA_REPORT_ACTION_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_KARMA_REPORT_ACTION_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_KARMA_REPORT_ACTION_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_KARMA_REPORT_ACTION_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_KARMA_REPORT_ACTION_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_KARMA_REPORT_ACTION_REQ& from) { SC2S_KARMA_REPORT_ACTION_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_KARMA_REPORT_ACTION_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ"; }

 protected:
  explicit SC2S_KARMA_REPORT_ACTION_REQ(::google::protobuf::Arena* arena);
  SC2S_KARMA_REPORT_ACTION_REQ(::google::protobuf::Arena* arena, const SC2S_KARMA_REPORT_ACTION_REQ& from);
  SC2S_KARMA_REPORT_ACTION_REQ(::google::protobuf::Arena* arena, SC2S_KARMA_REPORT_ACTION_REQ&& from) noexcept
      : SC2S_KARMA_REPORT_ACTION_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 2,
    kCharacterIdFieldNumber = 3,
    kMatchIdxFieldNumber = 1,
    kActionFieldNumber = 4,
  };
  // string accountId = 2;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 3;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // uint32 matchIdx = 1;
  void clear_matchidx() ;
  ::uint32_t matchidx() const;
  void set_matchidx(::uint32_t value);

  private:
  ::uint32_t _internal_matchidx() const;
  void _internal_set_matchidx(::uint32_t value);

  public:
  // uint32 action = 4;
  void clear_action() ;
  ::uint32_t action() const;
  void set_action(::uint32_t value);

  private:
  ::uint32_t _internal_action() const;
  void _internal_set_action(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      67, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_KARMA_REPORT_ACTION_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_KARMA_REPORT_ACTION_REQ& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::uint32_t matchidx_;
    ::uint32_t action_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Karma_2eproto;
};
// -------------------------------------------------------------------

class SKARMA_CHARACTER_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SKARMA_CHARACTER_INFO) */ {
 public:
  inline SKARMA_CHARACTER_INFO() : SKARMA_CHARACTER_INFO(nullptr) {}
  ~SKARMA_CHARACTER_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SKARMA_CHARACTER_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline SKARMA_CHARACTER_INFO(const SKARMA_CHARACTER_INFO& from) : SKARMA_CHARACTER_INFO(nullptr, from) {}
  inline SKARMA_CHARACTER_INFO(SKARMA_CHARACTER_INFO&& from) noexcept
      : SKARMA_CHARACTER_INFO(nullptr, std::move(from)) {}
  inline SKARMA_CHARACTER_INFO& operator=(const SKARMA_CHARACTER_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SKARMA_CHARACTER_INFO& operator=(SKARMA_CHARACTER_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SKARMA_CHARACTER_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const SKARMA_CHARACTER_INFO* internal_default_instance() {
    return reinterpret_cast<const SKARMA_CHARACTER_INFO*>(
        &_SKARMA_CHARACTER_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SKARMA_CHARACTER_INFO& a, SKARMA_CHARACTER_INFO& b) { a.Swap(&b); }
  inline void Swap(SKARMA_CHARACTER_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SKARMA_CHARACTER_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SKARMA_CHARACTER_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SKARMA_CHARACTER_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SKARMA_CHARACTER_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SKARMA_CHARACTER_INFO& from) { SKARMA_CHARACTER_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SKARMA_CHARACTER_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SKARMA_CHARACTER_INFO"; }

 protected:
  explicit SKARMA_CHARACTER_INFO(::google::protobuf::Arena* arena);
  SKARMA_CHARACTER_INFO(::google::protobuf::Arena* arena, const SKARMA_CHARACTER_INFO& from);
  SKARMA_CHARACTER_INFO(::google::protobuf::Arena* arena, SKARMA_CHARACTER_INFO&& from) noexcept
      : SKARMA_CHARACTER_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kCharacterClassFieldNumber = 4,
    kNickNameFieldNumber = 3,
    kGenderFieldNumber = 5,
    kIsVoteFieldNumber = 6,
    kKarmaActionFieldNumber = 7,
    kKarmaStatusFieldNumber = 8,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string characterClass = 4;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // uint32 gender = 5;
  void clear_gender() ;
  ::uint32_t gender() const;
  void set_gender(::uint32_t value);

  private:
  ::uint32_t _internal_gender() const;
  void _internal_set_gender(::uint32_t value);

  public:
  // uint32 isVote = 6;
  void clear_isvote() ;
  ::uint32_t isvote() const;
  void set_isvote(::uint32_t value);

  private:
  ::uint32_t _internal_isvote() const;
  void _internal_set_isvote(::uint32_t value);

  public:
  // uint32 karmaAction = 7;
  void clear_karmaaction() ;
  ::uint32_t karmaaction() const;
  void set_karmaaction(::uint32_t value);

  private:
  ::uint32_t _internal_karmaaction() const;
  void _internal_set_karmaaction(::uint32_t value);

  public:
  // uint32 karmaStatus = 8;
  void clear_karmastatus() ;
  ::uint32_t karmastatus() const;
  void set_karmastatus(::uint32_t value);

  private:
  ::uint32_t _internal_karmastatus() const;
  void _internal_set_karmastatus(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SKARMA_CHARACTER_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      82, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SKARMA_CHARACTER_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SKARMA_CHARACTER_INFO& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    ::uint32_t gender_;
    ::uint32_t isvote_;
    ::uint32_t karmaaction_;
    ::uint32_t karmastatus_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Karma_2eproto;
};
// -------------------------------------------------------------------

class SS2C_KARMA_REPORT_ACTION_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES) */ {
 public:
  inline SS2C_KARMA_REPORT_ACTION_RES() : SS2C_KARMA_REPORT_ACTION_RES(nullptr) {}
  ~SS2C_KARMA_REPORT_ACTION_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_KARMA_REPORT_ACTION_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_KARMA_REPORT_ACTION_RES(const SS2C_KARMA_REPORT_ACTION_RES& from) : SS2C_KARMA_REPORT_ACTION_RES(nullptr, from) {}
  inline SS2C_KARMA_REPORT_ACTION_RES(SS2C_KARMA_REPORT_ACTION_RES&& from) noexcept
      : SS2C_KARMA_REPORT_ACTION_RES(nullptr, std::move(from)) {}
  inline SS2C_KARMA_REPORT_ACTION_RES& operator=(const SS2C_KARMA_REPORT_ACTION_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_KARMA_REPORT_ACTION_RES& operator=(SS2C_KARMA_REPORT_ACTION_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_KARMA_REPORT_ACTION_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_KARMA_REPORT_ACTION_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_KARMA_REPORT_ACTION_RES*>(
        &_SS2C_KARMA_REPORT_ACTION_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SS2C_KARMA_REPORT_ACTION_RES& a, SS2C_KARMA_REPORT_ACTION_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_KARMA_REPORT_ACTION_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_KARMA_REPORT_ACTION_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_KARMA_REPORT_ACTION_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_KARMA_REPORT_ACTION_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_KARMA_REPORT_ACTION_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_KARMA_REPORT_ACTION_RES& from) { SS2C_KARMA_REPORT_ACTION_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_KARMA_REPORT_ACTION_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_KARMA_REPORT_ACTION_RES"; }

 protected:
  explicit SS2C_KARMA_REPORT_ACTION_RES(::google::protobuf::Arena* arena);
  SS2C_KARMA_REPORT_ACTION_RES(::google::protobuf::Arena* arena, const SS2C_KARMA_REPORT_ACTION_RES& from);
  SS2C_KARMA_REPORT_ACTION_RES(::google::protobuf::Arena* arena, SS2C_KARMA_REPORT_ACTION_RES&& from) noexcept
      : SS2C_KARMA_REPORT_ACTION_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpdateCharacterInfoFieldNumber = 3,
    kResultFieldNumber = 1,
    kMatchIdxFieldNumber = 2,
    kCurrentTicketCountFieldNumber = 4,
    kCollectionStepCountFieldNumber = 5,
    kMaxCollectionCountFieldNumber = 6,
    kMaxTicketCountFieldNumber = 7,
  };
  // .DC.Packet.SKARMA_CHARACTER_INFO updateCharacterInfo = 3;
  bool has_updatecharacterinfo() const;
  void clear_updatecharacterinfo() ;
  const ::DC::Packet::SKARMA_CHARACTER_INFO& updatecharacterinfo() const;
  PROTOBUF_NODISCARD ::DC::Packet::SKARMA_CHARACTER_INFO* release_updatecharacterinfo();
  ::DC::Packet::SKARMA_CHARACTER_INFO* mutable_updatecharacterinfo();
  void set_allocated_updatecharacterinfo(::DC::Packet::SKARMA_CHARACTER_INFO* value);
  void unsafe_arena_set_allocated_updatecharacterinfo(::DC::Packet::SKARMA_CHARACTER_INFO* value);
  ::DC::Packet::SKARMA_CHARACTER_INFO* unsafe_arena_release_updatecharacterinfo();

  private:
  const ::DC::Packet::SKARMA_CHARACTER_INFO& _internal_updatecharacterinfo() const;
  ::DC::Packet::SKARMA_CHARACTER_INFO* _internal_mutable_updatecharacterinfo();

  public:
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // uint32 matchIdx = 2;
  void clear_matchidx() ;
  ::uint32_t matchidx() const;
  void set_matchidx(::uint32_t value);

  private:
  ::uint32_t _internal_matchidx() const;
  void _internal_set_matchidx(::uint32_t value);

  public:
  // uint32 currentTicketCount = 4;
  void clear_currentticketcount() ;
  ::uint32_t currentticketcount() const;
  void set_currentticketcount(::uint32_t value);

  private:
  ::uint32_t _internal_currentticketcount() const;
  void _internal_set_currentticketcount(::uint32_t value);

  public:
  // uint32 collectionStepCount = 5;
  void clear_collectionstepcount() ;
  ::uint32_t collectionstepcount() const;
  void set_collectionstepcount(::uint32_t value);

  private:
  ::uint32_t _internal_collectionstepcount() const;
  void _internal_set_collectionstepcount(::uint32_t value);

  public:
  // uint32 maxCollectionCount = 6;
  void clear_maxcollectioncount() ;
  ::uint32_t maxcollectioncount() const;
  void set_maxcollectioncount(::uint32_t value);

  private:
  ::uint32_t _internal_maxcollectioncount() const;
  void _internal_set_maxcollectioncount(::uint32_t value);

  public:
  // uint32 maxTicketCount = 7;
  void clear_maxticketcount() ;
  ::uint32_t maxticketcount() const;
  void set_maxticketcount(::uint32_t value);

  private:
  ::uint32_t _internal_maxticketcount() const;
  void _internal_set_maxticketcount(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_KARMA_REPORT_ACTION_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_KARMA_REPORT_ACTION_RES& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::SKARMA_CHARACTER_INFO* updatecharacterinfo_;
    ::uint32_t result_;
    ::uint32_t matchidx_;
    ::uint32_t currentticketcount_;
    ::uint32_t collectionstepcount_;
    ::uint32_t maxcollectioncount_;
    ::uint32_t maxticketcount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Karma_2eproto;
};
// -------------------------------------------------------------------

class SKARMA_MOST_RECENT_MATCH_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO) */ {
 public:
  inline SKARMA_MOST_RECENT_MATCH_INFO() : SKARMA_MOST_RECENT_MATCH_INFO(nullptr) {}
  ~SKARMA_MOST_RECENT_MATCH_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SKARMA_MOST_RECENT_MATCH_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline SKARMA_MOST_RECENT_MATCH_INFO(const SKARMA_MOST_RECENT_MATCH_INFO& from) : SKARMA_MOST_RECENT_MATCH_INFO(nullptr, from) {}
  inline SKARMA_MOST_RECENT_MATCH_INFO(SKARMA_MOST_RECENT_MATCH_INFO&& from) noexcept
      : SKARMA_MOST_RECENT_MATCH_INFO(nullptr, std::move(from)) {}
  inline SKARMA_MOST_RECENT_MATCH_INFO& operator=(const SKARMA_MOST_RECENT_MATCH_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SKARMA_MOST_RECENT_MATCH_INFO& operator=(SKARMA_MOST_RECENT_MATCH_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SKARMA_MOST_RECENT_MATCH_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const SKARMA_MOST_RECENT_MATCH_INFO* internal_default_instance() {
    return reinterpret_cast<const SKARMA_MOST_RECENT_MATCH_INFO*>(
        &_SKARMA_MOST_RECENT_MATCH_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SKARMA_MOST_RECENT_MATCH_INFO& a, SKARMA_MOST_RECENT_MATCH_INFO& b) { a.Swap(&b); }
  inline void Swap(SKARMA_MOST_RECENT_MATCH_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SKARMA_MOST_RECENT_MATCH_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SKARMA_MOST_RECENT_MATCH_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SKARMA_MOST_RECENT_MATCH_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SKARMA_MOST_RECENT_MATCH_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SKARMA_MOST_RECENT_MATCH_INFO& from) { SKARMA_MOST_RECENT_MATCH_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SKARMA_MOST_RECENT_MATCH_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO"; }

 protected:
  explicit SKARMA_MOST_RECENT_MATCH_INFO(::google::protobuf::Arena* arena);
  SKARMA_MOST_RECENT_MATCH_INFO(::google::protobuf::Arena* arena, const SKARMA_MOST_RECENT_MATCH_INFO& from);
  SKARMA_MOST_RECENT_MATCH_INFO(::google::protobuf::Arena* arena, SKARMA_MOST_RECENT_MATCH_INFO&& from) noexcept
      : SKARMA_MOST_RECENT_MATCH_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCharacterInfosFieldNumber = 2,
    kMatchIdxFieldNumber = 1,
  };
  // repeated .DC.Packet.SKARMA_CHARACTER_INFO characterInfos = 2;
  int characterinfos_size() const;
  private:
  int _internal_characterinfos_size() const;

  public:
  void clear_characterinfos() ;
  ::DC::Packet::SKARMA_CHARACTER_INFO* mutable_characterinfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SKARMA_CHARACTER_INFO>* mutable_characterinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SKARMA_CHARACTER_INFO>& _internal_characterinfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SKARMA_CHARACTER_INFO>* _internal_mutable_characterinfos();
  public:
  const ::DC::Packet::SKARMA_CHARACTER_INFO& characterinfos(int index) const;
  ::DC::Packet::SKARMA_CHARACTER_INFO* add_characterinfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SKARMA_CHARACTER_INFO>& characterinfos() const;
  // uint32 matchIdx = 1;
  void clear_matchidx() ;
  ::uint32_t matchidx() const;
  void set_matchidx(::uint32_t value);

  private:
  ::uint32_t _internal_matchidx() const;
  void _internal_set_matchidx(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SKARMA_MOST_RECENT_MATCH_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SKARMA_MOST_RECENT_MATCH_INFO& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SKARMA_CHARACTER_INFO > characterinfos_;
    ::uint32_t matchidx_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Karma_2eproto;
};
// -------------------------------------------------------------------

class SS2C_KARMA_REPORT_LIST_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_KARMA_REPORT_LIST_RES) */ {
 public:
  inline SS2C_KARMA_REPORT_LIST_RES() : SS2C_KARMA_REPORT_LIST_RES(nullptr) {}
  ~SS2C_KARMA_REPORT_LIST_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_KARMA_REPORT_LIST_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_KARMA_REPORT_LIST_RES(const SS2C_KARMA_REPORT_LIST_RES& from) : SS2C_KARMA_REPORT_LIST_RES(nullptr, from) {}
  inline SS2C_KARMA_REPORT_LIST_RES(SS2C_KARMA_REPORT_LIST_RES&& from) noexcept
      : SS2C_KARMA_REPORT_LIST_RES(nullptr, std::move(from)) {}
  inline SS2C_KARMA_REPORT_LIST_RES& operator=(const SS2C_KARMA_REPORT_LIST_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_KARMA_REPORT_LIST_RES& operator=(SS2C_KARMA_REPORT_LIST_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_KARMA_REPORT_LIST_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_KARMA_REPORT_LIST_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_KARMA_REPORT_LIST_RES*>(
        &_SS2C_KARMA_REPORT_LIST_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SS2C_KARMA_REPORT_LIST_RES& a, SS2C_KARMA_REPORT_LIST_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_KARMA_REPORT_LIST_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_KARMA_REPORT_LIST_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_KARMA_REPORT_LIST_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_KARMA_REPORT_LIST_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_KARMA_REPORT_LIST_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_KARMA_REPORT_LIST_RES& from) { SS2C_KARMA_REPORT_LIST_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_KARMA_REPORT_LIST_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_KARMA_REPORT_LIST_RES"; }

 protected:
  explicit SS2C_KARMA_REPORT_LIST_RES(::google::protobuf::Arena* arena);
  SS2C_KARMA_REPORT_LIST_RES(::google::protobuf::Arena* arena, const SS2C_KARMA_REPORT_LIST_RES& from);
  SS2C_KARMA_REPORT_LIST_RES(::google::protobuf::Arena* arena, SS2C_KARMA_REPORT_LIST_RES&& from) noexcept
      : SS2C_KARMA_REPORT_LIST_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMatchInfosFieldNumber = 1,
    kCurrentTicketCountFieldNumber = 2,
    kCollectionStepCountFieldNumber = 3,
    kMaxCollectionCountFieldNumber = 4,
    kMaxTicketCountFieldNumber = 5,
  };
  // repeated .DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO matchInfos = 1;
  int matchinfos_size() const;
  private:
  int _internal_matchinfos_size() const;

  public:
  void clear_matchinfos() ;
  ::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO* mutable_matchinfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO>* mutable_matchinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO>& _internal_matchinfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO>* _internal_mutable_matchinfos();
  public:
  const ::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO& matchinfos(int index) const;
  ::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO* add_matchinfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO>& matchinfos() const;
  // uint32 currentTicketCount = 2;
  void clear_currentticketcount() ;
  ::uint32_t currentticketcount() const;
  void set_currentticketcount(::uint32_t value);

  private:
  ::uint32_t _internal_currentticketcount() const;
  void _internal_set_currentticketcount(::uint32_t value);

  public:
  // uint32 collectionStepCount = 3;
  void clear_collectionstepcount() ;
  ::uint32_t collectionstepcount() const;
  void set_collectionstepcount(::uint32_t value);

  private:
  ::uint32_t _internal_collectionstepcount() const;
  void _internal_set_collectionstepcount(::uint32_t value);

  public:
  // uint32 maxCollectionCount = 4;
  void clear_maxcollectioncount() ;
  ::uint32_t maxcollectioncount() const;
  void set_maxcollectioncount(::uint32_t value);

  private:
  ::uint32_t _internal_maxcollectioncount() const;
  void _internal_set_maxcollectioncount(::uint32_t value);

  public:
  // uint32 maxTicketCount = 5;
  void clear_maxticketcount() ;
  ::uint32_t maxticketcount() const;
  void set_maxticketcount(::uint32_t value);

  private:
  ::uint32_t _internal_maxticketcount() const;
  void _internal_set_maxticketcount(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_KARMA_REPORT_LIST_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_KARMA_REPORT_LIST_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_KARMA_REPORT_LIST_RES& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO > matchinfos_;
    ::uint32_t currentticketcount_;
    ::uint32_t collectionstepcount_;
    ::uint32_t maxcollectioncount_;
    ::uint32_t maxticketcount_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Karma_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SKARMA_CHARACTER_INFO

// string accountId = 1;
inline void SKARMA_CHARACTER_INFO::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SKARMA_CHARACTER_INFO::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SKARMA_CHARACTER_INFO.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SKARMA_CHARACTER_INFO::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SKARMA_CHARACTER_INFO.accountId)
}
inline std::string* SKARMA_CHARACTER_INFO::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SKARMA_CHARACTER_INFO.accountId)
  return _s;
}
inline const std::string& SKARMA_CHARACTER_INFO::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SKARMA_CHARACTER_INFO::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SKARMA_CHARACTER_INFO::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SKARMA_CHARACTER_INFO::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SKARMA_CHARACTER_INFO.accountId)
  return _impl_.accountid_.Release();
}
inline void SKARMA_CHARACTER_INFO::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SKARMA_CHARACTER_INFO.accountId)
}

// string characterId = 2;
inline void SKARMA_CHARACTER_INFO::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SKARMA_CHARACTER_INFO::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SKARMA_CHARACTER_INFO.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SKARMA_CHARACTER_INFO::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SKARMA_CHARACTER_INFO.characterId)
}
inline std::string* SKARMA_CHARACTER_INFO::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SKARMA_CHARACTER_INFO.characterId)
  return _s;
}
inline const std::string& SKARMA_CHARACTER_INFO::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SKARMA_CHARACTER_INFO::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SKARMA_CHARACTER_INFO::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SKARMA_CHARACTER_INFO::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SKARMA_CHARACTER_INFO.characterId)
  return _impl_.characterid_.Release();
}
inline void SKARMA_CHARACTER_INFO::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SKARMA_CHARACTER_INFO.characterId)
}

// .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
inline bool SKARMA_CHARACTER_INFO::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SKARMA_CHARACTER_INFO::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SKARMA_CHARACTER_INFO::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SKARMA_CHARACTER_INFO.nickName)
  return _internal_nickname();
}
inline void SKARMA_CHARACTER_INFO::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SKARMA_CHARACTER_INFO.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SKARMA_CHARACTER_INFO::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SKARMA_CHARACTER_INFO::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SKARMA_CHARACTER_INFO.nickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SKARMA_CHARACTER_INFO::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SKARMA_CHARACTER_INFO::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SKARMA_CHARACTER_INFO.nickName)
  return _msg;
}
inline void SKARMA_CHARACTER_INFO::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SKARMA_CHARACTER_INFO.nickName)
}

// string characterClass = 4;
inline void SKARMA_CHARACTER_INFO::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& SKARMA_CHARACTER_INFO::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SKARMA_CHARACTER_INFO.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SKARMA_CHARACTER_INFO::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SKARMA_CHARACTER_INFO.characterClass)
}
inline std::string* SKARMA_CHARACTER_INFO::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SKARMA_CHARACTER_INFO.characterClass)
  return _s;
}
inline const std::string& SKARMA_CHARACTER_INFO::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void SKARMA_CHARACTER_INFO::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* SKARMA_CHARACTER_INFO::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* SKARMA_CHARACTER_INFO::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SKARMA_CHARACTER_INFO.characterClass)
  return _impl_.characterclass_.Release();
}
inline void SKARMA_CHARACTER_INFO::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SKARMA_CHARACTER_INFO.characterClass)
}

// uint32 gender = 5;
inline void SKARMA_CHARACTER_INFO::clear_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = 0u;
}
inline ::uint32_t SKARMA_CHARACTER_INFO::gender() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SKARMA_CHARACTER_INFO.gender)
  return _internal_gender();
}
inline void SKARMA_CHARACTER_INFO::set_gender(::uint32_t value) {
  _internal_set_gender(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SKARMA_CHARACTER_INFO.gender)
}
inline ::uint32_t SKARMA_CHARACTER_INFO::_internal_gender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gender_;
}
inline void SKARMA_CHARACTER_INFO::_internal_set_gender(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = value;
}

// uint32 isVote = 6;
inline void SKARMA_CHARACTER_INFO::clear_isvote() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isvote_ = 0u;
}
inline ::uint32_t SKARMA_CHARACTER_INFO::isvote() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SKARMA_CHARACTER_INFO.isVote)
  return _internal_isvote();
}
inline void SKARMA_CHARACTER_INFO::set_isvote(::uint32_t value) {
  _internal_set_isvote(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SKARMA_CHARACTER_INFO.isVote)
}
inline ::uint32_t SKARMA_CHARACTER_INFO::_internal_isvote() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isvote_;
}
inline void SKARMA_CHARACTER_INFO::_internal_set_isvote(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isvote_ = value;
}

// uint32 karmaAction = 7;
inline void SKARMA_CHARACTER_INFO::clear_karmaaction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.karmaaction_ = 0u;
}
inline ::uint32_t SKARMA_CHARACTER_INFO::karmaaction() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SKARMA_CHARACTER_INFO.karmaAction)
  return _internal_karmaaction();
}
inline void SKARMA_CHARACTER_INFO::set_karmaaction(::uint32_t value) {
  _internal_set_karmaaction(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SKARMA_CHARACTER_INFO.karmaAction)
}
inline ::uint32_t SKARMA_CHARACTER_INFO::_internal_karmaaction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.karmaaction_;
}
inline void SKARMA_CHARACTER_INFO::_internal_set_karmaaction(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.karmaaction_ = value;
}

// uint32 karmaStatus = 8;
inline void SKARMA_CHARACTER_INFO::clear_karmastatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.karmastatus_ = 0u;
}
inline ::uint32_t SKARMA_CHARACTER_INFO::karmastatus() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SKARMA_CHARACTER_INFO.karmaStatus)
  return _internal_karmastatus();
}
inline void SKARMA_CHARACTER_INFO::set_karmastatus(::uint32_t value) {
  _internal_set_karmastatus(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SKARMA_CHARACTER_INFO.karmaStatus)
}
inline ::uint32_t SKARMA_CHARACTER_INFO::_internal_karmastatus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.karmastatus_;
}
inline void SKARMA_CHARACTER_INFO::_internal_set_karmastatus(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.karmastatus_ = value;
}

// -------------------------------------------------------------------

// SKARMA_MOST_RECENT_MATCH_INFO

// uint32 matchIdx = 1;
inline void SKARMA_MOST_RECENT_MATCH_INFO::clear_matchidx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matchidx_ = 0u;
}
inline ::uint32_t SKARMA_MOST_RECENT_MATCH_INFO::matchidx() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO.matchIdx)
  return _internal_matchidx();
}
inline void SKARMA_MOST_RECENT_MATCH_INFO::set_matchidx(::uint32_t value) {
  _internal_set_matchidx(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO.matchIdx)
}
inline ::uint32_t SKARMA_MOST_RECENT_MATCH_INFO::_internal_matchidx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.matchidx_;
}
inline void SKARMA_MOST_RECENT_MATCH_INFO::_internal_set_matchidx(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matchidx_ = value;
}

// repeated .DC.Packet.SKARMA_CHARACTER_INFO characterInfos = 2;
inline int SKARMA_MOST_RECENT_MATCH_INFO::_internal_characterinfos_size() const {
  return _internal_characterinfos().size();
}
inline int SKARMA_MOST_RECENT_MATCH_INFO::characterinfos_size() const {
  return _internal_characterinfos_size();
}
inline void SKARMA_MOST_RECENT_MATCH_INFO::clear_characterinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterinfos_.Clear();
}
inline ::DC::Packet::SKARMA_CHARACTER_INFO* SKARMA_MOST_RECENT_MATCH_INFO::mutable_characterinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO.characterInfos)
  return _internal_mutable_characterinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SKARMA_CHARACTER_INFO>* SKARMA_MOST_RECENT_MATCH_INFO::mutable_characterinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO.characterInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_characterinfos();
}
inline const ::DC::Packet::SKARMA_CHARACTER_INFO& SKARMA_MOST_RECENT_MATCH_INFO::characterinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO.characterInfos)
  return _internal_characterinfos().Get(index);
}
inline ::DC::Packet::SKARMA_CHARACTER_INFO* SKARMA_MOST_RECENT_MATCH_INFO::add_characterinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SKARMA_CHARACTER_INFO* _add = _internal_mutable_characterinfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO.characterInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SKARMA_CHARACTER_INFO>& SKARMA_MOST_RECENT_MATCH_INFO::characterinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO.characterInfos)
  return _internal_characterinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SKARMA_CHARACTER_INFO>&
SKARMA_MOST_RECENT_MATCH_INFO::_internal_characterinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SKARMA_CHARACTER_INFO>*
SKARMA_MOST_RECENT_MATCH_INFO::_internal_mutable_characterinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.characterinfos_;
}

// -------------------------------------------------------------------

// SC2S_KARMA_REPORT_LIST_REQ

// -------------------------------------------------------------------

// SS2C_KARMA_REPORT_LIST_RES

// repeated .DC.Packet.SKARMA_MOST_RECENT_MATCH_INFO matchInfos = 1;
inline int SS2C_KARMA_REPORT_LIST_RES::_internal_matchinfos_size() const {
  return _internal_matchinfos().size();
}
inline int SS2C_KARMA_REPORT_LIST_RES::matchinfos_size() const {
  return _internal_matchinfos_size();
}
inline void SS2C_KARMA_REPORT_LIST_RES::clear_matchinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matchinfos_.Clear();
}
inline ::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO* SS2C_KARMA_REPORT_LIST_RES::mutable_matchinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_KARMA_REPORT_LIST_RES.matchInfos)
  return _internal_mutable_matchinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO>* SS2C_KARMA_REPORT_LIST_RES::mutable_matchinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_KARMA_REPORT_LIST_RES.matchInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_matchinfos();
}
inline const ::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO& SS2C_KARMA_REPORT_LIST_RES::matchinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_KARMA_REPORT_LIST_RES.matchInfos)
  return _internal_matchinfos().Get(index);
}
inline ::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO* SS2C_KARMA_REPORT_LIST_RES::add_matchinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO* _add = _internal_mutable_matchinfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_KARMA_REPORT_LIST_RES.matchInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO>& SS2C_KARMA_REPORT_LIST_RES::matchinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_KARMA_REPORT_LIST_RES.matchInfos)
  return _internal_matchinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO>&
SS2C_KARMA_REPORT_LIST_RES::_internal_matchinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.matchinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SKARMA_MOST_RECENT_MATCH_INFO>*
SS2C_KARMA_REPORT_LIST_RES::_internal_mutable_matchinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.matchinfos_;
}

// uint32 currentTicketCount = 2;
inline void SS2C_KARMA_REPORT_LIST_RES::clear_currentticketcount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentticketcount_ = 0u;
}
inline ::uint32_t SS2C_KARMA_REPORT_LIST_RES::currentticketcount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_KARMA_REPORT_LIST_RES.currentTicketCount)
  return _internal_currentticketcount();
}
inline void SS2C_KARMA_REPORT_LIST_RES::set_currentticketcount(::uint32_t value) {
  _internal_set_currentticketcount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_KARMA_REPORT_LIST_RES.currentTicketCount)
}
inline ::uint32_t SS2C_KARMA_REPORT_LIST_RES::_internal_currentticketcount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currentticketcount_;
}
inline void SS2C_KARMA_REPORT_LIST_RES::_internal_set_currentticketcount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentticketcount_ = value;
}

// uint32 collectionStepCount = 3;
inline void SS2C_KARMA_REPORT_LIST_RES::clear_collectionstepcount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collectionstepcount_ = 0u;
}
inline ::uint32_t SS2C_KARMA_REPORT_LIST_RES::collectionstepcount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_KARMA_REPORT_LIST_RES.collectionStepCount)
  return _internal_collectionstepcount();
}
inline void SS2C_KARMA_REPORT_LIST_RES::set_collectionstepcount(::uint32_t value) {
  _internal_set_collectionstepcount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_KARMA_REPORT_LIST_RES.collectionStepCount)
}
inline ::uint32_t SS2C_KARMA_REPORT_LIST_RES::_internal_collectionstepcount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.collectionstepcount_;
}
inline void SS2C_KARMA_REPORT_LIST_RES::_internal_set_collectionstepcount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collectionstepcount_ = value;
}

// uint32 maxCollectionCount = 4;
inline void SS2C_KARMA_REPORT_LIST_RES::clear_maxcollectioncount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxcollectioncount_ = 0u;
}
inline ::uint32_t SS2C_KARMA_REPORT_LIST_RES::maxcollectioncount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_KARMA_REPORT_LIST_RES.maxCollectionCount)
  return _internal_maxcollectioncount();
}
inline void SS2C_KARMA_REPORT_LIST_RES::set_maxcollectioncount(::uint32_t value) {
  _internal_set_maxcollectioncount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_KARMA_REPORT_LIST_RES.maxCollectionCount)
}
inline ::uint32_t SS2C_KARMA_REPORT_LIST_RES::_internal_maxcollectioncount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maxcollectioncount_;
}
inline void SS2C_KARMA_REPORT_LIST_RES::_internal_set_maxcollectioncount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxcollectioncount_ = value;
}

// uint32 maxTicketCount = 5;
inline void SS2C_KARMA_REPORT_LIST_RES::clear_maxticketcount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxticketcount_ = 0u;
}
inline ::uint32_t SS2C_KARMA_REPORT_LIST_RES::maxticketcount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_KARMA_REPORT_LIST_RES.maxTicketCount)
  return _internal_maxticketcount();
}
inline void SS2C_KARMA_REPORT_LIST_RES::set_maxticketcount(::uint32_t value) {
  _internal_set_maxticketcount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_KARMA_REPORT_LIST_RES.maxTicketCount)
}
inline ::uint32_t SS2C_KARMA_REPORT_LIST_RES::_internal_maxticketcount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maxticketcount_;
}
inline void SS2C_KARMA_REPORT_LIST_RES::_internal_set_maxticketcount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxticketcount_ = value;
}

// -------------------------------------------------------------------

// SC2S_KARMA_REPORT_ACTION_REQ

// uint32 matchIdx = 1;
inline void SC2S_KARMA_REPORT_ACTION_REQ::clear_matchidx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matchidx_ = 0u;
}
inline ::uint32_t SC2S_KARMA_REPORT_ACTION_REQ::matchidx() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ.matchIdx)
  return _internal_matchidx();
}
inline void SC2S_KARMA_REPORT_ACTION_REQ::set_matchidx(::uint32_t value) {
  _internal_set_matchidx(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ.matchIdx)
}
inline ::uint32_t SC2S_KARMA_REPORT_ACTION_REQ::_internal_matchidx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.matchidx_;
}
inline void SC2S_KARMA_REPORT_ACTION_REQ::_internal_set_matchidx(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matchidx_ = value;
}

// string accountId = 2;
inline void SC2S_KARMA_REPORT_ACTION_REQ::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SC2S_KARMA_REPORT_ACTION_REQ::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_KARMA_REPORT_ACTION_REQ::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ.accountId)
}
inline std::string* SC2S_KARMA_REPORT_ACTION_REQ::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ.accountId)
  return _s;
}
inline const std::string& SC2S_KARMA_REPORT_ACTION_REQ::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SC2S_KARMA_REPORT_ACTION_REQ::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SC2S_KARMA_REPORT_ACTION_REQ::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SC2S_KARMA_REPORT_ACTION_REQ::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ.accountId)
  return _impl_.accountid_.Release();
}
inline void SC2S_KARMA_REPORT_ACTION_REQ::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ.accountId)
}

// string characterId = 3;
inline void SC2S_KARMA_REPORT_ACTION_REQ::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SC2S_KARMA_REPORT_ACTION_REQ::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_KARMA_REPORT_ACTION_REQ::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ.characterId)
}
inline std::string* SC2S_KARMA_REPORT_ACTION_REQ::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ.characterId)
  return _s;
}
inline const std::string& SC2S_KARMA_REPORT_ACTION_REQ::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SC2S_KARMA_REPORT_ACTION_REQ::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SC2S_KARMA_REPORT_ACTION_REQ::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SC2S_KARMA_REPORT_ACTION_REQ::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ.characterId)
  return _impl_.characterid_.Release();
}
inline void SC2S_KARMA_REPORT_ACTION_REQ::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ.characterId)
}

// uint32 action = 4;
inline void SC2S_KARMA_REPORT_ACTION_REQ::clear_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_ = 0u;
}
inline ::uint32_t SC2S_KARMA_REPORT_ACTION_REQ::action() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ.action)
  return _internal_action();
}
inline void SC2S_KARMA_REPORT_ACTION_REQ::set_action(::uint32_t value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_KARMA_REPORT_ACTION_REQ.action)
}
inline ::uint32_t SC2S_KARMA_REPORT_ACTION_REQ::_internal_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.action_;
}
inline void SC2S_KARMA_REPORT_ACTION_REQ::_internal_set_action(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_ = value;
}

// -------------------------------------------------------------------

// SS2C_KARMA_REPORT_ACTION_RES

// uint32 result = 1;
inline void SS2C_KARMA_REPORT_ACTION_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_KARMA_REPORT_ACTION_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.result)
  return _internal_result();
}
inline void SS2C_KARMA_REPORT_ACTION_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.result)
}
inline ::uint32_t SS2C_KARMA_REPORT_ACTION_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_KARMA_REPORT_ACTION_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// uint32 matchIdx = 2;
inline void SS2C_KARMA_REPORT_ACTION_RES::clear_matchidx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matchidx_ = 0u;
}
inline ::uint32_t SS2C_KARMA_REPORT_ACTION_RES::matchidx() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.matchIdx)
  return _internal_matchidx();
}
inline void SS2C_KARMA_REPORT_ACTION_RES::set_matchidx(::uint32_t value) {
  _internal_set_matchidx(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.matchIdx)
}
inline ::uint32_t SS2C_KARMA_REPORT_ACTION_RES::_internal_matchidx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.matchidx_;
}
inline void SS2C_KARMA_REPORT_ACTION_RES::_internal_set_matchidx(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matchidx_ = value;
}

// .DC.Packet.SKARMA_CHARACTER_INFO updateCharacterInfo = 3;
inline bool SS2C_KARMA_REPORT_ACTION_RES::has_updatecharacterinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updatecharacterinfo_ != nullptr);
  return value;
}
inline void SS2C_KARMA_REPORT_ACTION_RES::clear_updatecharacterinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updatecharacterinfo_ != nullptr) _impl_.updatecharacterinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::SKARMA_CHARACTER_INFO& SS2C_KARMA_REPORT_ACTION_RES::_internal_updatecharacterinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SKARMA_CHARACTER_INFO* p = _impl_.updatecharacterinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SKARMA_CHARACTER_INFO&>(::DC::Packet::_SKARMA_CHARACTER_INFO_default_instance_);
}
inline const ::DC::Packet::SKARMA_CHARACTER_INFO& SS2C_KARMA_REPORT_ACTION_RES::updatecharacterinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.updateCharacterInfo)
  return _internal_updatecharacterinfo();
}
inline void SS2C_KARMA_REPORT_ACTION_RES::unsafe_arena_set_allocated_updatecharacterinfo(::DC::Packet::SKARMA_CHARACTER_INFO* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updatecharacterinfo_);
  }
  _impl_.updatecharacterinfo_ = reinterpret_cast<::DC::Packet::SKARMA_CHARACTER_INFO*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.updateCharacterInfo)
}
inline ::DC::Packet::SKARMA_CHARACTER_INFO* SS2C_KARMA_REPORT_ACTION_RES::release_updatecharacterinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SKARMA_CHARACTER_INFO* released = _impl_.updatecharacterinfo_;
  _impl_.updatecharacterinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SKARMA_CHARACTER_INFO* SS2C_KARMA_REPORT_ACTION_RES::unsafe_arena_release_updatecharacterinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.updateCharacterInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SKARMA_CHARACTER_INFO* temp = _impl_.updatecharacterinfo_;
  _impl_.updatecharacterinfo_ = nullptr;
  return temp;
}
inline ::DC::Packet::SKARMA_CHARACTER_INFO* SS2C_KARMA_REPORT_ACTION_RES::_internal_mutable_updatecharacterinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updatecharacterinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SKARMA_CHARACTER_INFO>(GetArena());
    _impl_.updatecharacterinfo_ = reinterpret_cast<::DC::Packet::SKARMA_CHARACTER_INFO*>(p);
  }
  return _impl_.updatecharacterinfo_;
}
inline ::DC::Packet::SKARMA_CHARACTER_INFO* SS2C_KARMA_REPORT_ACTION_RES::mutable_updatecharacterinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SKARMA_CHARACTER_INFO* _msg = _internal_mutable_updatecharacterinfo();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.updateCharacterInfo)
  return _msg;
}
inline void SS2C_KARMA_REPORT_ACTION_RES::set_allocated_updatecharacterinfo(::DC::Packet::SKARMA_CHARACTER_INFO* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.updatecharacterinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.updatecharacterinfo_ = reinterpret_cast<::DC::Packet::SKARMA_CHARACTER_INFO*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.updateCharacterInfo)
}

// uint32 currentTicketCount = 4;
inline void SS2C_KARMA_REPORT_ACTION_RES::clear_currentticketcount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentticketcount_ = 0u;
}
inline ::uint32_t SS2C_KARMA_REPORT_ACTION_RES::currentticketcount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.currentTicketCount)
  return _internal_currentticketcount();
}
inline void SS2C_KARMA_REPORT_ACTION_RES::set_currentticketcount(::uint32_t value) {
  _internal_set_currentticketcount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.currentTicketCount)
}
inline ::uint32_t SS2C_KARMA_REPORT_ACTION_RES::_internal_currentticketcount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currentticketcount_;
}
inline void SS2C_KARMA_REPORT_ACTION_RES::_internal_set_currentticketcount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentticketcount_ = value;
}

// uint32 collectionStepCount = 5;
inline void SS2C_KARMA_REPORT_ACTION_RES::clear_collectionstepcount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collectionstepcount_ = 0u;
}
inline ::uint32_t SS2C_KARMA_REPORT_ACTION_RES::collectionstepcount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.collectionStepCount)
  return _internal_collectionstepcount();
}
inline void SS2C_KARMA_REPORT_ACTION_RES::set_collectionstepcount(::uint32_t value) {
  _internal_set_collectionstepcount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.collectionStepCount)
}
inline ::uint32_t SS2C_KARMA_REPORT_ACTION_RES::_internal_collectionstepcount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.collectionstepcount_;
}
inline void SS2C_KARMA_REPORT_ACTION_RES::_internal_set_collectionstepcount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collectionstepcount_ = value;
}

// uint32 maxCollectionCount = 6;
inline void SS2C_KARMA_REPORT_ACTION_RES::clear_maxcollectioncount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxcollectioncount_ = 0u;
}
inline ::uint32_t SS2C_KARMA_REPORT_ACTION_RES::maxcollectioncount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.maxCollectionCount)
  return _internal_maxcollectioncount();
}
inline void SS2C_KARMA_REPORT_ACTION_RES::set_maxcollectioncount(::uint32_t value) {
  _internal_set_maxcollectioncount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.maxCollectionCount)
}
inline ::uint32_t SS2C_KARMA_REPORT_ACTION_RES::_internal_maxcollectioncount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maxcollectioncount_;
}
inline void SS2C_KARMA_REPORT_ACTION_RES::_internal_set_maxcollectioncount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxcollectioncount_ = value;
}

// uint32 maxTicketCount = 7;
inline void SS2C_KARMA_REPORT_ACTION_RES::clear_maxticketcount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxticketcount_ = 0u;
}
inline ::uint32_t SS2C_KARMA_REPORT_ACTION_RES::maxticketcount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.maxTicketCount)
  return _internal_maxticketcount();
}
inline void SS2C_KARMA_REPORT_ACTION_RES::set_maxticketcount(::uint32_t value) {
  _internal_set_maxticketcount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_KARMA_REPORT_ACTION_RES.maxTicketCount)
}
inline ::uint32_t SS2C_KARMA_REPORT_ACTION_RES::_internal_maxticketcount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maxticketcount_;
}
inline void SS2C_KARMA_REPORT_ACTION_RES::_internal_set_maxticketcount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxticketcount_ = value;
}

// -------------------------------------------------------------------

// SS2C_KARMA_RATING_UPDATE_NOT

// int32 updateKarmaRating = 1;
inline void SS2C_KARMA_RATING_UPDATE_NOT::clear_updatekarmarating() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatekarmarating_ = 0;
}
inline ::int32_t SS2C_KARMA_RATING_UPDATE_NOT::updatekarmarating() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT.updateKarmaRating)
  return _internal_updatekarmarating();
}
inline void SS2C_KARMA_RATING_UPDATE_NOT::set_updatekarmarating(::int32_t value) {
  _internal_set_updatekarmarating(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT.updateKarmaRating)
}
inline ::int32_t SS2C_KARMA_RATING_UPDATE_NOT::_internal_updatekarmarating() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatekarmarating_;
}
inline void SS2C_KARMA_RATING_UPDATE_NOT::_internal_set_updatekarmarating(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatekarmarating_ = value;
}

// string accountId = 2;
inline void SS2C_KARMA_RATING_UPDATE_NOT::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SS2C_KARMA_RATING_UPDATE_NOT::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_KARMA_RATING_UPDATE_NOT::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT.accountId)
}
inline std::string* SS2C_KARMA_RATING_UPDATE_NOT::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT.accountId)
  return _s;
}
inline const std::string& SS2C_KARMA_RATING_UPDATE_NOT::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SS2C_KARMA_RATING_UPDATE_NOT::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SS2C_KARMA_RATING_UPDATE_NOT::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SS2C_KARMA_RATING_UPDATE_NOT::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT.accountId)
  return _impl_.accountid_.Release();
}
inline void SS2C_KARMA_RATING_UPDATE_NOT::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT.accountId)
}

// string characterId = 3;
inline void SS2C_KARMA_RATING_UPDATE_NOT::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SS2C_KARMA_RATING_UPDATE_NOT::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_KARMA_RATING_UPDATE_NOT::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT.characterId)
}
inline std::string* SS2C_KARMA_RATING_UPDATE_NOT::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT.characterId)
  return _s;
}
inline const std::string& SS2C_KARMA_RATING_UPDATE_NOT::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SS2C_KARMA_RATING_UPDATE_NOT::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SS2C_KARMA_RATING_UPDATE_NOT::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SS2C_KARMA_RATING_UPDATE_NOT::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT.characterId)
  return _impl_.characterid_.Release();
}
inline void SS2C_KARMA_RATING_UPDATE_NOT::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_KARMA_RATING_UPDATE_NOT.characterId)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Packet
}  // namespace DC


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Karma_2eproto_2epb_2eh
