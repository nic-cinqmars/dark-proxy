// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Operate.proto
// Protobuf C++ Version: 5.29.0-dev

#include "Operate.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace DC {
namespace Packet {

inline constexpr ban_info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bantype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        comment_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        registertime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ban_info::ban_info(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ban_infoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ban_infoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ban_infoDefaultTypeInternal() {}
  union {
    ban_info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ban_infoDefaultTypeInternal _ban_info_default_instance_;

inline constexpr ReasonSearchBanUserInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        comment_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        begintime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        endtime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        registertime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountid_{::uint64_t{0u}},
        sorttime_{::uint64_t{0u}},
        bantype_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReasonSearchBanUserInfo::ReasonSearchBanUserInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReasonSearchBanUserInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReasonSearchBanUserInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReasonSearchBanUserInfoDefaultTypeInternal() {}
  union {
    ReasonSearchBanUserInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReasonSearchBanUserInfoDefaultTypeInternal _ReasonSearchBanUserInfo_default_instance_;

inline constexpr Operate_userInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nicknamelist_{},
        accountid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_userInfo::Operate_userInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_userInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_userInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_userInfoDefaultTypeInternal() {}
  union {
    Operate_userInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_userInfoDefaultTypeInternal _Operate_userInfo_default_instance_;

inline constexpr Operate_report_info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : targetnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        registerdate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reportid_{::uint64_t{0u}},
        targetcharacterid_{::uint64_t{0u}},
        gameid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_report_info::Operate_report_info(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_report_infoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_report_infoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_report_infoDefaultTypeInternal() {}
  union {
    Operate_report_info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_report_infoDefaultTypeInternal _Operate_report_info_default_instance_;

inline constexpr Operate_nickname_change::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : securitycode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currentnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        changenickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_nickname_change::Operate_nickname_change(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_nickname_changeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_nickname_changeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_nickname_changeDefaultTypeInternal() {}
  union {
    Operate_nickname_change _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_nickname_changeDefaultTypeInternal _Operate_nickname_change_default_instance_;

inline constexpr Operate_login_log::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : logintime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        logouttime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ipaddress_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        idx_{::uint64_t{0u}},
        accountid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_login_log::Operate_login_log(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_login_logDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_login_logDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_login_logDefaultTypeInternal() {}
  union {
    Operate_login_log _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_login_logDefaultTypeInternal _Operate_login_log_default_instance_;

inline constexpr Operate_iron_shield_list::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : securitycode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_iron_shield_list::Operate_iron_shield_list(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_iron_shield_listDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_iron_shield_listDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_iron_shield_listDefaultTypeInternal() {}
  union {
    Operate_iron_shield_list _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_iron_shield_listDefaultTypeInternal _Operate_iron_shield_list_default_instance_;

inline constexpr Operate_iron_shield_info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hardwareids_{},
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        callbacktype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        registerdate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountid_{::uint64_t{0u}},
        characterid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_iron_shield_info::Operate_iron_shield_info(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_iron_shield_infoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_iron_shield_infoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_iron_shield_infoDefaultTypeInternal() {}
  union {
    Operate_iron_shield_info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_iron_shield_infoDefaultTypeInternal _Operate_iron_shield_info_default_instance_;

inline constexpr Operate_hack_report_list::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : securitycode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_hack_report_list::Operate_hack_report_list(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_hack_report_listDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_hack_report_listDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_hack_report_listDefaultTypeInternal() {}
  union {
    Operate_hack_report_list _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_hack_report_listDefaultTypeInternal _Operate_hack_report_list_default_instance_;

inline constexpr Operate_dll_list::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dlls_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_dll_list::Operate_dll_list(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_dll_listDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_dll_listDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_dll_listDefaultTypeInternal() {}
  union {
    Operate_dll_list _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_dll_listDefaultTypeInternal _Operate_dll_list_default_instance_;

inline constexpr Operate_dll_info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : securitycode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dllpath_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_dll_info::Operate_dll_info(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_dll_infoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_dll_infoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_dll_infoDefaultTypeInternal() {}
  union {
    Operate_dll_info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_dll_infoDefaultTypeInternal _Operate_dll_info_default_instance_;

inline constexpr Operate_character_info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterclass_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gebder_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        registerdate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        lastlogindate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountid_{::uint64_t{0u}},
        characterid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_character_info::Operate_character_info(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_character_infoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_character_infoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_character_infoDefaultTypeInternal() {}
  union {
    Operate_character_info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_character_infoDefaultTypeInternal _Operate_character_info_default_instance_;

inline constexpr Operate_ban_user_info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bantype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        comment_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        registerdate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_ban_user_info::Operate_ban_user_info(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_ban_user_infoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_ban_user_infoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_ban_user_infoDefaultTypeInternal() {}
  union {
    Operate_ban_user_info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_ban_user_infoDefaultTypeInternal _Operate_ban_user_info_default_instance_;

inline constexpr Operate_ban_history::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : securitycode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_ban_history::Operate_ban_history(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_ban_historyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_ban_historyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_ban_historyDefaultTypeInternal() {}
  union {
    Operate_ban_history _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_ban_historyDefaultTypeInternal _Operate_ban_history_default_instance_;

inline constexpr Operate_ban_Hardware_list::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : securitycode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_ban_Hardware_list::Operate_ban_Hardware_list(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_ban_Hardware_listDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_ban_Hardware_listDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_ban_Hardware_listDefaultTypeInternal() {}
  union {
    Operate_ban_Hardware_list _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_ban_Hardware_listDefaultTypeInternal _Operate_ban_Hardware_list_default_instance_;

inline constexpr Operate_announceMessageInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : announcemessage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nationtype_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_announceMessageInfo::Operate_announceMessageInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_announceMessageInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_announceMessageInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_announceMessageInfoDefaultTypeInternal() {}
  union {
    Operate_announceMessageInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_announceMessageInfoDefaultTypeInternal _Operate_announceMessageInfo_default_instance_;

inline constexpr Operate_add_hardware_ban::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : securitycode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hardwareid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_add_hardware_ban::Operate_add_hardware_ban(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_add_hardware_banDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_add_hardware_banDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_add_hardware_banDefaultTypeInternal() {}
  union {
    Operate_add_hardware_ban _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_add_hardware_banDefaultTypeInternal _Operate_add_hardware_ban_default_instance_;

inline constexpr Operate_OperatePlatformInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ironmaceid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        email_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_OperatePlatformInfo::Operate_OperatePlatformInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_OperatePlatformInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_OperatePlatformInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_OperatePlatformInfoDefaultTypeInternal() {}
  union {
    Operate_OperatePlatformInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_OperatePlatformInfoDefaultTypeInternal _Operate_OperatePlatformInfo_default_instance_;

inline constexpr Operate_OperateLoginLogInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : logintime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        logouttime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ipaddress_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_OperateLoginLogInfo::Operate_OperateLoginLogInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_OperateLoginLogInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_OperateLoginLogInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_OperateLoginLogInfoDefaultTypeInternal() {}
  union {
    Operate_OperateLoginLogInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_OperateLoginLogInfoDefaultTypeInternal _Operate_OperateLoginLogInfo_default_instance_;

inline constexpr Operate_OperateHardwareAccountInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hardwareid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        lastupdatedate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ishardwareban_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_OperateHardwareAccountInfo::Operate_OperateHardwareAccountInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_OperateHardwareAccountInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_OperateHardwareAccountInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_OperateHardwareAccountInfoDefaultTypeInternal() {}
  union {
    Operate_OperateHardwareAccountInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_OperateHardwareAccountInfoDefaultTypeInternal _Operate_OperateHardwareAccountInfo_default_instance_;

inline constexpr Operate_OperateFileInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_OperateFileInfo::Operate_OperateFileInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_OperateFileInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_OperateFileInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_OperateFileInfoDefaultTypeInternal() {}
  union {
    Operate_OperateFileInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_OperateFileInfoDefaultTypeInternal _Operate_OperateFileInfo_default_instance_;

inline constexpr Operate_OperateDuplicateHardwareInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hardwareid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        isaccountban_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_OperateDuplicateHardwareInfo::Operate_OperateDuplicateHardwareInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_OperateDuplicateHardwareInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_OperateDuplicateHardwareInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_OperateDuplicateHardwareInfoDefaultTypeInternal() {}
  union {
    Operate_OperateDuplicateHardwareInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_OperateDuplicateHardwareInfoDefaultTypeInternal _Operate_OperateDuplicateHardwareInfo_default_instance_;

inline constexpr Operate_OperateBanUserInfos::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : comment_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        begintime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        endtime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        registertime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ishardwareban_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountid_{::uint64_t{0u}},
        logidx_{::uint64_t{0u}},
        bantype_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_OperateBanUserInfos::Operate_OperateBanUserInfos(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_OperateBanUserInfosDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_OperateBanUserInfosDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_OperateBanUserInfosDefaultTypeInternal() {}
  union {
    Operate_OperateBanUserInfos _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_OperateBanUserInfosDefaultTypeInternal _Operate_OperateBanUserInfos_default_instance_;

inline constexpr Operate_OperateBanInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bantype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        comment_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        registertime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        begintime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        endtime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_OperateBanInfo::Operate_OperateBanInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_OperateBanInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_OperateBanInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_OperateBanInfoDefaultTypeInternal() {}
  union {
    Operate_OperateBanInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_OperateBanInfoDefaultTypeInternal _Operate_OperateBanInfo_default_instance_;

inline constexpr Operate_OperateBanHardwareInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hardwareid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bantype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        comment_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        registertime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_OperateBanHardwareInfo::Operate_OperateBanHardwareInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_OperateBanHardwareInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_OperateBanHardwareInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_OperateBanHardwareInfoDefaultTypeInternal() {}
  union {
    Operate_OperateBanHardwareInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_OperateBanHardwareInfoDefaultTypeInternal _Operate_OperateBanHardwareInfo_default_instance_;

inline constexpr Operate_BulkBanInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_BulkBanInfo::Operate_BulkBanInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_BulkBanInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_BulkBanInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_BulkBanInfoDefaultTypeInternal() {}
  union {
    Operate_BulkBanInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_BulkBanInfoDefaultTypeInternal _Operate_BulkBanInfo_default_instance_;

inline constexpr Operate_Blacklist::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountid_{::uint64_t{0u}},
        writetype_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_Blacklist::Operate_Blacklist(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_BlacklistDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_BlacklistDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_BlacklistDefaultTypeInternal() {}
  union {
    Operate_Blacklist _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_BlacklistDefaultTypeInternal _Operate_Blacklist_default_instance_;

inline constexpr Operate_Ban_User2::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : securitycode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        jiraid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountid_{::uint64_t{0u}},
        bantype_{0u},
        bantime_min_{0u},
        isrankreset_{0u},
        isrankrecovery_{0u},
        logidx_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_Ban_User2::Operate_Ban_User2(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_Ban_User2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_Ban_User2DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_Ban_User2DefaultTypeInternal() {}
  union {
    Operate_Ban_User2 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_Ban_User2DefaultTypeInternal _Operate_Ban_User2_default_instance_;

inline constexpr Operate_Ban_User::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : securitycode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bantype_{0u},
        bantime_min_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_Ban_User::Operate_Ban_User(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_Ban_UserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_Ban_UserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_Ban_UserDefaultTypeInternal() {}
  union {
    Operate_Ban_User _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_Ban_UserDefaultTypeInternal _Operate_Ban_User_default_instance_;

inline constexpr Operate_Ban_Report_User::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : securitycode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reportid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        banreason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bantime_min_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_Ban_Report_User::Operate_Ban_Report_User(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_Ban_Report_UserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_Ban_Report_UserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_Ban_Report_UserDefaultTypeInternal() {}
  union {
    Operate_Ban_Report_User _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_Ban_Report_UserDefaultTypeInternal _Operate_Ban_Report_User_default_instance_;

inline constexpr Operate_Ban_Hardware::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hardwareid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bantype_{0u},
        bantime_min_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_Ban_Hardware::Operate_Ban_Hardware(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_Ban_HardwareDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_Ban_HardwareDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_Ban_HardwareDefaultTypeInternal() {}
  union {
    Operate_Ban_Hardware _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_Ban_HardwareDefaultTypeInternal _Operate_Ban_Hardware_default_instance_;

inline constexpr Operate_Bad_Word_List::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : badword_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_Bad_Word_List::Operate_Bad_Word_List(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_Bad_Word_ListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_Bad_Word_ListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_Bad_Word_ListDefaultTypeInternal() {}
  union {
    Operate_Bad_Word_List _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_Bad_Word_ListDefaultTypeInternal _Operate_Bad_Word_List_default_instance_;

inline constexpr Operate_Add_Bad_Word::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : securitycode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        badword_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_Add_Bad_Word::Operate_Add_Bad_Word(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_Add_Bad_WordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_Add_Bad_WordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_Add_Bad_WordDefaultTypeInternal() {}
  union {
    Operate_Add_Bad_Word _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_Add_Bad_WordDefaultTypeInternal _Operate_Add_Bad_Word_default_instance_;

inline constexpr Operate_AccountNameChange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accountname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_AccountNameChange::Operate_AccountNameChange(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_AccountNameChangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_AccountNameChangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_AccountNameChangeDefaultTypeInternal() {}
  union {
    Operate_AccountNameChange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_AccountNameChangeDefaultTypeInternal _Operate_AccountNameChange_default_instance_;

inline constexpr HackLogInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : logidx_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        registertime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HackLogInfo::HackLogInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HackLogInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HackLogInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HackLogInfoDefaultTypeInternal() {}
  union {
    HackLogInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HackLogInfoDefaultTypeInternal _HackLogInfo_default_instance_;

inline constexpr Operate_report_info_list::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : infos_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_report_info_list::Operate_report_info_list(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_report_info_listDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_report_info_listDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_report_info_listDefaultTypeInternal() {}
  union {
    Operate_report_info_list _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_report_info_listDefaultTypeInternal _Operate_report_info_list_default_instance_;

inline constexpr Operate_login_log_list::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : logs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_login_log_list::Operate_login_log_list(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_login_log_listDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_login_log_listDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_login_log_listDefaultTypeInternal() {}
  union {
    Operate_login_log_list _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_login_log_listDefaultTypeInternal _Operate_login_log_list_default_instance_;

inline constexpr Operate_iron_shield_info_list::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : infos_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_iron_shield_info_list::Operate_iron_shield_info_list(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_iron_shield_info_listDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_iron_shield_info_listDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_iron_shield_info_listDefaultTypeInternal() {}
  union {
    Operate_iron_shield_info_list _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_iron_shield_info_listDefaultTypeInternal _Operate_iron_shield_info_list_default_instance_;

inline constexpr Operate_character_info_list::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : infos_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_character_info_list::Operate_character_info_list(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_character_info_listDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_character_info_listDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_character_info_listDefaultTypeInternal() {}
  union {
    Operate_character_info_list _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_character_info_listDefaultTypeInternal _Operate_character_info_list_default_instance_;

inline constexpr Operate_ban_user_info_list::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : infos_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_ban_user_info_list::Operate_ban_user_info_list(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_ban_user_info_listDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_ban_user_info_listDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_ban_user_info_listDefaultTypeInternal() {}
  union {
    Operate_ban_user_info_list _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_ban_user_info_listDefaultTypeInternal _Operate_ban_user_info_list_default_instance_;

inline constexpr Operate_ban_info_list::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : infos_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_ban_info_list::Operate_ban_info_list(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_ban_info_listDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_ban_info_listDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_ban_info_listDefaultTypeInternal() {}
  union {
    Operate_ban_info_list _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_ban_info_listDefaultTypeInternal _Operate_ban_info_list_default_instance_;

inline constexpr Operate_SearchHackReasonResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : infos_{},
        maxpagesize_{0},
        currentpage_{0},
        searchtype_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_SearchHackReasonResult::Operate_SearchHackReasonResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_SearchHackReasonResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_SearchHackReasonResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_SearchHackReasonResultDefaultTypeInternal() {}
  union {
    Operate_SearchHackReasonResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_SearchHackReasonResultDefaultTypeInternal _Operate_SearchHackReasonResult_default_instance_;

inline constexpr Operate_OperateReportBodyInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        targetnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        registerdate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_{nullptr},
        reportid_{::uint64_t{0u}},
        reportaccountid_{::uint64_t{0u}},
        targetcharacterid_{::uint64_t{0u}},
        gameid_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_OperateReportBodyInfo::Operate_OperateReportBodyInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_OperateReportBodyInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_OperateReportBodyInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_OperateReportBodyInfoDefaultTypeInternal() {}
  union {
    Operate_OperateReportBodyInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_OperateReportBodyInfoDefaultTypeInternal _Operate_OperateReportBodyInfo_default_instance_;

inline constexpr Operate_OperateIronShieldInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hardwareids_{},
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        callbacktype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        registertime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_{nullptr},
        idx_{::uint64_t{0u}},
        accountid_{::uint64_t{0u}},
        characterid_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_OperateIronShieldInfo::Operate_OperateIronShieldInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_OperateIronShieldInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_OperateIronShieldInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_OperateIronShieldInfoDefaultTypeInternal() {}
  union {
    Operate_OperateIronShieldInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_OperateIronShieldInfoDefaultTypeInternal _Operate_OperateIronShieldInfo_default_instance_;

inline constexpr Operate_OperateHardwareInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hardwareaccountinfos_{},
        duplicatehardwareinfos_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_OperateHardwareInfo::Operate_OperateHardwareInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_OperateHardwareInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_OperateHardwareInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_OperateHardwareInfoDefaultTypeInternal() {}
  union {
    Operate_OperateHardwareInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_OperateHardwareInfoDefaultTypeInternal _Operate_OperateHardwareInfo_default_instance_;

inline constexpr Operate_Hacklog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : infos_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_Hacklog::Operate_Hacklog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_HacklogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_HacklogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_HacklogDefaultTypeInternal() {}
  union {
    Operate_Hacklog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_HacklogDefaultTypeInternal _Operate_Hacklog_default_instance_;

inline constexpr Operate_HackUserUnbanBulk::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : infos_{},
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        jiraid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        withloginhardwareban_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_HackUserUnbanBulk::Operate_HackUserUnbanBulk(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_HackUserUnbanBulkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_HackUserUnbanBulkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_HackUserUnbanBulkDefaultTypeInternal() {}
  union {
    Operate_HackUserUnbanBulk _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_HackUserUnbanBulkDefaultTypeInternal _Operate_HackUserUnbanBulk_default_instance_;

inline constexpr Operate_HackUserBanBulk::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : infos_{},
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        jiraid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bantype_{0u},
        bantime_min_{0u},
        logidx_{::uint64_t{0u}},
        withloginhardwareban_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_HackUserBanBulk::Operate_HackUserBanBulk(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_HackUserBanBulkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_HackUserBanBulkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_HackUserBanBulkDefaultTypeInternal() {}
  union {
    Operate_HackUserBanBulk _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_HackUserBanBulkDefaultTypeInternal _Operate_HackUserBanBulk_default_instance_;

inline constexpr Operate_Add_Announce_Msg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : announcelist_{},
        securitycode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_Add_Announce_Msg::Operate_Add_Announce_Msg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_Add_Announce_MsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_Add_Announce_MsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_Add_Announce_MsgDefaultTypeInternal() {}
  union {
    Operate_Add_Announce_Msg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_Add_Announce_MsgDefaultTypeInternal _Operate_Add_Announce_Msg_default_instance_;

inline constexpr Operate_AllReportList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : report_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_AllReportList::Operate_AllReportList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_AllReportListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_AllReportListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_AllReportListDefaultTypeInternal() {}
  union {
    Operate_AllReportList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_AllReportListDefaultTypeInternal _Operate_AllReportList_default_instance_;

inline constexpr Operate_AllIronShieldList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ironshield_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_AllIronShieldList::Operate_AllIronShieldList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_AllIronShieldListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_AllIronShieldListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_AllIronShieldListDefaultTypeInternal() {}
  union {
    Operate_AllIronShieldList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_AllIronShieldListDefaultTypeInternal _Operate_AllIronShieldList_default_instance_;

inline constexpr Operate_AllHackInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        characterinfos_{},
        reportbodyinfos_{},
        ironshieldinfos_{},
        banuserinfos_{},
        loginloginfos_{},
        hardwareaccountinfos_{},
        duplicatehardwareinfos_{},
        fileinfos_{},
        baninfos_{},
        banhardwareinfos_{},
        findbanlist_{},
        _findbanlist_cached_byte_size_{0},
        banlist_{},
        _banlist_cached_byte_size_{0},
        hackinfos_{nullptr},
        platforminfo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_AllHackInfo::Operate_AllHackInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_AllHackInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_AllHackInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_AllHackInfoDefaultTypeInternal() {}
  union {
    Operate_AllHackInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_AllHackInfoDefaultTypeInternal _Operate_AllHackInfo_default_instance_;

inline constexpr Operate_characterInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : inventoryitems_{},
        storageitems_{},
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterclass_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        registerdate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        lastlogindate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountid_{::uint64_t{0u}},
        characterid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Operate_characterInfo::Operate_characterInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Operate_characterInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operate_characterInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operate_characterInfoDefaultTypeInternal() {}
  union {
    Operate_characterInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operate_characterInfoDefaultTypeInternal _Operate_characterInfo_default_instance_;
}  // namespace Packet
}  // namespace DC
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_Operate_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Operate_2eproto = nullptr;
const ::uint32_t
    TableStruct_Operate_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Bad_Word_List, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Bad_Word_List, _impl_.badword_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Add_Bad_Word, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Add_Bad_Word, _impl_.securitycode_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Add_Bad_Word, _impl_.badword_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_announceMessageInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_announceMessageInfo, _impl_.nationtype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_announceMessageInfo, _impl_.announcemessage_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Add_Announce_Msg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Add_Announce_Msg, _impl_.securitycode_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Add_Announce_Msg, _impl_.announcelist_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_dll_info, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_dll_info, _impl_.securitycode_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_dll_info, _impl_.dllpath_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_dll_list, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_dll_list, _impl_.dlls_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_userInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_userInfo, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_userInfo, _impl_.nicknamelist_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::HackLogInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::HackLogInfo, _impl_.logidx_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::HackLogInfo, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::HackLogInfo, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::HackLogInfo, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::HackLogInfo, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::HackLogInfo, _impl_.registertime_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Hacklog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Hacklog, _impl_.infos_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_Report_User, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_Report_User, _impl_.securitycode_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_Report_User, _impl_.reportid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_Report_User, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_Report_User, _impl_.bantime_min_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_Report_User, _impl_.banreason_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_hack_report_list, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_hack_report_list, _impl_.securitycode_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_iron_shield_list, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_iron_shield_list, _impl_.securitycode_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_add_hardware_ban, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_add_hardware_ban, _impl_.securitycode_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_add_hardware_ban, _impl_.hardwareid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_ban_history, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_ban_history, _impl_.securitycode_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_ban_history, _impl_.nickname_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::ban_info, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::ban_info, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::ban_info, _impl_.bantype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::ban_info, _impl_.comment_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::ban_info, _impl_.registertime_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_ban_info_list, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_ban_info_list, _impl_.infos_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_ban_Hardware_list, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_ban_Hardware_list, _impl_.securitycode_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_nickname_change, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_nickname_change, _impl_.securitycode_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_nickname_change, _impl_.currentnickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_nickname_change, _impl_.changenickname_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_character_info, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_character_info, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_character_info, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_character_info, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_character_info, _impl_.characterclass_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_character_info, _impl_.gebder_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_character_info, _impl_.registerdate_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_character_info, _impl_.lastlogindate_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_character_info_list, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_character_info_list, _impl_.infos_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_report_info, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_report_info, _impl_.reportid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_report_info, _impl_.targetcharacterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_report_info, _impl_.targetnickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_report_info, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_report_info, _impl_.registerdate_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_report_info_list, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_report_info_list, _impl_.infos_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_iron_shield_info, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_iron_shield_info, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_iron_shield_info, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_iron_shield_info, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_iron_shield_info, _impl_.hardwareids_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_iron_shield_info, _impl_.callbacktype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_iron_shield_info, _impl_.registerdate_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_iron_shield_info_list, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_iron_shield_info_list, _impl_.infos_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_ban_user_info, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_ban_user_info, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_ban_user_info, _impl_.bantype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_ban_user_info, _impl_.comment_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_ban_user_info, _impl_.registerdate_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_ban_user_info_list, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_ban_user_info_list, _impl_.infos_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_login_log, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_login_log, _impl_.idx_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_login_log, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_login_log, _impl_.logintime_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_login_log, _impl_.logouttime_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_login_log, _impl_.ipaddress_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_login_log_list, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_login_log_list, _impl_.logs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User, _impl_.securitycode_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User, _impl_.bantype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User, _impl_.bantime_min_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User2, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User2, _impl_.securitycode_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User2, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User2, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User2, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User2, _impl_.bantype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User2, _impl_.bantime_min_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User2, _impl_.jiraid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User2, _impl_.isrankreset_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User2, _impl_.isrankrecovery_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_User2, _impl_.logidx_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_Hardware, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_Hardware, _impl_.hardwareid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_Hardware, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_Hardware, _impl_.bantype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Ban_Hardware, _impl_.bantime_min_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_characterInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_characterInfo, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_characterInfo, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_characterInfo, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_characterInfo, _impl_.characterclass_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_characterInfo, _impl_.gender_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_characterInfo, _impl_.registerdate_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_characterInfo, _impl_.lastlogindate_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_characterInfo, _impl_.inventoryitems_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_characterInfo, _impl_.storageitems_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateReportBodyInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateReportBodyInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateReportBodyInfo, _impl_.reportid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateReportBodyInfo, _impl_.reportaccountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateReportBodyInfo, _impl_.targetcharacterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateReportBodyInfo, _impl_.targetnickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateReportBodyInfo, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateReportBodyInfo, _impl_.file_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateReportBodyInfo, _impl_.registerdate_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateIronShieldInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateIronShieldInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateIronShieldInfo, _impl_.idx_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateIronShieldInfo, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateIronShieldInfo, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateIronShieldInfo, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateIronShieldInfo, _impl_.callbacktype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateIronShieldInfo, _impl_.file_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateIronShieldInfo, _impl_.registertime_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateIronShieldInfo, _impl_.hardwareids_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanUserInfos, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanUserInfos, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanUserInfos, _impl_.bantype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanUserInfos, _impl_.logidx_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanUserInfos, _impl_.comment_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanUserInfos, _impl_.begintime_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanUserInfos, _impl_.endtime_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanUserInfos, _impl_.registertime_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanUserInfos, _impl_.ishardwareban_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateLoginLogInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateLoginLogInfo, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateLoginLogInfo, _impl_.logintime_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateLoginLogInfo, _impl_.logouttime_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateLoginLogInfo, _impl_.ipaddress_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateHardwareAccountInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateHardwareAccountInfo, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateHardwareAccountInfo, _impl_.hardwareid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateHardwareAccountInfo, _impl_.lastupdatedate_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateHardwareAccountInfo, _impl_.ishardwareban_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateDuplicateHardwareInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateDuplicateHardwareInfo, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateDuplicateHardwareInfo, _impl_.hardwareid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateDuplicateHardwareInfo, _impl_.isaccountban_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateHardwareInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateHardwareInfo, _impl_.hardwareaccountinfos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateHardwareInfo, _impl_.duplicatehardwareinfos_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateFileInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateFileInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateFileInfo, _impl_.url_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanInfo, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanInfo, _impl_.bantype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanInfo, _impl_.comment_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanInfo, _impl_.registertime_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanInfo, _impl_.begintime_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanInfo, _impl_.endtime_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanHardwareInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanHardwareInfo, _impl_.hardwareid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanHardwareInfo, _impl_.bantype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanHardwareInfo, _impl_.comment_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperateBanHardwareInfo, _impl_.registertime_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperatePlatformInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperatePlatformInfo, _impl_.ironmaceid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperatePlatformInfo, _impl_.email_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperatePlatformInfo, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_OperatePlatformInfo, _impl_.accountnickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllHackInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllHackInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllHackInfo, _impl_.characterinfos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllHackInfo, _impl_.reportbodyinfos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllHackInfo, _impl_.ironshieldinfos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllHackInfo, _impl_.banuserinfos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllHackInfo, _impl_.loginloginfos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllHackInfo, _impl_.hardwareaccountinfos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllHackInfo, _impl_.duplicatehardwareinfos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllHackInfo, _impl_.fileinfos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllHackInfo, _impl_.baninfos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllHackInfo, _impl_.banhardwareinfos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllHackInfo, _impl_.hackinfos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllHackInfo, _impl_.findbanlist_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllHackInfo, _impl_.banlist_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllHackInfo, _impl_.platforminfo_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllReportList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllReportList, _impl_.report_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllIronShieldList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AllIronShieldList, _impl_.ironshield_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::ReasonSearchBanUserInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::ReasonSearchBanUserInfo, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::ReasonSearchBanUserInfo, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::ReasonSearchBanUserInfo, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::ReasonSearchBanUserInfo, _impl_.bantype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::ReasonSearchBanUserInfo, _impl_.comment_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::ReasonSearchBanUserInfo, _impl_.begintime_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::ReasonSearchBanUserInfo, _impl_.endtime_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::ReasonSearchBanUserInfo, _impl_.registertime_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::ReasonSearchBanUserInfo, _impl_.sorttime_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_SearchHackReasonResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_SearchHackReasonResult, _impl_.infos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_SearchHackReasonResult, _impl_.maxpagesize_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_SearchHackReasonResult, _impl_.currentpage_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_SearchHackReasonResult, _impl_.searchtype_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_BulkBanInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_BulkBanInfo, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_BulkBanInfo, _impl_.nickname_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_HackUserBanBulk, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_HackUserBanBulk, _impl_.infos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_HackUserBanBulk, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_HackUserBanBulk, _impl_.bantype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_HackUserBanBulk, _impl_.bantime_min_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_HackUserBanBulk, _impl_.jiraid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_HackUserBanBulk, _impl_.withloginhardwareban_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_HackUserBanBulk, _impl_.logidx_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_HackUserUnbanBulk, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_HackUserUnbanBulk, _impl_.infos_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_HackUserUnbanBulk, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_HackUserUnbanBulk, _impl_.jiraid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_HackUserUnbanBulk, _impl_.withloginhardwareban_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Blacklist, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Blacklist, _impl_.writetype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Blacklist, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_Blacklist, _impl_.reason_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AccountNameChange, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AccountNameChange, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::Operate_AccountNameChange, _impl_.accountname_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::DC::Packet::Operate_Bad_Word_List)},
        {9, -1, -1, sizeof(::DC::Packet::Operate_Add_Bad_Word)},
        {19, -1, -1, sizeof(::DC::Packet::Operate_announceMessageInfo)},
        {29, -1, -1, sizeof(::DC::Packet::Operate_Add_Announce_Msg)},
        {39, -1, -1, sizeof(::DC::Packet::Operate_dll_info)},
        {49, -1, -1, sizeof(::DC::Packet::Operate_dll_list)},
        {58, -1, -1, sizeof(::DC::Packet::Operate_userInfo)},
        {68, -1, -1, sizeof(::DC::Packet::HackLogInfo)},
        {82, -1, -1, sizeof(::DC::Packet::Operate_Hacklog)},
        {91, -1, -1, sizeof(::DC::Packet::Operate_Ban_Report_User)},
        {104, -1, -1, sizeof(::DC::Packet::Operate_hack_report_list)},
        {113, -1, -1, sizeof(::DC::Packet::Operate_iron_shield_list)},
        {122, -1, -1, sizeof(::DC::Packet::Operate_add_hardware_ban)},
        {132, -1, -1, sizeof(::DC::Packet::Operate_ban_history)},
        {142, -1, -1, sizeof(::DC::Packet::ban_info)},
        {154, -1, -1, sizeof(::DC::Packet::Operate_ban_info_list)},
        {163, -1, -1, sizeof(::DC::Packet::Operate_ban_Hardware_list)},
        {172, -1, -1, sizeof(::DC::Packet::Operate_nickname_change)},
        {183, -1, -1, sizeof(::DC::Packet::Operate_character_info)},
        {198, -1, -1, sizeof(::DC::Packet::Operate_character_info_list)},
        {207, -1, -1, sizeof(::DC::Packet::Operate_report_info)},
        {220, -1, -1, sizeof(::DC::Packet::Operate_report_info_list)},
        {229, -1, -1, sizeof(::DC::Packet::Operate_iron_shield_info)},
        {243, -1, -1, sizeof(::DC::Packet::Operate_iron_shield_info_list)},
        {252, -1, -1, sizeof(::DC::Packet::Operate_ban_user_info)},
        {264, -1, -1, sizeof(::DC::Packet::Operate_ban_user_info_list)},
        {273, -1, -1, sizeof(::DC::Packet::Operate_login_log)},
        {286, -1, -1, sizeof(::DC::Packet::Operate_login_log_list)},
        {295, -1, -1, sizeof(::DC::Packet::Operate_Ban_User)},
        {308, -1, -1, sizeof(::DC::Packet::Operate_Ban_User2)},
        {326, -1, -1, sizeof(::DC::Packet::Operate_Ban_Hardware)},
        {338, -1, -1, sizeof(::DC::Packet::Operate_characterInfo)},
        {355, 370, -1, sizeof(::DC::Packet::Operate_OperateReportBodyInfo)},
        {377, 393, -1, sizeof(::DC::Packet::Operate_OperateIronShieldInfo)},
        {401, -1, -1, sizeof(::DC::Packet::Operate_OperateBanUserInfos)},
        {417, -1, -1, sizeof(::DC::Packet::Operate_OperateLoginLogInfo)},
        {429, -1, -1, sizeof(::DC::Packet::Operate_OperateHardwareAccountInfo)},
        {441, -1, -1, sizeof(::DC::Packet::Operate_OperateDuplicateHardwareInfo)},
        {452, -1, -1, sizeof(::DC::Packet::Operate_OperateHardwareInfo)},
        {462, -1, -1, sizeof(::DC::Packet::Operate_OperateFileInfo)},
        {472, -1, -1, sizeof(::DC::Packet::Operate_OperateBanInfo)},
        {486, -1, -1, sizeof(::DC::Packet::Operate_OperateBanHardwareInfo)},
        {498, -1, -1, sizeof(::DC::Packet::Operate_OperatePlatformInfo)},
        {510, 532, -1, sizeof(::DC::Packet::Operate_AllHackInfo)},
        {546, -1, -1, sizeof(::DC::Packet::Operate_AllReportList)},
        {555, -1, -1, sizeof(::DC::Packet::Operate_AllIronShieldList)},
        {564, -1, -1, sizeof(::DC::Packet::ReasonSearchBanUserInfo)},
        {581, -1, -1, sizeof(::DC::Packet::Operate_SearchHackReasonResult)},
        {593, -1, -1, sizeof(::DC::Packet::Operate_BulkBanInfo)},
        {603, -1, -1, sizeof(::DC::Packet::Operate_HackUserBanBulk)},
        {618, -1, -1, sizeof(::DC::Packet::Operate_HackUserUnbanBulk)},
        {630, -1, -1, sizeof(::DC::Packet::Operate_Blacklist)},
        {641, -1, -1, sizeof(::DC::Packet::Operate_AccountNameChange)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::DC::Packet::_Operate_Bad_Word_List_default_instance_._instance,
    &::DC::Packet::_Operate_Add_Bad_Word_default_instance_._instance,
    &::DC::Packet::_Operate_announceMessageInfo_default_instance_._instance,
    &::DC::Packet::_Operate_Add_Announce_Msg_default_instance_._instance,
    &::DC::Packet::_Operate_dll_info_default_instance_._instance,
    &::DC::Packet::_Operate_dll_list_default_instance_._instance,
    &::DC::Packet::_Operate_userInfo_default_instance_._instance,
    &::DC::Packet::_HackLogInfo_default_instance_._instance,
    &::DC::Packet::_Operate_Hacklog_default_instance_._instance,
    &::DC::Packet::_Operate_Ban_Report_User_default_instance_._instance,
    &::DC::Packet::_Operate_hack_report_list_default_instance_._instance,
    &::DC::Packet::_Operate_iron_shield_list_default_instance_._instance,
    &::DC::Packet::_Operate_add_hardware_ban_default_instance_._instance,
    &::DC::Packet::_Operate_ban_history_default_instance_._instance,
    &::DC::Packet::_ban_info_default_instance_._instance,
    &::DC::Packet::_Operate_ban_info_list_default_instance_._instance,
    &::DC::Packet::_Operate_ban_Hardware_list_default_instance_._instance,
    &::DC::Packet::_Operate_nickname_change_default_instance_._instance,
    &::DC::Packet::_Operate_character_info_default_instance_._instance,
    &::DC::Packet::_Operate_character_info_list_default_instance_._instance,
    &::DC::Packet::_Operate_report_info_default_instance_._instance,
    &::DC::Packet::_Operate_report_info_list_default_instance_._instance,
    &::DC::Packet::_Operate_iron_shield_info_default_instance_._instance,
    &::DC::Packet::_Operate_iron_shield_info_list_default_instance_._instance,
    &::DC::Packet::_Operate_ban_user_info_default_instance_._instance,
    &::DC::Packet::_Operate_ban_user_info_list_default_instance_._instance,
    &::DC::Packet::_Operate_login_log_default_instance_._instance,
    &::DC::Packet::_Operate_login_log_list_default_instance_._instance,
    &::DC::Packet::_Operate_Ban_User_default_instance_._instance,
    &::DC::Packet::_Operate_Ban_User2_default_instance_._instance,
    &::DC::Packet::_Operate_Ban_Hardware_default_instance_._instance,
    &::DC::Packet::_Operate_characterInfo_default_instance_._instance,
    &::DC::Packet::_Operate_OperateReportBodyInfo_default_instance_._instance,
    &::DC::Packet::_Operate_OperateIronShieldInfo_default_instance_._instance,
    &::DC::Packet::_Operate_OperateBanUserInfos_default_instance_._instance,
    &::DC::Packet::_Operate_OperateLoginLogInfo_default_instance_._instance,
    &::DC::Packet::_Operate_OperateHardwareAccountInfo_default_instance_._instance,
    &::DC::Packet::_Operate_OperateDuplicateHardwareInfo_default_instance_._instance,
    &::DC::Packet::_Operate_OperateHardwareInfo_default_instance_._instance,
    &::DC::Packet::_Operate_OperateFileInfo_default_instance_._instance,
    &::DC::Packet::_Operate_OperateBanInfo_default_instance_._instance,
    &::DC::Packet::_Operate_OperateBanHardwareInfo_default_instance_._instance,
    &::DC::Packet::_Operate_OperatePlatformInfo_default_instance_._instance,
    &::DC::Packet::_Operate_AllHackInfo_default_instance_._instance,
    &::DC::Packet::_Operate_AllReportList_default_instance_._instance,
    &::DC::Packet::_Operate_AllIronShieldList_default_instance_._instance,
    &::DC::Packet::_ReasonSearchBanUserInfo_default_instance_._instance,
    &::DC::Packet::_Operate_SearchHackReasonResult_default_instance_._instance,
    &::DC::Packet::_Operate_BulkBanInfo_default_instance_._instance,
    &::DC::Packet::_Operate_HackUserBanBulk_default_instance_._instance,
    &::DC::Packet::_Operate_HackUserUnbanBulk_default_instance_._instance,
    &::DC::Packet::_Operate_Blacklist_default_instance_._instance,
    &::DC::Packet::_Operate_AccountNameChange_default_instance_._instance,
};
const char descriptor_table_protodef_Operate_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rOperate.proto\022\tDC.Packet\032\013_Item.proto\""
    "(\n\025Operate_Bad_Word_List\022\017\n\007badWord\030\001 \003("
    "\t\"=\n\024Operate_Add_Bad_Word\022\024\n\014securityCod"
    "e\030\001 \001(\t\022\017\n\007badWord\030\002 \001(\t\"J\n\033Operate_anno"
    "unceMessageInfo\022\022\n\nnationType\030\001 \001(\005\022\027\n\017a"
    "nnounceMessage\030\002 \001(\t\"n\n\030Operate_Add_Anno"
    "unce_Msg\022\024\n\014securityCode\030\001 \001(\t\022<\n\014announ"
    "ceList\030\002 \003(\0132&.DC.Packet.Operate_announc"
    "eMessageInfo\"9\n\020Operate_dll_info\022\024\n\014secu"
    "rityCode\030\001 \001(\t\022\017\n\007dllPath\030\002 \001(\t\" \n\020Opera"
    "te_dll_list\022\014\n\004dlls\030\001 \003(\t\";\n\020Operate_use"
    "rInfo\022\021\n\taccountId\030\001 \001(\004\022\024\n\014nicknameList"
    "\030\002 \003(\t\"}\n\013HackLogInfo\022\016\n\006logIdx\030\001 \001(\t\022\021\n"
    "\taccountId\030\002 \001(\t\022\023\n\013characterId\030\003 \001(\t\022\020\n"
    "\010nickname\030\004 \001(\t\022\016\n\006reason\030\005 \001(\t\022\024\n\014regis"
    "terTime\030\006 \001(\t\"8\n\017Operate_Hacklog\022%\n\005info"
    "s\030\001 \003(\0132\026.DC.Packet.HackLogInfo\"{\n\027Opera"
    "te_Ban_Report_User\022\024\n\014securityCode\030\001 \001(\t"
    "\022\020\n\010reportId\030\002 \001(\t\022\020\n\010nickName\030\003 \001(\t\022\023\n\013"
    "banTime_min\030\004 \001(\r\022\021\n\tbanReason\030\005 \001(\t\"0\n\030"
    "Operate_hack_report_list\022\024\n\014securityCode"
    "\030\001 \001(\t\"0\n\030Operate_iron_shield_list\022\024\n\014se"
    "curityCode\030\001 \001(\t\"D\n\030Operate_add_hardware"
    "_ban\022\024\n\014securityCode\030\001 \001(\t\022\022\n\nhardwareId"
    "\030\002 \001(\t\"=\n\023Operate_ban_history\022\024\n\014securit"
    "yCode\030\001 \001(\t\022\020\n\010nickname\030\002 \001(\t\"U\n\010ban_inf"
    "o\022\021\n\taccountId\030\001 \001(\t\022\017\n\007banType\030\002 \001(\t\022\017\n"
    "\007comment\030\003 \001(\t\022\024\n\014registerTime\030\004 \001(\t\";\n\025"
    "Operate_ban_info_list\022\"\n\005infos\030\001 \003(\0132\023.D"
    "C.Packet.ban_info\"1\n\031Operate_ban_Hardwar"
    "e_list\022\024\n\014securityCode\030\001 \001(\t\"`\n\027Operate_"
    "nickname_change\022\024\n\014securityCode\030\001 \001(\t\022\027\n"
    "\017currentNickname\030\002 \001(\t\022\026\n\016changeNickname"
    "\030\003 \001(\t\"\247\001\n\026Operate_character_info\022\021\n\tacc"
    "ountId\030\001 \001(\004\022\023\n\013characterId\030\002 \001(\004\022\020\n\010nic"
    "kname\030\003 \001(\t\022\026\n\016characterClass\030\004 \001(\t\022\016\n\006g"
    "ebder\030\005 \001(\t\022\024\n\014registerDate\030\006 \001(\t\022\025\n\rlas"
    "tLoginDate\030\007 \001(\t\"O\n\033Operate_character_in"
    "fo_list\0220\n\005infos\030\001 \003(\0132!.DC.Packet.Opera"
    "te_character_info\"\200\001\n\023Operate_report_inf"
    "o\022\020\n\010reportId\030\001 \001(\004\022\031\n\021targetCharacterId"
    "\030\002 \001(\004\022\026\n\016targetNickname\030\003 \001(\t\022\016\n\006gameId"
    "\030\004 \001(\004\022\024\n\014registerDate\030\005 \001(\t\"I\n\030Operate_"
    "report_info_list\022-\n\005infos\030\001 \003(\0132\036.DC.Pac"
    "ket.Operate_report_info\"\225\001\n\030Operate_iron"
    "_shield_info\022\021\n\taccountId\030\001 \001(\004\022\023\n\013chara"
    "cterId\030\002 \001(\004\022\020\n\010nickname\030\003 \001(\t\022\023\n\013hardwa"
    "reIds\030\004 \003(\t\022\024\n\014callbackType\030\005 \001(\t\022\024\n\014reg"
    "isterDate\030\006 \001(\t\"S\n\035Operate_iron_shield_i"
    "nfo_list\0222\n\005infos\030\001 \003(\0132#.DC.Packet.Oper"
    "ate_iron_shield_info\"b\n\025Operate_ban_user"
    "_info\022\021\n\taccountId\030\001 \001(\004\022\017\n\007banType\030\002 \001("
    "\t\022\017\n\007comment\030\003 \001(\t\022\024\n\014registerDate\030\004 \001(\t"
    "\"M\n\032Operate_ban_user_info_list\022/\n\005infos\030"
    "\001 \003(\0132 .DC.Packet.Operate_ban_user_info\""
    "m\n\021Operate_login_log\022\013\n\003idx\030\001 \001(\004\022\021\n\tacc"
    "ountId\030\002 \001(\004\022\021\n\tloginTime\030\003 \001(\t\022\022\n\nlogou"
    "tTime\030\004 \001(\t\022\021\n\tipAddress\030\005 \001(\t\"D\n\026Operat"
    "e_login_log_list\022*\n\004logs\030\001 \003(\0132\034.DC.Pack"
    "et.Operate_login_log\"p\n\020Operate_Ban_User"
    "\022\024\n\014securityCode\030\001 \001(\t\022\020\n\010nickName\030\002 \001(\t"
    "\022\016\n\006reason\030\003 \001(\t\022\017\n\007banType\030\004 \001(\r\022\023\n\013ban"
    "Time_min\030\005 \001(\r\"\321\001\n\021Operate_Ban_User2\022\024\n\014"
    "securityCode\030\001 \001(\t\022\021\n\taccountId\030\002 \001(\004\022\020\n"
    "\010nickName\030\003 \001(\t\022\016\n\006reason\030\004 \001(\t\022\017\n\007banTy"
    "pe\030\005 \001(\r\022\023\n\013banTime_min\030\006 \001(\r\022\016\n\006jiraId\030"
    "\007 \001(\t\022\023\n\013isRankReset\030\010 \001(\r\022\026\n\016isRankReco"
    "very\030\t \001(\r\022\016\n\006logIdx\030\n \001(\004\"`\n\024Operate_Ba"
    "n_Hardware\022\022\n\nhardwareId\030\001 \001(\t\022\016\n\006reason"
    "\030\002 \001(\t\022\017\n\007banType\030\003 \001(\r\022\023\n\013banTime_min\030\004"
    " \001(\r\"\372\001\n\025Operate_characterInfo\022\021\n\taccoun"
    "tId\030\001 \001(\004\022\023\n\013characterId\030\002 \001(\004\022\020\n\010nickna"
    "me\030\003 \001(\t\022\026\n\016characterClass\030\004 \001(\t\022\016\n\006gend"
    "er\030\005 \001(\t\022\024\n\014registerdate\030\006 \001(\t\022\025\n\rlastlo"
    "gindate\030\007 \001(\t\022)\n\016inventoryItems\030\010 \003(\0132\021."
    "DC.Packet.SItems\022\'\n\014storageItems\030\t \003(\0132\021"
    ".DC.Packet.SItems\"\325\001\n\035Operate_OperateRep"
    "ortBodyInfo\022\020\n\010reportId\030\001 \001(\004\022\027\n\017reportA"
    "ccountId\030\002 \001(\004\022\031\n\021targetCharacterId\030\003 \001("
    "\004\022\026\n\016targetNickname\030\004 \001(\t\022\016\n\006gameId\030\005 \001("
    "\004\0220\n\004file\030\006 \001(\0132\".DC.Packet.Operate_Oper"
    "ateFileInfo\022\024\n\014registerDate\030\007 \001(\t\"\331\001\n\035Op"
    "erate_OperateIronShieldInfo\022\013\n\003idx\030\001 \001(\004"
    "\022\021\n\taccountId\030\002 \001(\004\022\023\n\013characterId\030\003 \001(\004"
    "\022\020\n\010nickname\030\004 \001(\t\022\024\n\014callbackType\030\005 \001(\t"
    "\0220\n\004file\030\006 \001(\0132\".DC.Packet.Operate_Opera"
    "teFileInfo\022\024\n\014RegisterTime\030\007 \001(\t\022\023\n\013hard"
    "wareIds\030\010 \003(\t\"\263\001\n\033Operate_OperateBanUser"
    "Infos\022\021\n\taccountId\030\001 \001(\004\022\017\n\007banType\030\002 \001("
    "\005\022\016\n\006logIdx\030\003 \001(\004\022\017\n\007comment\030\004 \001(\t\022\021\n\tbe"
    "ginTime\030\005 \001(\t\022\017\n\007endTime\030\006 \001(\t\022\024\n\014regist"
    "erTime\030\007 \001(\t\022\025\n\risHardwareBan\030\010 \001(\t\"j\n\033O"
    "perate_OperateLoginLogInfo\022\021\n\taccountId\030"
    "\001 \001(\004\022\021\n\tloginTime\030\002 \001(\t\022\022\n\nlogoutTime\030\003"
    " \001(\t\022\021\n\tipAddress\030\004 \001(\t\"z\n\"Operate_Opera"
    "teHardwareAccountInfo\022\021\n\taccountId\030\001 \001(\004"
    "\022\022\n\nhardwareId\030\002 \001(\t\022\026\n\016lastUpdateDate\030\003"
    " \001(\t\022\025\n\risHardwareBan\030\004 \001(\t\"c\n$Operate_O"
    "perateDuplicateHardwareInfo\022\021\n\taccountId"
    "\030\001 \001(\004\022\022\n\nhardwareId\030\002 \001(\t\022\024\n\014isAccountB"
    "an\030\003 \001(\t\"\273\001\n\033Operate_OperateHardwareInfo"
    "\022K\n\024hardwareAccountInfos\030\001 \003(\0132-.DC.Pack"
    "et.Operate_OperateHardwareAccountInfo\022O\n"
    "\026duplicateHardwareInfos\030\002 \003(\0132/.DC.Packe"
    "t.Operate_OperateDuplicateHardwareInfo\"4"
    "\n\027Operate_OperateFileInfo\022\014\n\004name\030\001 \001(\t\022"
    "\013\n\003url\030\002 \001(\t\"\207\001\n\026Operate_OperateBanInfo\022"
    "\021\n\taccountId\030\001 \001(\t\022\017\n\007banType\030\002 \001(\t\022\017\n\007c"
    "omment\030\003 \001(\t\022\024\n\014registerTime\030\004 \001(\t\022\021\n\tbe"
    "ginTime\030\005 \001(\t\022\017\n\007endTime\030\006 \001(\t\"l\n\036Operat"
    "e_OperateBanHardwareInfo\022\022\n\nhardwareId\030\001"
    " \001(\t\022\017\n\007banType\030\002 \001(\t\022\017\n\007comment\030\003 \001(\t\022\024"
    "\n\014registerTime\030\004 \001(\t\"k\n\033Operate_OperateP"
    "latformInfo\022\022\n\nironmaceid\030\001 \001(\t\022\r\n\005email"
    "\030\002 \001(\t\022\020\n\010username\030\003 \001(\t\022\027\n\017accountNickN"
    "ame\030\004 \001(\t\"\265\006\n\023Operate_AllHackInfo\0229\n\016cha"
    "racterInfos\030\001 \003(\0132!.DC.Packet.Operate_ch"
    "aracter_info\022A\n\017reportBodyInfos\030\002 \003(\0132(."
    "DC.Packet.Operate_OperateReportBodyInfo\022"
    "A\n\017ironShieldInfos\030\003 \003(\0132(.DC.Packet.Ope"
    "rate_OperateIronShieldInfo\022<\n\014banUserInf"
    "os\030\004 \003(\0132&.DC.Packet.Operate_OperateBanU"
    "serInfos\022=\n\rloginLogInfos\030\005 \003(\0132&.DC.Pac"
    "ket.Operate_OperateLoginLogInfo\022K\n\024hardw"
    "areAccountInfos\030\006 \003(\0132-.DC.Packet.Operat"
    "e_OperateHardwareAccountInfo\022O\n\026duplicat"
    "eHardwareInfos\030\007 \003(\0132/.DC.Packet.Operate"
    "_OperateDuplicateHardwareInfo\0225\n\tfileInf"
    "os\030\010 \003(\0132\".DC.Packet.Operate_OperateFile"
    "Info\0223\n\010banInfos\030\t \003(\0132!.DC.Packet.Opera"
    "te_OperateBanInfo\022C\n\020banHardwareInfos\030\n "
    "\003(\0132).DC.Packet.Operate_OperateBanHardwa"
    "reInfo\022-\n\thackInfos\030\013 \001(\0132\032.DC.Packet.Op"
    "erate_Hacklog\022\023\n\013findBanList\030\014 \003(\004\022\017\n\007ba"
    "nList\030\r \003(\004\022<\n\014platformInfo\030\016 \001(\0132&.DC.P"
    "acket.Operate_OperatePlatformInfo\"Q\n\025Ope"
    "rate_AllReportList\0228\n\006report\030\001 \003(\0132(.DC."
    "Packet.Operate_OperateReportBodyInfo\"Y\n\031"
    "Operate_AllIronShieldList\022<\n\nironShield\030"
    "\001 \003(\0132(.DC.Packet.Operate_OperateIronShi"
    "eldInfo\"\274\001\n\027ReasonSearchBanUserInfo\022\021\n\ta"
    "ccountId\030\001 \001(\004\022\020\n\010nickname\030\002 \001(\t\022\016\n\006reas"
    "on\030\003 \001(\t\022\017\n\007banType\030\004 \001(\005\022\017\n\007comment\030\005 \001"
    "(\t\022\021\n\tbeginTime\030\006 \001(\t\022\017\n\007endTime\030\007 \001(\t\022\024"
    "\n\014registerTime\030\010 \001(\t\022\020\n\010sortTime\030\t \001(\004\"\221"
    "\001\n\036Operate_SearchHackReasonResult\0221\n\005inf"
    "os\030\001 \003(\0132\".DC.Packet.ReasonSearchBanUser"
    "Info\022\023\n\013maxPageSize\030\002 \001(\005\022\023\n\013currentPage"
    "\030\003 \001(\005\022\022\n\nsearchType\030\004 \001(\005\":\n\023Operate_Bu"
    "lkBanInfo\022\021\n\taccountId\030\001 \001(\004\022\020\n\010nickname"
    "\030\002 \001(\t\"\274\001\n\027Operate_HackUserBanBulk\022-\n\005in"
    "fos\030\001 \003(\0132\036.DC.Packet.Operate_BulkBanInf"
    "o\022\016\n\006reason\030\002 \001(\t\022\017\n\007banType\030\003 \001(\r\022\023\n\013ba"
    "nTime_min\030\004 \001(\r\022\016\n\006jiraId\030\005 \001(\t\022\034\n\024withL"
    "oginHardwareBan\030\006 \001(\r\022\016\n\006logIdx\030\007 \001(\004\"\210\001"
    "\n\031Operate_HackUserUnbanBulk\022-\n\005infos\030\001 \003"
    "(\0132\036.DC.Packet.Operate_BulkBanInfo\022\016\n\006re"
    "ason\030\002 \001(\t\022\016\n\006jiraId\030\003 \001(\t\022\034\n\024withLoginH"
    "ardwareBan\030\004 \001(\r\"I\n\021Operate_Blacklist\022\021\n"
    "\twriteType\030\001 \001(\r\022\021\n\taccountId\030\002 \001(\004\022\016\n\006r"
    "eason\030\003 \001(\t\"C\n\031Operate_AccountNameChange"
    "\022\021\n\taccountId\030\001 \001(\004\022\023\n\013accountName\030\002 \001(\t"
    "B \n\023com.packets.operateB\007operateP\000b\006prot"
    "o3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_Operate_2eproto_deps[1] =
    {
        &::descriptor_table__5fItem_2eproto,
};
static ::absl::once_flag descriptor_table_Operate_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_Operate_2eproto = {
    false,
    false,
    6522,
    descriptor_table_protodef_Operate_2eproto,
    "Operate.proto",
    &descriptor_table_Operate_2eproto_once,
    descriptor_table_Operate_2eproto_deps,
    1,
    53,
    schemas,
    file_default_instances,
    TableStruct_Operate_2eproto::offsets,
    file_level_enum_descriptors_Operate_2eproto,
    file_level_service_descriptors_Operate_2eproto,
};
namespace DC {
namespace Packet {
// ===================================================================

class Operate_Bad_Word_List::_Internal {
 public:
};

Operate_Bad_Word_List::Operate_Bad_Word_List(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_Bad_Word_List)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Bad_Word_List::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_Bad_Word_List& from_msg)
      : badword_{visibility, arena, from.badword_},
        _cached_size_{0} {}

Operate_Bad_Word_List::Operate_Bad_Word_List(
    ::google::protobuf::Arena* arena,
    const Operate_Bad_Word_List& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_Bad_Word_List* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_Bad_Word_List)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Bad_Word_List::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : badword_{visibility, arena},
        _cached_size_{0} {}

inline void Operate_Bad_Word_List::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_Bad_Word_List::~Operate_Bad_Word_List() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_Bad_Word_List)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_Bad_Word_List::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_Bad_Word_List::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_Bad_Word_List_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_Bad_Word_List::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_Bad_Word_List>(),
            ::google::protobuf::Message::GetNewImpl<Operate_Bad_Word_List>(),
            ::google::protobuf::Message::GetClearImpl<Operate_Bad_Word_List>(), &Operate_Bad_Word_List::ByteSizeLong,
                &Operate_Bad_Word_List::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_Bad_Word_List, _impl_._cached_size_),
            false,
        },
        &Operate_Bad_Word_List::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_Bad_Word_List::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 47, 2> Operate_Bad_Word_List::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_Bad_Word_List>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string badWord = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Bad_Word_List, _impl_.badword_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string badWord = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_Bad_Word_List, _impl_.badword_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\37\7\0\0\0\0\0\0"
    "DC.Packet.Operate_Bad_Word_List"
    "badWord"
  }},
};

PROTOBUF_NOINLINE void Operate_Bad_Word_List::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_Bad_Word_List)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.badword_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_Bad_Word_List::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_Bad_Word_List& this_ = static_cast<const Operate_Bad_Word_List&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_Bad_Word_List::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_Bad_Word_List& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_Bad_Word_List)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string badWord = 1;
          for (int i = 0, n = this_._internal_badword_size(); i < n; ++i) {
            const auto& s = this_._internal_badword().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Bad_Word_List.badWord");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_Bad_Word_List)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_Bad_Word_List::ByteSizeLong(const MessageLite& base) {
          const Operate_Bad_Word_List& this_ = static_cast<const Operate_Bad_Word_List&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_Bad_Word_List::ByteSizeLong() const {
          const Operate_Bad_Word_List& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_Bad_Word_List)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string badWord = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_badword().size());
              for (int i = 0, n = this_._internal_badword().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_badword().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_Bad_Word_List::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_Bad_Word_List*>(&to_msg);
  auto& from = static_cast<const Operate_Bad_Word_List&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_Bad_Word_List)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_badword()->MergeFrom(from._internal_badword());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_Bad_Word_List::CopyFrom(const Operate_Bad_Word_List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_Bad_Word_List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_Bad_Word_List::InternalSwap(Operate_Bad_Word_List* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.badword_.InternalSwap(&other->_impl_.badword_);
}

::google::protobuf::Metadata Operate_Bad_Word_List::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_Add_Bad_Word::_Internal {
 public:
};

Operate_Add_Bad_Word::Operate_Add_Bad_Word(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_Add_Bad_Word)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Add_Bad_Word::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_Add_Bad_Word& from_msg)
      : securitycode_(arena, from.securitycode_),
        badword_(arena, from.badword_),
        _cached_size_{0} {}

Operate_Add_Bad_Word::Operate_Add_Bad_Word(
    ::google::protobuf::Arena* arena,
    const Operate_Add_Bad_Word& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_Add_Bad_Word* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_Add_Bad_Word)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Add_Bad_Word::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : securitycode_(arena),
        badword_(arena),
        _cached_size_{0} {}

inline void Operate_Add_Bad_Word::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_Add_Bad_Word::~Operate_Add_Bad_Word() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_Add_Bad_Word)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_Add_Bad_Word::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.securitycode_.Destroy();
  _impl_.badword_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_Add_Bad_Word::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_Add_Bad_Word_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_Add_Bad_Word::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_Add_Bad_Word>(),
            ::google::protobuf::Message::GetNewImpl<Operate_Add_Bad_Word>(),
            ::google::protobuf::Message::GetClearImpl<Operate_Add_Bad_Word>(), &Operate_Add_Bad_Word::ByteSizeLong,
                &Operate_Add_Bad_Word::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_Add_Bad_Word, _impl_._cached_size_),
            false,
        },
        &Operate_Add_Bad_Word::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_Add_Bad_Word::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> Operate_Add_Bad_Word::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_Add_Bad_Word>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string badWord = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Add_Bad_Word, _impl_.badword_)}},
    // string securityCode = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Add_Bad_Word, _impl_.securitycode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string securityCode = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_Add_Bad_Word, _impl_.securitycode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string badWord = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_Add_Bad_Word, _impl_.badword_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\14\7\0\0\0\0\0"
    "DC.Packet.Operate_Add_Bad_Word"
    "securityCode"
    "badWord"
  }},
};

PROTOBUF_NOINLINE void Operate_Add_Bad_Word::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_Add_Bad_Word)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.securitycode_.ClearToEmpty();
  _impl_.badword_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_Add_Bad_Word::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_Add_Bad_Word& this_ = static_cast<const Operate_Add_Bad_Word&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_Add_Bad_Word::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_Add_Bad_Word& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_Add_Bad_Word)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string securityCode = 1;
          if (!this_._internal_securitycode().empty()) {
            const std::string& _s = this_._internal_securitycode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Add_Bad_Word.securityCode");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string badWord = 2;
          if (!this_._internal_badword().empty()) {
            const std::string& _s = this_._internal_badword();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Add_Bad_Word.badWord");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_Add_Bad_Word)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_Add_Bad_Word::ByteSizeLong(const MessageLite& base) {
          const Operate_Add_Bad_Word& this_ = static_cast<const Operate_Add_Bad_Word&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_Add_Bad_Word::ByteSizeLong() const {
          const Operate_Add_Bad_Word& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_Add_Bad_Word)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string securityCode = 1;
            if (!this_._internal_securitycode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_securitycode());
            }
            // string badWord = 2;
            if (!this_._internal_badword().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_badword());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_Add_Bad_Word::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_Add_Bad_Word*>(&to_msg);
  auto& from = static_cast<const Operate_Add_Bad_Word&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_Add_Bad_Word)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_securitycode().empty()) {
    _this->_internal_set_securitycode(from._internal_securitycode());
  }
  if (!from._internal_badword().empty()) {
    _this->_internal_set_badword(from._internal_badword());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_Add_Bad_Word::CopyFrom(const Operate_Add_Bad_Word& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_Add_Bad_Word)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_Add_Bad_Word::InternalSwap(Operate_Add_Bad_Word* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.securitycode_, &other->_impl_.securitycode_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.badword_, &other->_impl_.badword_, arena);
}

::google::protobuf::Metadata Operate_Add_Bad_Word::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_announceMessageInfo::_Internal {
 public:
};

Operate_announceMessageInfo::Operate_announceMessageInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_announceMessageInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_announceMessageInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_announceMessageInfo& from_msg)
      : announcemessage_(arena, from.announcemessage_),
        _cached_size_{0} {}

Operate_announceMessageInfo::Operate_announceMessageInfo(
    ::google::protobuf::Arena* arena,
    const Operate_announceMessageInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_announceMessageInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.nationtype_ = from._impl_.nationtype_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_announceMessageInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_announceMessageInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : announcemessage_(arena),
        _cached_size_{0} {}

inline void Operate_announceMessageInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.nationtype_ = {};
}
Operate_announceMessageInfo::~Operate_announceMessageInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_announceMessageInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_announceMessageInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.announcemessage_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_announceMessageInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_announceMessageInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_announceMessageInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_announceMessageInfo>(),
            ::google::protobuf::Message::GetNewImpl<Operate_announceMessageInfo>(),
            ::google::protobuf::Message::GetClearImpl<Operate_announceMessageInfo>(), &Operate_announceMessageInfo::ByteSizeLong,
                &Operate_announceMessageInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_announceMessageInfo, _impl_._cached_size_),
            false,
        },
        &Operate_announceMessageInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_announceMessageInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2> Operate_announceMessageInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_announceMessageInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string announceMessage = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_announceMessageInfo, _impl_.announcemessage_)}},
    // int32 nationType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_announceMessageInfo, _impl_.nationtype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_announceMessageInfo, _impl_.nationtype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 nationType = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_announceMessageInfo, _impl_.nationtype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string announceMessage = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_announceMessageInfo, _impl_.announcemessage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\0\17\0\0\0\0\0"
    "DC.Packet.Operate_announceMessageInfo"
    "announceMessage"
  }},
};

PROTOBUF_NOINLINE void Operate_announceMessageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_announceMessageInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.announcemessage_.ClearToEmpty();
  _impl_.nationtype_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_announceMessageInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_announceMessageInfo& this_ = static_cast<const Operate_announceMessageInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_announceMessageInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_announceMessageInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_announceMessageInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 nationType = 1;
          if (this_._internal_nationtype() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_nationtype(), target);
          }

          // string announceMessage = 2;
          if (!this_._internal_announcemessage().empty()) {
            const std::string& _s = this_._internal_announcemessage();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_announceMessageInfo.announceMessage");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_announceMessageInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_announceMessageInfo::ByteSizeLong(const MessageLite& base) {
          const Operate_announceMessageInfo& this_ = static_cast<const Operate_announceMessageInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_announceMessageInfo::ByteSizeLong() const {
          const Operate_announceMessageInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_announceMessageInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string announceMessage = 2;
            if (!this_._internal_announcemessage().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_announcemessage());
            }
            // int32 nationType = 1;
            if (this_._internal_nationtype() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_nationtype());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_announceMessageInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_announceMessageInfo*>(&to_msg);
  auto& from = static_cast<const Operate_announceMessageInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_announceMessageInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_announcemessage().empty()) {
    _this->_internal_set_announcemessage(from._internal_announcemessage());
  }
  if (from._internal_nationtype() != 0) {
    _this->_impl_.nationtype_ = from._impl_.nationtype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_announceMessageInfo::CopyFrom(const Operate_announceMessageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_announceMessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_announceMessageInfo::InternalSwap(Operate_announceMessageInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.announcemessage_, &other->_impl_.announcemessage_, arena);
        swap(_impl_.nationtype_, other->_impl_.nationtype_);
}

::google::protobuf::Metadata Operate_announceMessageInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_Add_Announce_Msg::_Internal {
 public:
};

Operate_Add_Announce_Msg::Operate_Add_Announce_Msg(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_Add_Announce_Msg)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Add_Announce_Msg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_Add_Announce_Msg& from_msg)
      : announcelist_{visibility, arena, from.announcelist_},
        securitycode_(arena, from.securitycode_),
        _cached_size_{0} {}

Operate_Add_Announce_Msg::Operate_Add_Announce_Msg(
    ::google::protobuf::Arena* arena,
    const Operate_Add_Announce_Msg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_Add_Announce_Msg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_Add_Announce_Msg)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Add_Announce_Msg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : announcelist_{visibility, arena},
        securitycode_(arena),
        _cached_size_{0} {}

inline void Operate_Add_Announce_Msg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_Add_Announce_Msg::~Operate_Add_Announce_Msg() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_Add_Announce_Msg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_Add_Announce_Msg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.securitycode_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_Add_Announce_Msg::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_Add_Announce_Msg_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_Add_Announce_Msg::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_Add_Announce_Msg>(),
            ::google::protobuf::Message::GetNewImpl<Operate_Add_Announce_Msg>(),
            ::google::protobuf::Message::GetClearImpl<Operate_Add_Announce_Msg>(), &Operate_Add_Announce_Msg::ByteSizeLong,
                &Operate_Add_Announce_Msg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_Add_Announce_Msg, _impl_._cached_size_),
            false,
        },
        &Operate_Add_Announce_Msg::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_Add_Announce_Msg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 55, 2> Operate_Add_Announce_Msg::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_Add_Announce_Msg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.Operate_announceMessageInfo announceList = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Add_Announce_Msg, _impl_.announcelist_)}},
    // string securityCode = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Add_Announce_Msg, _impl_.securitycode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string securityCode = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_Add_Announce_Msg, _impl_.securitycode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .DC.Packet.Operate_announceMessageInfo announceList = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_Add_Announce_Msg, _impl_.announcelist_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_announceMessageInfo>()},
  }}, {{
    "\42\14\0\0\0\0\0\0"
    "DC.Packet.Operate_Add_Announce_Msg"
    "securityCode"
  }},
};

PROTOBUF_NOINLINE void Operate_Add_Announce_Msg::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_Add_Announce_Msg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.announcelist_.Clear();
  _impl_.securitycode_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_Add_Announce_Msg::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_Add_Announce_Msg& this_ = static_cast<const Operate_Add_Announce_Msg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_Add_Announce_Msg::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_Add_Announce_Msg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_Add_Announce_Msg)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string securityCode = 1;
          if (!this_._internal_securitycode().empty()) {
            const std::string& _s = this_._internal_securitycode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Add_Announce_Msg.securityCode");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .DC.Packet.Operate_announceMessageInfo announceList = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_announcelist_size());
               i < n; i++) {
            const auto& repfield = this_._internal_announcelist().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_Add_Announce_Msg)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_Add_Announce_Msg::ByteSizeLong(const MessageLite& base) {
          const Operate_Add_Announce_Msg& this_ = static_cast<const Operate_Add_Announce_Msg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_Add_Announce_Msg::ByteSizeLong() const {
          const Operate_Add_Announce_Msg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_Add_Announce_Msg)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.Operate_announceMessageInfo announceList = 2;
            {
              total_size += 1UL * this_._internal_announcelist_size();
              for (const auto& msg : this_._internal_announcelist()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string securityCode = 1;
            if (!this_._internal_securitycode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_securitycode());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_Add_Announce_Msg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_Add_Announce_Msg*>(&to_msg);
  auto& from = static_cast<const Operate_Add_Announce_Msg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_Add_Announce_Msg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_announcelist()->MergeFrom(
      from._internal_announcelist());
  if (!from._internal_securitycode().empty()) {
    _this->_internal_set_securitycode(from._internal_securitycode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_Add_Announce_Msg::CopyFrom(const Operate_Add_Announce_Msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_Add_Announce_Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_Add_Announce_Msg::InternalSwap(Operate_Add_Announce_Msg* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.announcelist_.InternalSwap(&other->_impl_.announcelist_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.securitycode_, &other->_impl_.securitycode_, arena);
}

::google::protobuf::Metadata Operate_Add_Announce_Msg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_dll_info::_Internal {
 public:
};

Operate_dll_info::Operate_dll_info(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_dll_info)
}
inline PROTOBUF_NDEBUG_INLINE Operate_dll_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_dll_info& from_msg)
      : securitycode_(arena, from.securitycode_),
        dllpath_(arena, from.dllpath_),
        _cached_size_{0} {}

Operate_dll_info::Operate_dll_info(
    ::google::protobuf::Arena* arena,
    const Operate_dll_info& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_dll_info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_dll_info)
}
inline PROTOBUF_NDEBUG_INLINE Operate_dll_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : securitycode_(arena),
        dllpath_(arena),
        _cached_size_{0} {}

inline void Operate_dll_info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_dll_info::~Operate_dll_info() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_dll_info)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_dll_info::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.securitycode_.Destroy();
  _impl_.dllpath_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_dll_info::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_dll_info_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_dll_info::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_dll_info>(),
            ::google::protobuf::Message::GetNewImpl<Operate_dll_info>(),
            ::google::protobuf::Message::GetClearImpl<Operate_dll_info>(), &Operate_dll_info::ByteSizeLong,
                &Operate_dll_info::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_dll_info, _impl_._cached_size_),
            false,
        },
        &Operate_dll_info::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_dll_info::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 54, 2> Operate_dll_info::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_dll_info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string dllPath = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_dll_info, _impl_.dllpath_)}},
    // string securityCode = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_dll_info, _impl_.securitycode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string securityCode = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_dll_info, _impl_.securitycode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string dllPath = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_dll_info, _impl_.dllpath_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\14\7\0\0\0\0\0"
    "DC.Packet.Operate_dll_info"
    "securityCode"
    "dllPath"
  }},
};

PROTOBUF_NOINLINE void Operate_dll_info::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_dll_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.securitycode_.ClearToEmpty();
  _impl_.dllpath_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_dll_info::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_dll_info& this_ = static_cast<const Operate_dll_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_dll_info::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_dll_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_dll_info)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string securityCode = 1;
          if (!this_._internal_securitycode().empty()) {
            const std::string& _s = this_._internal_securitycode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_dll_info.securityCode");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string dllPath = 2;
          if (!this_._internal_dllpath().empty()) {
            const std::string& _s = this_._internal_dllpath();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_dll_info.dllPath");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_dll_info)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_dll_info::ByteSizeLong(const MessageLite& base) {
          const Operate_dll_info& this_ = static_cast<const Operate_dll_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_dll_info::ByteSizeLong() const {
          const Operate_dll_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_dll_info)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string securityCode = 1;
            if (!this_._internal_securitycode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_securitycode());
            }
            // string dllPath = 2;
            if (!this_._internal_dllpath().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_dllpath());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_dll_info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_dll_info*>(&to_msg);
  auto& from = static_cast<const Operate_dll_info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_dll_info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_securitycode().empty()) {
    _this->_internal_set_securitycode(from._internal_securitycode());
  }
  if (!from._internal_dllpath().empty()) {
    _this->_internal_set_dllpath(from._internal_dllpath());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_dll_info::CopyFrom(const Operate_dll_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_dll_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_dll_info::InternalSwap(Operate_dll_info* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.securitycode_, &other->_impl_.securitycode_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dllpath_, &other->_impl_.dllpath_, arena);
}

::google::protobuf::Metadata Operate_dll_info::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_dll_list::_Internal {
 public:
};

Operate_dll_list::Operate_dll_list(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_dll_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_dll_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_dll_list& from_msg)
      : dlls_{visibility, arena, from.dlls_},
        _cached_size_{0} {}

Operate_dll_list::Operate_dll_list(
    ::google::protobuf::Arena* arena,
    const Operate_dll_list& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_dll_list* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_dll_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_dll_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : dlls_{visibility, arena},
        _cached_size_{0} {}

inline void Operate_dll_list::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_dll_list::~Operate_dll_list() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_dll_list)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_dll_list::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_dll_list::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_dll_list_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_dll_list::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_dll_list>(),
            ::google::protobuf::Message::GetNewImpl<Operate_dll_list>(),
            ::google::protobuf::Message::GetClearImpl<Operate_dll_list>(), &Operate_dll_list::ByteSizeLong,
                &Operate_dll_list::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_dll_list, _impl_._cached_size_),
            false,
        },
        &Operate_dll_list::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_dll_list::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 39, 2> Operate_dll_list::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_dll_list>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string dlls = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_dll_list, _impl_.dlls_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string dlls = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_dll_list, _impl_.dlls_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\32\4\0\0\0\0\0\0"
    "DC.Packet.Operate_dll_list"
    "dlls"
  }},
};

PROTOBUF_NOINLINE void Operate_dll_list::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_dll_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dlls_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_dll_list::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_dll_list& this_ = static_cast<const Operate_dll_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_dll_list::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_dll_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_dll_list)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string dlls = 1;
          for (int i = 0, n = this_._internal_dlls_size(); i < n; ++i) {
            const auto& s = this_._internal_dlls().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_dll_list.dlls");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_dll_list)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_dll_list::ByteSizeLong(const MessageLite& base) {
          const Operate_dll_list& this_ = static_cast<const Operate_dll_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_dll_list::ByteSizeLong() const {
          const Operate_dll_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_dll_list)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string dlls = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_dlls().size());
              for (int i = 0, n = this_._internal_dlls().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_dlls().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_dll_list::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_dll_list*>(&to_msg);
  auto& from = static_cast<const Operate_dll_list&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_dll_list)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dlls()->MergeFrom(from._internal_dlls());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_dll_list::CopyFrom(const Operate_dll_list& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_dll_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_dll_list::InternalSwap(Operate_dll_list* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dlls_.InternalSwap(&other->_impl_.dlls_);
}

::google::protobuf::Metadata Operate_dll_list::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_userInfo::_Internal {
 public:
};

Operate_userInfo::Operate_userInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_userInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_userInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_userInfo& from_msg)
      : nicknamelist_{visibility, arena, from.nicknamelist_},
        _cached_size_{0} {}

Operate_userInfo::Operate_userInfo(
    ::google::protobuf::Arena* arena,
    const Operate_userInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_userInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.accountid_ = from._impl_.accountid_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_userInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_userInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : nicknamelist_{visibility, arena},
        _cached_size_{0} {}

inline void Operate_userInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accountid_ = {};
}
Operate_userInfo::~Operate_userInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_userInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_userInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_userInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_userInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_userInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_userInfo>(),
            ::google::protobuf::Message::GetNewImpl<Operate_userInfo>(),
            ::google::protobuf::Message::GetClearImpl<Operate_userInfo>(), &Operate_userInfo::ByteSizeLong,
                &Operate_userInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_userInfo, _impl_._cached_size_),
            false,
        },
        &Operate_userInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_userInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> Operate_userInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_userInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string nicknameList = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_userInfo, _impl_.nicknamelist_)}},
    // uint64 accountId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_userInfo, _impl_.accountid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_userInfo, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 accountId = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_userInfo, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated string nicknameList = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_userInfo, _impl_.nicknamelist_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\32\0\14\0\0\0\0\0"
    "DC.Packet.Operate_userInfo"
    "nicknameList"
  }},
};

PROTOBUF_NOINLINE void Operate_userInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_userInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nicknamelist_.Clear();
  _impl_.accountid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_userInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_userInfo& this_ = static_cast<const Operate_userInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_userInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_userInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_userInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 accountId = 1;
          if (this_._internal_accountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_accountid(), target);
          }

          // repeated string nicknameList = 2;
          for (int i = 0, n = this_._internal_nicknamelist_size(); i < n; ++i) {
            const auto& s = this_._internal_nicknamelist().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_userInfo.nicknameList");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_userInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_userInfo::ByteSizeLong(const MessageLite& base) {
          const Operate_userInfo& this_ = static_cast<const Operate_userInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_userInfo::ByteSizeLong() const {
          const Operate_userInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_userInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string nicknameList = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_nicknamelist().size());
              for (int i = 0, n = this_._internal_nicknamelist().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_nicknamelist().Get(i));
              }
            }
          }
           {
            // uint64 accountId = 1;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_accountid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_userInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_userInfo*>(&to_msg);
  auto& from = static_cast<const Operate_userInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_userInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_nicknamelist()->MergeFrom(from._internal_nicknamelist());
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_userInfo::CopyFrom(const Operate_userInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_userInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_userInfo::InternalSwap(Operate_userInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nicknamelist_.InternalSwap(&other->_impl_.nicknamelist_);
        swap(_impl_.accountid_, other->_impl_.accountid_);
}

::google::protobuf::Metadata Operate_userInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HackLogInfo::_Internal {
 public:
};

HackLogInfo::HackLogInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.HackLogInfo)
}
inline PROTOBUF_NDEBUG_INLINE HackLogInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::HackLogInfo& from_msg)
      : logidx_(arena, from.logidx_),
        accountid_(arena, from.accountid_),
        characterid_(arena, from.characterid_),
        nickname_(arena, from.nickname_),
        reason_(arena, from.reason_),
        registertime_(arena, from.registertime_),
        _cached_size_{0} {}

HackLogInfo::HackLogInfo(
    ::google::protobuf::Arena* arena,
    const HackLogInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HackLogInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.HackLogInfo)
}
inline PROTOBUF_NDEBUG_INLINE HackLogInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : logidx_(arena),
        accountid_(arena),
        characterid_(arena),
        nickname_(arena),
        reason_(arena),
        registertime_(arena),
        _cached_size_{0} {}

inline void HackLogInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HackLogInfo::~HackLogInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.HackLogInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HackLogInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.logidx_.Destroy();
  _impl_.accountid_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.reason_.Destroy();
  _impl_.registertime_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    HackLogInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_HackLogInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &HackLogInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<HackLogInfo>(),
            ::google::protobuf::Message::GetNewImpl<HackLogInfo>(),
            ::google::protobuf::Message::GetClearImpl<HackLogInfo>(), &HackLogInfo::ByteSizeLong,
                &HackLogInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(HackLogInfo, _impl_._cached_size_),
            false,
        },
        &HackLogInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* HackLogInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 82, 2> HackLogInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::HackLogInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string logIdx = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HackLogInfo, _impl_.logidx_)}},
    // string accountId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HackLogInfo, _impl_.accountid_)}},
    // string characterId = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(HackLogInfo, _impl_.characterid_)}},
    // string nickname = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(HackLogInfo, _impl_.nickname_)}},
    // string reason = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(HackLogInfo, _impl_.reason_)}},
    // string registerTime = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(HackLogInfo, _impl_.registertime_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string logIdx = 1;
    {PROTOBUF_FIELD_OFFSET(HackLogInfo, _impl_.logidx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string accountId = 2;
    {PROTOBUF_FIELD_OFFSET(HackLogInfo, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 3;
    {PROTOBUF_FIELD_OFFSET(HackLogInfo, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string nickname = 4;
    {PROTOBUF_FIELD_OFFSET(HackLogInfo, _impl_.nickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reason = 5;
    {PROTOBUF_FIELD_OFFSET(HackLogInfo, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string registerTime = 6;
    {PROTOBUF_FIELD_OFFSET(HackLogInfo, _impl_.registertime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\6\11\13\10\6\14\0"
    "DC.Packet.HackLogInfo"
    "logIdx"
    "accountId"
    "characterId"
    "nickname"
    "reason"
    "registerTime"
  }},
};

PROTOBUF_NOINLINE void HackLogInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.HackLogInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.logidx_.ClearToEmpty();
  _impl_.accountid_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.nickname_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  _impl_.registertime_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HackLogInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HackLogInfo& this_ = static_cast<const HackLogInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HackLogInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HackLogInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.HackLogInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string logIdx = 1;
          if (!this_._internal_logidx().empty()) {
            const std::string& _s = this_._internal_logidx();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.HackLogInfo.logIdx");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string accountId = 2;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.HackLogInfo.accountId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string characterId = 3;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.HackLogInfo.characterId");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string nickname = 4;
          if (!this_._internal_nickname().empty()) {
            const std::string& _s = this_._internal_nickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.HackLogInfo.nickname");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string reason = 5;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.HackLogInfo.reason");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string registerTime = 6;
          if (!this_._internal_registertime().empty()) {
            const std::string& _s = this_._internal_registertime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.HackLogInfo.registerTime");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.HackLogInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HackLogInfo::ByteSizeLong(const MessageLite& base) {
          const HackLogInfo& this_ = static_cast<const HackLogInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HackLogInfo::ByteSizeLong() const {
          const HackLogInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.HackLogInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string logIdx = 1;
            if (!this_._internal_logidx().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_logidx());
            }
            // string accountId = 2;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string characterId = 3;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // string nickname = 4;
            if (!this_._internal_nickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_nickname());
            }
            // string reason = 5;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // string registerTime = 6;
            if (!this_._internal_registertime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_registertime());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HackLogInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HackLogInfo*>(&to_msg);
  auto& from = static_cast<const HackLogInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.HackLogInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_logidx().empty()) {
    _this->_internal_set_logidx(from._internal_logidx());
  }
  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (!from._internal_registertime().empty()) {
    _this->_internal_set_registertime(from._internal_registertime());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HackLogInfo::CopyFrom(const HackLogInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.HackLogInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HackLogInfo::InternalSwap(HackLogInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.logidx_, &other->_impl_.logidx_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.registertime_, &other->_impl_.registertime_, arena);
}

::google::protobuf::Metadata HackLogInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_Hacklog::_Internal {
 public:
};

Operate_Hacklog::Operate_Hacklog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_Hacklog)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Hacklog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_Hacklog& from_msg)
      : infos_{visibility, arena, from.infos_},
        _cached_size_{0} {}

Operate_Hacklog::Operate_Hacklog(
    ::google::protobuf::Arena* arena,
    const Operate_Hacklog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_Hacklog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_Hacklog)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Hacklog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : infos_{visibility, arena},
        _cached_size_{0} {}

inline void Operate_Hacklog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_Hacklog::~Operate_Hacklog() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_Hacklog)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_Hacklog::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_Hacklog::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_Hacklog_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_Hacklog::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_Hacklog>(),
            ::google::protobuf::Message::GetNewImpl<Operate_Hacklog>(),
            ::google::protobuf::Message::GetClearImpl<Operate_Hacklog>(), &Operate_Hacklog::ByteSizeLong,
                &Operate_Hacklog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_Hacklog, _impl_._cached_size_),
            false,
        },
        &Operate_Hacklog::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_Hacklog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Operate_Hacklog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_Hacklog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.HackLogInfo infos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Hacklog, _impl_.infos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.HackLogInfo infos = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_Hacklog, _impl_.infos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::HackLogInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Operate_Hacklog::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_Hacklog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.infos_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_Hacklog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_Hacklog& this_ = static_cast<const Operate_Hacklog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_Hacklog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_Hacklog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_Hacklog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.HackLogInfo infos = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_infos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_infos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_Hacklog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_Hacklog::ByteSizeLong(const MessageLite& base) {
          const Operate_Hacklog& this_ = static_cast<const Operate_Hacklog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_Hacklog::ByteSizeLong() const {
          const Operate_Hacklog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_Hacklog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.HackLogInfo infos = 1;
            {
              total_size += 1UL * this_._internal_infos_size();
              for (const auto& msg : this_._internal_infos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_Hacklog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_Hacklog*>(&to_msg);
  auto& from = static_cast<const Operate_Hacklog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_Hacklog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infos()->MergeFrom(
      from._internal_infos());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_Hacklog::CopyFrom(const Operate_Hacklog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_Hacklog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_Hacklog::InternalSwap(Operate_Hacklog* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.infos_.InternalSwap(&other->_impl_.infos_);
}

::google::protobuf::Metadata Operate_Hacklog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_Ban_Report_User::_Internal {
 public:
};

Operate_Ban_Report_User::Operate_Ban_Report_User(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_Ban_Report_User)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Ban_Report_User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_Ban_Report_User& from_msg)
      : securitycode_(arena, from.securitycode_),
        reportid_(arena, from.reportid_),
        nickname_(arena, from.nickname_),
        banreason_(arena, from.banreason_),
        _cached_size_{0} {}

Operate_Ban_Report_User::Operate_Ban_Report_User(
    ::google::protobuf::Arena* arena,
    const Operate_Ban_Report_User& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_Ban_Report_User* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.bantime_min_ = from._impl_.bantime_min_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_Ban_Report_User)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Ban_Report_User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : securitycode_(arena),
        reportid_(arena),
        nickname_(arena),
        banreason_(arena),
        _cached_size_{0} {}

inline void Operate_Ban_Report_User::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.bantime_min_ = {};
}
Operate_Ban_Report_User::~Operate_Ban_Report_User() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_Ban_Report_User)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_Ban_Report_User::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.securitycode_.Destroy();
  _impl_.reportid_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.banreason_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_Ban_Report_User::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_Ban_Report_User_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_Ban_Report_User::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_Ban_Report_User>(),
            ::google::protobuf::Message::GetNewImpl<Operate_Ban_Report_User>(),
            ::google::protobuf::Message::GetClearImpl<Operate_Ban_Report_User>(), &Operate_Ban_Report_User::ByteSizeLong,
                &Operate_Ban_Report_User::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_Ban_Report_User, _impl_._cached_size_),
            false,
        },
        &Operate_Ban_Report_User::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_Ban_Report_User::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 79, 2> Operate_Ban_Report_User::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_Ban_Report_User>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string securityCode = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_Report_User, _impl_.securitycode_)}},
    // string reportId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_Report_User, _impl_.reportid_)}},
    // string nickName = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_Report_User, _impl_.nickname_)}},
    // uint32 banTime_min = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_Ban_Report_User, _impl_.bantime_min_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_Report_User, _impl_.bantime_min_)}},
    // string banReason = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_Report_User, _impl_.banreason_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string securityCode = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_Report_User, _impl_.securitycode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reportId = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_Report_User, _impl_.reportid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string nickName = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_Report_User, _impl_.nickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 banTime_min = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_Report_User, _impl_.bantime_min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string banReason = 5;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_Report_User, _impl_.banreason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\14\10\10\0\11\0\0"
    "DC.Packet.Operate_Ban_Report_User"
    "securityCode"
    "reportId"
    "nickName"
    "banReason"
  }},
};

PROTOBUF_NOINLINE void Operate_Ban_Report_User::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_Ban_Report_User)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.securitycode_.ClearToEmpty();
  _impl_.reportid_.ClearToEmpty();
  _impl_.nickname_.ClearToEmpty();
  _impl_.banreason_.ClearToEmpty();
  _impl_.bantime_min_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_Ban_Report_User::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_Ban_Report_User& this_ = static_cast<const Operate_Ban_Report_User&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_Ban_Report_User::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_Ban_Report_User& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_Ban_Report_User)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string securityCode = 1;
          if (!this_._internal_securitycode().empty()) {
            const std::string& _s = this_._internal_securitycode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Ban_Report_User.securityCode");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string reportId = 2;
          if (!this_._internal_reportid().empty()) {
            const std::string& _s = this_._internal_reportid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Ban_Report_User.reportId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string nickName = 3;
          if (!this_._internal_nickname().empty()) {
            const std::string& _s = this_._internal_nickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Ban_Report_User.nickName");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint32 banTime_min = 4;
          if (this_._internal_bantime_min() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_bantime_min(), target);
          }

          // string banReason = 5;
          if (!this_._internal_banreason().empty()) {
            const std::string& _s = this_._internal_banreason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Ban_Report_User.banReason");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_Ban_Report_User)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_Ban_Report_User::ByteSizeLong(const MessageLite& base) {
          const Operate_Ban_Report_User& this_ = static_cast<const Operate_Ban_Report_User&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_Ban_Report_User::ByteSizeLong() const {
          const Operate_Ban_Report_User& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_Ban_Report_User)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string securityCode = 1;
            if (!this_._internal_securitycode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_securitycode());
            }
            // string reportId = 2;
            if (!this_._internal_reportid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reportid());
            }
            // string nickName = 3;
            if (!this_._internal_nickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_nickname());
            }
            // string banReason = 5;
            if (!this_._internal_banreason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_banreason());
            }
            // uint32 banTime_min = 4;
            if (this_._internal_bantime_min() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_bantime_min());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_Ban_Report_User::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_Ban_Report_User*>(&to_msg);
  auto& from = static_cast<const Operate_Ban_Report_User&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_Ban_Report_User)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_securitycode().empty()) {
    _this->_internal_set_securitycode(from._internal_securitycode());
  }
  if (!from._internal_reportid().empty()) {
    _this->_internal_set_reportid(from._internal_reportid());
  }
  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_banreason().empty()) {
    _this->_internal_set_banreason(from._internal_banreason());
  }
  if (from._internal_bantime_min() != 0) {
    _this->_impl_.bantime_min_ = from._impl_.bantime_min_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_Ban_Report_User::CopyFrom(const Operate_Ban_Report_User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_Ban_Report_User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_Ban_Report_User::InternalSwap(Operate_Ban_Report_User* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.securitycode_, &other->_impl_.securitycode_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reportid_, &other->_impl_.reportid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.banreason_, &other->_impl_.banreason_, arena);
        swap(_impl_.bantime_min_, other->_impl_.bantime_min_);
}

::google::protobuf::Metadata Operate_Ban_Report_User::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_hack_report_list::_Internal {
 public:
};

Operate_hack_report_list::Operate_hack_report_list(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_hack_report_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_hack_report_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_hack_report_list& from_msg)
      : securitycode_(arena, from.securitycode_),
        _cached_size_{0} {}

Operate_hack_report_list::Operate_hack_report_list(
    ::google::protobuf::Arena* arena,
    const Operate_hack_report_list& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_hack_report_list* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_hack_report_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_hack_report_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : securitycode_(arena),
        _cached_size_{0} {}

inline void Operate_hack_report_list::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_hack_report_list::~Operate_hack_report_list() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_hack_report_list)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_hack_report_list::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.securitycode_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_hack_report_list::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_hack_report_list_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_hack_report_list::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_hack_report_list>(),
            ::google::protobuf::Message::GetNewImpl<Operate_hack_report_list>(),
            ::google::protobuf::Message::GetClearImpl<Operate_hack_report_list>(), &Operate_hack_report_list::ByteSizeLong,
                &Operate_hack_report_list::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_hack_report_list, _impl_._cached_size_),
            false,
        },
        &Operate_hack_report_list::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_hack_report_list::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 55, 2> Operate_hack_report_list::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_hack_report_list>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string securityCode = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_hack_report_list, _impl_.securitycode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string securityCode = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_hack_report_list, _impl_.securitycode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\14\0\0\0\0\0\0"
    "DC.Packet.Operate_hack_report_list"
    "securityCode"
  }},
};

PROTOBUF_NOINLINE void Operate_hack_report_list::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_hack_report_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.securitycode_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_hack_report_list::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_hack_report_list& this_ = static_cast<const Operate_hack_report_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_hack_report_list::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_hack_report_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_hack_report_list)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string securityCode = 1;
          if (!this_._internal_securitycode().empty()) {
            const std::string& _s = this_._internal_securitycode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_hack_report_list.securityCode");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_hack_report_list)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_hack_report_list::ByteSizeLong(const MessageLite& base) {
          const Operate_hack_report_list& this_ = static_cast<const Operate_hack_report_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_hack_report_list::ByteSizeLong() const {
          const Operate_hack_report_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_hack_report_list)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string securityCode = 1;
            if (!this_._internal_securitycode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_securitycode());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_hack_report_list::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_hack_report_list*>(&to_msg);
  auto& from = static_cast<const Operate_hack_report_list&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_hack_report_list)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_securitycode().empty()) {
    _this->_internal_set_securitycode(from._internal_securitycode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_hack_report_list::CopyFrom(const Operate_hack_report_list& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_hack_report_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_hack_report_list::InternalSwap(Operate_hack_report_list* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.securitycode_, &other->_impl_.securitycode_, arena);
}

::google::protobuf::Metadata Operate_hack_report_list::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_iron_shield_list::_Internal {
 public:
};

Operate_iron_shield_list::Operate_iron_shield_list(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_iron_shield_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_iron_shield_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_iron_shield_list& from_msg)
      : securitycode_(arena, from.securitycode_),
        _cached_size_{0} {}

Operate_iron_shield_list::Operate_iron_shield_list(
    ::google::protobuf::Arena* arena,
    const Operate_iron_shield_list& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_iron_shield_list* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_iron_shield_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_iron_shield_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : securitycode_(arena),
        _cached_size_{0} {}

inline void Operate_iron_shield_list::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_iron_shield_list::~Operate_iron_shield_list() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_iron_shield_list)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_iron_shield_list::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.securitycode_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_iron_shield_list::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_iron_shield_list_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_iron_shield_list::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_iron_shield_list>(),
            ::google::protobuf::Message::GetNewImpl<Operate_iron_shield_list>(),
            ::google::protobuf::Message::GetClearImpl<Operate_iron_shield_list>(), &Operate_iron_shield_list::ByteSizeLong,
                &Operate_iron_shield_list::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_iron_shield_list, _impl_._cached_size_),
            false,
        },
        &Operate_iron_shield_list::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_iron_shield_list::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 55, 2> Operate_iron_shield_list::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_iron_shield_list>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string securityCode = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_iron_shield_list, _impl_.securitycode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string securityCode = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_iron_shield_list, _impl_.securitycode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\14\0\0\0\0\0\0"
    "DC.Packet.Operate_iron_shield_list"
    "securityCode"
  }},
};

PROTOBUF_NOINLINE void Operate_iron_shield_list::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_iron_shield_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.securitycode_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_iron_shield_list::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_iron_shield_list& this_ = static_cast<const Operate_iron_shield_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_iron_shield_list::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_iron_shield_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_iron_shield_list)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string securityCode = 1;
          if (!this_._internal_securitycode().empty()) {
            const std::string& _s = this_._internal_securitycode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_iron_shield_list.securityCode");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_iron_shield_list)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_iron_shield_list::ByteSizeLong(const MessageLite& base) {
          const Operate_iron_shield_list& this_ = static_cast<const Operate_iron_shield_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_iron_shield_list::ByteSizeLong() const {
          const Operate_iron_shield_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_iron_shield_list)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string securityCode = 1;
            if (!this_._internal_securitycode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_securitycode());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_iron_shield_list::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_iron_shield_list*>(&to_msg);
  auto& from = static_cast<const Operate_iron_shield_list&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_iron_shield_list)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_securitycode().empty()) {
    _this->_internal_set_securitycode(from._internal_securitycode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_iron_shield_list::CopyFrom(const Operate_iron_shield_list& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_iron_shield_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_iron_shield_list::InternalSwap(Operate_iron_shield_list* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.securitycode_, &other->_impl_.securitycode_, arena);
}

::google::protobuf::Metadata Operate_iron_shield_list::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_add_hardware_ban::_Internal {
 public:
};

Operate_add_hardware_ban::Operate_add_hardware_ban(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_add_hardware_ban)
}
inline PROTOBUF_NDEBUG_INLINE Operate_add_hardware_ban::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_add_hardware_ban& from_msg)
      : securitycode_(arena, from.securitycode_),
        hardwareid_(arena, from.hardwareid_),
        _cached_size_{0} {}

Operate_add_hardware_ban::Operate_add_hardware_ban(
    ::google::protobuf::Arena* arena,
    const Operate_add_hardware_ban& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_add_hardware_ban* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_add_hardware_ban)
}
inline PROTOBUF_NDEBUG_INLINE Operate_add_hardware_ban::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : securitycode_(arena),
        hardwareid_(arena),
        _cached_size_{0} {}

inline void Operate_add_hardware_ban::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_add_hardware_ban::~Operate_add_hardware_ban() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_add_hardware_ban)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_add_hardware_ban::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.securitycode_.Destroy();
  _impl_.hardwareid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_add_hardware_ban::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_add_hardware_ban_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_add_hardware_ban::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_add_hardware_ban>(),
            ::google::protobuf::Message::GetNewImpl<Operate_add_hardware_ban>(),
            ::google::protobuf::Message::GetClearImpl<Operate_add_hardware_ban>(), &Operate_add_hardware_ban::ByteSizeLong,
                &Operate_add_hardware_ban::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_add_hardware_ban, _impl_._cached_size_),
            false,
        },
        &Operate_add_hardware_ban::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_add_hardware_ban::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 65, 2> Operate_add_hardware_ban::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_add_hardware_ban>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string hardwareId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_add_hardware_ban, _impl_.hardwareid_)}},
    // string securityCode = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_add_hardware_ban, _impl_.securitycode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string securityCode = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_add_hardware_ban, _impl_.securitycode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string hardwareId = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_add_hardware_ban, _impl_.hardwareid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\14\12\0\0\0\0\0"
    "DC.Packet.Operate_add_hardware_ban"
    "securityCode"
    "hardwareId"
  }},
};

PROTOBUF_NOINLINE void Operate_add_hardware_ban::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_add_hardware_ban)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.securitycode_.ClearToEmpty();
  _impl_.hardwareid_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_add_hardware_ban::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_add_hardware_ban& this_ = static_cast<const Operate_add_hardware_ban&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_add_hardware_ban::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_add_hardware_ban& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_add_hardware_ban)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string securityCode = 1;
          if (!this_._internal_securitycode().empty()) {
            const std::string& _s = this_._internal_securitycode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_add_hardware_ban.securityCode");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string hardwareId = 2;
          if (!this_._internal_hardwareid().empty()) {
            const std::string& _s = this_._internal_hardwareid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_add_hardware_ban.hardwareId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_add_hardware_ban)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_add_hardware_ban::ByteSizeLong(const MessageLite& base) {
          const Operate_add_hardware_ban& this_ = static_cast<const Operate_add_hardware_ban&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_add_hardware_ban::ByteSizeLong() const {
          const Operate_add_hardware_ban& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_add_hardware_ban)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string securityCode = 1;
            if (!this_._internal_securitycode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_securitycode());
            }
            // string hardwareId = 2;
            if (!this_._internal_hardwareid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hardwareid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_add_hardware_ban::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_add_hardware_ban*>(&to_msg);
  auto& from = static_cast<const Operate_add_hardware_ban&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_add_hardware_ban)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_securitycode().empty()) {
    _this->_internal_set_securitycode(from._internal_securitycode());
  }
  if (!from._internal_hardwareid().empty()) {
    _this->_internal_set_hardwareid(from._internal_hardwareid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_add_hardware_ban::CopyFrom(const Operate_add_hardware_ban& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_add_hardware_ban)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_add_hardware_ban::InternalSwap(Operate_add_hardware_ban* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.securitycode_, &other->_impl_.securitycode_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hardwareid_, &other->_impl_.hardwareid_, arena);
}

::google::protobuf::Metadata Operate_add_hardware_ban::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_ban_history::_Internal {
 public:
};

Operate_ban_history::Operate_ban_history(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_ban_history)
}
inline PROTOBUF_NDEBUG_INLINE Operate_ban_history::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_ban_history& from_msg)
      : securitycode_(arena, from.securitycode_),
        nickname_(arena, from.nickname_),
        _cached_size_{0} {}

Operate_ban_history::Operate_ban_history(
    ::google::protobuf::Arena* arena,
    const Operate_ban_history& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_ban_history* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_ban_history)
}
inline PROTOBUF_NDEBUG_INLINE Operate_ban_history::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : securitycode_(arena),
        nickname_(arena),
        _cached_size_{0} {}

inline void Operate_ban_history::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_ban_history::~Operate_ban_history() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_ban_history)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_ban_history::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.securitycode_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_ban_history::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_ban_history_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_ban_history::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_ban_history>(),
            ::google::protobuf::Message::GetNewImpl<Operate_ban_history>(),
            ::google::protobuf::Message::GetClearImpl<Operate_ban_history>(), &Operate_ban_history::ByteSizeLong,
                &Operate_ban_history::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_ban_history, _impl_._cached_size_),
            false,
        },
        &Operate_ban_history::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_ban_history::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> Operate_ban_history::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_ban_history>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string nickname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_ban_history, _impl_.nickname_)}},
    // string securityCode = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_ban_history, _impl_.securitycode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string securityCode = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_ban_history, _impl_.securitycode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string nickname = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_ban_history, _impl_.nickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\14\10\0\0\0\0\0"
    "DC.Packet.Operate_ban_history"
    "securityCode"
    "nickname"
  }},
};

PROTOBUF_NOINLINE void Operate_ban_history::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_ban_history)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.securitycode_.ClearToEmpty();
  _impl_.nickname_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_ban_history::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_ban_history& this_ = static_cast<const Operate_ban_history&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_ban_history::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_ban_history& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_ban_history)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string securityCode = 1;
          if (!this_._internal_securitycode().empty()) {
            const std::string& _s = this_._internal_securitycode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_ban_history.securityCode");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string nickname = 2;
          if (!this_._internal_nickname().empty()) {
            const std::string& _s = this_._internal_nickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_ban_history.nickname");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_ban_history)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_ban_history::ByteSizeLong(const MessageLite& base) {
          const Operate_ban_history& this_ = static_cast<const Operate_ban_history&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_ban_history::ByteSizeLong() const {
          const Operate_ban_history& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_ban_history)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string securityCode = 1;
            if (!this_._internal_securitycode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_securitycode());
            }
            // string nickname = 2;
            if (!this_._internal_nickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_nickname());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_ban_history::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_ban_history*>(&to_msg);
  auto& from = static_cast<const Operate_ban_history&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_ban_history)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_securitycode().empty()) {
    _this->_internal_set_securitycode(from._internal_securitycode());
  }
  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_ban_history::CopyFrom(const Operate_ban_history& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_ban_history)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_ban_history::InternalSwap(Operate_ban_history* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.securitycode_, &other->_impl_.securitycode_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
}

::google::protobuf::Metadata Operate_ban_history::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ban_info::_Internal {
 public:
};

ban_info::ban_info(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.ban_info)
}
inline PROTOBUF_NDEBUG_INLINE ban_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::ban_info& from_msg)
      : accountid_(arena, from.accountid_),
        bantype_(arena, from.bantype_),
        comment_(arena, from.comment_),
        registertime_(arena, from.registertime_),
        _cached_size_{0} {}

ban_info::ban_info(
    ::google::protobuf::Arena* arena,
    const ban_info& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ban_info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.ban_info)
}
inline PROTOBUF_NDEBUG_INLINE ban_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accountid_(arena),
        bantype_(arena),
        comment_(arena),
        registertime_(arena),
        _cached_size_{0} {}

inline void ban_info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ban_info::~ban_info() {
  // @@protoc_insertion_point(destructor:DC.Packet.ban_info)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ban_info::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.bantype_.Destroy();
  _impl_.comment_.Destroy();
  _impl_.registertime_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ban_info::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ban_info_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ban_info::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ban_info>(),
            ::google::protobuf::Message::GetNewImpl<ban_info>(),
            ::google::protobuf::Message::GetClearImpl<ban_info>(), &ban_info::ByteSizeLong,
                &ban_info::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ban_info, _impl_._cached_size_),
            false,
        },
        &ban_info::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ban_info::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 62, 2> ban_info::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::ban_info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string registerTime = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ban_info, _impl_.registertime_)}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ban_info, _impl_.accountid_)}},
    // string banType = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ban_info, _impl_.bantype_)}},
    // string comment = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ban_info, _impl_.comment_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(ban_info, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string banType = 2;
    {PROTOBUF_FIELD_OFFSET(ban_info, _impl_.bantype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string comment = 3;
    {PROTOBUF_FIELD_OFFSET(ban_info, _impl_.comment_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string registerTime = 4;
    {PROTOBUF_FIELD_OFFSET(ban_info, _impl_.registertime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\11\7\7\14\0\0\0"
    "DC.Packet.ban_info"
    "accountId"
    "banType"
    "comment"
    "registerTime"
  }},
};

PROTOBUF_NOINLINE void ban_info::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.ban_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.bantype_.ClearToEmpty();
  _impl_.comment_.ClearToEmpty();
  _impl_.registertime_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ban_info::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ban_info& this_ = static_cast<const ban_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ban_info::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ban_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.ban_info)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.ban_info.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string banType = 2;
          if (!this_._internal_bantype().empty()) {
            const std::string& _s = this_._internal_bantype();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.ban_info.banType");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string comment = 3;
          if (!this_._internal_comment().empty()) {
            const std::string& _s = this_._internal_comment();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.ban_info.comment");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string registerTime = 4;
          if (!this_._internal_registertime().empty()) {
            const std::string& _s = this_._internal_registertime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.ban_info.registerTime");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.ban_info)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ban_info::ByteSizeLong(const MessageLite& base) {
          const ban_info& this_ = static_cast<const ban_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ban_info::ByteSizeLong() const {
          const ban_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.ban_info)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string banType = 2;
            if (!this_._internal_bantype().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_bantype());
            }
            // string comment = 3;
            if (!this_._internal_comment().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_comment());
            }
            // string registerTime = 4;
            if (!this_._internal_registertime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_registertime());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ban_info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ban_info*>(&to_msg);
  auto& from = static_cast<const ban_info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.ban_info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_bantype().empty()) {
    _this->_internal_set_bantype(from._internal_bantype());
  }
  if (!from._internal_comment().empty()) {
    _this->_internal_set_comment(from._internal_comment());
  }
  if (!from._internal_registertime().empty()) {
    _this->_internal_set_registertime(from._internal_registertime());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ban_info::CopyFrom(const ban_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.ban_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ban_info::InternalSwap(ban_info* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bantype_, &other->_impl_.bantype_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.comment_, &other->_impl_.comment_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.registertime_, &other->_impl_.registertime_, arena);
}

::google::protobuf::Metadata ban_info::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_ban_info_list::_Internal {
 public:
};

Operate_ban_info_list::Operate_ban_info_list(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_ban_info_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_ban_info_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_ban_info_list& from_msg)
      : infos_{visibility, arena, from.infos_},
        _cached_size_{0} {}

Operate_ban_info_list::Operate_ban_info_list(
    ::google::protobuf::Arena* arena,
    const Operate_ban_info_list& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_ban_info_list* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_ban_info_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_ban_info_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : infos_{visibility, arena},
        _cached_size_{0} {}

inline void Operate_ban_info_list::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_ban_info_list::~Operate_ban_info_list() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_ban_info_list)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_ban_info_list::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_ban_info_list::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_ban_info_list_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_ban_info_list::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_ban_info_list>(),
            ::google::protobuf::Message::GetNewImpl<Operate_ban_info_list>(),
            ::google::protobuf::Message::GetClearImpl<Operate_ban_info_list>(), &Operate_ban_info_list::ByteSizeLong,
                &Operate_ban_info_list::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_ban_info_list, _impl_._cached_size_),
            false,
        },
        &Operate_ban_info_list::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_ban_info_list::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Operate_ban_info_list::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_ban_info_list>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.ban_info infos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_ban_info_list, _impl_.infos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.ban_info infos = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_ban_info_list, _impl_.infos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::ban_info>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Operate_ban_info_list::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_ban_info_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.infos_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_ban_info_list::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_ban_info_list& this_ = static_cast<const Operate_ban_info_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_ban_info_list::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_ban_info_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_ban_info_list)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.ban_info infos = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_infos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_infos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_ban_info_list)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_ban_info_list::ByteSizeLong(const MessageLite& base) {
          const Operate_ban_info_list& this_ = static_cast<const Operate_ban_info_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_ban_info_list::ByteSizeLong() const {
          const Operate_ban_info_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_ban_info_list)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.ban_info infos = 1;
            {
              total_size += 1UL * this_._internal_infos_size();
              for (const auto& msg : this_._internal_infos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_ban_info_list::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_ban_info_list*>(&to_msg);
  auto& from = static_cast<const Operate_ban_info_list&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_ban_info_list)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infos()->MergeFrom(
      from._internal_infos());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_ban_info_list::CopyFrom(const Operate_ban_info_list& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_ban_info_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_ban_info_list::InternalSwap(Operate_ban_info_list* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.infos_.InternalSwap(&other->_impl_.infos_);
}

::google::protobuf::Metadata Operate_ban_info_list::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_ban_Hardware_list::_Internal {
 public:
};

Operate_ban_Hardware_list::Operate_ban_Hardware_list(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_ban_Hardware_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_ban_Hardware_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_ban_Hardware_list& from_msg)
      : securitycode_(arena, from.securitycode_),
        _cached_size_{0} {}

Operate_ban_Hardware_list::Operate_ban_Hardware_list(
    ::google::protobuf::Arena* arena,
    const Operate_ban_Hardware_list& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_ban_Hardware_list* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_ban_Hardware_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_ban_Hardware_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : securitycode_(arena),
        _cached_size_{0} {}

inline void Operate_ban_Hardware_list::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_ban_Hardware_list::~Operate_ban_Hardware_list() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_ban_Hardware_list)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_ban_Hardware_list::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.securitycode_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_ban_Hardware_list::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_ban_Hardware_list_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_ban_Hardware_list::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_ban_Hardware_list>(),
            ::google::protobuf::Message::GetNewImpl<Operate_ban_Hardware_list>(),
            ::google::protobuf::Message::GetClearImpl<Operate_ban_Hardware_list>(), &Operate_ban_Hardware_list::ByteSizeLong,
                &Operate_ban_Hardware_list::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_ban_Hardware_list, _impl_._cached_size_),
            false,
        },
        &Operate_ban_Hardware_list::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_ban_Hardware_list::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 56, 2> Operate_ban_Hardware_list::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_ban_Hardware_list>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string securityCode = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_ban_Hardware_list, _impl_.securitycode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string securityCode = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_ban_Hardware_list, _impl_.securitycode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\14\0\0\0\0\0\0"
    "DC.Packet.Operate_ban_Hardware_list"
    "securityCode"
  }},
};

PROTOBUF_NOINLINE void Operate_ban_Hardware_list::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_ban_Hardware_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.securitycode_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_ban_Hardware_list::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_ban_Hardware_list& this_ = static_cast<const Operate_ban_Hardware_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_ban_Hardware_list::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_ban_Hardware_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_ban_Hardware_list)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string securityCode = 1;
          if (!this_._internal_securitycode().empty()) {
            const std::string& _s = this_._internal_securitycode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_ban_Hardware_list.securityCode");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_ban_Hardware_list)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_ban_Hardware_list::ByteSizeLong(const MessageLite& base) {
          const Operate_ban_Hardware_list& this_ = static_cast<const Operate_ban_Hardware_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_ban_Hardware_list::ByteSizeLong() const {
          const Operate_ban_Hardware_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_ban_Hardware_list)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string securityCode = 1;
            if (!this_._internal_securitycode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_securitycode());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_ban_Hardware_list::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_ban_Hardware_list*>(&to_msg);
  auto& from = static_cast<const Operate_ban_Hardware_list&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_ban_Hardware_list)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_securitycode().empty()) {
    _this->_internal_set_securitycode(from._internal_securitycode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_ban_Hardware_list::CopyFrom(const Operate_ban_Hardware_list& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_ban_Hardware_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_ban_Hardware_list::InternalSwap(Operate_ban_Hardware_list* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.securitycode_, &other->_impl_.securitycode_, arena);
}

::google::protobuf::Metadata Operate_ban_Hardware_list::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_nickname_change::_Internal {
 public:
};

Operate_nickname_change::Operate_nickname_change(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_nickname_change)
}
inline PROTOBUF_NDEBUG_INLINE Operate_nickname_change::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_nickname_change& from_msg)
      : securitycode_(arena, from.securitycode_),
        currentnickname_(arena, from.currentnickname_),
        changenickname_(arena, from.changenickname_),
        _cached_size_{0} {}

Operate_nickname_change::Operate_nickname_change(
    ::google::protobuf::Arena* arena,
    const Operate_nickname_change& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_nickname_change* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_nickname_change)
}
inline PROTOBUF_NDEBUG_INLINE Operate_nickname_change::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : securitycode_(arena),
        currentnickname_(arena),
        changenickname_(arena),
        _cached_size_{0} {}

inline void Operate_nickname_change::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_nickname_change::~Operate_nickname_change() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_nickname_change)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_nickname_change::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.securitycode_.Destroy();
  _impl_.currentnickname_.Destroy();
  _impl_.changenickname_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_nickname_change::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_nickname_change_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_nickname_change::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_nickname_change>(),
            ::google::protobuf::Message::GetNewImpl<Operate_nickname_change>(),
            ::google::protobuf::Message::GetClearImpl<Operate_nickname_change>(), &Operate_nickname_change::ByteSizeLong,
                &Operate_nickname_change::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_nickname_change, _impl_._cached_size_),
            false,
        },
        &Operate_nickname_change::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_nickname_change::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 83, 2> Operate_nickname_change::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_nickname_change>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string securityCode = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_nickname_change, _impl_.securitycode_)}},
    // string currentNickname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_nickname_change, _impl_.currentnickname_)}},
    // string changeNickname = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_nickname_change, _impl_.changenickname_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string securityCode = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_nickname_change, _impl_.securitycode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string currentNickname = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_nickname_change, _impl_.currentnickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string changeNickname = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_nickname_change, _impl_.changenickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\14\17\16\0\0\0\0"
    "DC.Packet.Operate_nickname_change"
    "securityCode"
    "currentNickname"
    "changeNickname"
  }},
};

PROTOBUF_NOINLINE void Operate_nickname_change::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_nickname_change)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.securitycode_.ClearToEmpty();
  _impl_.currentnickname_.ClearToEmpty();
  _impl_.changenickname_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_nickname_change::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_nickname_change& this_ = static_cast<const Operate_nickname_change&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_nickname_change::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_nickname_change& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_nickname_change)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string securityCode = 1;
          if (!this_._internal_securitycode().empty()) {
            const std::string& _s = this_._internal_securitycode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_nickname_change.securityCode");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string currentNickname = 2;
          if (!this_._internal_currentnickname().empty()) {
            const std::string& _s = this_._internal_currentnickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_nickname_change.currentNickname");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string changeNickname = 3;
          if (!this_._internal_changenickname().empty()) {
            const std::string& _s = this_._internal_changenickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_nickname_change.changeNickname");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_nickname_change)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_nickname_change::ByteSizeLong(const MessageLite& base) {
          const Operate_nickname_change& this_ = static_cast<const Operate_nickname_change&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_nickname_change::ByteSizeLong() const {
          const Operate_nickname_change& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_nickname_change)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string securityCode = 1;
            if (!this_._internal_securitycode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_securitycode());
            }
            // string currentNickname = 2;
            if (!this_._internal_currentnickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_currentnickname());
            }
            // string changeNickname = 3;
            if (!this_._internal_changenickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_changenickname());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_nickname_change::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_nickname_change*>(&to_msg);
  auto& from = static_cast<const Operate_nickname_change&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_nickname_change)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_securitycode().empty()) {
    _this->_internal_set_securitycode(from._internal_securitycode());
  }
  if (!from._internal_currentnickname().empty()) {
    _this->_internal_set_currentnickname(from._internal_currentnickname());
  }
  if (!from._internal_changenickname().empty()) {
    _this->_internal_set_changenickname(from._internal_changenickname());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_nickname_change::CopyFrom(const Operate_nickname_change& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_nickname_change)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_nickname_change::InternalSwap(Operate_nickname_change* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.securitycode_, &other->_impl_.securitycode_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currentnickname_, &other->_impl_.currentnickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.changenickname_, &other->_impl_.changenickname_, arena);
}

::google::protobuf::Metadata Operate_nickname_change::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_character_info::_Internal {
 public:
};

Operate_character_info::Operate_character_info(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_character_info)
}
inline PROTOBUF_NDEBUG_INLINE Operate_character_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_character_info& from_msg)
      : nickname_(arena, from.nickname_),
        characterclass_(arena, from.characterclass_),
        gebder_(arena, from.gebder_),
        registerdate_(arena, from.registerdate_),
        lastlogindate_(arena, from.lastlogindate_),
        _cached_size_{0} {}

Operate_character_info::Operate_character_info(
    ::google::protobuf::Arena* arena,
    const Operate_character_info& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_character_info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, accountid_),
           offsetof(Impl_, characterid_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::characterid_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_character_info)
}
inline PROTOBUF_NDEBUG_INLINE Operate_character_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : nickname_(arena),
        characterclass_(arena),
        gebder_(arena),
        registerdate_(arena),
        lastlogindate_(arena),
        _cached_size_{0} {}

inline void Operate_character_info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           0,
           offsetof(Impl_, characterid_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::characterid_));
}
Operate_character_info::~Operate_character_info() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_character_info)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_character_info::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.characterclass_.Destroy();
  _impl_.gebder_.Destroy();
  _impl_.registerdate_.Destroy();
  _impl_.lastlogindate_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_character_info::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_character_info_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_character_info::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_character_info>(),
            ::google::protobuf::Message::GetNewImpl<Operate_character_info>(),
            ::google::protobuf::Message::GetClearImpl<Operate_character_info>(), &Operate_character_info::ByteSizeLong,
                &Operate_character_info::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_._cached_size_),
            false,
        },
        &Operate_character_info::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_character_info::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 94, 2> Operate_character_info::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_character_info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 accountId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_character_info, _impl_.accountid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_.accountid_)}},
    // uint64 characterId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_character_info, _impl_.characterid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_.characterid_)}},
    // string nickname = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_.nickname_)}},
    // string characterClass = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_.characterclass_)}},
    // string gebder = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_.gebder_)}},
    // string registerDate = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_.registerdate_)}},
    // string lastLoginDate = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_.lastlogindate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 accountId = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 characterId = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string nickname = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_.nickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterClass = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_.characterclass_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string gebder = 5;
    {PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_.gebder_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string registerDate = 6;
    {PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_.registerdate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string lastLoginDate = 7;
    {PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_.lastlogindate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\0\0\10\16\6\14\15"
    "DC.Packet.Operate_character_info"
    "nickname"
    "characterClass"
    "gebder"
    "registerDate"
    "lastLoginDate"
  }},
};

PROTOBUF_NOINLINE void Operate_character_info::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_character_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.characterclass_.ClearToEmpty();
  _impl_.gebder_.ClearToEmpty();
  _impl_.registerdate_.ClearToEmpty();
  _impl_.lastlogindate_.ClearToEmpty();
  ::memset(&_impl_.accountid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.characterid_) -
      reinterpret_cast<char*>(&_impl_.accountid_)) + sizeof(_impl_.characterid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_character_info::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_character_info& this_ = static_cast<const Operate_character_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_character_info::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_character_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_character_info)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 accountId = 1;
          if (this_._internal_accountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_accountid(), target);
          }

          // uint64 characterId = 2;
          if (this_._internal_characterid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_characterid(), target);
          }

          // string nickname = 3;
          if (!this_._internal_nickname().empty()) {
            const std::string& _s = this_._internal_nickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_character_info.nickname");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string characterClass = 4;
          if (!this_._internal_characterclass().empty()) {
            const std::string& _s = this_._internal_characterclass();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_character_info.characterClass");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string gebder = 5;
          if (!this_._internal_gebder().empty()) {
            const std::string& _s = this_._internal_gebder();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_character_info.gebder");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string registerDate = 6;
          if (!this_._internal_registerdate().empty()) {
            const std::string& _s = this_._internal_registerdate();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_character_info.registerDate");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string lastLoginDate = 7;
          if (!this_._internal_lastlogindate().empty()) {
            const std::string& _s = this_._internal_lastlogindate();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_character_info.lastLoginDate");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_character_info)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_character_info::ByteSizeLong(const MessageLite& base) {
          const Operate_character_info& this_ = static_cast<const Operate_character_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_character_info::ByteSizeLong() const {
          const Operate_character_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_character_info)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string nickname = 3;
            if (!this_._internal_nickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_nickname());
            }
            // string characterClass = 4;
            if (!this_._internal_characterclass().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterclass());
            }
            // string gebder = 5;
            if (!this_._internal_gebder().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_gebder());
            }
            // string registerDate = 6;
            if (!this_._internal_registerdate().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_registerdate());
            }
            // string lastLoginDate = 7;
            if (!this_._internal_lastlogindate().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_lastlogindate());
            }
            // uint64 accountId = 1;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_accountid());
            }
            // uint64 characterId = 2;
            if (this_._internal_characterid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_characterid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_character_info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_character_info*>(&to_msg);
  auto& from = static_cast<const Operate_character_info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_character_info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_characterclass().empty()) {
    _this->_internal_set_characterclass(from._internal_characterclass());
  }
  if (!from._internal_gebder().empty()) {
    _this->_internal_set_gebder(from._internal_gebder());
  }
  if (!from._internal_registerdate().empty()) {
    _this->_internal_set_registerdate(from._internal_registerdate());
  }
  if (!from._internal_lastlogindate().empty()) {
    _this->_internal_set_lastlogindate(from._internal_lastlogindate());
  }
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  if (from._internal_characterid() != 0) {
    _this->_impl_.characterid_ = from._impl_.characterid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_character_info::CopyFrom(const Operate_character_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_character_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_character_info::InternalSwap(Operate_character_info* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterclass_, &other->_impl_.characterclass_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gebder_, &other->_impl_.gebder_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.registerdate_, &other->_impl_.registerdate_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lastlogindate_, &other->_impl_.lastlogindate_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_.characterid_)
      + sizeof(Operate_character_info::_impl_.characterid_)
      - PROTOBUF_FIELD_OFFSET(Operate_character_info, _impl_.accountid_)>(
          reinterpret_cast<char*>(&_impl_.accountid_),
          reinterpret_cast<char*>(&other->_impl_.accountid_));
}

::google::protobuf::Metadata Operate_character_info::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_character_info_list::_Internal {
 public:
};

Operate_character_info_list::Operate_character_info_list(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_character_info_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_character_info_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_character_info_list& from_msg)
      : infos_{visibility, arena, from.infos_},
        _cached_size_{0} {}

Operate_character_info_list::Operate_character_info_list(
    ::google::protobuf::Arena* arena,
    const Operate_character_info_list& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_character_info_list* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_character_info_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_character_info_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : infos_{visibility, arena},
        _cached_size_{0} {}

inline void Operate_character_info_list::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_character_info_list::~Operate_character_info_list() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_character_info_list)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_character_info_list::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_character_info_list::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_character_info_list_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_character_info_list::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_character_info_list>(),
            ::google::protobuf::Message::GetNewImpl<Operate_character_info_list>(),
            ::google::protobuf::Message::GetClearImpl<Operate_character_info_list>(), &Operate_character_info_list::ByteSizeLong,
                &Operate_character_info_list::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_character_info_list, _impl_._cached_size_),
            false,
        },
        &Operate_character_info_list::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_character_info_list::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Operate_character_info_list::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_character_info_list>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.Operate_character_info infos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_character_info_list, _impl_.infos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.Operate_character_info infos = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_character_info_list, _impl_.infos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_character_info>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Operate_character_info_list::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_character_info_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.infos_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_character_info_list::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_character_info_list& this_ = static_cast<const Operate_character_info_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_character_info_list::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_character_info_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_character_info_list)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.Operate_character_info infos = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_infos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_infos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_character_info_list)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_character_info_list::ByteSizeLong(const MessageLite& base) {
          const Operate_character_info_list& this_ = static_cast<const Operate_character_info_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_character_info_list::ByteSizeLong() const {
          const Operate_character_info_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_character_info_list)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.Operate_character_info infos = 1;
            {
              total_size += 1UL * this_._internal_infos_size();
              for (const auto& msg : this_._internal_infos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_character_info_list::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_character_info_list*>(&to_msg);
  auto& from = static_cast<const Operate_character_info_list&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_character_info_list)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infos()->MergeFrom(
      from._internal_infos());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_character_info_list::CopyFrom(const Operate_character_info_list& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_character_info_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_character_info_list::InternalSwap(Operate_character_info_list* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.infos_.InternalSwap(&other->_impl_.infos_);
}

::google::protobuf::Metadata Operate_character_info_list::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_report_info::_Internal {
 public:
};

Operate_report_info::Operate_report_info(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_report_info)
}
inline PROTOBUF_NDEBUG_INLINE Operate_report_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_report_info& from_msg)
      : targetnickname_(arena, from.targetnickname_),
        registerdate_(arena, from.registerdate_),
        _cached_size_{0} {}

Operate_report_info::Operate_report_info(
    ::google::protobuf::Arena* arena,
    const Operate_report_info& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_report_info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, reportid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, reportid_),
           offsetof(Impl_, gameid_) -
               offsetof(Impl_, reportid_) +
               sizeof(Impl_::gameid_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_report_info)
}
inline PROTOBUF_NDEBUG_INLINE Operate_report_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : targetnickname_(arena),
        registerdate_(arena),
        _cached_size_{0} {}

inline void Operate_report_info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, reportid_),
           0,
           offsetof(Impl_, gameid_) -
               offsetof(Impl_, reportid_) +
               sizeof(Impl_::gameid_));
}
Operate_report_info::~Operate_report_info() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_report_info)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_report_info::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.targetnickname_.Destroy();
  _impl_.registerdate_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_report_info::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_report_info_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_report_info::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_report_info>(),
            ::google::protobuf::Message::GetNewImpl<Operate_report_info>(),
            ::google::protobuf::Message::GetClearImpl<Operate_report_info>(), &Operate_report_info::ByteSizeLong,
                &Operate_report_info::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_report_info, _impl_._cached_size_),
            false,
        },
        &Operate_report_info::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_report_info::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 64, 2> Operate_report_info::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_report_info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 reportId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_report_info, _impl_.reportid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_report_info, _impl_.reportid_)}},
    // uint64 targetCharacterId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_report_info, _impl_.targetcharacterid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_report_info, _impl_.targetcharacterid_)}},
    // string targetNickname = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_report_info, _impl_.targetnickname_)}},
    // uint64 gameId = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_report_info, _impl_.gameid_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_report_info, _impl_.gameid_)}},
    // string registerDate = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_report_info, _impl_.registerdate_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 reportId = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_report_info, _impl_.reportid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 targetCharacterId = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_report_info, _impl_.targetcharacterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string targetNickname = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_report_info, _impl_.targetnickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 gameId = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_report_info, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string registerDate = 5;
    {PROTOBUF_FIELD_OFFSET(Operate_report_info, _impl_.registerdate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\0\0\16\0\14\0\0"
    "DC.Packet.Operate_report_info"
    "targetNickname"
    "registerDate"
  }},
};

PROTOBUF_NOINLINE void Operate_report_info::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_report_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.targetnickname_.ClearToEmpty();
  _impl_.registerdate_.ClearToEmpty();
  ::memset(&_impl_.reportid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gameid_) -
      reinterpret_cast<char*>(&_impl_.reportid_)) + sizeof(_impl_.gameid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_report_info::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_report_info& this_ = static_cast<const Operate_report_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_report_info::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_report_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_report_info)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 reportId = 1;
          if (this_._internal_reportid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_reportid(), target);
          }

          // uint64 targetCharacterId = 2;
          if (this_._internal_targetcharacterid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_targetcharacterid(), target);
          }

          // string targetNickname = 3;
          if (!this_._internal_targetnickname().empty()) {
            const std::string& _s = this_._internal_targetnickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_report_info.targetNickname");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint64 gameId = 4;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_gameid(), target);
          }

          // string registerDate = 5;
          if (!this_._internal_registerdate().empty()) {
            const std::string& _s = this_._internal_registerdate();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_report_info.registerDate");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_report_info)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_report_info::ByteSizeLong(const MessageLite& base) {
          const Operate_report_info& this_ = static_cast<const Operate_report_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_report_info::ByteSizeLong() const {
          const Operate_report_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_report_info)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string targetNickname = 3;
            if (!this_._internal_targetnickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_targetnickname());
            }
            // string registerDate = 5;
            if (!this_._internal_registerdate().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_registerdate());
            }
            // uint64 reportId = 1;
            if (this_._internal_reportid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_reportid());
            }
            // uint64 targetCharacterId = 2;
            if (this_._internal_targetcharacterid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_targetcharacterid());
            }
            // uint64 gameId = 4;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_report_info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_report_info*>(&to_msg);
  auto& from = static_cast<const Operate_report_info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_report_info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_targetnickname().empty()) {
    _this->_internal_set_targetnickname(from._internal_targetnickname());
  }
  if (!from._internal_registerdate().empty()) {
    _this->_internal_set_registerdate(from._internal_registerdate());
  }
  if (from._internal_reportid() != 0) {
    _this->_impl_.reportid_ = from._impl_.reportid_;
  }
  if (from._internal_targetcharacterid() != 0) {
    _this->_impl_.targetcharacterid_ = from._impl_.targetcharacterid_;
  }
  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_report_info::CopyFrom(const Operate_report_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_report_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_report_info::InternalSwap(Operate_report_info* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.targetnickname_, &other->_impl_.targetnickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.registerdate_, &other->_impl_.registerdate_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operate_report_info, _impl_.gameid_)
      + sizeof(Operate_report_info::_impl_.gameid_)
      - PROTOBUF_FIELD_OFFSET(Operate_report_info, _impl_.reportid_)>(
          reinterpret_cast<char*>(&_impl_.reportid_),
          reinterpret_cast<char*>(&other->_impl_.reportid_));
}

::google::protobuf::Metadata Operate_report_info::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_report_info_list::_Internal {
 public:
};

Operate_report_info_list::Operate_report_info_list(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_report_info_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_report_info_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_report_info_list& from_msg)
      : infos_{visibility, arena, from.infos_},
        _cached_size_{0} {}

Operate_report_info_list::Operate_report_info_list(
    ::google::protobuf::Arena* arena,
    const Operate_report_info_list& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_report_info_list* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_report_info_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_report_info_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : infos_{visibility, arena},
        _cached_size_{0} {}

inline void Operate_report_info_list::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_report_info_list::~Operate_report_info_list() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_report_info_list)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_report_info_list::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_report_info_list::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_report_info_list_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_report_info_list::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_report_info_list>(),
            ::google::protobuf::Message::GetNewImpl<Operate_report_info_list>(),
            ::google::protobuf::Message::GetClearImpl<Operate_report_info_list>(), &Operate_report_info_list::ByteSizeLong,
                &Operate_report_info_list::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_report_info_list, _impl_._cached_size_),
            false,
        },
        &Operate_report_info_list::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_report_info_list::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Operate_report_info_list::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_report_info_list>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.Operate_report_info infos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_report_info_list, _impl_.infos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.Operate_report_info infos = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_report_info_list, _impl_.infos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_report_info>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Operate_report_info_list::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_report_info_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.infos_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_report_info_list::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_report_info_list& this_ = static_cast<const Operate_report_info_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_report_info_list::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_report_info_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_report_info_list)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.Operate_report_info infos = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_infos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_infos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_report_info_list)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_report_info_list::ByteSizeLong(const MessageLite& base) {
          const Operate_report_info_list& this_ = static_cast<const Operate_report_info_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_report_info_list::ByteSizeLong() const {
          const Operate_report_info_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_report_info_list)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.Operate_report_info infos = 1;
            {
              total_size += 1UL * this_._internal_infos_size();
              for (const auto& msg : this_._internal_infos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_report_info_list::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_report_info_list*>(&to_msg);
  auto& from = static_cast<const Operate_report_info_list&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_report_info_list)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infos()->MergeFrom(
      from._internal_infos());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_report_info_list::CopyFrom(const Operate_report_info_list& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_report_info_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_report_info_list::InternalSwap(Operate_report_info_list* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.infos_.InternalSwap(&other->_impl_.infos_);
}

::google::protobuf::Metadata Operate_report_info_list::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_iron_shield_info::_Internal {
 public:
};

Operate_iron_shield_info::Operate_iron_shield_info(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_iron_shield_info)
}
inline PROTOBUF_NDEBUG_INLINE Operate_iron_shield_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_iron_shield_info& from_msg)
      : hardwareids_{visibility, arena, from.hardwareids_},
        nickname_(arena, from.nickname_),
        callbacktype_(arena, from.callbacktype_),
        registerdate_(arena, from.registerdate_),
        _cached_size_{0} {}

Operate_iron_shield_info::Operate_iron_shield_info(
    ::google::protobuf::Arena* arena,
    const Operate_iron_shield_info& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_iron_shield_info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, accountid_),
           offsetof(Impl_, characterid_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::characterid_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_iron_shield_info)
}
inline PROTOBUF_NDEBUG_INLINE Operate_iron_shield_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hardwareids_{visibility, arena},
        nickname_(arena),
        callbacktype_(arena),
        registerdate_(arena),
        _cached_size_{0} {}

inline void Operate_iron_shield_info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           0,
           offsetof(Impl_, characterid_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::characterid_));
}
Operate_iron_shield_info::~Operate_iron_shield_info() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_iron_shield_info)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_iron_shield_info::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.callbacktype_.Destroy();
  _impl_.registerdate_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_iron_shield_info::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_iron_shield_info_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_iron_shield_info::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_iron_shield_info>(),
            ::google::protobuf::Message::GetNewImpl<Operate_iron_shield_info>(),
            ::google::protobuf::Message::GetClearImpl<Operate_iron_shield_info>(), &Operate_iron_shield_info::ByteSizeLong,
                &Operate_iron_shield_info::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info, _impl_._cached_size_),
            false,
        },
        &Operate_iron_shield_info::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_iron_shield_info::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 86, 2> Operate_iron_shield_info::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_iron_shield_info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 accountId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_iron_shield_info, _impl_.accountid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info, _impl_.accountid_)}},
    // uint64 characterId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_iron_shield_info, _impl_.characterid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info, _impl_.characterid_)}},
    // string nickname = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info, _impl_.nickname_)}},
    // repeated string hardwareIds = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info, _impl_.hardwareids_)}},
    // string callbackType = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info, _impl_.callbacktype_)}},
    // string registerDate = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info, _impl_.registerdate_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 accountId = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 characterId = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string nickname = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info, _impl_.nickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string hardwareIds = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info, _impl_.hardwareids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string callbackType = 5;
    {PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info, _impl_.callbacktype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string registerDate = 6;
    {PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info, _impl_.registerdate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\0\0\10\13\14\14\0"
    "DC.Packet.Operate_iron_shield_info"
    "nickname"
    "hardwareIds"
    "callbackType"
    "registerDate"
  }},
};

PROTOBUF_NOINLINE void Operate_iron_shield_info::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_iron_shield_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hardwareids_.Clear();
  _impl_.nickname_.ClearToEmpty();
  _impl_.callbacktype_.ClearToEmpty();
  _impl_.registerdate_.ClearToEmpty();
  ::memset(&_impl_.accountid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.characterid_) -
      reinterpret_cast<char*>(&_impl_.accountid_)) + sizeof(_impl_.characterid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_iron_shield_info::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_iron_shield_info& this_ = static_cast<const Operate_iron_shield_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_iron_shield_info::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_iron_shield_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_iron_shield_info)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 accountId = 1;
          if (this_._internal_accountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_accountid(), target);
          }

          // uint64 characterId = 2;
          if (this_._internal_characterid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_characterid(), target);
          }

          // string nickname = 3;
          if (!this_._internal_nickname().empty()) {
            const std::string& _s = this_._internal_nickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_iron_shield_info.nickname");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated string hardwareIds = 4;
          for (int i = 0, n = this_._internal_hardwareids_size(); i < n; ++i) {
            const auto& s = this_._internal_hardwareids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_iron_shield_info.hardwareIds");
            target = stream->WriteString(4, s, target);
          }

          // string callbackType = 5;
          if (!this_._internal_callbacktype().empty()) {
            const std::string& _s = this_._internal_callbacktype();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_iron_shield_info.callbackType");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string registerDate = 6;
          if (!this_._internal_registerdate().empty()) {
            const std::string& _s = this_._internal_registerdate();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_iron_shield_info.registerDate");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_iron_shield_info)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_iron_shield_info::ByteSizeLong(const MessageLite& base) {
          const Operate_iron_shield_info& this_ = static_cast<const Operate_iron_shield_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_iron_shield_info::ByteSizeLong() const {
          const Operate_iron_shield_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_iron_shield_info)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string hardwareIds = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_hardwareids().size());
              for (int i = 0, n = this_._internal_hardwareids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_hardwareids().Get(i));
              }
            }
          }
           {
            // string nickname = 3;
            if (!this_._internal_nickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_nickname());
            }
            // string callbackType = 5;
            if (!this_._internal_callbacktype().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_callbacktype());
            }
            // string registerDate = 6;
            if (!this_._internal_registerdate().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_registerdate());
            }
            // uint64 accountId = 1;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_accountid());
            }
            // uint64 characterId = 2;
            if (this_._internal_characterid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_characterid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_iron_shield_info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_iron_shield_info*>(&to_msg);
  auto& from = static_cast<const Operate_iron_shield_info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_iron_shield_info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_hardwareids()->MergeFrom(from._internal_hardwareids());
  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_callbacktype().empty()) {
    _this->_internal_set_callbacktype(from._internal_callbacktype());
  }
  if (!from._internal_registerdate().empty()) {
    _this->_internal_set_registerdate(from._internal_registerdate());
  }
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  if (from._internal_characterid() != 0) {
    _this->_impl_.characterid_ = from._impl_.characterid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_iron_shield_info::CopyFrom(const Operate_iron_shield_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_iron_shield_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_iron_shield_info::InternalSwap(Operate_iron_shield_info* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hardwareids_.InternalSwap(&other->_impl_.hardwareids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.callbacktype_, &other->_impl_.callbacktype_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.registerdate_, &other->_impl_.registerdate_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info, _impl_.characterid_)
      + sizeof(Operate_iron_shield_info::_impl_.characterid_)
      - PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info, _impl_.accountid_)>(
          reinterpret_cast<char*>(&_impl_.accountid_),
          reinterpret_cast<char*>(&other->_impl_.accountid_));
}

::google::protobuf::Metadata Operate_iron_shield_info::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_iron_shield_info_list::_Internal {
 public:
};

Operate_iron_shield_info_list::Operate_iron_shield_info_list(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_iron_shield_info_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_iron_shield_info_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_iron_shield_info_list& from_msg)
      : infos_{visibility, arena, from.infos_},
        _cached_size_{0} {}

Operate_iron_shield_info_list::Operate_iron_shield_info_list(
    ::google::protobuf::Arena* arena,
    const Operate_iron_shield_info_list& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_iron_shield_info_list* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_iron_shield_info_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_iron_shield_info_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : infos_{visibility, arena},
        _cached_size_{0} {}

inline void Operate_iron_shield_info_list::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_iron_shield_info_list::~Operate_iron_shield_info_list() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_iron_shield_info_list)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_iron_shield_info_list::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_iron_shield_info_list::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_iron_shield_info_list_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_iron_shield_info_list::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_iron_shield_info_list>(),
            ::google::protobuf::Message::GetNewImpl<Operate_iron_shield_info_list>(),
            ::google::protobuf::Message::GetClearImpl<Operate_iron_shield_info_list>(), &Operate_iron_shield_info_list::ByteSizeLong,
                &Operate_iron_shield_info_list::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info_list, _impl_._cached_size_),
            false,
        },
        &Operate_iron_shield_info_list::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_iron_shield_info_list::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Operate_iron_shield_info_list::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_iron_shield_info_list>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.Operate_iron_shield_info infos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info_list, _impl_.infos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.Operate_iron_shield_info infos = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_iron_shield_info_list, _impl_.infos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_iron_shield_info>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Operate_iron_shield_info_list::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_iron_shield_info_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.infos_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_iron_shield_info_list::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_iron_shield_info_list& this_ = static_cast<const Operate_iron_shield_info_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_iron_shield_info_list::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_iron_shield_info_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_iron_shield_info_list)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.Operate_iron_shield_info infos = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_infos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_infos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_iron_shield_info_list)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_iron_shield_info_list::ByteSizeLong(const MessageLite& base) {
          const Operate_iron_shield_info_list& this_ = static_cast<const Operate_iron_shield_info_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_iron_shield_info_list::ByteSizeLong() const {
          const Operate_iron_shield_info_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_iron_shield_info_list)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.Operate_iron_shield_info infos = 1;
            {
              total_size += 1UL * this_._internal_infos_size();
              for (const auto& msg : this_._internal_infos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_iron_shield_info_list::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_iron_shield_info_list*>(&to_msg);
  auto& from = static_cast<const Operate_iron_shield_info_list&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_iron_shield_info_list)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infos()->MergeFrom(
      from._internal_infos());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_iron_shield_info_list::CopyFrom(const Operate_iron_shield_info_list& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_iron_shield_info_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_iron_shield_info_list::InternalSwap(Operate_iron_shield_info_list* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.infos_.InternalSwap(&other->_impl_.infos_);
}

::google::protobuf::Metadata Operate_iron_shield_info_list::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_ban_user_info::_Internal {
 public:
};

Operate_ban_user_info::Operate_ban_user_info(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_ban_user_info)
}
inline PROTOBUF_NDEBUG_INLINE Operate_ban_user_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_ban_user_info& from_msg)
      : bantype_(arena, from.bantype_),
        comment_(arena, from.comment_),
        registerdate_(arena, from.registerdate_),
        _cached_size_{0} {}

Operate_ban_user_info::Operate_ban_user_info(
    ::google::protobuf::Arena* arena,
    const Operate_ban_user_info& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_ban_user_info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.accountid_ = from._impl_.accountid_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_ban_user_info)
}
inline PROTOBUF_NDEBUG_INLINE Operate_ban_user_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : bantype_(arena),
        comment_(arena),
        registerdate_(arena),
        _cached_size_{0} {}

inline void Operate_ban_user_info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accountid_ = {};
}
Operate_ban_user_info::~Operate_ban_user_info() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_ban_user_info)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_ban_user_info::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.bantype_.Destroy();
  _impl_.comment_.Destroy();
  _impl_.registerdate_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_ban_user_info::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_ban_user_info_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_ban_user_info::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_ban_user_info>(),
            ::google::protobuf::Message::GetNewImpl<Operate_ban_user_info>(),
            ::google::protobuf::Message::GetClearImpl<Operate_ban_user_info>(), &Operate_ban_user_info::ByteSizeLong,
                &Operate_ban_user_info::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_ban_user_info, _impl_._cached_size_),
            false,
        },
        &Operate_ban_user_info::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_ban_user_info::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 66, 2> Operate_ban_user_info::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_ban_user_info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string registerDate = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_ban_user_info, _impl_.registerdate_)}},
    // uint64 accountId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_ban_user_info, _impl_.accountid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_ban_user_info, _impl_.accountid_)}},
    // string banType = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_ban_user_info, _impl_.bantype_)}},
    // string comment = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_ban_user_info, _impl_.comment_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 accountId = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_ban_user_info, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string banType = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_ban_user_info, _impl_.bantype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string comment = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_ban_user_info, _impl_.comment_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string registerDate = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_ban_user_info, _impl_.registerdate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\0\7\7\14\0\0\0"
    "DC.Packet.Operate_ban_user_info"
    "banType"
    "comment"
    "registerDate"
  }},
};

PROTOBUF_NOINLINE void Operate_ban_user_info::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_ban_user_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bantype_.ClearToEmpty();
  _impl_.comment_.ClearToEmpty();
  _impl_.registerdate_.ClearToEmpty();
  _impl_.accountid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_ban_user_info::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_ban_user_info& this_ = static_cast<const Operate_ban_user_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_ban_user_info::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_ban_user_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_ban_user_info)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 accountId = 1;
          if (this_._internal_accountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_accountid(), target);
          }

          // string banType = 2;
          if (!this_._internal_bantype().empty()) {
            const std::string& _s = this_._internal_bantype();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_ban_user_info.banType");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string comment = 3;
          if (!this_._internal_comment().empty()) {
            const std::string& _s = this_._internal_comment();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_ban_user_info.comment");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string registerDate = 4;
          if (!this_._internal_registerdate().empty()) {
            const std::string& _s = this_._internal_registerdate();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_ban_user_info.registerDate");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_ban_user_info)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_ban_user_info::ByteSizeLong(const MessageLite& base) {
          const Operate_ban_user_info& this_ = static_cast<const Operate_ban_user_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_ban_user_info::ByteSizeLong() const {
          const Operate_ban_user_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_ban_user_info)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string banType = 2;
            if (!this_._internal_bantype().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_bantype());
            }
            // string comment = 3;
            if (!this_._internal_comment().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_comment());
            }
            // string registerDate = 4;
            if (!this_._internal_registerdate().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_registerdate());
            }
            // uint64 accountId = 1;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_accountid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_ban_user_info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_ban_user_info*>(&to_msg);
  auto& from = static_cast<const Operate_ban_user_info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_ban_user_info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bantype().empty()) {
    _this->_internal_set_bantype(from._internal_bantype());
  }
  if (!from._internal_comment().empty()) {
    _this->_internal_set_comment(from._internal_comment());
  }
  if (!from._internal_registerdate().empty()) {
    _this->_internal_set_registerdate(from._internal_registerdate());
  }
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_ban_user_info::CopyFrom(const Operate_ban_user_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_ban_user_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_ban_user_info::InternalSwap(Operate_ban_user_info* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bantype_, &other->_impl_.bantype_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.comment_, &other->_impl_.comment_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.registerdate_, &other->_impl_.registerdate_, arena);
        swap(_impl_.accountid_, other->_impl_.accountid_);
}

::google::protobuf::Metadata Operate_ban_user_info::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_ban_user_info_list::_Internal {
 public:
};

Operate_ban_user_info_list::Operate_ban_user_info_list(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_ban_user_info_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_ban_user_info_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_ban_user_info_list& from_msg)
      : infos_{visibility, arena, from.infos_},
        _cached_size_{0} {}

Operate_ban_user_info_list::Operate_ban_user_info_list(
    ::google::protobuf::Arena* arena,
    const Operate_ban_user_info_list& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_ban_user_info_list* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_ban_user_info_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_ban_user_info_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : infos_{visibility, arena},
        _cached_size_{0} {}

inline void Operate_ban_user_info_list::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_ban_user_info_list::~Operate_ban_user_info_list() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_ban_user_info_list)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_ban_user_info_list::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_ban_user_info_list::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_ban_user_info_list_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_ban_user_info_list::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_ban_user_info_list>(),
            ::google::protobuf::Message::GetNewImpl<Operate_ban_user_info_list>(),
            ::google::protobuf::Message::GetClearImpl<Operate_ban_user_info_list>(), &Operate_ban_user_info_list::ByteSizeLong,
                &Operate_ban_user_info_list::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_ban_user_info_list, _impl_._cached_size_),
            false,
        },
        &Operate_ban_user_info_list::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_ban_user_info_list::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Operate_ban_user_info_list::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_ban_user_info_list>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.Operate_ban_user_info infos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_ban_user_info_list, _impl_.infos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.Operate_ban_user_info infos = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_ban_user_info_list, _impl_.infos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_ban_user_info>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Operate_ban_user_info_list::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_ban_user_info_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.infos_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_ban_user_info_list::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_ban_user_info_list& this_ = static_cast<const Operate_ban_user_info_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_ban_user_info_list::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_ban_user_info_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_ban_user_info_list)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.Operate_ban_user_info infos = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_infos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_infos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_ban_user_info_list)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_ban_user_info_list::ByteSizeLong(const MessageLite& base) {
          const Operate_ban_user_info_list& this_ = static_cast<const Operate_ban_user_info_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_ban_user_info_list::ByteSizeLong() const {
          const Operate_ban_user_info_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_ban_user_info_list)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.Operate_ban_user_info infos = 1;
            {
              total_size += 1UL * this_._internal_infos_size();
              for (const auto& msg : this_._internal_infos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_ban_user_info_list::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_ban_user_info_list*>(&to_msg);
  auto& from = static_cast<const Operate_ban_user_info_list&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_ban_user_info_list)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infos()->MergeFrom(
      from._internal_infos());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_ban_user_info_list::CopyFrom(const Operate_ban_user_info_list& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_ban_user_info_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_ban_user_info_list::InternalSwap(Operate_ban_user_info_list* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.infos_.InternalSwap(&other->_impl_.infos_);
}

::google::protobuf::Metadata Operate_ban_user_info_list::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_login_log::_Internal {
 public:
};

Operate_login_log::Operate_login_log(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_login_log)
}
inline PROTOBUF_NDEBUG_INLINE Operate_login_log::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_login_log& from_msg)
      : logintime_(arena, from.logintime_),
        logouttime_(arena, from.logouttime_),
        ipaddress_(arena, from.ipaddress_),
        _cached_size_{0} {}

Operate_login_log::Operate_login_log(
    ::google::protobuf::Arena* arena,
    const Operate_login_log& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_login_log* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, idx_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, idx_),
           offsetof(Impl_, accountid_) -
               offsetof(Impl_, idx_) +
               sizeof(Impl_::accountid_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_login_log)
}
inline PROTOBUF_NDEBUG_INLINE Operate_login_log::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : logintime_(arena),
        logouttime_(arena),
        ipaddress_(arena),
        _cached_size_{0} {}

inline void Operate_login_log::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, idx_),
           0,
           offsetof(Impl_, accountid_) -
               offsetof(Impl_, idx_) +
               sizeof(Impl_::accountid_));
}
Operate_login_log::~Operate_login_log() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_login_log)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_login_log::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.logintime_.Destroy();
  _impl_.logouttime_.Destroy();
  _impl_.ipaddress_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_login_log::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_login_log_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_login_log::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_login_log>(),
            ::google::protobuf::Message::GetNewImpl<Operate_login_log>(),
            ::google::protobuf::Message::GetClearImpl<Operate_login_log>(), &Operate_login_log::ByteSizeLong,
                &Operate_login_log::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_login_log, _impl_._cached_size_),
            false,
        },
        &Operate_login_log::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_login_log::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 64, 2> Operate_login_log::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_login_log>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 idx = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_login_log, _impl_.idx_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_login_log, _impl_.idx_)}},
    // uint64 accountId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_login_log, _impl_.accountid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_login_log, _impl_.accountid_)}},
    // string loginTime = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_login_log, _impl_.logintime_)}},
    // string logoutTime = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_login_log, _impl_.logouttime_)}},
    // string ipAddress = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_login_log, _impl_.ipaddress_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 idx = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_login_log, _impl_.idx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 accountId = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_login_log, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string loginTime = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_login_log, _impl_.logintime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string logoutTime = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_login_log, _impl_.logouttime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ipAddress = 5;
    {PROTOBUF_FIELD_OFFSET(Operate_login_log, _impl_.ipaddress_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\0\11\12\11\0\0"
    "DC.Packet.Operate_login_log"
    "loginTime"
    "logoutTime"
    "ipAddress"
  }},
};

PROTOBUF_NOINLINE void Operate_login_log::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_login_log)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.logintime_.ClearToEmpty();
  _impl_.logouttime_.ClearToEmpty();
  _impl_.ipaddress_.ClearToEmpty();
  ::memset(&_impl_.idx_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.accountid_) -
      reinterpret_cast<char*>(&_impl_.idx_)) + sizeof(_impl_.accountid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_login_log::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_login_log& this_ = static_cast<const Operate_login_log&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_login_log::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_login_log& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_login_log)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 idx = 1;
          if (this_._internal_idx() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_idx(), target);
          }

          // uint64 accountId = 2;
          if (this_._internal_accountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_accountid(), target);
          }

          // string loginTime = 3;
          if (!this_._internal_logintime().empty()) {
            const std::string& _s = this_._internal_logintime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_login_log.loginTime");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string logoutTime = 4;
          if (!this_._internal_logouttime().empty()) {
            const std::string& _s = this_._internal_logouttime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_login_log.logoutTime");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string ipAddress = 5;
          if (!this_._internal_ipaddress().empty()) {
            const std::string& _s = this_._internal_ipaddress();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_login_log.ipAddress");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_login_log)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_login_log::ByteSizeLong(const MessageLite& base) {
          const Operate_login_log& this_ = static_cast<const Operate_login_log&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_login_log::ByteSizeLong() const {
          const Operate_login_log& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_login_log)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string loginTime = 3;
            if (!this_._internal_logintime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_logintime());
            }
            // string logoutTime = 4;
            if (!this_._internal_logouttime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_logouttime());
            }
            // string ipAddress = 5;
            if (!this_._internal_ipaddress().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ipaddress());
            }
            // uint64 idx = 1;
            if (this_._internal_idx() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_idx());
            }
            // uint64 accountId = 2;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_accountid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_login_log::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_login_log*>(&to_msg);
  auto& from = static_cast<const Operate_login_log&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_login_log)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_logintime().empty()) {
    _this->_internal_set_logintime(from._internal_logintime());
  }
  if (!from._internal_logouttime().empty()) {
    _this->_internal_set_logouttime(from._internal_logouttime());
  }
  if (!from._internal_ipaddress().empty()) {
    _this->_internal_set_ipaddress(from._internal_ipaddress());
  }
  if (from._internal_idx() != 0) {
    _this->_impl_.idx_ = from._impl_.idx_;
  }
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_login_log::CopyFrom(const Operate_login_log& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_login_log)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_login_log::InternalSwap(Operate_login_log* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.logintime_, &other->_impl_.logintime_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.logouttime_, &other->_impl_.logouttime_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ipaddress_, &other->_impl_.ipaddress_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operate_login_log, _impl_.accountid_)
      + sizeof(Operate_login_log::_impl_.accountid_)
      - PROTOBUF_FIELD_OFFSET(Operate_login_log, _impl_.idx_)>(
          reinterpret_cast<char*>(&_impl_.idx_),
          reinterpret_cast<char*>(&other->_impl_.idx_));
}

::google::protobuf::Metadata Operate_login_log::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_login_log_list::_Internal {
 public:
};

Operate_login_log_list::Operate_login_log_list(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_login_log_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_login_log_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_login_log_list& from_msg)
      : logs_{visibility, arena, from.logs_},
        _cached_size_{0} {}

Operate_login_log_list::Operate_login_log_list(
    ::google::protobuf::Arena* arena,
    const Operate_login_log_list& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_login_log_list* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_login_log_list)
}
inline PROTOBUF_NDEBUG_INLINE Operate_login_log_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : logs_{visibility, arena},
        _cached_size_{0} {}

inline void Operate_login_log_list::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_login_log_list::~Operate_login_log_list() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_login_log_list)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_login_log_list::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_login_log_list::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_login_log_list_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_login_log_list::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_login_log_list>(),
            ::google::protobuf::Message::GetNewImpl<Operate_login_log_list>(),
            ::google::protobuf::Message::GetClearImpl<Operate_login_log_list>(), &Operate_login_log_list::ByteSizeLong,
                &Operate_login_log_list::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_login_log_list, _impl_._cached_size_),
            false,
        },
        &Operate_login_log_list::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_login_log_list::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Operate_login_log_list::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_login_log_list>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.Operate_login_log logs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_login_log_list, _impl_.logs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.Operate_login_log logs = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_login_log_list, _impl_.logs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_login_log>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Operate_login_log_list::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_login_log_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.logs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_login_log_list::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_login_log_list& this_ = static_cast<const Operate_login_log_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_login_log_list::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_login_log_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_login_log_list)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.Operate_login_log logs = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_logs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_logs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_login_log_list)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_login_log_list::ByteSizeLong(const MessageLite& base) {
          const Operate_login_log_list& this_ = static_cast<const Operate_login_log_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_login_log_list::ByteSizeLong() const {
          const Operate_login_log_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_login_log_list)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.Operate_login_log logs = 1;
            {
              total_size += 1UL * this_._internal_logs_size();
              for (const auto& msg : this_._internal_logs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_login_log_list::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_login_log_list*>(&to_msg);
  auto& from = static_cast<const Operate_login_log_list&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_login_log_list)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_logs()->MergeFrom(
      from._internal_logs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_login_log_list::CopyFrom(const Operate_login_log_list& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_login_log_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_login_log_list::InternalSwap(Operate_login_log_list* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.logs_.InternalSwap(&other->_impl_.logs_);
}

::google::protobuf::Metadata Operate_login_log_list::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_Ban_User::_Internal {
 public:
};

Operate_Ban_User::Operate_Ban_User(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_Ban_User)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Ban_User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_Ban_User& from_msg)
      : securitycode_(arena, from.securitycode_),
        nickname_(arena, from.nickname_),
        reason_(arena, from.reason_),
        _cached_size_{0} {}

Operate_Ban_User::Operate_Ban_User(
    ::google::protobuf::Arena* arena,
    const Operate_Ban_User& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_Ban_User* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bantype_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, bantype_),
           offsetof(Impl_, bantime_min_) -
               offsetof(Impl_, bantype_) +
               sizeof(Impl_::bantime_min_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_Ban_User)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Ban_User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : securitycode_(arena),
        nickname_(arena),
        reason_(arena),
        _cached_size_{0} {}

inline void Operate_Ban_User::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bantype_),
           0,
           offsetof(Impl_, bantime_min_) -
               offsetof(Impl_, bantype_) +
               sizeof(Impl_::bantime_min_));
}
Operate_Ban_User::~Operate_Ban_User() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_Ban_User)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_Ban_User::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.securitycode_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.reason_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_Ban_User::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_Ban_User_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_Ban_User::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_Ban_User>(),
            ::google::protobuf::Message::GetNewImpl<Operate_Ban_User>(),
            ::google::protobuf::Message::GetClearImpl<Operate_Ban_User>(), &Operate_Ban_User::ByteSizeLong,
                &Operate_Ban_User::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_Ban_User, _impl_._cached_size_),
            false,
        },
        &Operate_Ban_User::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_Ban_User::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 61, 2> Operate_Ban_User::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_Ban_User>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string securityCode = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_User, _impl_.securitycode_)}},
    // string nickName = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_User, _impl_.nickname_)}},
    // string reason = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_User, _impl_.reason_)}},
    // uint32 banType = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_Ban_User, _impl_.bantype_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_User, _impl_.bantype_)}},
    // uint32 banTime_min = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_Ban_User, _impl_.bantime_min_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_User, _impl_.bantime_min_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string securityCode = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_User, _impl_.securitycode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string nickName = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_User, _impl_.nickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reason = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_User, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 banType = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_User, _impl_.bantype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 banTime_min = 5;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_User, _impl_.bantime_min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\32\14\10\6\0\0\0\0"
    "DC.Packet.Operate_Ban_User"
    "securityCode"
    "nickName"
    "reason"
  }},
};

PROTOBUF_NOINLINE void Operate_Ban_User::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_Ban_User)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.securitycode_.ClearToEmpty();
  _impl_.nickname_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  ::memset(&_impl_.bantype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.bantime_min_) -
      reinterpret_cast<char*>(&_impl_.bantype_)) + sizeof(_impl_.bantime_min_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_Ban_User::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_Ban_User& this_ = static_cast<const Operate_Ban_User&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_Ban_User::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_Ban_User& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_Ban_User)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string securityCode = 1;
          if (!this_._internal_securitycode().empty()) {
            const std::string& _s = this_._internal_securitycode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Ban_User.securityCode");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string nickName = 2;
          if (!this_._internal_nickname().empty()) {
            const std::string& _s = this_._internal_nickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Ban_User.nickName");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string reason = 3;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Ban_User.reason");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint32 banType = 4;
          if (this_._internal_bantype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_bantype(), target);
          }

          // uint32 banTime_min = 5;
          if (this_._internal_bantime_min() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_bantime_min(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_Ban_User)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_Ban_User::ByteSizeLong(const MessageLite& base) {
          const Operate_Ban_User& this_ = static_cast<const Operate_Ban_User&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_Ban_User::ByteSizeLong() const {
          const Operate_Ban_User& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_Ban_User)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string securityCode = 1;
            if (!this_._internal_securitycode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_securitycode());
            }
            // string nickName = 2;
            if (!this_._internal_nickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_nickname());
            }
            // string reason = 3;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // uint32 banType = 4;
            if (this_._internal_bantype() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_bantype());
            }
            // uint32 banTime_min = 5;
            if (this_._internal_bantime_min() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_bantime_min());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_Ban_User::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_Ban_User*>(&to_msg);
  auto& from = static_cast<const Operate_Ban_User&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_Ban_User)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_securitycode().empty()) {
    _this->_internal_set_securitycode(from._internal_securitycode());
  }
  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (from._internal_bantype() != 0) {
    _this->_impl_.bantype_ = from._impl_.bantype_;
  }
  if (from._internal_bantime_min() != 0) {
    _this->_impl_.bantime_min_ = from._impl_.bantime_min_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_Ban_User::CopyFrom(const Operate_Ban_User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_Ban_User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_Ban_User::InternalSwap(Operate_Ban_User* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.securitycode_, &other->_impl_.securitycode_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operate_Ban_User, _impl_.bantime_min_)
      + sizeof(Operate_Ban_User::_impl_.bantime_min_)
      - PROTOBUF_FIELD_OFFSET(Operate_Ban_User, _impl_.bantype_)>(
          reinterpret_cast<char*>(&_impl_.bantype_),
          reinterpret_cast<char*>(&other->_impl_.bantype_));
}

::google::protobuf::Metadata Operate_Ban_User::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_Ban_User2::_Internal {
 public:
};

Operate_Ban_User2::Operate_Ban_User2(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_Ban_User2)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Ban_User2::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_Ban_User2& from_msg)
      : securitycode_(arena, from.securitycode_),
        nickname_(arena, from.nickname_),
        reason_(arena, from.reason_),
        jiraid_(arena, from.jiraid_),
        _cached_size_{0} {}

Operate_Ban_User2::Operate_Ban_User2(
    ::google::protobuf::Arena* arena,
    const Operate_Ban_User2& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_Ban_User2* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, accountid_),
           offsetof(Impl_, logidx_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::logidx_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_Ban_User2)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Ban_User2::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : securitycode_(arena),
        nickname_(arena),
        reason_(arena),
        jiraid_(arena),
        _cached_size_{0} {}

inline void Operate_Ban_User2::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           0,
           offsetof(Impl_, logidx_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::logidx_));
}
Operate_Ban_User2::~Operate_Ban_User2() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_Ban_User2)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_Ban_User2::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.securitycode_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.reason_.Destroy();
  _impl_.jiraid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_Ban_User2::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_Ban_User2_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_Ban_User2::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_Ban_User2>(),
            ::google::protobuf::Message::GetNewImpl<Operate_Ban_User2>(),
            ::google::protobuf::Message::GetClearImpl<Operate_Ban_User2>(), &Operate_Ban_User2::ByteSizeLong,
                &Operate_Ban_User2::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_._cached_size_),
            false,
        },
        &Operate_Ban_User2::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_Ban_User2::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 76, 2> Operate_Ban_User2::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_Ban_User2>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string securityCode = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.securitycode_)}},
    // uint64 accountId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_Ban_User2, _impl_.accountid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.accountid_)}},
    // string nickName = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.nickname_)}},
    // string reason = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.reason_)}},
    // uint32 banType = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_Ban_User2, _impl_.bantype_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.bantype_)}},
    // uint32 banTime_min = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_Ban_User2, _impl_.bantime_min_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.bantime_min_)}},
    // string jiraId = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.jiraid_)}},
    // uint32 isRankReset = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_Ban_User2, _impl_.isrankreset_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.isrankreset_)}},
    // uint32 isRankRecovery = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_Ban_User2, _impl_.isrankrecovery_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.isrankrecovery_)}},
    // uint64 logIdx = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_Ban_User2, _impl_.logidx_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.logidx_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string securityCode = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.securitycode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 accountId = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string nickName = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.nickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reason = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 banType = 5;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.bantype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 banTime_min = 6;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.bantime_min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string jiraId = 7;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.jiraid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 isRankReset = 8;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.isrankreset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 isRankRecovery = 9;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.isrankrecovery_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 logIdx = 10;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.logidx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\33\14\0\10\6\0\0\6\0\0\0\0\0\0\0\0"
    "DC.Packet.Operate_Ban_User2"
    "securityCode"
    "nickName"
    "reason"
    "jiraId"
  }},
};

PROTOBUF_NOINLINE void Operate_Ban_User2::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_Ban_User2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.securitycode_.ClearToEmpty();
  _impl_.nickname_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  _impl_.jiraid_.ClearToEmpty();
  ::memset(&_impl_.accountid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.logidx_) -
      reinterpret_cast<char*>(&_impl_.accountid_)) + sizeof(_impl_.logidx_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_Ban_User2::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_Ban_User2& this_ = static_cast<const Operate_Ban_User2&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_Ban_User2::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_Ban_User2& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_Ban_User2)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string securityCode = 1;
          if (!this_._internal_securitycode().empty()) {
            const std::string& _s = this_._internal_securitycode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Ban_User2.securityCode");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint64 accountId = 2;
          if (this_._internal_accountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_accountid(), target);
          }

          // string nickName = 3;
          if (!this_._internal_nickname().empty()) {
            const std::string& _s = this_._internal_nickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Ban_User2.nickName");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string reason = 4;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Ban_User2.reason");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // uint32 banType = 5;
          if (this_._internal_bantype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_bantype(), target);
          }

          // uint32 banTime_min = 6;
          if (this_._internal_bantime_min() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_bantime_min(), target);
          }

          // string jiraId = 7;
          if (!this_._internal_jiraid().empty()) {
            const std::string& _s = this_._internal_jiraid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Ban_User2.jiraId");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // uint32 isRankReset = 8;
          if (this_._internal_isrankreset() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_isrankreset(), target);
          }

          // uint32 isRankRecovery = 9;
          if (this_._internal_isrankrecovery() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                9, this_._internal_isrankrecovery(), target);
          }

          // uint64 logIdx = 10;
          if (this_._internal_logidx() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                10, this_._internal_logidx(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_Ban_User2)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_Ban_User2::ByteSizeLong(const MessageLite& base) {
          const Operate_Ban_User2& this_ = static_cast<const Operate_Ban_User2&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_Ban_User2::ByteSizeLong() const {
          const Operate_Ban_User2& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_Ban_User2)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string securityCode = 1;
            if (!this_._internal_securitycode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_securitycode());
            }
            // string nickName = 3;
            if (!this_._internal_nickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_nickname());
            }
            // string reason = 4;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // string jiraId = 7;
            if (!this_._internal_jiraid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_jiraid());
            }
            // uint64 accountId = 2;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_accountid());
            }
            // uint32 banType = 5;
            if (this_._internal_bantype() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_bantype());
            }
            // uint32 banTime_min = 6;
            if (this_._internal_bantime_min() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_bantime_min());
            }
            // uint32 isRankReset = 8;
            if (this_._internal_isrankreset() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_isrankreset());
            }
            // uint32 isRankRecovery = 9;
            if (this_._internal_isrankrecovery() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_isrankrecovery());
            }
            // uint64 logIdx = 10;
            if (this_._internal_logidx() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_logidx());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_Ban_User2::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_Ban_User2*>(&to_msg);
  auto& from = static_cast<const Operate_Ban_User2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_Ban_User2)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_securitycode().empty()) {
    _this->_internal_set_securitycode(from._internal_securitycode());
  }
  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (!from._internal_jiraid().empty()) {
    _this->_internal_set_jiraid(from._internal_jiraid());
  }
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  if (from._internal_bantype() != 0) {
    _this->_impl_.bantype_ = from._impl_.bantype_;
  }
  if (from._internal_bantime_min() != 0) {
    _this->_impl_.bantime_min_ = from._impl_.bantime_min_;
  }
  if (from._internal_isrankreset() != 0) {
    _this->_impl_.isrankreset_ = from._impl_.isrankreset_;
  }
  if (from._internal_isrankrecovery() != 0) {
    _this->_impl_.isrankrecovery_ = from._impl_.isrankrecovery_;
  }
  if (from._internal_logidx() != 0) {
    _this->_impl_.logidx_ = from._impl_.logidx_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_Ban_User2::CopyFrom(const Operate_Ban_User2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_Ban_User2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_Ban_User2::InternalSwap(Operate_Ban_User2* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.securitycode_, &other->_impl_.securitycode_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.jiraid_, &other->_impl_.jiraid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.logidx_)
      + sizeof(Operate_Ban_User2::_impl_.logidx_)
      - PROTOBUF_FIELD_OFFSET(Operate_Ban_User2, _impl_.accountid_)>(
          reinterpret_cast<char*>(&_impl_.accountid_),
          reinterpret_cast<char*>(&other->_impl_.accountid_));
}

::google::protobuf::Metadata Operate_Ban_User2::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_Ban_Hardware::_Internal {
 public:
};

Operate_Ban_Hardware::Operate_Ban_Hardware(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_Ban_Hardware)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Ban_Hardware::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_Ban_Hardware& from_msg)
      : hardwareid_(arena, from.hardwareid_),
        reason_(arena, from.reason_),
        _cached_size_{0} {}

Operate_Ban_Hardware::Operate_Ban_Hardware(
    ::google::protobuf::Arena* arena,
    const Operate_Ban_Hardware& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_Ban_Hardware* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bantype_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, bantype_),
           offsetof(Impl_, bantime_min_) -
               offsetof(Impl_, bantype_) +
               sizeof(Impl_::bantime_min_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_Ban_Hardware)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Ban_Hardware::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hardwareid_(arena),
        reason_(arena),
        _cached_size_{0} {}

inline void Operate_Ban_Hardware::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bantype_),
           0,
           offsetof(Impl_, bantime_min_) -
               offsetof(Impl_, bantype_) +
               sizeof(Impl_::bantime_min_));
}
Operate_Ban_Hardware::~Operate_Ban_Hardware() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_Ban_Hardware)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_Ban_Hardware::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.hardwareid_.Destroy();
  _impl_.reason_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_Ban_Hardware::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_Ban_Hardware_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_Ban_Hardware::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_Ban_Hardware>(),
            ::google::protobuf::Message::GetNewImpl<Operate_Ban_Hardware>(),
            ::google::protobuf::Message::GetClearImpl<Operate_Ban_Hardware>(), &Operate_Ban_Hardware::ByteSizeLong,
                &Operate_Ban_Hardware::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_Ban_Hardware, _impl_._cached_size_),
            false,
        },
        &Operate_Ban_Hardware::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_Ban_Hardware::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 55, 2> Operate_Ban_Hardware::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_Ban_Hardware>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 banTime_min = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_Ban_Hardware, _impl_.bantime_min_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_Hardware, _impl_.bantime_min_)}},
    // string hardwareId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_Hardware, _impl_.hardwareid_)}},
    // string reason = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_Hardware, _impl_.reason_)}},
    // uint32 banType = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_Ban_Hardware, _impl_.bantype_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Ban_Hardware, _impl_.bantype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string hardwareId = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_Hardware, _impl_.hardwareid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reason = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_Hardware, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 banType = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_Hardware, _impl_.bantype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 banTime_min = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_Ban_Hardware, _impl_.bantime_min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\36\12\6\0\0\0\0\0"
    "DC.Packet.Operate_Ban_Hardware"
    "hardwareId"
    "reason"
  }},
};

PROTOBUF_NOINLINE void Operate_Ban_Hardware::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_Ban_Hardware)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hardwareid_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  ::memset(&_impl_.bantype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.bantime_min_) -
      reinterpret_cast<char*>(&_impl_.bantype_)) + sizeof(_impl_.bantime_min_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_Ban_Hardware::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_Ban_Hardware& this_ = static_cast<const Operate_Ban_Hardware&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_Ban_Hardware::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_Ban_Hardware& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_Ban_Hardware)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string hardwareId = 1;
          if (!this_._internal_hardwareid().empty()) {
            const std::string& _s = this_._internal_hardwareid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Ban_Hardware.hardwareId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string reason = 2;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Ban_Hardware.reason");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint32 banType = 3;
          if (this_._internal_bantype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_bantype(), target);
          }

          // uint32 banTime_min = 4;
          if (this_._internal_bantime_min() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_bantime_min(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_Ban_Hardware)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_Ban_Hardware::ByteSizeLong(const MessageLite& base) {
          const Operate_Ban_Hardware& this_ = static_cast<const Operate_Ban_Hardware&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_Ban_Hardware::ByteSizeLong() const {
          const Operate_Ban_Hardware& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_Ban_Hardware)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string hardwareId = 1;
            if (!this_._internal_hardwareid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hardwareid());
            }
            // string reason = 2;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // uint32 banType = 3;
            if (this_._internal_bantype() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_bantype());
            }
            // uint32 banTime_min = 4;
            if (this_._internal_bantime_min() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_bantime_min());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_Ban_Hardware::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_Ban_Hardware*>(&to_msg);
  auto& from = static_cast<const Operate_Ban_Hardware&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_Ban_Hardware)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hardwareid().empty()) {
    _this->_internal_set_hardwareid(from._internal_hardwareid());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (from._internal_bantype() != 0) {
    _this->_impl_.bantype_ = from._impl_.bantype_;
  }
  if (from._internal_bantime_min() != 0) {
    _this->_impl_.bantime_min_ = from._impl_.bantime_min_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_Ban_Hardware::CopyFrom(const Operate_Ban_Hardware& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_Ban_Hardware)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_Ban_Hardware::InternalSwap(Operate_Ban_Hardware* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hardwareid_, &other->_impl_.hardwareid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operate_Ban_Hardware, _impl_.bantime_min_)
      + sizeof(Operate_Ban_Hardware::_impl_.bantime_min_)
      - PROTOBUF_FIELD_OFFSET(Operate_Ban_Hardware, _impl_.bantype_)>(
          reinterpret_cast<char*>(&_impl_.bantype_),
          reinterpret_cast<char*>(&other->_impl_.bantype_));
}

::google::protobuf::Metadata Operate_Ban_Hardware::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_characterInfo::_Internal {
 public:
};

void Operate_characterInfo::clear_inventoryitems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inventoryitems_.Clear();
}
void Operate_characterInfo::clear_storageitems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storageitems_.Clear();
}
Operate_characterInfo::Operate_characterInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_characterInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_characterInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_characterInfo& from_msg)
      : inventoryitems_{visibility, arena, from.inventoryitems_},
        storageitems_{visibility, arena, from.storageitems_},
        nickname_(arena, from.nickname_),
        characterclass_(arena, from.characterclass_),
        gender_(arena, from.gender_),
        registerdate_(arena, from.registerdate_),
        lastlogindate_(arena, from.lastlogindate_),
        _cached_size_{0} {}

Operate_characterInfo::Operate_characterInfo(
    ::google::protobuf::Arena* arena,
    const Operate_characterInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_characterInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, accountid_),
           offsetof(Impl_, characterid_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::characterid_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_characterInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_characterInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : inventoryitems_{visibility, arena},
        storageitems_{visibility, arena},
        nickname_(arena),
        characterclass_(arena),
        gender_(arena),
        registerdate_(arena),
        lastlogindate_(arena),
        _cached_size_{0} {}

inline void Operate_characterInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           0,
           offsetof(Impl_, characterid_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::characterid_));
}
Operate_characterInfo::~Operate_characterInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_characterInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_characterInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.characterclass_.Destroy();
  _impl_.gender_.Destroy();
  _impl_.registerdate_.Destroy();
  _impl_.lastlogindate_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_characterInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_characterInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_characterInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_characterInfo>(),
            ::google::protobuf::Message::GetNewImpl<Operate_characterInfo>(),
            ::google::protobuf::Message::GetClearImpl<Operate_characterInfo>(), &Operate_characterInfo::ByteSizeLong,
                &Operate_characterInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_._cached_size_),
            false,
        },
        &Operate_characterInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_characterInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 101, 2> Operate_characterInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_characterInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 accountId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_characterInfo, _impl_.accountid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.accountid_)}},
    // uint64 characterId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_characterInfo, _impl_.characterid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.characterid_)}},
    // string nickname = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.nickname_)}},
    // string characterClass = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.characterclass_)}},
    // string gender = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.gender_)}},
    // string registerdate = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.registerdate_)}},
    // string lastlogindate = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.lastlogindate_)}},
    // repeated .DC.Packet.SItems inventoryItems = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.inventoryitems_)}},
    // repeated .DC.Packet.SItems storageItems = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 1, PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.storageitems_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 accountId = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 characterId = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string nickname = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.nickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterClass = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.characterclass_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string gender = 5;
    {PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.gender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string registerdate = 6;
    {PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.registerdate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string lastlogindate = 7;
    {PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.lastlogindate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .DC.Packet.SItems inventoryItems = 8;
    {PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.inventoryitems_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SItems storageItems = 9;
    {PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.storageitems_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SItems>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SItems>()},
  }}, {{
    "\37\0\0\10\16\6\14\15\0\0\0\0\0\0\0\0"
    "DC.Packet.Operate_characterInfo"
    "nickname"
    "characterClass"
    "gender"
    "registerdate"
    "lastlogindate"
  }},
};

PROTOBUF_NOINLINE void Operate_characterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_characterInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inventoryitems_.Clear();
  _impl_.storageitems_.Clear();
  _impl_.nickname_.ClearToEmpty();
  _impl_.characterclass_.ClearToEmpty();
  _impl_.gender_.ClearToEmpty();
  _impl_.registerdate_.ClearToEmpty();
  _impl_.lastlogindate_.ClearToEmpty();
  ::memset(&_impl_.accountid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.characterid_) -
      reinterpret_cast<char*>(&_impl_.accountid_)) + sizeof(_impl_.characterid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_characterInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_characterInfo& this_ = static_cast<const Operate_characterInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_characterInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_characterInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_characterInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 accountId = 1;
          if (this_._internal_accountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_accountid(), target);
          }

          // uint64 characterId = 2;
          if (this_._internal_characterid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_characterid(), target);
          }

          // string nickname = 3;
          if (!this_._internal_nickname().empty()) {
            const std::string& _s = this_._internal_nickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_characterInfo.nickname");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string characterClass = 4;
          if (!this_._internal_characterclass().empty()) {
            const std::string& _s = this_._internal_characterclass();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_characterInfo.characterClass");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string gender = 5;
          if (!this_._internal_gender().empty()) {
            const std::string& _s = this_._internal_gender();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_characterInfo.gender");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string registerdate = 6;
          if (!this_._internal_registerdate().empty()) {
            const std::string& _s = this_._internal_registerdate();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_characterInfo.registerdate");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string lastlogindate = 7;
          if (!this_._internal_lastlogindate().empty()) {
            const std::string& _s = this_._internal_lastlogindate();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_characterInfo.lastlogindate");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // repeated .DC.Packet.SItems inventoryItems = 8;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_inventoryitems_size());
               i < n; i++) {
            const auto& repfield = this_._internal_inventoryitems().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    8, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SItems storageItems = 9;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_storageitems_size());
               i < n; i++) {
            const auto& repfield = this_._internal_storageitems().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    9, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_characterInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_characterInfo::ByteSizeLong(const MessageLite& base) {
          const Operate_characterInfo& this_ = static_cast<const Operate_characterInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_characterInfo::ByteSizeLong() const {
          const Operate_characterInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_characterInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SItems inventoryItems = 8;
            {
              total_size += 1UL * this_._internal_inventoryitems_size();
              for (const auto& msg : this_._internal_inventoryitems()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SItems storageItems = 9;
            {
              total_size += 1UL * this_._internal_storageitems_size();
              for (const auto& msg : this_._internal_storageitems()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string nickname = 3;
            if (!this_._internal_nickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_nickname());
            }
            // string characterClass = 4;
            if (!this_._internal_characterclass().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterclass());
            }
            // string gender = 5;
            if (!this_._internal_gender().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_gender());
            }
            // string registerdate = 6;
            if (!this_._internal_registerdate().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_registerdate());
            }
            // string lastlogindate = 7;
            if (!this_._internal_lastlogindate().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_lastlogindate());
            }
            // uint64 accountId = 1;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_accountid());
            }
            // uint64 characterId = 2;
            if (this_._internal_characterid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_characterid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_characterInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_characterInfo*>(&to_msg);
  auto& from = static_cast<const Operate_characterInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_characterInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inventoryitems()->MergeFrom(
      from._internal_inventoryitems());
  _this->_internal_mutable_storageitems()->MergeFrom(
      from._internal_storageitems());
  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_characterclass().empty()) {
    _this->_internal_set_characterclass(from._internal_characterclass());
  }
  if (!from._internal_gender().empty()) {
    _this->_internal_set_gender(from._internal_gender());
  }
  if (!from._internal_registerdate().empty()) {
    _this->_internal_set_registerdate(from._internal_registerdate());
  }
  if (!from._internal_lastlogindate().empty()) {
    _this->_internal_set_lastlogindate(from._internal_lastlogindate());
  }
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  if (from._internal_characterid() != 0) {
    _this->_impl_.characterid_ = from._impl_.characterid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_characterInfo::CopyFrom(const Operate_characterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_characterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_characterInfo::InternalSwap(Operate_characterInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.inventoryitems_.InternalSwap(&other->_impl_.inventoryitems_);
  _impl_.storageitems_.InternalSwap(&other->_impl_.storageitems_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterclass_, &other->_impl_.characterclass_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gender_, &other->_impl_.gender_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.registerdate_, &other->_impl_.registerdate_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lastlogindate_, &other->_impl_.lastlogindate_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.characterid_)
      + sizeof(Operate_characterInfo::_impl_.characterid_)
      - PROTOBUF_FIELD_OFFSET(Operate_characterInfo, _impl_.accountid_)>(
          reinterpret_cast<char*>(&_impl_.accountid_),
          reinterpret_cast<char*>(&other->_impl_.accountid_));
}

::google::protobuf::Metadata Operate_characterInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_OperateReportBodyInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Operate_OperateReportBodyInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_._has_bits_);
};

Operate_OperateReportBodyInfo::Operate_OperateReportBodyInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_OperateReportBodyInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateReportBodyInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_OperateReportBodyInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        targetnickname_(arena, from.targetnickname_),
        registerdate_(arena, from.registerdate_) {}

Operate_OperateReportBodyInfo::Operate_OperateReportBodyInfo(
    ::google::protobuf::Arena* arena,
    const Operate_OperateReportBodyInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_OperateReportBodyInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.file_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::Operate_OperateFileInfo>(
                              arena, *from._impl_.file_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, reportid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, reportid_),
           offsetof(Impl_, gameid_) -
               offsetof(Impl_, reportid_) +
               sizeof(Impl_::gameid_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_OperateReportBodyInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateReportBodyInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        targetnickname_(arena),
        registerdate_(arena) {}

inline void Operate_OperateReportBodyInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, file_),
           0,
           offsetof(Impl_, gameid_) -
               offsetof(Impl_, file_) +
               sizeof(Impl_::gameid_));
}
Operate_OperateReportBodyInfo::~Operate_OperateReportBodyInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_OperateReportBodyInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_OperateReportBodyInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.targetnickname_.Destroy();
  _impl_.registerdate_.Destroy();
  delete _impl_.file_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_OperateReportBodyInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_OperateReportBodyInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_OperateReportBodyInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_OperateReportBodyInfo>(),
            ::google::protobuf::Message::GetNewImpl<Operate_OperateReportBodyInfo>(),
            ::google::protobuf::Message::GetClearImpl<Operate_OperateReportBodyInfo>(), &Operate_OperateReportBodyInfo::ByteSizeLong,
                &Operate_OperateReportBodyInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_._cached_size_),
            false,
        },
        &Operate_OperateReportBodyInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_OperateReportBodyInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 74, 2> Operate_OperateReportBodyInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateReportBodyInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 reportId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_OperateReportBodyInfo, _impl_.reportid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_.reportid_)}},
    // uint64 reportAccountId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_OperateReportBodyInfo, _impl_.reportaccountid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_.reportaccountid_)}},
    // uint64 targetCharacterId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_OperateReportBodyInfo, _impl_.targetcharacterid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_.targetcharacterid_)}},
    // string targetNickname = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_.targetnickname_)}},
    // uint64 gameId = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_OperateReportBodyInfo, _impl_.gameid_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_.gameid_)}},
    // .DC.Packet.Operate_OperateFileInfo file = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_.file_)}},
    // string registerDate = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_.registerdate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 reportId = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_.reportid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 reportAccountId = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_.reportaccountid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 targetCharacterId = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_.targetcharacterid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string targetNickname = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_.targetnickname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 gameId = 5;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_.gameid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .DC.Packet.Operate_OperateFileInfo file = 6;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_.file_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string registerDate = 7;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_.registerdate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateFileInfo>()},
  }}, {{
    "\47\0\0\0\16\0\0\14"
    "DC.Packet.Operate_OperateReportBodyInfo"
    "targetNickname"
    "registerDate"
  }},
};

PROTOBUF_NOINLINE void Operate_OperateReportBodyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_OperateReportBodyInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.targetnickname_.ClearToEmpty();
  _impl_.registerdate_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.file_ != nullptr);
    _impl_.file_->Clear();
  }
  ::memset(&_impl_.reportid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gameid_) -
      reinterpret_cast<char*>(&_impl_.reportid_)) + sizeof(_impl_.gameid_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_OperateReportBodyInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_OperateReportBodyInfo& this_ = static_cast<const Operate_OperateReportBodyInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_OperateReportBodyInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_OperateReportBodyInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_OperateReportBodyInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 reportId = 1;
          if (this_._internal_reportid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_reportid(), target);
          }

          // uint64 reportAccountId = 2;
          if (this_._internal_reportaccountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_reportaccountid(), target);
          }

          // uint64 targetCharacterId = 3;
          if (this_._internal_targetcharacterid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_targetcharacterid(), target);
          }

          // string targetNickname = 4;
          if (!this_._internal_targetnickname().empty()) {
            const std::string& _s = this_._internal_targetnickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateReportBodyInfo.targetNickname");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // uint64 gameId = 5;
          if (this_._internal_gameid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_gameid(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.Operate_OperateFileInfo file = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.file_, this_._impl_.file_->GetCachedSize(), target,
                stream);
          }

          // string registerDate = 7;
          if (!this_._internal_registerdate().empty()) {
            const std::string& _s = this_._internal_registerdate();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateReportBodyInfo.registerDate");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_OperateReportBodyInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_OperateReportBodyInfo::ByteSizeLong(const MessageLite& base) {
          const Operate_OperateReportBodyInfo& this_ = static_cast<const Operate_OperateReportBodyInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_OperateReportBodyInfo::ByteSizeLong() const {
          const Operate_OperateReportBodyInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_OperateReportBodyInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string targetNickname = 4;
            if (!this_._internal_targetnickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_targetnickname());
            }
            // string registerDate = 7;
            if (!this_._internal_registerdate().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_registerdate());
            }
          }
           {
            // .DC.Packet.Operate_OperateFileInfo file = 6;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.file_);
            }
          }
           {
            // uint64 reportId = 1;
            if (this_._internal_reportid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_reportid());
            }
            // uint64 reportAccountId = 2;
            if (this_._internal_reportaccountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_reportaccountid());
            }
            // uint64 targetCharacterId = 3;
            if (this_._internal_targetcharacterid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_targetcharacterid());
            }
            // uint64 gameId = 5;
            if (this_._internal_gameid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gameid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_OperateReportBodyInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_OperateReportBodyInfo*>(&to_msg);
  auto& from = static_cast<const Operate_OperateReportBodyInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_OperateReportBodyInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_targetnickname().empty()) {
    _this->_internal_set_targetnickname(from._internal_targetnickname());
  }
  if (!from._internal_registerdate().empty()) {
    _this->_internal_set_registerdate(from._internal_registerdate());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.file_ != nullptr);
    if (_this->_impl_.file_ == nullptr) {
      _this->_impl_.file_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::Operate_OperateFileInfo>(arena, *from._impl_.file_);
    } else {
      _this->_impl_.file_->MergeFrom(*from._impl_.file_);
    }
  }
  if (from._internal_reportid() != 0) {
    _this->_impl_.reportid_ = from._impl_.reportid_;
  }
  if (from._internal_reportaccountid() != 0) {
    _this->_impl_.reportaccountid_ = from._impl_.reportaccountid_;
  }
  if (from._internal_targetcharacterid() != 0) {
    _this->_impl_.targetcharacterid_ = from._impl_.targetcharacterid_;
  }
  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_OperateReportBodyInfo::CopyFrom(const Operate_OperateReportBodyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_OperateReportBodyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_OperateReportBodyInfo::InternalSwap(Operate_OperateReportBodyInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.targetnickname_, &other->_impl_.targetnickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.registerdate_, &other->_impl_.registerdate_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_.gameid_)
      + sizeof(Operate_OperateReportBodyInfo::_impl_.gameid_)
      - PROTOBUF_FIELD_OFFSET(Operate_OperateReportBodyInfo, _impl_.file_)>(
          reinterpret_cast<char*>(&_impl_.file_),
          reinterpret_cast<char*>(&other->_impl_.file_));
}

::google::protobuf::Metadata Operate_OperateReportBodyInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_OperateIronShieldInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Operate_OperateIronShieldInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_._has_bits_);
};

Operate_OperateIronShieldInfo::Operate_OperateIronShieldInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_OperateIronShieldInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateIronShieldInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_OperateIronShieldInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        hardwareids_{visibility, arena, from.hardwareids_},
        nickname_(arena, from.nickname_),
        callbacktype_(arena, from.callbacktype_),
        registertime_(arena, from.registertime_) {}

Operate_OperateIronShieldInfo::Operate_OperateIronShieldInfo(
    ::google::protobuf::Arena* arena,
    const Operate_OperateIronShieldInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_OperateIronShieldInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.file_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::Operate_OperateFileInfo>(
                              arena, *from._impl_.file_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, idx_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, idx_),
           offsetof(Impl_, characterid_) -
               offsetof(Impl_, idx_) +
               sizeof(Impl_::characterid_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_OperateIronShieldInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateIronShieldInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        hardwareids_{visibility, arena},
        nickname_(arena),
        callbacktype_(arena),
        registertime_(arena) {}

inline void Operate_OperateIronShieldInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, file_),
           0,
           offsetof(Impl_, characterid_) -
               offsetof(Impl_, file_) +
               sizeof(Impl_::characterid_));
}
Operate_OperateIronShieldInfo::~Operate_OperateIronShieldInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_OperateIronShieldInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_OperateIronShieldInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.callbacktype_.Destroy();
  _impl_.registertime_.Destroy();
  delete _impl_.file_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_OperateIronShieldInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_OperateIronShieldInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_OperateIronShieldInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_OperateIronShieldInfo>(),
            ::google::protobuf::Message::GetNewImpl<Operate_OperateIronShieldInfo>(),
            ::google::protobuf::Message::GetClearImpl<Operate_OperateIronShieldInfo>(), &Operate_OperateIronShieldInfo::ByteSizeLong,
                &Operate_OperateIronShieldInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_._cached_size_),
            false,
        },
        &Operate_OperateIronShieldInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_OperateIronShieldInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 99, 2> Operate_OperateIronShieldInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateIronShieldInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string hardwareIds = 8;
    {::_pbi::TcParser::FastUR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.hardwareids_)}},
    // uint64 idx = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_OperateIronShieldInfo, _impl_.idx_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.idx_)}},
    // uint64 accountId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_OperateIronShieldInfo, _impl_.accountid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.accountid_)}},
    // uint64 characterId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_OperateIronShieldInfo, _impl_.characterid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.characterid_)}},
    // string nickname = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.nickname_)}},
    // string callbackType = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.callbacktype_)}},
    // .DC.Packet.Operate_OperateFileInfo file = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.file_)}},
    // string RegisterTime = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.registertime_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 idx = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.idx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 accountId = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.accountid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 characterId = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.characterid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string nickname = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.nickname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string callbackType = 5;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.callbacktype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .DC.Packet.Operate_OperateFileInfo file = 6;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.file_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string RegisterTime = 7;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.registertime_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string hardwareIds = 8;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.hardwareids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateFileInfo>()},
  }}, {{
    "\47\0\0\0\10\14\0\14\13\0\0\0\0\0\0\0"
    "DC.Packet.Operate_OperateIronShieldInfo"
    "nickname"
    "callbackType"
    "RegisterTime"
    "hardwareIds"
  }},
};

PROTOBUF_NOINLINE void Operate_OperateIronShieldInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_OperateIronShieldInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hardwareids_.Clear();
  _impl_.nickname_.ClearToEmpty();
  _impl_.callbacktype_.ClearToEmpty();
  _impl_.registertime_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.file_ != nullptr);
    _impl_.file_->Clear();
  }
  ::memset(&_impl_.idx_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.characterid_) -
      reinterpret_cast<char*>(&_impl_.idx_)) + sizeof(_impl_.characterid_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_OperateIronShieldInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_OperateIronShieldInfo& this_ = static_cast<const Operate_OperateIronShieldInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_OperateIronShieldInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_OperateIronShieldInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_OperateIronShieldInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 idx = 1;
          if (this_._internal_idx() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_idx(), target);
          }

          // uint64 accountId = 2;
          if (this_._internal_accountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_accountid(), target);
          }

          // uint64 characterId = 3;
          if (this_._internal_characterid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_characterid(), target);
          }

          // string nickname = 4;
          if (!this_._internal_nickname().empty()) {
            const std::string& _s = this_._internal_nickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateIronShieldInfo.nickname");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string callbackType = 5;
          if (!this_._internal_callbacktype().empty()) {
            const std::string& _s = this_._internal_callbacktype();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateIronShieldInfo.callbackType");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.Operate_OperateFileInfo file = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.file_, this_._impl_.file_->GetCachedSize(), target,
                stream);
          }

          // string RegisterTime = 7;
          if (!this_._internal_registertime().empty()) {
            const std::string& _s = this_._internal_registertime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateIronShieldInfo.RegisterTime");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // repeated string hardwareIds = 8;
          for (int i = 0, n = this_._internal_hardwareids_size(); i < n; ++i) {
            const auto& s = this_._internal_hardwareids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateIronShieldInfo.hardwareIds");
            target = stream->WriteString(8, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_OperateIronShieldInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_OperateIronShieldInfo::ByteSizeLong(const MessageLite& base) {
          const Operate_OperateIronShieldInfo& this_ = static_cast<const Operate_OperateIronShieldInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_OperateIronShieldInfo::ByteSizeLong() const {
          const Operate_OperateIronShieldInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_OperateIronShieldInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string hardwareIds = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_hardwareids().size());
              for (int i = 0, n = this_._internal_hardwareids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_hardwareids().Get(i));
              }
            }
          }
           {
            // string nickname = 4;
            if (!this_._internal_nickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_nickname());
            }
            // string callbackType = 5;
            if (!this_._internal_callbacktype().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_callbacktype());
            }
            // string RegisterTime = 7;
            if (!this_._internal_registertime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_registertime());
            }
          }
           {
            // .DC.Packet.Operate_OperateFileInfo file = 6;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.file_);
            }
          }
           {
            // uint64 idx = 1;
            if (this_._internal_idx() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_idx());
            }
            // uint64 accountId = 2;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_accountid());
            }
            // uint64 characterId = 3;
            if (this_._internal_characterid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_characterid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_OperateIronShieldInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_OperateIronShieldInfo*>(&to_msg);
  auto& from = static_cast<const Operate_OperateIronShieldInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_OperateIronShieldInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_hardwareids()->MergeFrom(from._internal_hardwareids());
  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_callbacktype().empty()) {
    _this->_internal_set_callbacktype(from._internal_callbacktype());
  }
  if (!from._internal_registertime().empty()) {
    _this->_internal_set_registertime(from._internal_registertime());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.file_ != nullptr);
    if (_this->_impl_.file_ == nullptr) {
      _this->_impl_.file_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::Operate_OperateFileInfo>(arena, *from._impl_.file_);
    } else {
      _this->_impl_.file_->MergeFrom(*from._impl_.file_);
    }
  }
  if (from._internal_idx() != 0) {
    _this->_impl_.idx_ = from._impl_.idx_;
  }
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  if (from._internal_characterid() != 0) {
    _this->_impl_.characterid_ = from._impl_.characterid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_OperateIronShieldInfo::CopyFrom(const Operate_OperateIronShieldInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_OperateIronShieldInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_OperateIronShieldInfo::InternalSwap(Operate_OperateIronShieldInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.hardwareids_.InternalSwap(&other->_impl_.hardwareids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.callbacktype_, &other->_impl_.callbacktype_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.registertime_, &other->_impl_.registertime_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.characterid_)
      + sizeof(Operate_OperateIronShieldInfo::_impl_.characterid_)
      - PROTOBUF_FIELD_OFFSET(Operate_OperateIronShieldInfo, _impl_.file_)>(
          reinterpret_cast<char*>(&_impl_.file_),
          reinterpret_cast<char*>(&other->_impl_.file_));
}

::google::protobuf::Metadata Operate_OperateIronShieldInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_OperateBanUserInfos::_Internal {
 public:
};

Operate_OperateBanUserInfos::Operate_OperateBanUserInfos(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_OperateBanUserInfos)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateBanUserInfos::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_OperateBanUserInfos& from_msg)
      : comment_(arena, from.comment_),
        begintime_(arena, from.begintime_),
        endtime_(arena, from.endtime_),
        registertime_(arena, from.registertime_),
        ishardwareban_(arena, from.ishardwareban_),
        _cached_size_{0} {}

Operate_OperateBanUserInfos::Operate_OperateBanUserInfos(
    ::google::protobuf::Arena* arena,
    const Operate_OperateBanUserInfos& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_OperateBanUserInfos* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, accountid_),
           offsetof(Impl_, bantype_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::bantype_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_OperateBanUserInfos)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateBanUserInfos::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : comment_(arena),
        begintime_(arena),
        endtime_(arena),
        registertime_(arena),
        ishardwareban_(arena),
        _cached_size_{0} {}

inline void Operate_OperateBanUserInfos::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           0,
           offsetof(Impl_, bantype_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::bantype_));
}
Operate_OperateBanUserInfos::~Operate_OperateBanUserInfos() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_OperateBanUserInfos)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_OperateBanUserInfos::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.comment_.Destroy();
  _impl_.begintime_.Destroy();
  _impl_.endtime_.Destroy();
  _impl_.registertime_.Destroy();
  _impl_.ishardwareban_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_OperateBanUserInfos::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_OperateBanUserInfos_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_OperateBanUserInfos::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_OperateBanUserInfos>(),
            ::google::protobuf::Message::GetNewImpl<Operate_OperateBanUserInfos>(),
            ::google::protobuf::Message::GetClearImpl<Operate_OperateBanUserInfos>(), &Operate_OperateBanUserInfos::ByteSizeLong,
                &Operate_OperateBanUserInfos::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_._cached_size_),
            false,
        },
        &Operate_OperateBanUserInfos::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_OperateBanUserInfos::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 102, 2> Operate_OperateBanUserInfos::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateBanUserInfos>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string isHardwareBan = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.ishardwareban_)}},
    // uint64 accountId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_OperateBanUserInfos, _impl_.accountid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.accountid_)}},
    // int32 banType = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_OperateBanUserInfos, _impl_.bantype_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.bantype_)}},
    // uint64 logIdx = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_OperateBanUserInfos, _impl_.logidx_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.logidx_)}},
    // string comment = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.comment_)}},
    // string beginTime = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.begintime_)}},
    // string endTime = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.endtime_)}},
    // string registerTime = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.registertime_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 accountId = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // int32 banType = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.bantype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // uint64 logIdx = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.logidx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string comment = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.comment_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string beginTime = 5;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.begintime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string endTime = 6;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.endtime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string registerTime = 7;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.registertime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string isHardwareBan = 8;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.ishardwareban_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\0\0\0\7\11\7\14\15\0\0\0\0\0\0\0"
    "DC.Packet.Operate_OperateBanUserInfos"
    "comment"
    "beginTime"
    "endTime"
    "registerTime"
    "isHardwareBan"
  }},
};

PROTOBUF_NOINLINE void Operate_OperateBanUserInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_OperateBanUserInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.comment_.ClearToEmpty();
  _impl_.begintime_.ClearToEmpty();
  _impl_.endtime_.ClearToEmpty();
  _impl_.registertime_.ClearToEmpty();
  _impl_.ishardwareban_.ClearToEmpty();
  ::memset(&_impl_.accountid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.bantype_) -
      reinterpret_cast<char*>(&_impl_.accountid_)) + sizeof(_impl_.bantype_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_OperateBanUserInfos::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_OperateBanUserInfos& this_ = static_cast<const Operate_OperateBanUserInfos&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_OperateBanUserInfos::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_OperateBanUserInfos& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_OperateBanUserInfos)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 accountId = 1;
          if (this_._internal_accountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_accountid(), target);
          }

          // int32 banType = 2;
          if (this_._internal_bantype() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_bantype(), target);
          }

          // uint64 logIdx = 3;
          if (this_._internal_logidx() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_logidx(), target);
          }

          // string comment = 4;
          if (!this_._internal_comment().empty()) {
            const std::string& _s = this_._internal_comment();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateBanUserInfos.comment");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string beginTime = 5;
          if (!this_._internal_begintime().empty()) {
            const std::string& _s = this_._internal_begintime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateBanUserInfos.beginTime");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string endTime = 6;
          if (!this_._internal_endtime().empty()) {
            const std::string& _s = this_._internal_endtime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateBanUserInfos.endTime");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string registerTime = 7;
          if (!this_._internal_registertime().empty()) {
            const std::string& _s = this_._internal_registertime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateBanUserInfos.registerTime");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string isHardwareBan = 8;
          if (!this_._internal_ishardwareban().empty()) {
            const std::string& _s = this_._internal_ishardwareban();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateBanUserInfos.isHardwareBan");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_OperateBanUserInfos)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_OperateBanUserInfos::ByteSizeLong(const MessageLite& base) {
          const Operate_OperateBanUserInfos& this_ = static_cast<const Operate_OperateBanUserInfos&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_OperateBanUserInfos::ByteSizeLong() const {
          const Operate_OperateBanUserInfos& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_OperateBanUserInfos)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string comment = 4;
            if (!this_._internal_comment().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_comment());
            }
            // string beginTime = 5;
            if (!this_._internal_begintime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_begintime());
            }
            // string endTime = 6;
            if (!this_._internal_endtime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_endtime());
            }
            // string registerTime = 7;
            if (!this_._internal_registertime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_registertime());
            }
            // string isHardwareBan = 8;
            if (!this_._internal_ishardwareban().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ishardwareban());
            }
            // uint64 accountId = 1;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_accountid());
            }
            // uint64 logIdx = 3;
            if (this_._internal_logidx() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_logidx());
            }
            // int32 banType = 2;
            if (this_._internal_bantype() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_bantype());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_OperateBanUserInfos::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_OperateBanUserInfos*>(&to_msg);
  auto& from = static_cast<const Operate_OperateBanUserInfos&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_OperateBanUserInfos)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_comment().empty()) {
    _this->_internal_set_comment(from._internal_comment());
  }
  if (!from._internal_begintime().empty()) {
    _this->_internal_set_begintime(from._internal_begintime());
  }
  if (!from._internal_endtime().empty()) {
    _this->_internal_set_endtime(from._internal_endtime());
  }
  if (!from._internal_registertime().empty()) {
    _this->_internal_set_registertime(from._internal_registertime());
  }
  if (!from._internal_ishardwareban().empty()) {
    _this->_internal_set_ishardwareban(from._internal_ishardwareban());
  }
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  if (from._internal_logidx() != 0) {
    _this->_impl_.logidx_ = from._impl_.logidx_;
  }
  if (from._internal_bantype() != 0) {
    _this->_impl_.bantype_ = from._impl_.bantype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_OperateBanUserInfos::CopyFrom(const Operate_OperateBanUserInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_OperateBanUserInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_OperateBanUserInfos::InternalSwap(Operate_OperateBanUserInfos* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.comment_, &other->_impl_.comment_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.begintime_, &other->_impl_.begintime_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.endtime_, &other->_impl_.endtime_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.registertime_, &other->_impl_.registertime_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ishardwareban_, &other->_impl_.ishardwareban_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.bantype_)
      + sizeof(Operate_OperateBanUserInfos::_impl_.bantype_)
      - PROTOBUF_FIELD_OFFSET(Operate_OperateBanUserInfos, _impl_.accountid_)>(
          reinterpret_cast<char*>(&_impl_.accountid_),
          reinterpret_cast<char*>(&other->_impl_.accountid_));
}

::google::protobuf::Metadata Operate_OperateBanUserInfos::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_OperateLoginLogInfo::_Internal {
 public:
};

Operate_OperateLoginLogInfo::Operate_OperateLoginLogInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_OperateLoginLogInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateLoginLogInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_OperateLoginLogInfo& from_msg)
      : logintime_(arena, from.logintime_),
        logouttime_(arena, from.logouttime_),
        ipaddress_(arena, from.ipaddress_),
        _cached_size_{0} {}

Operate_OperateLoginLogInfo::Operate_OperateLoginLogInfo(
    ::google::protobuf::Arena* arena,
    const Operate_OperateLoginLogInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_OperateLoginLogInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.accountid_ = from._impl_.accountid_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_OperateLoginLogInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateLoginLogInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : logintime_(arena),
        logouttime_(arena),
        ipaddress_(arena),
        _cached_size_{0} {}

inline void Operate_OperateLoginLogInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accountid_ = {};
}
Operate_OperateLoginLogInfo::~Operate_OperateLoginLogInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_OperateLoginLogInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_OperateLoginLogInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.logintime_.Destroy();
  _impl_.logouttime_.Destroy();
  _impl_.ipaddress_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_OperateLoginLogInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_OperateLoginLogInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_OperateLoginLogInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_OperateLoginLogInfo>(),
            ::google::protobuf::Message::GetNewImpl<Operate_OperateLoginLogInfo>(),
            ::google::protobuf::Message::GetClearImpl<Operate_OperateLoginLogInfo>(), &Operate_OperateLoginLogInfo::ByteSizeLong,
                &Operate_OperateLoginLogInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_OperateLoginLogInfo, _impl_._cached_size_),
            false,
        },
        &Operate_OperateLoginLogInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_OperateLoginLogInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 74, 2> Operate_OperateLoginLogInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateLoginLogInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string ipAddress = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateLoginLogInfo, _impl_.ipaddress_)}},
    // uint64 accountId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_OperateLoginLogInfo, _impl_.accountid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateLoginLogInfo, _impl_.accountid_)}},
    // string loginTime = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateLoginLogInfo, _impl_.logintime_)}},
    // string logoutTime = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateLoginLogInfo, _impl_.logouttime_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 accountId = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateLoginLogInfo, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string loginTime = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateLoginLogInfo, _impl_.logintime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string logoutTime = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateLoginLogInfo, _impl_.logouttime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ipAddress = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateLoginLogInfo, _impl_.ipaddress_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\0\11\12\11\0\0\0"
    "DC.Packet.Operate_OperateLoginLogInfo"
    "loginTime"
    "logoutTime"
    "ipAddress"
  }},
};

PROTOBUF_NOINLINE void Operate_OperateLoginLogInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_OperateLoginLogInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.logintime_.ClearToEmpty();
  _impl_.logouttime_.ClearToEmpty();
  _impl_.ipaddress_.ClearToEmpty();
  _impl_.accountid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_OperateLoginLogInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_OperateLoginLogInfo& this_ = static_cast<const Operate_OperateLoginLogInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_OperateLoginLogInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_OperateLoginLogInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_OperateLoginLogInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 accountId = 1;
          if (this_._internal_accountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_accountid(), target);
          }

          // string loginTime = 2;
          if (!this_._internal_logintime().empty()) {
            const std::string& _s = this_._internal_logintime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateLoginLogInfo.loginTime");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string logoutTime = 3;
          if (!this_._internal_logouttime().empty()) {
            const std::string& _s = this_._internal_logouttime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateLoginLogInfo.logoutTime");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string ipAddress = 4;
          if (!this_._internal_ipaddress().empty()) {
            const std::string& _s = this_._internal_ipaddress();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateLoginLogInfo.ipAddress");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_OperateLoginLogInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_OperateLoginLogInfo::ByteSizeLong(const MessageLite& base) {
          const Operate_OperateLoginLogInfo& this_ = static_cast<const Operate_OperateLoginLogInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_OperateLoginLogInfo::ByteSizeLong() const {
          const Operate_OperateLoginLogInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_OperateLoginLogInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string loginTime = 2;
            if (!this_._internal_logintime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_logintime());
            }
            // string logoutTime = 3;
            if (!this_._internal_logouttime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_logouttime());
            }
            // string ipAddress = 4;
            if (!this_._internal_ipaddress().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ipaddress());
            }
            // uint64 accountId = 1;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_accountid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_OperateLoginLogInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_OperateLoginLogInfo*>(&to_msg);
  auto& from = static_cast<const Operate_OperateLoginLogInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_OperateLoginLogInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_logintime().empty()) {
    _this->_internal_set_logintime(from._internal_logintime());
  }
  if (!from._internal_logouttime().empty()) {
    _this->_internal_set_logouttime(from._internal_logouttime());
  }
  if (!from._internal_ipaddress().empty()) {
    _this->_internal_set_ipaddress(from._internal_ipaddress());
  }
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_OperateLoginLogInfo::CopyFrom(const Operate_OperateLoginLogInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_OperateLoginLogInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_OperateLoginLogInfo::InternalSwap(Operate_OperateLoginLogInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.logintime_, &other->_impl_.logintime_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.logouttime_, &other->_impl_.logouttime_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ipaddress_, &other->_impl_.ipaddress_, arena);
        swap(_impl_.accountid_, other->_impl_.accountid_);
}

::google::protobuf::Metadata Operate_OperateLoginLogInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_OperateHardwareAccountInfo::_Internal {
 public:
};

Operate_OperateHardwareAccountInfo::Operate_OperateHardwareAccountInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_OperateHardwareAccountInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateHardwareAccountInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_OperateHardwareAccountInfo& from_msg)
      : hardwareid_(arena, from.hardwareid_),
        lastupdatedate_(arena, from.lastupdatedate_),
        ishardwareban_(arena, from.ishardwareban_),
        _cached_size_{0} {}

Operate_OperateHardwareAccountInfo::Operate_OperateHardwareAccountInfo(
    ::google::protobuf::Arena* arena,
    const Operate_OperateHardwareAccountInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_OperateHardwareAccountInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.accountid_ = from._impl_.accountid_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_OperateHardwareAccountInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateHardwareAccountInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hardwareid_(arena),
        lastupdatedate_(arena),
        ishardwareban_(arena),
        _cached_size_{0} {}

inline void Operate_OperateHardwareAccountInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accountid_ = {};
}
Operate_OperateHardwareAccountInfo::~Operate_OperateHardwareAccountInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_OperateHardwareAccountInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_OperateHardwareAccountInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.hardwareid_.Destroy();
  _impl_.lastupdatedate_.Destroy();
  _impl_.ishardwareban_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_OperateHardwareAccountInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_OperateHardwareAccountInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_OperateHardwareAccountInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_OperateHardwareAccountInfo>(),
            ::google::protobuf::Message::GetNewImpl<Operate_OperateHardwareAccountInfo>(),
            ::google::protobuf::Message::GetClearImpl<Operate_OperateHardwareAccountInfo>(), &Operate_OperateHardwareAccountInfo::ByteSizeLong,
                &Operate_OperateHardwareAccountInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_OperateHardwareAccountInfo, _impl_._cached_size_),
            false,
        },
        &Operate_OperateHardwareAccountInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_OperateHardwareAccountInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 90, 2> Operate_OperateHardwareAccountInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateHardwareAccountInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string isHardwareBan = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateHardwareAccountInfo, _impl_.ishardwareban_)}},
    // uint64 accountId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_OperateHardwareAccountInfo, _impl_.accountid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateHardwareAccountInfo, _impl_.accountid_)}},
    // string hardwareId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateHardwareAccountInfo, _impl_.hardwareid_)}},
    // string lastUpdateDate = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateHardwareAccountInfo, _impl_.lastupdatedate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 accountId = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateHardwareAccountInfo, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string hardwareId = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateHardwareAccountInfo, _impl_.hardwareid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string lastUpdateDate = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateHardwareAccountInfo, _impl_.lastupdatedate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string isHardwareBan = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateHardwareAccountInfo, _impl_.ishardwareban_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\0\12\16\15\0\0\0"
    "DC.Packet.Operate_OperateHardwareAccountInfo"
    "hardwareId"
    "lastUpdateDate"
    "isHardwareBan"
  }},
};

PROTOBUF_NOINLINE void Operate_OperateHardwareAccountInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_OperateHardwareAccountInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hardwareid_.ClearToEmpty();
  _impl_.lastupdatedate_.ClearToEmpty();
  _impl_.ishardwareban_.ClearToEmpty();
  _impl_.accountid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_OperateHardwareAccountInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_OperateHardwareAccountInfo& this_ = static_cast<const Operate_OperateHardwareAccountInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_OperateHardwareAccountInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_OperateHardwareAccountInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_OperateHardwareAccountInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 accountId = 1;
          if (this_._internal_accountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_accountid(), target);
          }

          // string hardwareId = 2;
          if (!this_._internal_hardwareid().empty()) {
            const std::string& _s = this_._internal_hardwareid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateHardwareAccountInfo.hardwareId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string lastUpdateDate = 3;
          if (!this_._internal_lastupdatedate().empty()) {
            const std::string& _s = this_._internal_lastupdatedate();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateHardwareAccountInfo.lastUpdateDate");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string isHardwareBan = 4;
          if (!this_._internal_ishardwareban().empty()) {
            const std::string& _s = this_._internal_ishardwareban();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateHardwareAccountInfo.isHardwareBan");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_OperateHardwareAccountInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_OperateHardwareAccountInfo::ByteSizeLong(const MessageLite& base) {
          const Operate_OperateHardwareAccountInfo& this_ = static_cast<const Operate_OperateHardwareAccountInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_OperateHardwareAccountInfo::ByteSizeLong() const {
          const Operate_OperateHardwareAccountInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_OperateHardwareAccountInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string hardwareId = 2;
            if (!this_._internal_hardwareid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hardwareid());
            }
            // string lastUpdateDate = 3;
            if (!this_._internal_lastupdatedate().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_lastupdatedate());
            }
            // string isHardwareBan = 4;
            if (!this_._internal_ishardwareban().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ishardwareban());
            }
            // uint64 accountId = 1;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_accountid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_OperateHardwareAccountInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_OperateHardwareAccountInfo*>(&to_msg);
  auto& from = static_cast<const Operate_OperateHardwareAccountInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_OperateHardwareAccountInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hardwareid().empty()) {
    _this->_internal_set_hardwareid(from._internal_hardwareid());
  }
  if (!from._internal_lastupdatedate().empty()) {
    _this->_internal_set_lastupdatedate(from._internal_lastupdatedate());
  }
  if (!from._internal_ishardwareban().empty()) {
    _this->_internal_set_ishardwareban(from._internal_ishardwareban());
  }
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_OperateHardwareAccountInfo::CopyFrom(const Operate_OperateHardwareAccountInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_OperateHardwareAccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_OperateHardwareAccountInfo::InternalSwap(Operate_OperateHardwareAccountInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hardwareid_, &other->_impl_.hardwareid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lastupdatedate_, &other->_impl_.lastupdatedate_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ishardwareban_, &other->_impl_.ishardwareban_, arena);
        swap(_impl_.accountid_, other->_impl_.accountid_);
}

::google::protobuf::Metadata Operate_OperateHardwareAccountInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_OperateDuplicateHardwareInfo::_Internal {
 public:
};

Operate_OperateDuplicateHardwareInfo::Operate_OperateDuplicateHardwareInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_OperateDuplicateHardwareInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateDuplicateHardwareInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_OperateDuplicateHardwareInfo& from_msg)
      : hardwareid_(arena, from.hardwareid_),
        isaccountban_(arena, from.isaccountban_),
        _cached_size_{0} {}

Operate_OperateDuplicateHardwareInfo::Operate_OperateDuplicateHardwareInfo(
    ::google::protobuf::Arena* arena,
    const Operate_OperateDuplicateHardwareInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_OperateDuplicateHardwareInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.accountid_ = from._impl_.accountid_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_OperateDuplicateHardwareInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateDuplicateHardwareInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hardwareid_(arena),
        isaccountban_(arena),
        _cached_size_{0} {}

inline void Operate_OperateDuplicateHardwareInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accountid_ = {};
}
Operate_OperateDuplicateHardwareInfo::~Operate_OperateDuplicateHardwareInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_OperateDuplicateHardwareInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_OperateDuplicateHardwareInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.hardwareid_.Destroy();
  _impl_.isaccountban_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_OperateDuplicateHardwareInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_OperateDuplicateHardwareInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_OperateDuplicateHardwareInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_OperateDuplicateHardwareInfo>(),
            ::google::protobuf::Message::GetNewImpl<Operate_OperateDuplicateHardwareInfo>(),
            ::google::protobuf::Message::GetClearImpl<Operate_OperateDuplicateHardwareInfo>(), &Operate_OperateDuplicateHardwareInfo::ByteSizeLong,
                &Operate_OperateDuplicateHardwareInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_OperateDuplicateHardwareInfo, _impl_._cached_size_),
            false,
        },
        &Operate_OperateDuplicateHardwareInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_OperateDuplicateHardwareInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 77, 2> Operate_OperateDuplicateHardwareInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateDuplicateHardwareInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 accountId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_OperateDuplicateHardwareInfo, _impl_.accountid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateDuplicateHardwareInfo, _impl_.accountid_)}},
    // string hardwareId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateDuplicateHardwareInfo, _impl_.hardwareid_)}},
    // string isAccountBan = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateDuplicateHardwareInfo, _impl_.isaccountban_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 accountId = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateDuplicateHardwareInfo, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string hardwareId = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateDuplicateHardwareInfo, _impl_.hardwareid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string isAccountBan = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateDuplicateHardwareInfo, _impl_.isaccountban_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\0\12\14\0\0\0\0"
    "DC.Packet.Operate_OperateDuplicateHardwareInfo"
    "hardwareId"
    "isAccountBan"
  }},
};

PROTOBUF_NOINLINE void Operate_OperateDuplicateHardwareInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_OperateDuplicateHardwareInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hardwareid_.ClearToEmpty();
  _impl_.isaccountban_.ClearToEmpty();
  _impl_.accountid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_OperateDuplicateHardwareInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_OperateDuplicateHardwareInfo& this_ = static_cast<const Operate_OperateDuplicateHardwareInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_OperateDuplicateHardwareInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_OperateDuplicateHardwareInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_OperateDuplicateHardwareInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 accountId = 1;
          if (this_._internal_accountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_accountid(), target);
          }

          // string hardwareId = 2;
          if (!this_._internal_hardwareid().empty()) {
            const std::string& _s = this_._internal_hardwareid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateDuplicateHardwareInfo.hardwareId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string isAccountBan = 3;
          if (!this_._internal_isaccountban().empty()) {
            const std::string& _s = this_._internal_isaccountban();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateDuplicateHardwareInfo.isAccountBan");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_OperateDuplicateHardwareInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_OperateDuplicateHardwareInfo::ByteSizeLong(const MessageLite& base) {
          const Operate_OperateDuplicateHardwareInfo& this_ = static_cast<const Operate_OperateDuplicateHardwareInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_OperateDuplicateHardwareInfo::ByteSizeLong() const {
          const Operate_OperateDuplicateHardwareInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_OperateDuplicateHardwareInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string hardwareId = 2;
            if (!this_._internal_hardwareid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hardwareid());
            }
            // string isAccountBan = 3;
            if (!this_._internal_isaccountban().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_isaccountban());
            }
            // uint64 accountId = 1;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_accountid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_OperateDuplicateHardwareInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_OperateDuplicateHardwareInfo*>(&to_msg);
  auto& from = static_cast<const Operate_OperateDuplicateHardwareInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_OperateDuplicateHardwareInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hardwareid().empty()) {
    _this->_internal_set_hardwareid(from._internal_hardwareid());
  }
  if (!from._internal_isaccountban().empty()) {
    _this->_internal_set_isaccountban(from._internal_isaccountban());
  }
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_OperateDuplicateHardwareInfo::CopyFrom(const Operate_OperateDuplicateHardwareInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_OperateDuplicateHardwareInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_OperateDuplicateHardwareInfo::InternalSwap(Operate_OperateDuplicateHardwareInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hardwareid_, &other->_impl_.hardwareid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.isaccountban_, &other->_impl_.isaccountban_, arena);
        swap(_impl_.accountid_, other->_impl_.accountid_);
}

::google::protobuf::Metadata Operate_OperateDuplicateHardwareInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_OperateHardwareInfo::_Internal {
 public:
};

Operate_OperateHardwareInfo::Operate_OperateHardwareInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_OperateHardwareInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateHardwareInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_OperateHardwareInfo& from_msg)
      : hardwareaccountinfos_{visibility, arena, from.hardwareaccountinfos_},
        duplicatehardwareinfos_{visibility, arena, from.duplicatehardwareinfos_},
        _cached_size_{0} {}

Operate_OperateHardwareInfo::Operate_OperateHardwareInfo(
    ::google::protobuf::Arena* arena,
    const Operate_OperateHardwareInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_OperateHardwareInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_OperateHardwareInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateHardwareInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hardwareaccountinfos_{visibility, arena},
        duplicatehardwareinfos_{visibility, arena},
        _cached_size_{0} {}

inline void Operate_OperateHardwareInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_OperateHardwareInfo::~Operate_OperateHardwareInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_OperateHardwareInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_OperateHardwareInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_OperateHardwareInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_OperateHardwareInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_OperateHardwareInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_OperateHardwareInfo>(),
            ::google::protobuf::Message::GetNewImpl<Operate_OperateHardwareInfo>(),
            ::google::protobuf::Message::GetClearImpl<Operate_OperateHardwareInfo>(), &Operate_OperateHardwareInfo::ByteSizeLong,
                &Operate_OperateHardwareInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_OperateHardwareInfo, _impl_._cached_size_),
            false,
        },
        &Operate_OperateHardwareInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_OperateHardwareInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Operate_OperateHardwareInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateHardwareInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.Operate_OperateDuplicateHardwareInfo duplicateHardwareInfos = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Operate_OperateHardwareInfo, _impl_.duplicatehardwareinfos_)}},
    // repeated .DC.Packet.Operate_OperateHardwareAccountInfo hardwareAccountInfos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateHardwareInfo, _impl_.hardwareaccountinfos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.Operate_OperateHardwareAccountInfo hardwareAccountInfos = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateHardwareInfo, _impl_.hardwareaccountinfos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.Operate_OperateDuplicateHardwareInfo duplicateHardwareInfos = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateHardwareInfo, _impl_.duplicatehardwareinfos_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateHardwareAccountInfo>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateDuplicateHardwareInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Operate_OperateHardwareInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_OperateHardwareInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hardwareaccountinfos_.Clear();
  _impl_.duplicatehardwareinfos_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_OperateHardwareInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_OperateHardwareInfo& this_ = static_cast<const Operate_OperateHardwareInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_OperateHardwareInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_OperateHardwareInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_OperateHardwareInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.Operate_OperateHardwareAccountInfo hardwareAccountInfos = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_hardwareaccountinfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_hardwareaccountinfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.Operate_OperateDuplicateHardwareInfo duplicateHardwareInfos = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_duplicatehardwareinfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_duplicatehardwareinfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_OperateHardwareInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_OperateHardwareInfo::ByteSizeLong(const MessageLite& base) {
          const Operate_OperateHardwareInfo& this_ = static_cast<const Operate_OperateHardwareInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_OperateHardwareInfo::ByteSizeLong() const {
          const Operate_OperateHardwareInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_OperateHardwareInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.Operate_OperateHardwareAccountInfo hardwareAccountInfos = 1;
            {
              total_size += 1UL * this_._internal_hardwareaccountinfos_size();
              for (const auto& msg : this_._internal_hardwareaccountinfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.Operate_OperateDuplicateHardwareInfo duplicateHardwareInfos = 2;
            {
              total_size += 1UL * this_._internal_duplicatehardwareinfos_size();
              for (const auto& msg : this_._internal_duplicatehardwareinfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_OperateHardwareInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_OperateHardwareInfo*>(&to_msg);
  auto& from = static_cast<const Operate_OperateHardwareInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_OperateHardwareInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_hardwareaccountinfos()->MergeFrom(
      from._internal_hardwareaccountinfos());
  _this->_internal_mutable_duplicatehardwareinfos()->MergeFrom(
      from._internal_duplicatehardwareinfos());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_OperateHardwareInfo::CopyFrom(const Operate_OperateHardwareInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_OperateHardwareInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_OperateHardwareInfo::InternalSwap(Operate_OperateHardwareInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hardwareaccountinfos_.InternalSwap(&other->_impl_.hardwareaccountinfos_);
  _impl_.duplicatehardwareinfos_.InternalSwap(&other->_impl_.duplicatehardwareinfos_);
}

::google::protobuf::Metadata Operate_OperateHardwareInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_OperateFileInfo::_Internal {
 public:
};

Operate_OperateFileInfo::Operate_OperateFileInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_OperateFileInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateFileInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_OperateFileInfo& from_msg)
      : name_(arena, from.name_),
        url_(arena, from.url_),
        _cached_size_{0} {}

Operate_OperateFileInfo::Operate_OperateFileInfo(
    ::google::protobuf::Arena* arena,
    const Operate_OperateFileInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_OperateFileInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_OperateFileInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateFileInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        url_(arena),
        _cached_size_{0} {}

inline void Operate_OperateFileInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_OperateFileInfo::~Operate_OperateFileInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_OperateFileInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_OperateFileInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.url_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_OperateFileInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_OperateFileInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_OperateFileInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_OperateFileInfo>(),
            ::google::protobuf::Message::GetNewImpl<Operate_OperateFileInfo>(),
            ::google::protobuf::Message::GetClearImpl<Operate_OperateFileInfo>(), &Operate_OperateFileInfo::ByteSizeLong,
                &Operate_OperateFileInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_OperateFileInfo, _impl_._cached_size_),
            false,
        },
        &Operate_OperateFileInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_OperateFileInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> Operate_OperateFileInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateFileInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string url = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateFileInfo, _impl_.url_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateFileInfo, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateFileInfo, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string url = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateFileInfo, _impl_.url_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\4\3\0\0\0\0\0"
    "DC.Packet.Operate_OperateFileInfo"
    "name"
    "url"
  }},
};

PROTOBUF_NOINLINE void Operate_OperateFileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_OperateFileInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.url_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_OperateFileInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_OperateFileInfo& this_ = static_cast<const Operate_OperateFileInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_OperateFileInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_OperateFileInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_OperateFileInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateFileInfo.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string url = 2;
          if (!this_._internal_url().empty()) {
            const std::string& _s = this_._internal_url();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateFileInfo.url");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_OperateFileInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_OperateFileInfo::ByteSizeLong(const MessageLite& base) {
          const Operate_OperateFileInfo& this_ = static_cast<const Operate_OperateFileInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_OperateFileInfo::ByteSizeLong() const {
          const Operate_OperateFileInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_OperateFileInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string url = 2;
            if (!this_._internal_url().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_url());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_OperateFileInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_OperateFileInfo*>(&to_msg);
  auto& from = static_cast<const Operate_OperateFileInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_OperateFileInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_OperateFileInfo::CopyFrom(const Operate_OperateFileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_OperateFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_OperateFileInfo::InternalSwap(Operate_OperateFileInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, &other->_impl_.url_, arena);
}

::google::protobuf::Metadata Operate_OperateFileInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_OperateBanInfo::_Internal {
 public:
};

Operate_OperateBanInfo::Operate_OperateBanInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_OperateBanInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateBanInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_OperateBanInfo& from_msg)
      : accountid_(arena, from.accountid_),
        bantype_(arena, from.bantype_),
        comment_(arena, from.comment_),
        registertime_(arena, from.registertime_),
        begintime_(arena, from.begintime_),
        endtime_(arena, from.endtime_),
        _cached_size_{0} {}

Operate_OperateBanInfo::Operate_OperateBanInfo(
    ::google::protobuf::Arena* arena,
    const Operate_OperateBanInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_OperateBanInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_OperateBanInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateBanInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accountid_(arena),
        bantype_(arena),
        comment_(arena),
        registertime_(arena),
        begintime_(arena),
        endtime_(arena),
        _cached_size_{0} {}

inline void Operate_OperateBanInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_OperateBanInfo::~Operate_OperateBanInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_OperateBanInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_OperateBanInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.bantype_.Destroy();
  _impl_.comment_.Destroy();
  _impl_.registertime_.Destroy();
  _impl_.begintime_.Destroy();
  _impl_.endtime_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_OperateBanInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_OperateBanInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_OperateBanInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_OperateBanInfo>(),
            ::google::protobuf::Message::GetNewImpl<Operate_OperateBanInfo>(),
            ::google::protobuf::Message::GetClearImpl<Operate_OperateBanInfo>(), &Operate_OperateBanInfo::ByteSizeLong,
                &Operate_OperateBanInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_OperateBanInfo, _impl_._cached_size_),
            false,
        },
        &Operate_OperateBanInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_OperateBanInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 92, 2> Operate_OperateBanInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateBanInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanInfo, _impl_.accountid_)}},
    // string banType = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanInfo, _impl_.bantype_)}},
    // string comment = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanInfo, _impl_.comment_)}},
    // string registerTime = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanInfo, _impl_.registertime_)}},
    // string beginTime = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanInfo, _impl_.begintime_)}},
    // string endTime = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanInfo, _impl_.endtime_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanInfo, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string banType = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanInfo, _impl_.bantype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string comment = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanInfo, _impl_.comment_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string registerTime = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanInfo, _impl_.registertime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string beginTime = 5;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanInfo, _impl_.begintime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string endTime = 6;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanInfo, _impl_.endtime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\11\7\7\14\11\7\0"
    "DC.Packet.Operate_OperateBanInfo"
    "accountId"
    "banType"
    "comment"
    "registerTime"
    "beginTime"
    "endTime"
  }},
};

PROTOBUF_NOINLINE void Operate_OperateBanInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_OperateBanInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.bantype_.ClearToEmpty();
  _impl_.comment_.ClearToEmpty();
  _impl_.registertime_.ClearToEmpty();
  _impl_.begintime_.ClearToEmpty();
  _impl_.endtime_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_OperateBanInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_OperateBanInfo& this_ = static_cast<const Operate_OperateBanInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_OperateBanInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_OperateBanInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_OperateBanInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateBanInfo.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string banType = 2;
          if (!this_._internal_bantype().empty()) {
            const std::string& _s = this_._internal_bantype();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateBanInfo.banType");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string comment = 3;
          if (!this_._internal_comment().empty()) {
            const std::string& _s = this_._internal_comment();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateBanInfo.comment");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string registerTime = 4;
          if (!this_._internal_registertime().empty()) {
            const std::string& _s = this_._internal_registertime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateBanInfo.registerTime");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string beginTime = 5;
          if (!this_._internal_begintime().empty()) {
            const std::string& _s = this_._internal_begintime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateBanInfo.beginTime");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string endTime = 6;
          if (!this_._internal_endtime().empty()) {
            const std::string& _s = this_._internal_endtime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateBanInfo.endTime");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_OperateBanInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_OperateBanInfo::ByteSizeLong(const MessageLite& base) {
          const Operate_OperateBanInfo& this_ = static_cast<const Operate_OperateBanInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_OperateBanInfo::ByteSizeLong() const {
          const Operate_OperateBanInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_OperateBanInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string banType = 2;
            if (!this_._internal_bantype().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_bantype());
            }
            // string comment = 3;
            if (!this_._internal_comment().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_comment());
            }
            // string registerTime = 4;
            if (!this_._internal_registertime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_registertime());
            }
            // string beginTime = 5;
            if (!this_._internal_begintime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_begintime());
            }
            // string endTime = 6;
            if (!this_._internal_endtime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_endtime());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_OperateBanInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_OperateBanInfo*>(&to_msg);
  auto& from = static_cast<const Operate_OperateBanInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_OperateBanInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_bantype().empty()) {
    _this->_internal_set_bantype(from._internal_bantype());
  }
  if (!from._internal_comment().empty()) {
    _this->_internal_set_comment(from._internal_comment());
  }
  if (!from._internal_registertime().empty()) {
    _this->_internal_set_registertime(from._internal_registertime());
  }
  if (!from._internal_begintime().empty()) {
    _this->_internal_set_begintime(from._internal_begintime());
  }
  if (!from._internal_endtime().empty()) {
    _this->_internal_set_endtime(from._internal_endtime());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_OperateBanInfo::CopyFrom(const Operate_OperateBanInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_OperateBanInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_OperateBanInfo::InternalSwap(Operate_OperateBanInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bantype_, &other->_impl_.bantype_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.comment_, &other->_impl_.comment_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.registertime_, &other->_impl_.registertime_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.begintime_, &other->_impl_.begintime_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.endtime_, &other->_impl_.endtime_, arena);
}

::google::protobuf::Metadata Operate_OperateBanInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_OperateBanHardwareInfo::_Internal {
 public:
};

Operate_OperateBanHardwareInfo::Operate_OperateBanHardwareInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_OperateBanHardwareInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateBanHardwareInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_OperateBanHardwareInfo& from_msg)
      : hardwareid_(arena, from.hardwareid_),
        bantype_(arena, from.bantype_),
        comment_(arena, from.comment_),
        registertime_(arena, from.registertime_),
        _cached_size_{0} {}

Operate_OperateBanHardwareInfo::Operate_OperateBanHardwareInfo(
    ::google::protobuf::Arena* arena,
    const Operate_OperateBanHardwareInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_OperateBanHardwareInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_OperateBanHardwareInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperateBanHardwareInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hardwareid_(arena),
        bantype_(arena),
        comment_(arena),
        registertime_(arena),
        _cached_size_{0} {}

inline void Operate_OperateBanHardwareInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_OperateBanHardwareInfo::~Operate_OperateBanHardwareInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_OperateBanHardwareInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_OperateBanHardwareInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.hardwareid_.Destroy();
  _impl_.bantype_.Destroy();
  _impl_.comment_.Destroy();
  _impl_.registertime_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_OperateBanHardwareInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_OperateBanHardwareInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_OperateBanHardwareInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_OperateBanHardwareInfo>(),
            ::google::protobuf::Message::GetNewImpl<Operate_OperateBanHardwareInfo>(),
            ::google::protobuf::Message::GetClearImpl<Operate_OperateBanHardwareInfo>(), &Operate_OperateBanHardwareInfo::ByteSizeLong,
                &Operate_OperateBanHardwareInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_OperateBanHardwareInfo, _impl_._cached_size_),
            false,
        },
        &Operate_OperateBanHardwareInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_OperateBanHardwareInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 85, 2> Operate_OperateBanHardwareInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateBanHardwareInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string registerTime = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanHardwareInfo, _impl_.registertime_)}},
    // string hardwareId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanHardwareInfo, _impl_.hardwareid_)}},
    // string banType = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanHardwareInfo, _impl_.bantype_)}},
    // string comment = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperateBanHardwareInfo, _impl_.comment_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string hardwareId = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanHardwareInfo, _impl_.hardwareid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string banType = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanHardwareInfo, _impl_.bantype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string comment = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanHardwareInfo, _impl_.comment_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string registerTime = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_OperateBanHardwareInfo, _impl_.registertime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\12\7\7\14\0\0\0"
    "DC.Packet.Operate_OperateBanHardwareInfo"
    "hardwareId"
    "banType"
    "comment"
    "registerTime"
  }},
};

PROTOBUF_NOINLINE void Operate_OperateBanHardwareInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_OperateBanHardwareInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hardwareid_.ClearToEmpty();
  _impl_.bantype_.ClearToEmpty();
  _impl_.comment_.ClearToEmpty();
  _impl_.registertime_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_OperateBanHardwareInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_OperateBanHardwareInfo& this_ = static_cast<const Operate_OperateBanHardwareInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_OperateBanHardwareInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_OperateBanHardwareInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_OperateBanHardwareInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string hardwareId = 1;
          if (!this_._internal_hardwareid().empty()) {
            const std::string& _s = this_._internal_hardwareid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateBanHardwareInfo.hardwareId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string banType = 2;
          if (!this_._internal_bantype().empty()) {
            const std::string& _s = this_._internal_bantype();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateBanHardwareInfo.banType");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string comment = 3;
          if (!this_._internal_comment().empty()) {
            const std::string& _s = this_._internal_comment();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateBanHardwareInfo.comment");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string registerTime = 4;
          if (!this_._internal_registertime().empty()) {
            const std::string& _s = this_._internal_registertime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperateBanHardwareInfo.registerTime");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_OperateBanHardwareInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_OperateBanHardwareInfo::ByteSizeLong(const MessageLite& base) {
          const Operate_OperateBanHardwareInfo& this_ = static_cast<const Operate_OperateBanHardwareInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_OperateBanHardwareInfo::ByteSizeLong() const {
          const Operate_OperateBanHardwareInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_OperateBanHardwareInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string hardwareId = 1;
            if (!this_._internal_hardwareid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hardwareid());
            }
            // string banType = 2;
            if (!this_._internal_bantype().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_bantype());
            }
            // string comment = 3;
            if (!this_._internal_comment().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_comment());
            }
            // string registerTime = 4;
            if (!this_._internal_registertime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_registertime());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_OperateBanHardwareInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_OperateBanHardwareInfo*>(&to_msg);
  auto& from = static_cast<const Operate_OperateBanHardwareInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_OperateBanHardwareInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hardwareid().empty()) {
    _this->_internal_set_hardwareid(from._internal_hardwareid());
  }
  if (!from._internal_bantype().empty()) {
    _this->_internal_set_bantype(from._internal_bantype());
  }
  if (!from._internal_comment().empty()) {
    _this->_internal_set_comment(from._internal_comment());
  }
  if (!from._internal_registertime().empty()) {
    _this->_internal_set_registertime(from._internal_registertime());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_OperateBanHardwareInfo::CopyFrom(const Operate_OperateBanHardwareInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_OperateBanHardwareInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_OperateBanHardwareInfo::InternalSwap(Operate_OperateBanHardwareInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hardwareid_, &other->_impl_.hardwareid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bantype_, &other->_impl_.bantype_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.comment_, &other->_impl_.comment_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.registertime_, &other->_impl_.registertime_, arena);
}

::google::protobuf::Metadata Operate_OperateBanHardwareInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_OperatePlatformInfo::_Internal {
 public:
};

Operate_OperatePlatformInfo::Operate_OperatePlatformInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_OperatePlatformInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperatePlatformInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_OperatePlatformInfo& from_msg)
      : ironmaceid_(arena, from.ironmaceid_),
        email_(arena, from.email_),
        username_(arena, from.username_),
        accountnickname_(arena, from.accountnickname_),
        _cached_size_{0} {}

Operate_OperatePlatformInfo::Operate_OperatePlatformInfo(
    ::google::protobuf::Arena* arena,
    const Operate_OperatePlatformInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_OperatePlatformInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_OperatePlatformInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_OperatePlatformInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ironmaceid_(arena),
        email_(arena),
        username_(arena),
        accountnickname_(arena),
        _cached_size_{0} {}

inline void Operate_OperatePlatformInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_OperatePlatformInfo::~Operate_OperatePlatformInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_OperatePlatformInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_OperatePlatformInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.ironmaceid_.Destroy();
  _impl_.email_.Destroy();
  _impl_.username_.Destroy();
  _impl_.accountnickname_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_OperatePlatformInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_OperatePlatformInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_OperatePlatformInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_OperatePlatformInfo>(),
            ::google::protobuf::Message::GetNewImpl<Operate_OperatePlatformInfo>(),
            ::google::protobuf::Message::GetClearImpl<Operate_OperatePlatformInfo>(), &Operate_OperatePlatformInfo::ByteSizeLong,
                &Operate_OperatePlatformInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_OperatePlatformInfo, _impl_._cached_size_),
            false,
        },
        &Operate_OperatePlatformInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_OperatePlatformInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 84, 2> Operate_OperatePlatformInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperatePlatformInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string accountNickName = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperatePlatformInfo, _impl_.accountnickname_)}},
    // string ironmaceid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperatePlatformInfo, _impl_.ironmaceid_)}},
    // string email = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperatePlatformInfo, _impl_.email_)}},
    // string username = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_OperatePlatformInfo, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string ironmaceid = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_OperatePlatformInfo, _impl_.ironmaceid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string email = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_OperatePlatformInfo, _impl_.email_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string username = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_OperatePlatformInfo, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string accountNickName = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_OperatePlatformInfo, _impl_.accountnickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\12\5\10\17\0\0\0"
    "DC.Packet.Operate_OperatePlatformInfo"
    "ironmaceid"
    "email"
    "username"
    "accountNickName"
  }},
};

PROTOBUF_NOINLINE void Operate_OperatePlatformInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_OperatePlatformInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ironmaceid_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _impl_.username_.ClearToEmpty();
  _impl_.accountnickname_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_OperatePlatformInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_OperatePlatformInfo& this_ = static_cast<const Operate_OperatePlatformInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_OperatePlatformInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_OperatePlatformInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_OperatePlatformInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string ironmaceid = 1;
          if (!this_._internal_ironmaceid().empty()) {
            const std::string& _s = this_._internal_ironmaceid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperatePlatformInfo.ironmaceid");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string email = 2;
          if (!this_._internal_email().empty()) {
            const std::string& _s = this_._internal_email();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperatePlatformInfo.email");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string username = 3;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperatePlatformInfo.username");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string accountNickName = 4;
          if (!this_._internal_accountnickname().empty()) {
            const std::string& _s = this_._internal_accountnickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_OperatePlatformInfo.accountNickName");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_OperatePlatformInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_OperatePlatformInfo::ByteSizeLong(const MessageLite& base) {
          const Operate_OperatePlatformInfo& this_ = static_cast<const Operate_OperatePlatformInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_OperatePlatformInfo::ByteSizeLong() const {
          const Operate_OperatePlatformInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_OperatePlatformInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string ironmaceid = 1;
            if (!this_._internal_ironmaceid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ironmaceid());
            }
            // string email = 2;
            if (!this_._internal_email().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_email());
            }
            // string username = 3;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // string accountNickName = 4;
            if (!this_._internal_accountnickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountnickname());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_OperatePlatformInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_OperatePlatformInfo*>(&to_msg);
  auto& from = static_cast<const Operate_OperatePlatformInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_OperatePlatformInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ironmaceid().empty()) {
    _this->_internal_set_ironmaceid(from._internal_ironmaceid());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_accountnickname().empty()) {
    _this->_internal_set_accountnickname(from._internal_accountnickname());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_OperatePlatformInfo::CopyFrom(const Operate_OperatePlatformInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_OperatePlatformInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_OperatePlatformInfo::InternalSwap(Operate_OperatePlatformInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ironmaceid_, &other->_impl_.ironmaceid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, &other->_impl_.email_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountnickname_, &other->_impl_.accountnickname_, arena);
}

::google::protobuf::Metadata Operate_OperatePlatformInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_AllHackInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Operate_AllHackInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_._has_bits_);
};

Operate_AllHackInfo::Operate_AllHackInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_AllHackInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_AllHackInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_AllHackInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        characterinfos_{visibility, arena, from.characterinfos_},
        reportbodyinfos_{visibility, arena, from.reportbodyinfos_},
        ironshieldinfos_{visibility, arena, from.ironshieldinfos_},
        banuserinfos_{visibility, arena, from.banuserinfos_},
        loginloginfos_{visibility, arena, from.loginloginfos_},
        hardwareaccountinfos_{visibility, arena, from.hardwareaccountinfos_},
        duplicatehardwareinfos_{visibility, arena, from.duplicatehardwareinfos_},
        fileinfos_{visibility, arena, from.fileinfos_},
        baninfos_{visibility, arena, from.baninfos_},
        banhardwareinfos_{visibility, arena, from.banhardwareinfos_},
        findbanlist_{visibility, arena, from.findbanlist_},
        _findbanlist_cached_byte_size_{0},
        banlist_{visibility, arena, from.banlist_},
        _banlist_cached_byte_size_{0} {}

Operate_AllHackInfo::Operate_AllHackInfo(
    ::google::protobuf::Arena* arena,
    const Operate_AllHackInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_AllHackInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.hackinfos_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::Operate_Hacklog>(
                              arena, *from._impl_.hackinfos_)
                        : nullptr;
  _impl_.platforminfo_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::Operate_OperatePlatformInfo>(
                              arena, *from._impl_.platforminfo_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_AllHackInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_AllHackInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        characterinfos_{visibility, arena},
        reportbodyinfos_{visibility, arena},
        ironshieldinfos_{visibility, arena},
        banuserinfos_{visibility, arena},
        loginloginfos_{visibility, arena},
        hardwareaccountinfos_{visibility, arena},
        duplicatehardwareinfos_{visibility, arena},
        fileinfos_{visibility, arena},
        baninfos_{visibility, arena},
        banhardwareinfos_{visibility, arena},
        findbanlist_{visibility, arena},
        _findbanlist_cached_byte_size_{0},
        banlist_{visibility, arena},
        _banlist_cached_byte_size_{0} {}

inline void Operate_AllHackInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hackinfos_),
           0,
           offsetof(Impl_, platforminfo_) -
               offsetof(Impl_, hackinfos_) +
               sizeof(Impl_::platforminfo_));
}
Operate_AllHackInfo::~Operate_AllHackInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_AllHackInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_AllHackInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.hackinfos_;
  delete _impl_.platforminfo_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_AllHackInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_AllHackInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_AllHackInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_AllHackInfo>(),
            ::google::protobuf::Message::GetNewImpl<Operate_AllHackInfo>(),
            ::google::protobuf::Message::GetClearImpl<Operate_AllHackInfo>(), &Operate_AllHackInfo::ByteSizeLong,
                &Operate_AllHackInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_._cached_size_),
            false,
        },
        &Operate_AllHackInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_AllHackInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 12, 0, 2> Operate_AllHackInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    12,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_AllHackInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .DC.Packet.Operate_character_info characterInfos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.characterinfos_)}},
    // repeated .DC.Packet.Operate_OperateReportBodyInfo reportBodyInfos = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.reportbodyinfos_)}},
    // repeated .DC.Packet.Operate_OperateIronShieldInfo ironShieldInfos = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.ironshieldinfos_)}},
    // repeated .DC.Packet.Operate_OperateBanUserInfos banUserInfos = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.banuserinfos_)}},
    // repeated .DC.Packet.Operate_OperateLoginLogInfo loginLogInfos = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 4, PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.loginloginfos_)}},
    // repeated .DC.Packet.Operate_OperateHardwareAccountInfo hardwareAccountInfos = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 5, PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.hardwareaccountinfos_)}},
    // repeated .DC.Packet.Operate_OperateDuplicateHardwareInfo duplicateHardwareInfos = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 6, PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.duplicatehardwareinfos_)}},
    // repeated .DC.Packet.Operate_OperateFileInfo fileInfos = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 7, PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.fileinfos_)}},
    // repeated .DC.Packet.Operate_OperateBanInfo banInfos = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 8, PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.baninfos_)}},
    // repeated .DC.Packet.Operate_OperateBanHardwareInfo banHardwareInfos = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 9, PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.banhardwareinfos_)}},
    // .DC.Packet.Operate_Hacklog hackInfos = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 10, PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.hackinfos_)}},
    // repeated uint64 findBanList = 12;
    {::_pbi::TcParser::FastV64P1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.findbanlist_)}},
    // repeated uint64 banList = 13;
    {::_pbi::TcParser::FastV64P1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.banlist_)}},
    // .DC.Packet.Operate_OperatePlatformInfo platformInfo = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 1, 11, PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.platforminfo_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.Operate_character_info characterInfos = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.characterinfos_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.Operate_OperateReportBodyInfo reportBodyInfos = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.reportbodyinfos_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.Operate_OperateIronShieldInfo ironShieldInfos = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.ironshieldinfos_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.Operate_OperateBanUserInfos banUserInfos = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.banuserinfos_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.Operate_OperateLoginLogInfo loginLogInfos = 5;
    {PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.loginloginfos_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.Operate_OperateHardwareAccountInfo hardwareAccountInfos = 6;
    {PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.hardwareaccountinfos_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.Operate_OperateDuplicateHardwareInfo duplicateHardwareInfos = 7;
    {PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.duplicatehardwareinfos_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.Operate_OperateFileInfo fileInfos = 8;
    {PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.fileinfos_), -1, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.Operate_OperateBanInfo banInfos = 9;
    {PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.baninfos_), -1, 8,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.Operate_OperateBanHardwareInfo banHardwareInfos = 10;
    {PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.banhardwareinfos_), -1, 9,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .DC.Packet.Operate_Hacklog hackInfos = 11;
    {PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.hackinfos_), _Internal::kHasBitsOffset + 0, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint64 findBanList = 12;
    {PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.findbanlist_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // repeated uint64 banList = 13;
    {PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.banlist_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // .DC.Packet.Operate_OperatePlatformInfo platformInfo = 14;
    {PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.platforminfo_), _Internal::kHasBitsOffset + 1, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_character_info>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateReportBodyInfo>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateIronShieldInfo>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateBanUserInfos>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateLoginLogInfo>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateHardwareAccountInfo>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateDuplicateHardwareInfo>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateFileInfo>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateBanInfo>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateBanHardwareInfo>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_Hacklog>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperatePlatformInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Operate_AllHackInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_AllHackInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.characterinfos_.Clear();
  _impl_.reportbodyinfos_.Clear();
  _impl_.ironshieldinfos_.Clear();
  _impl_.banuserinfos_.Clear();
  _impl_.loginloginfos_.Clear();
  _impl_.hardwareaccountinfos_.Clear();
  _impl_.duplicatehardwareinfos_.Clear();
  _impl_.fileinfos_.Clear();
  _impl_.baninfos_.Clear();
  _impl_.banhardwareinfos_.Clear();
  _impl_.findbanlist_.Clear();
  _impl_.banlist_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.hackinfos_ != nullptr);
      _impl_.hackinfos_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.platforminfo_ != nullptr);
      _impl_.platforminfo_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_AllHackInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_AllHackInfo& this_ = static_cast<const Operate_AllHackInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_AllHackInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_AllHackInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_AllHackInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.Operate_character_info characterInfos = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_characterinfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_characterinfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.Operate_OperateReportBodyInfo reportBodyInfos = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_reportbodyinfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_reportbodyinfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.Operate_OperateIronShieldInfo ironShieldInfos = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_ironshieldinfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_ironshieldinfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.Operate_OperateBanUserInfos banUserInfos = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_banuserinfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_banuserinfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.Operate_OperateLoginLogInfo loginLogInfos = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_loginloginfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_loginloginfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.Operate_OperateHardwareAccountInfo hardwareAccountInfos = 6;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_hardwareaccountinfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_hardwareaccountinfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.Operate_OperateDuplicateHardwareInfo duplicateHardwareInfos = 7;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_duplicatehardwareinfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_duplicatehardwareinfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.Operate_OperateFileInfo fileInfos = 8;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_fileinfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_fileinfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    8, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.Operate_OperateBanInfo banInfos = 9;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_baninfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_baninfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    9, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.Operate_OperateBanHardwareInfo banHardwareInfos = 10;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_banhardwareinfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_banhardwareinfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    10, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.Operate_Hacklog hackInfos = 11;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.hackinfos_, this_._impl_.hackinfos_->GetCachedSize(), target,
                stream);
          }

          // repeated uint64 findBanList = 12;
          {
            int byte_size = this_._impl_._findbanlist_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt64Packed(
                  12, this_._internal_findbanlist(), byte_size, target);
            }
          }

          // repeated uint64 banList = 13;
          {
            int byte_size = this_._impl_._banlist_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt64Packed(
                  13, this_._internal_banlist(), byte_size, target);
            }
          }

          // .DC.Packet.Operate_OperatePlatformInfo platformInfo = 14;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                14, *this_._impl_.platforminfo_, this_._impl_.platforminfo_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_AllHackInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_AllHackInfo::ByteSizeLong(const MessageLite& base) {
          const Operate_AllHackInfo& this_ = static_cast<const Operate_AllHackInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_AllHackInfo::ByteSizeLong() const {
          const Operate_AllHackInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_AllHackInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.Operate_character_info characterInfos = 1;
            {
              total_size += 1UL * this_._internal_characterinfos_size();
              for (const auto& msg : this_._internal_characterinfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.Operate_OperateReportBodyInfo reportBodyInfos = 2;
            {
              total_size += 1UL * this_._internal_reportbodyinfos_size();
              for (const auto& msg : this_._internal_reportbodyinfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.Operate_OperateIronShieldInfo ironShieldInfos = 3;
            {
              total_size += 1UL * this_._internal_ironshieldinfos_size();
              for (const auto& msg : this_._internal_ironshieldinfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.Operate_OperateBanUserInfos banUserInfos = 4;
            {
              total_size += 1UL * this_._internal_banuserinfos_size();
              for (const auto& msg : this_._internal_banuserinfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.Operate_OperateLoginLogInfo loginLogInfos = 5;
            {
              total_size += 1UL * this_._internal_loginloginfos_size();
              for (const auto& msg : this_._internal_loginloginfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.Operate_OperateHardwareAccountInfo hardwareAccountInfos = 6;
            {
              total_size += 1UL * this_._internal_hardwareaccountinfos_size();
              for (const auto& msg : this_._internal_hardwareaccountinfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.Operate_OperateDuplicateHardwareInfo duplicateHardwareInfos = 7;
            {
              total_size += 1UL * this_._internal_duplicatehardwareinfos_size();
              for (const auto& msg : this_._internal_duplicatehardwareinfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.Operate_OperateFileInfo fileInfos = 8;
            {
              total_size += 1UL * this_._internal_fileinfos_size();
              for (const auto& msg : this_._internal_fileinfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.Operate_OperateBanInfo banInfos = 9;
            {
              total_size += 1UL * this_._internal_baninfos_size();
              for (const auto& msg : this_._internal_baninfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.Operate_OperateBanHardwareInfo banHardwareInfos = 10;
            {
              total_size += 1UL * this_._internal_banhardwareinfos_size();
              for (const auto& msg : this_._internal_banhardwareinfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated uint64 findBanList = 12;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt64SizeWithPackedTagSize(
                      this_._internal_findbanlist(), 1,
                      this_._impl_._findbanlist_cached_byte_size_);
            }
            // repeated uint64 banList = 13;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt64SizeWithPackedTagSize(
                      this_._internal_banlist(), 1,
                      this_._impl_._banlist_cached_byte_size_);
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .DC.Packet.Operate_Hacklog hackInfos = 11;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.hackinfos_);
            }
            // .DC.Packet.Operate_OperatePlatformInfo platformInfo = 14;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.platforminfo_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_AllHackInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_AllHackInfo*>(&to_msg);
  auto& from = static_cast<const Operate_AllHackInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_AllHackInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_characterinfos()->MergeFrom(
      from._internal_characterinfos());
  _this->_internal_mutable_reportbodyinfos()->MergeFrom(
      from._internal_reportbodyinfos());
  _this->_internal_mutable_ironshieldinfos()->MergeFrom(
      from._internal_ironshieldinfos());
  _this->_internal_mutable_banuserinfos()->MergeFrom(
      from._internal_banuserinfos());
  _this->_internal_mutable_loginloginfos()->MergeFrom(
      from._internal_loginloginfos());
  _this->_internal_mutable_hardwareaccountinfos()->MergeFrom(
      from._internal_hardwareaccountinfos());
  _this->_internal_mutable_duplicatehardwareinfos()->MergeFrom(
      from._internal_duplicatehardwareinfos());
  _this->_internal_mutable_fileinfos()->MergeFrom(
      from._internal_fileinfos());
  _this->_internal_mutable_baninfos()->MergeFrom(
      from._internal_baninfos());
  _this->_internal_mutable_banhardwareinfos()->MergeFrom(
      from._internal_banhardwareinfos());
  _this->_internal_mutable_findbanlist()->MergeFrom(from._internal_findbanlist());
  _this->_internal_mutable_banlist()->MergeFrom(from._internal_banlist());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.hackinfos_ != nullptr);
      if (_this->_impl_.hackinfos_ == nullptr) {
        _this->_impl_.hackinfos_ =
            ::google::protobuf::Message::CopyConstruct<::DC::Packet::Operate_Hacklog>(arena, *from._impl_.hackinfos_);
      } else {
        _this->_impl_.hackinfos_->MergeFrom(*from._impl_.hackinfos_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.platforminfo_ != nullptr);
      if (_this->_impl_.platforminfo_ == nullptr) {
        _this->_impl_.platforminfo_ =
            ::google::protobuf::Message::CopyConstruct<::DC::Packet::Operate_OperatePlatformInfo>(arena, *from._impl_.platforminfo_);
      } else {
        _this->_impl_.platforminfo_->MergeFrom(*from._impl_.platforminfo_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_AllHackInfo::CopyFrom(const Operate_AllHackInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_AllHackInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_AllHackInfo::InternalSwap(Operate_AllHackInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.characterinfos_.InternalSwap(&other->_impl_.characterinfos_);
  _impl_.reportbodyinfos_.InternalSwap(&other->_impl_.reportbodyinfos_);
  _impl_.ironshieldinfos_.InternalSwap(&other->_impl_.ironshieldinfos_);
  _impl_.banuserinfos_.InternalSwap(&other->_impl_.banuserinfos_);
  _impl_.loginloginfos_.InternalSwap(&other->_impl_.loginloginfos_);
  _impl_.hardwareaccountinfos_.InternalSwap(&other->_impl_.hardwareaccountinfos_);
  _impl_.duplicatehardwareinfos_.InternalSwap(&other->_impl_.duplicatehardwareinfos_);
  _impl_.fileinfos_.InternalSwap(&other->_impl_.fileinfos_);
  _impl_.baninfos_.InternalSwap(&other->_impl_.baninfos_);
  _impl_.banhardwareinfos_.InternalSwap(&other->_impl_.banhardwareinfos_);
  _impl_.findbanlist_.InternalSwap(&other->_impl_.findbanlist_);
  _impl_.banlist_.InternalSwap(&other->_impl_.banlist_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.platforminfo_)
      + sizeof(Operate_AllHackInfo::_impl_.platforminfo_)
      - PROTOBUF_FIELD_OFFSET(Operate_AllHackInfo, _impl_.hackinfos_)>(
          reinterpret_cast<char*>(&_impl_.hackinfos_),
          reinterpret_cast<char*>(&other->_impl_.hackinfos_));
}

::google::protobuf::Metadata Operate_AllHackInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_AllReportList::_Internal {
 public:
};

Operate_AllReportList::Operate_AllReportList(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_AllReportList)
}
inline PROTOBUF_NDEBUG_INLINE Operate_AllReportList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_AllReportList& from_msg)
      : report_{visibility, arena, from.report_},
        _cached_size_{0} {}

Operate_AllReportList::Operate_AllReportList(
    ::google::protobuf::Arena* arena,
    const Operate_AllReportList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_AllReportList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_AllReportList)
}
inline PROTOBUF_NDEBUG_INLINE Operate_AllReportList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : report_{visibility, arena},
        _cached_size_{0} {}

inline void Operate_AllReportList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_AllReportList::~Operate_AllReportList() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_AllReportList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_AllReportList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_AllReportList::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_AllReportList_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_AllReportList::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_AllReportList>(),
            ::google::protobuf::Message::GetNewImpl<Operate_AllReportList>(),
            ::google::protobuf::Message::GetClearImpl<Operate_AllReportList>(), &Operate_AllReportList::ByteSizeLong,
                &Operate_AllReportList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_AllReportList, _impl_._cached_size_),
            false,
        },
        &Operate_AllReportList::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_AllReportList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Operate_AllReportList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_AllReportList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.Operate_OperateReportBodyInfo report = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_AllReportList, _impl_.report_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.Operate_OperateReportBodyInfo report = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_AllReportList, _impl_.report_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateReportBodyInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Operate_AllReportList::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_AllReportList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.report_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_AllReportList::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_AllReportList& this_ = static_cast<const Operate_AllReportList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_AllReportList::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_AllReportList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_AllReportList)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.Operate_OperateReportBodyInfo report = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_report_size());
               i < n; i++) {
            const auto& repfield = this_._internal_report().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_AllReportList)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_AllReportList::ByteSizeLong(const MessageLite& base) {
          const Operate_AllReportList& this_ = static_cast<const Operate_AllReportList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_AllReportList::ByteSizeLong() const {
          const Operate_AllReportList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_AllReportList)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.Operate_OperateReportBodyInfo report = 1;
            {
              total_size += 1UL * this_._internal_report_size();
              for (const auto& msg : this_._internal_report()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_AllReportList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_AllReportList*>(&to_msg);
  auto& from = static_cast<const Operate_AllReportList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_AllReportList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_report()->MergeFrom(
      from._internal_report());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_AllReportList::CopyFrom(const Operate_AllReportList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_AllReportList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_AllReportList::InternalSwap(Operate_AllReportList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.report_.InternalSwap(&other->_impl_.report_);
}

::google::protobuf::Metadata Operate_AllReportList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_AllIronShieldList::_Internal {
 public:
};

Operate_AllIronShieldList::Operate_AllIronShieldList(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_AllIronShieldList)
}
inline PROTOBUF_NDEBUG_INLINE Operate_AllIronShieldList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_AllIronShieldList& from_msg)
      : ironshield_{visibility, arena, from.ironshield_},
        _cached_size_{0} {}

Operate_AllIronShieldList::Operate_AllIronShieldList(
    ::google::protobuf::Arena* arena,
    const Operate_AllIronShieldList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_AllIronShieldList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_AllIronShieldList)
}
inline PROTOBUF_NDEBUG_INLINE Operate_AllIronShieldList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ironshield_{visibility, arena},
        _cached_size_{0} {}

inline void Operate_AllIronShieldList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operate_AllIronShieldList::~Operate_AllIronShieldList() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_AllIronShieldList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_AllIronShieldList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_AllIronShieldList::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_AllIronShieldList_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_AllIronShieldList::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_AllIronShieldList>(),
            ::google::protobuf::Message::GetNewImpl<Operate_AllIronShieldList>(),
            ::google::protobuf::Message::GetClearImpl<Operate_AllIronShieldList>(), &Operate_AllIronShieldList::ByteSizeLong,
                &Operate_AllIronShieldList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_AllIronShieldList, _impl_._cached_size_),
            false,
        },
        &Operate_AllIronShieldList::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_AllIronShieldList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Operate_AllIronShieldList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_AllIronShieldList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.Operate_OperateIronShieldInfo ironShield = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_AllIronShieldList, _impl_.ironshield_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.Operate_OperateIronShieldInfo ironShield = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_AllIronShieldList, _impl_.ironshield_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_OperateIronShieldInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Operate_AllIronShieldList::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_AllIronShieldList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ironshield_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_AllIronShieldList::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_AllIronShieldList& this_ = static_cast<const Operate_AllIronShieldList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_AllIronShieldList::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_AllIronShieldList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_AllIronShieldList)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.Operate_OperateIronShieldInfo ironShield = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_ironshield_size());
               i < n; i++) {
            const auto& repfield = this_._internal_ironshield().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_AllIronShieldList)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_AllIronShieldList::ByteSizeLong(const MessageLite& base) {
          const Operate_AllIronShieldList& this_ = static_cast<const Operate_AllIronShieldList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_AllIronShieldList::ByteSizeLong() const {
          const Operate_AllIronShieldList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_AllIronShieldList)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.Operate_OperateIronShieldInfo ironShield = 1;
            {
              total_size += 1UL * this_._internal_ironshield_size();
              for (const auto& msg : this_._internal_ironshield()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_AllIronShieldList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_AllIronShieldList*>(&to_msg);
  auto& from = static_cast<const Operate_AllIronShieldList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_AllIronShieldList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ironshield()->MergeFrom(
      from._internal_ironshield());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_AllIronShieldList::CopyFrom(const Operate_AllIronShieldList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_AllIronShieldList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_AllIronShieldList::InternalSwap(Operate_AllIronShieldList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ironshield_.InternalSwap(&other->_impl_.ironshield_);
}

::google::protobuf::Metadata Operate_AllIronShieldList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReasonSearchBanUserInfo::_Internal {
 public:
};

ReasonSearchBanUserInfo::ReasonSearchBanUserInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.ReasonSearchBanUserInfo)
}
inline PROTOBUF_NDEBUG_INLINE ReasonSearchBanUserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::ReasonSearchBanUserInfo& from_msg)
      : nickname_(arena, from.nickname_),
        reason_(arena, from.reason_),
        comment_(arena, from.comment_),
        begintime_(arena, from.begintime_),
        endtime_(arena, from.endtime_),
        registertime_(arena, from.registertime_),
        _cached_size_{0} {}

ReasonSearchBanUserInfo::ReasonSearchBanUserInfo(
    ::google::protobuf::Arena* arena,
    const ReasonSearchBanUserInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReasonSearchBanUserInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, accountid_),
           offsetof(Impl_, bantype_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::bantype_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.ReasonSearchBanUserInfo)
}
inline PROTOBUF_NDEBUG_INLINE ReasonSearchBanUserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : nickname_(arena),
        reason_(arena),
        comment_(arena),
        begintime_(arena),
        endtime_(arena),
        registertime_(arena),
        _cached_size_{0} {}

inline void ReasonSearchBanUserInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           0,
           offsetof(Impl_, bantype_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::bantype_));
}
ReasonSearchBanUserInfo::~ReasonSearchBanUserInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.ReasonSearchBanUserInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReasonSearchBanUserInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.reason_.Destroy();
  _impl_.comment_.Destroy();
  _impl_.begintime_.Destroy();
  _impl_.endtime_.Destroy();
  _impl_.registertime_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ReasonSearchBanUserInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ReasonSearchBanUserInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ReasonSearchBanUserInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ReasonSearchBanUserInfo>(),
            ::google::protobuf::Message::GetNewImpl<ReasonSearchBanUserInfo>(),
            ::google::protobuf::Message::GetClearImpl<ReasonSearchBanUserInfo>(), &ReasonSearchBanUserInfo::ByteSizeLong,
                &ReasonSearchBanUserInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_._cached_size_),
            false,
        },
        &ReasonSearchBanUserInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ReasonSearchBanUserInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 99, 2> ReasonSearchBanUserInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::ReasonSearchBanUserInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 accountId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReasonSearchBanUserInfo, _impl_.accountid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.accountid_)}},
    // string nickname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.nickname_)}},
    // string reason = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.reason_)}},
    // int32 banType = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReasonSearchBanUserInfo, _impl_.bantype_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.bantype_)}},
    // string comment = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.comment_)}},
    // string beginTime = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.begintime_)}},
    // string endTime = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.endtime_)}},
    // string registerTime = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.registertime_)}},
    // uint64 sortTime = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReasonSearchBanUserInfo, _impl_.sorttime_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.sorttime_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 accountId = 1;
    {PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string nickname = 2;
    {PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.nickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reason = 3;
    {PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 banType = 4;
    {PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.bantype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string comment = 5;
    {PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.comment_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string beginTime = 6;
    {PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.begintime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string endTime = 7;
    {PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.endtime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string registerTime = 8;
    {PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.registertime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 sortTime = 9;
    {PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.sorttime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\41\0\10\6\0\7\11\7\14\0\0\0\0\0\0\0"
    "DC.Packet.ReasonSearchBanUserInfo"
    "nickname"
    "reason"
    "comment"
    "beginTime"
    "endTime"
    "registerTime"
  }},
};

PROTOBUF_NOINLINE void ReasonSearchBanUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.ReasonSearchBanUserInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  _impl_.comment_.ClearToEmpty();
  _impl_.begintime_.ClearToEmpty();
  _impl_.endtime_.ClearToEmpty();
  _impl_.registertime_.ClearToEmpty();
  ::memset(&_impl_.accountid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.bantype_) -
      reinterpret_cast<char*>(&_impl_.accountid_)) + sizeof(_impl_.bantype_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReasonSearchBanUserInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReasonSearchBanUserInfo& this_ = static_cast<const ReasonSearchBanUserInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReasonSearchBanUserInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReasonSearchBanUserInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.ReasonSearchBanUserInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 accountId = 1;
          if (this_._internal_accountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_accountid(), target);
          }

          // string nickname = 2;
          if (!this_._internal_nickname().empty()) {
            const std::string& _s = this_._internal_nickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.ReasonSearchBanUserInfo.nickname");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string reason = 3;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.ReasonSearchBanUserInfo.reason");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // int32 banType = 4;
          if (this_._internal_bantype() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_bantype(), target);
          }

          // string comment = 5;
          if (!this_._internal_comment().empty()) {
            const std::string& _s = this_._internal_comment();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.ReasonSearchBanUserInfo.comment");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string beginTime = 6;
          if (!this_._internal_begintime().empty()) {
            const std::string& _s = this_._internal_begintime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.ReasonSearchBanUserInfo.beginTime");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string endTime = 7;
          if (!this_._internal_endtime().empty()) {
            const std::string& _s = this_._internal_endtime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.ReasonSearchBanUserInfo.endTime");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string registerTime = 8;
          if (!this_._internal_registertime().empty()) {
            const std::string& _s = this_._internal_registertime();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.ReasonSearchBanUserInfo.registerTime");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // uint64 sortTime = 9;
          if (this_._internal_sorttime() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                9, this_._internal_sorttime(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.ReasonSearchBanUserInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReasonSearchBanUserInfo::ByteSizeLong(const MessageLite& base) {
          const ReasonSearchBanUserInfo& this_ = static_cast<const ReasonSearchBanUserInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReasonSearchBanUserInfo::ByteSizeLong() const {
          const ReasonSearchBanUserInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.ReasonSearchBanUserInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string nickname = 2;
            if (!this_._internal_nickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_nickname());
            }
            // string reason = 3;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // string comment = 5;
            if (!this_._internal_comment().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_comment());
            }
            // string beginTime = 6;
            if (!this_._internal_begintime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_begintime());
            }
            // string endTime = 7;
            if (!this_._internal_endtime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_endtime());
            }
            // string registerTime = 8;
            if (!this_._internal_registertime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_registertime());
            }
            // uint64 accountId = 1;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_accountid());
            }
            // uint64 sortTime = 9;
            if (this_._internal_sorttime() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_sorttime());
            }
            // int32 banType = 4;
            if (this_._internal_bantype() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_bantype());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReasonSearchBanUserInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReasonSearchBanUserInfo*>(&to_msg);
  auto& from = static_cast<const ReasonSearchBanUserInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.ReasonSearchBanUserInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (!from._internal_comment().empty()) {
    _this->_internal_set_comment(from._internal_comment());
  }
  if (!from._internal_begintime().empty()) {
    _this->_internal_set_begintime(from._internal_begintime());
  }
  if (!from._internal_endtime().empty()) {
    _this->_internal_set_endtime(from._internal_endtime());
  }
  if (!from._internal_registertime().empty()) {
    _this->_internal_set_registertime(from._internal_registertime());
  }
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  if (from._internal_sorttime() != 0) {
    _this->_impl_.sorttime_ = from._impl_.sorttime_;
  }
  if (from._internal_bantype() != 0) {
    _this->_impl_.bantype_ = from._impl_.bantype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReasonSearchBanUserInfo::CopyFrom(const ReasonSearchBanUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.ReasonSearchBanUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReasonSearchBanUserInfo::InternalSwap(ReasonSearchBanUserInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.comment_, &other->_impl_.comment_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.begintime_, &other->_impl_.begintime_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.endtime_, &other->_impl_.endtime_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.registertime_, &other->_impl_.registertime_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.bantype_)
      + sizeof(ReasonSearchBanUserInfo::_impl_.bantype_)
      - PROTOBUF_FIELD_OFFSET(ReasonSearchBanUserInfo, _impl_.accountid_)>(
          reinterpret_cast<char*>(&_impl_.accountid_),
          reinterpret_cast<char*>(&other->_impl_.accountid_));
}

::google::protobuf::Metadata ReasonSearchBanUserInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_SearchHackReasonResult::_Internal {
 public:
};

Operate_SearchHackReasonResult::Operate_SearchHackReasonResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_SearchHackReasonResult)
}
inline PROTOBUF_NDEBUG_INLINE Operate_SearchHackReasonResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_SearchHackReasonResult& from_msg)
      : infos_{visibility, arena, from.infos_},
        _cached_size_{0} {}

Operate_SearchHackReasonResult::Operate_SearchHackReasonResult(
    ::google::protobuf::Arena* arena,
    const Operate_SearchHackReasonResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_SearchHackReasonResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, maxpagesize_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, maxpagesize_),
           offsetof(Impl_, searchtype_) -
               offsetof(Impl_, maxpagesize_) +
               sizeof(Impl_::searchtype_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_SearchHackReasonResult)
}
inline PROTOBUF_NDEBUG_INLINE Operate_SearchHackReasonResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : infos_{visibility, arena},
        _cached_size_{0} {}

inline void Operate_SearchHackReasonResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, maxpagesize_),
           0,
           offsetof(Impl_, searchtype_) -
               offsetof(Impl_, maxpagesize_) +
               sizeof(Impl_::searchtype_));
}
Operate_SearchHackReasonResult::~Operate_SearchHackReasonResult() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_SearchHackReasonResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_SearchHackReasonResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_SearchHackReasonResult::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_SearchHackReasonResult_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_SearchHackReasonResult::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_SearchHackReasonResult>(),
            ::google::protobuf::Message::GetNewImpl<Operate_SearchHackReasonResult>(),
            ::google::protobuf::Message::GetClearImpl<Operate_SearchHackReasonResult>(), &Operate_SearchHackReasonResult::ByteSizeLong,
                &Operate_SearchHackReasonResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_SearchHackReasonResult, _impl_._cached_size_),
            false,
        },
        &Operate_SearchHackReasonResult::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_SearchHackReasonResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> Operate_SearchHackReasonResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_SearchHackReasonResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 searchType = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_SearchHackReasonResult, _impl_.searchtype_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_SearchHackReasonResult, _impl_.searchtype_)}},
    // repeated .DC.Packet.ReasonSearchBanUserInfo infos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_SearchHackReasonResult, _impl_.infos_)}},
    // int32 maxPageSize = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_SearchHackReasonResult, _impl_.maxpagesize_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_SearchHackReasonResult, _impl_.maxpagesize_)}},
    // int32 currentPage = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_SearchHackReasonResult, _impl_.currentpage_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_SearchHackReasonResult, _impl_.currentpage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.ReasonSearchBanUserInfo infos = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_SearchHackReasonResult, _impl_.infos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 maxPageSize = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_SearchHackReasonResult, _impl_.maxpagesize_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 currentPage = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_SearchHackReasonResult, _impl_.currentpage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 searchType = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_SearchHackReasonResult, _impl_.searchtype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::ReasonSearchBanUserInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Operate_SearchHackReasonResult::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_SearchHackReasonResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.infos_.Clear();
  ::memset(&_impl_.maxpagesize_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.searchtype_) -
      reinterpret_cast<char*>(&_impl_.maxpagesize_)) + sizeof(_impl_.searchtype_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_SearchHackReasonResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_SearchHackReasonResult& this_ = static_cast<const Operate_SearchHackReasonResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_SearchHackReasonResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_SearchHackReasonResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_SearchHackReasonResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.ReasonSearchBanUserInfo infos = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_infos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_infos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int32 maxPageSize = 2;
          if (this_._internal_maxpagesize() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_maxpagesize(), target);
          }

          // int32 currentPage = 3;
          if (this_._internal_currentpage() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_currentpage(), target);
          }

          // int32 searchType = 4;
          if (this_._internal_searchtype() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_searchtype(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_SearchHackReasonResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_SearchHackReasonResult::ByteSizeLong(const MessageLite& base) {
          const Operate_SearchHackReasonResult& this_ = static_cast<const Operate_SearchHackReasonResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_SearchHackReasonResult::ByteSizeLong() const {
          const Operate_SearchHackReasonResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_SearchHackReasonResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.ReasonSearchBanUserInfo infos = 1;
            {
              total_size += 1UL * this_._internal_infos_size();
              for (const auto& msg : this_._internal_infos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // int32 maxPageSize = 2;
            if (this_._internal_maxpagesize() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_maxpagesize());
            }
            // int32 currentPage = 3;
            if (this_._internal_currentpage() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_currentpage());
            }
            // int32 searchType = 4;
            if (this_._internal_searchtype() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_searchtype());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_SearchHackReasonResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_SearchHackReasonResult*>(&to_msg);
  auto& from = static_cast<const Operate_SearchHackReasonResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_SearchHackReasonResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infos()->MergeFrom(
      from._internal_infos());
  if (from._internal_maxpagesize() != 0) {
    _this->_impl_.maxpagesize_ = from._impl_.maxpagesize_;
  }
  if (from._internal_currentpage() != 0) {
    _this->_impl_.currentpage_ = from._impl_.currentpage_;
  }
  if (from._internal_searchtype() != 0) {
    _this->_impl_.searchtype_ = from._impl_.searchtype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_SearchHackReasonResult::CopyFrom(const Operate_SearchHackReasonResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_SearchHackReasonResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_SearchHackReasonResult::InternalSwap(Operate_SearchHackReasonResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.infos_.InternalSwap(&other->_impl_.infos_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operate_SearchHackReasonResult, _impl_.searchtype_)
      + sizeof(Operate_SearchHackReasonResult::_impl_.searchtype_)
      - PROTOBUF_FIELD_OFFSET(Operate_SearchHackReasonResult, _impl_.maxpagesize_)>(
          reinterpret_cast<char*>(&_impl_.maxpagesize_),
          reinterpret_cast<char*>(&other->_impl_.maxpagesize_));
}

::google::protobuf::Metadata Operate_SearchHackReasonResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_BulkBanInfo::_Internal {
 public:
};

Operate_BulkBanInfo::Operate_BulkBanInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_BulkBanInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_BulkBanInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_BulkBanInfo& from_msg)
      : nickname_(arena, from.nickname_),
        _cached_size_{0} {}

Operate_BulkBanInfo::Operate_BulkBanInfo(
    ::google::protobuf::Arena* arena,
    const Operate_BulkBanInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_BulkBanInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.accountid_ = from._impl_.accountid_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_BulkBanInfo)
}
inline PROTOBUF_NDEBUG_INLINE Operate_BulkBanInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : nickname_(arena),
        _cached_size_{0} {}

inline void Operate_BulkBanInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accountid_ = {};
}
Operate_BulkBanInfo::~Operate_BulkBanInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_BulkBanInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_BulkBanInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_BulkBanInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_BulkBanInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_BulkBanInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_BulkBanInfo>(),
            ::google::protobuf::Message::GetNewImpl<Operate_BulkBanInfo>(),
            ::google::protobuf::Message::GetClearImpl<Operate_BulkBanInfo>(), &Operate_BulkBanInfo::ByteSizeLong,
                &Operate_BulkBanInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_BulkBanInfo, _impl_._cached_size_),
            false,
        },
        &Operate_BulkBanInfo::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_BulkBanInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 46, 2> Operate_BulkBanInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_BulkBanInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string nickname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_BulkBanInfo, _impl_.nickname_)}},
    // uint64 accountId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_BulkBanInfo, _impl_.accountid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_BulkBanInfo, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 accountId = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_BulkBanInfo, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string nickname = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_BulkBanInfo, _impl_.nickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\0\10\0\0\0\0\0"
    "DC.Packet.Operate_BulkBanInfo"
    "nickname"
  }},
};

PROTOBUF_NOINLINE void Operate_BulkBanInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_BulkBanInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.accountid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_BulkBanInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_BulkBanInfo& this_ = static_cast<const Operate_BulkBanInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_BulkBanInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_BulkBanInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_BulkBanInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 accountId = 1;
          if (this_._internal_accountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_accountid(), target);
          }

          // string nickname = 2;
          if (!this_._internal_nickname().empty()) {
            const std::string& _s = this_._internal_nickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_BulkBanInfo.nickname");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_BulkBanInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_BulkBanInfo::ByteSizeLong(const MessageLite& base) {
          const Operate_BulkBanInfo& this_ = static_cast<const Operate_BulkBanInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_BulkBanInfo::ByteSizeLong() const {
          const Operate_BulkBanInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_BulkBanInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string nickname = 2;
            if (!this_._internal_nickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_nickname());
            }
            // uint64 accountId = 1;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_accountid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_BulkBanInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_BulkBanInfo*>(&to_msg);
  auto& from = static_cast<const Operate_BulkBanInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_BulkBanInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_BulkBanInfo::CopyFrom(const Operate_BulkBanInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_BulkBanInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_BulkBanInfo::InternalSwap(Operate_BulkBanInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
        swap(_impl_.accountid_, other->_impl_.accountid_);
}

::google::protobuf::Metadata Operate_BulkBanInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_HackUserBanBulk::_Internal {
 public:
};

Operate_HackUserBanBulk::Operate_HackUserBanBulk(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_HackUserBanBulk)
}
inline PROTOBUF_NDEBUG_INLINE Operate_HackUserBanBulk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_HackUserBanBulk& from_msg)
      : infos_{visibility, arena, from.infos_},
        reason_(arena, from.reason_),
        jiraid_(arena, from.jiraid_),
        _cached_size_{0} {}

Operate_HackUserBanBulk::Operate_HackUserBanBulk(
    ::google::protobuf::Arena* arena,
    const Operate_HackUserBanBulk& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_HackUserBanBulk* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bantype_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, bantype_),
           offsetof(Impl_, withloginhardwareban_) -
               offsetof(Impl_, bantype_) +
               sizeof(Impl_::withloginhardwareban_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_HackUserBanBulk)
}
inline PROTOBUF_NDEBUG_INLINE Operate_HackUserBanBulk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : infos_{visibility, arena},
        reason_(arena),
        jiraid_(arena),
        _cached_size_{0} {}

inline void Operate_HackUserBanBulk::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bantype_),
           0,
           offsetof(Impl_, withloginhardwareban_) -
               offsetof(Impl_, bantype_) +
               sizeof(Impl_::withloginhardwareban_));
}
Operate_HackUserBanBulk::~Operate_HackUserBanBulk() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_HackUserBanBulk)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_HackUserBanBulk::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.reason_.Destroy();
  _impl_.jiraid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_HackUserBanBulk::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_HackUserBanBulk_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_HackUserBanBulk::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_HackUserBanBulk>(),
            ::google::protobuf::Message::GetNewImpl<Operate_HackUserBanBulk>(),
            ::google::protobuf::Message::GetClearImpl<Operate_HackUserBanBulk>(), &Operate_HackUserBanBulk::ByteSizeLong,
                &Operate_HackUserBanBulk::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_._cached_size_),
            false,
        },
        &Operate_HackUserBanBulk::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_HackUserBanBulk::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 54, 2> Operate_HackUserBanBulk::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_HackUserBanBulk>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .DC.Packet.Operate_BulkBanInfo infos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_.infos_)}},
    // string reason = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_.reason_)}},
    // uint32 banType = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_HackUserBanBulk, _impl_.bantype_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_.bantype_)}},
    // uint32 banTime_min = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_HackUserBanBulk, _impl_.bantime_min_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_.bantime_min_)}},
    // string jiraId = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_.jiraid_)}},
    // uint32 withLoginHardwareBan = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_HackUserBanBulk, _impl_.withloginhardwareban_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_.withloginhardwareban_)}},
    // uint64 logIdx = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_HackUserBanBulk, _impl_.logidx_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_.logidx_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.Operate_BulkBanInfo infos = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_.infos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string reason = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 banType = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_.bantype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 banTime_min = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_.bantime_min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string jiraId = 5;
    {PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_.jiraid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 withLoginHardwareBan = 6;
    {PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_.withloginhardwareban_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 logIdx = 7;
    {PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_.logidx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_BulkBanInfo>()},
  }}, {{
    "\41\0\6\0\0\6\0\0"
    "DC.Packet.Operate_HackUserBanBulk"
    "reason"
    "jiraId"
  }},
};

PROTOBUF_NOINLINE void Operate_HackUserBanBulk::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_HackUserBanBulk)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.infos_.Clear();
  _impl_.reason_.ClearToEmpty();
  _impl_.jiraid_.ClearToEmpty();
  ::memset(&_impl_.bantype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.withloginhardwareban_) -
      reinterpret_cast<char*>(&_impl_.bantype_)) + sizeof(_impl_.withloginhardwareban_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_HackUserBanBulk::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_HackUserBanBulk& this_ = static_cast<const Operate_HackUserBanBulk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_HackUserBanBulk::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_HackUserBanBulk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_HackUserBanBulk)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.Operate_BulkBanInfo infos = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_infos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_infos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string reason = 2;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_HackUserBanBulk.reason");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint32 banType = 3;
          if (this_._internal_bantype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_bantype(), target);
          }

          // uint32 banTime_min = 4;
          if (this_._internal_bantime_min() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_bantime_min(), target);
          }

          // string jiraId = 5;
          if (!this_._internal_jiraid().empty()) {
            const std::string& _s = this_._internal_jiraid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_HackUserBanBulk.jiraId");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // uint32 withLoginHardwareBan = 6;
          if (this_._internal_withloginhardwareban() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_withloginhardwareban(), target);
          }

          // uint64 logIdx = 7;
          if (this_._internal_logidx() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                7, this_._internal_logidx(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_HackUserBanBulk)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_HackUserBanBulk::ByteSizeLong(const MessageLite& base) {
          const Operate_HackUserBanBulk& this_ = static_cast<const Operate_HackUserBanBulk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_HackUserBanBulk::ByteSizeLong() const {
          const Operate_HackUserBanBulk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_HackUserBanBulk)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.Operate_BulkBanInfo infos = 1;
            {
              total_size += 1UL * this_._internal_infos_size();
              for (const auto& msg : this_._internal_infos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string reason = 2;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // string jiraId = 5;
            if (!this_._internal_jiraid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_jiraid());
            }
            // uint32 banType = 3;
            if (this_._internal_bantype() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_bantype());
            }
            // uint32 banTime_min = 4;
            if (this_._internal_bantime_min() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_bantime_min());
            }
            // uint64 logIdx = 7;
            if (this_._internal_logidx() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_logidx());
            }
            // uint32 withLoginHardwareBan = 6;
            if (this_._internal_withloginhardwareban() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_withloginhardwareban());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_HackUserBanBulk::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_HackUserBanBulk*>(&to_msg);
  auto& from = static_cast<const Operate_HackUserBanBulk&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_HackUserBanBulk)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infos()->MergeFrom(
      from._internal_infos());
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (!from._internal_jiraid().empty()) {
    _this->_internal_set_jiraid(from._internal_jiraid());
  }
  if (from._internal_bantype() != 0) {
    _this->_impl_.bantype_ = from._impl_.bantype_;
  }
  if (from._internal_bantime_min() != 0) {
    _this->_impl_.bantime_min_ = from._impl_.bantime_min_;
  }
  if (from._internal_logidx() != 0) {
    _this->_impl_.logidx_ = from._impl_.logidx_;
  }
  if (from._internal_withloginhardwareban() != 0) {
    _this->_impl_.withloginhardwareban_ = from._impl_.withloginhardwareban_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_HackUserBanBulk::CopyFrom(const Operate_HackUserBanBulk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_HackUserBanBulk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_HackUserBanBulk::InternalSwap(Operate_HackUserBanBulk* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.infos_.InternalSwap(&other->_impl_.infos_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.jiraid_, &other->_impl_.jiraid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_.withloginhardwareban_)
      + sizeof(Operate_HackUserBanBulk::_impl_.withloginhardwareban_)
      - PROTOBUF_FIELD_OFFSET(Operate_HackUserBanBulk, _impl_.bantype_)>(
          reinterpret_cast<char*>(&_impl_.bantype_),
          reinterpret_cast<char*>(&other->_impl_.bantype_));
}

::google::protobuf::Metadata Operate_HackUserBanBulk::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_HackUserUnbanBulk::_Internal {
 public:
};

Operate_HackUserUnbanBulk::Operate_HackUserUnbanBulk(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_HackUserUnbanBulk)
}
inline PROTOBUF_NDEBUG_INLINE Operate_HackUserUnbanBulk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_HackUserUnbanBulk& from_msg)
      : infos_{visibility, arena, from.infos_},
        reason_(arena, from.reason_),
        jiraid_(arena, from.jiraid_),
        _cached_size_{0} {}

Operate_HackUserUnbanBulk::Operate_HackUserUnbanBulk(
    ::google::protobuf::Arena* arena,
    const Operate_HackUserUnbanBulk& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_HackUserUnbanBulk* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.withloginhardwareban_ = from._impl_.withloginhardwareban_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_HackUserUnbanBulk)
}
inline PROTOBUF_NDEBUG_INLINE Operate_HackUserUnbanBulk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : infos_{visibility, arena},
        reason_(arena),
        jiraid_(arena),
        _cached_size_{0} {}

inline void Operate_HackUserUnbanBulk::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.withloginhardwareban_ = {};
}
Operate_HackUserUnbanBulk::~Operate_HackUserUnbanBulk() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_HackUserUnbanBulk)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_HackUserUnbanBulk::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.reason_.Destroy();
  _impl_.jiraid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_HackUserUnbanBulk::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_HackUserUnbanBulk_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_HackUserUnbanBulk::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_HackUserUnbanBulk>(),
            ::google::protobuf::Message::GetNewImpl<Operate_HackUserUnbanBulk>(),
            ::google::protobuf::Message::GetClearImpl<Operate_HackUserUnbanBulk>(), &Operate_HackUserUnbanBulk::ByteSizeLong,
                &Operate_HackUserUnbanBulk::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_HackUserUnbanBulk, _impl_._cached_size_),
            false,
        },
        &Operate_HackUserUnbanBulk::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_HackUserUnbanBulk::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 56, 2> Operate_HackUserUnbanBulk::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_HackUserUnbanBulk>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 withLoginHardwareBan = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_HackUserUnbanBulk, _impl_.withloginhardwareban_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_HackUserUnbanBulk, _impl_.withloginhardwareban_)}},
    // repeated .DC.Packet.Operate_BulkBanInfo infos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_HackUserUnbanBulk, _impl_.infos_)}},
    // string reason = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_HackUserUnbanBulk, _impl_.reason_)}},
    // string jiraId = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_HackUserUnbanBulk, _impl_.jiraid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DC.Packet.Operate_BulkBanInfo infos = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_HackUserUnbanBulk, _impl_.infos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string reason = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_HackUserUnbanBulk, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string jiraId = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_HackUserUnbanBulk, _impl_.jiraid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 withLoginHardwareBan = 4;
    {PROTOBUF_FIELD_OFFSET(Operate_HackUserUnbanBulk, _impl_.withloginhardwareban_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::Operate_BulkBanInfo>()},
  }}, {{
    "\43\0\6\6\0\0\0\0"
    "DC.Packet.Operate_HackUserUnbanBulk"
    "reason"
    "jiraId"
  }},
};

PROTOBUF_NOINLINE void Operate_HackUserUnbanBulk::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_HackUserUnbanBulk)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.infos_.Clear();
  _impl_.reason_.ClearToEmpty();
  _impl_.jiraid_.ClearToEmpty();
  _impl_.withloginhardwareban_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_HackUserUnbanBulk::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_HackUserUnbanBulk& this_ = static_cast<const Operate_HackUserUnbanBulk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_HackUserUnbanBulk::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_HackUserUnbanBulk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_HackUserUnbanBulk)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .DC.Packet.Operate_BulkBanInfo infos = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_infos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_infos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string reason = 2;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_HackUserUnbanBulk.reason");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string jiraId = 3;
          if (!this_._internal_jiraid().empty()) {
            const std::string& _s = this_._internal_jiraid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_HackUserUnbanBulk.jiraId");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint32 withLoginHardwareBan = 4;
          if (this_._internal_withloginhardwareban() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_withloginhardwareban(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_HackUserUnbanBulk)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_HackUserUnbanBulk::ByteSizeLong(const MessageLite& base) {
          const Operate_HackUserUnbanBulk& this_ = static_cast<const Operate_HackUserUnbanBulk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_HackUserUnbanBulk::ByteSizeLong() const {
          const Operate_HackUserUnbanBulk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_HackUserUnbanBulk)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.Operate_BulkBanInfo infos = 1;
            {
              total_size += 1UL * this_._internal_infos_size();
              for (const auto& msg : this_._internal_infos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string reason = 2;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // string jiraId = 3;
            if (!this_._internal_jiraid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_jiraid());
            }
            // uint32 withLoginHardwareBan = 4;
            if (this_._internal_withloginhardwareban() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_withloginhardwareban());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_HackUserUnbanBulk::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_HackUserUnbanBulk*>(&to_msg);
  auto& from = static_cast<const Operate_HackUserUnbanBulk&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_HackUserUnbanBulk)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infos()->MergeFrom(
      from._internal_infos());
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (!from._internal_jiraid().empty()) {
    _this->_internal_set_jiraid(from._internal_jiraid());
  }
  if (from._internal_withloginhardwareban() != 0) {
    _this->_impl_.withloginhardwareban_ = from._impl_.withloginhardwareban_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_HackUserUnbanBulk::CopyFrom(const Operate_HackUserUnbanBulk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_HackUserUnbanBulk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_HackUserUnbanBulk::InternalSwap(Operate_HackUserUnbanBulk* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.infos_.InternalSwap(&other->_impl_.infos_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.jiraid_, &other->_impl_.jiraid_, arena);
        swap(_impl_.withloginhardwareban_, other->_impl_.withloginhardwareban_);
}

::google::protobuf::Metadata Operate_HackUserUnbanBulk::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_Blacklist::_Internal {
 public:
};

Operate_Blacklist::Operate_Blacklist(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_Blacklist)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Blacklist::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_Blacklist& from_msg)
      : reason_(arena, from.reason_),
        _cached_size_{0} {}

Operate_Blacklist::Operate_Blacklist(
    ::google::protobuf::Arena* arena,
    const Operate_Blacklist& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_Blacklist* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, accountid_),
           offsetof(Impl_, writetype_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::writetype_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_Blacklist)
}
inline PROTOBUF_NDEBUG_INLINE Operate_Blacklist::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : reason_(arena),
        _cached_size_{0} {}

inline void Operate_Blacklist::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           0,
           offsetof(Impl_, writetype_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::writetype_));
}
Operate_Blacklist::~Operate_Blacklist() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_Blacklist)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_Blacklist::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.reason_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_Blacklist::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_Blacklist_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_Blacklist::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_Blacklist>(),
            ::google::protobuf::Message::GetNewImpl<Operate_Blacklist>(),
            ::google::protobuf::Message::GetClearImpl<Operate_Blacklist>(), &Operate_Blacklist::ByteSizeLong,
                &Operate_Blacklist::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_Blacklist, _impl_._cached_size_),
            false,
        },
        &Operate_Blacklist::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_Blacklist::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 42, 2> Operate_Blacklist::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_Blacklist>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 writeType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operate_Blacklist, _impl_.writetype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Blacklist, _impl_.writetype_)}},
    // uint64 accountId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_Blacklist, _impl_.accountid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Blacklist, _impl_.accountid_)}},
    // string reason = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_Blacklist, _impl_.reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 writeType = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_Blacklist, _impl_.writetype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 accountId = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_Blacklist, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string reason = 3;
    {PROTOBUF_FIELD_OFFSET(Operate_Blacklist, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\0\6\0\0\0\0"
    "DC.Packet.Operate_Blacklist"
    "reason"
  }},
};

PROTOBUF_NOINLINE void Operate_Blacklist::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_Blacklist)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reason_.ClearToEmpty();
  ::memset(&_impl_.accountid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.writetype_) -
      reinterpret_cast<char*>(&_impl_.accountid_)) + sizeof(_impl_.writetype_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_Blacklist::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_Blacklist& this_ = static_cast<const Operate_Blacklist&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_Blacklist::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_Blacklist& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_Blacklist)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 writeType = 1;
          if (this_._internal_writetype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_writetype(), target);
          }

          // uint64 accountId = 2;
          if (this_._internal_accountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_accountid(), target);
          }

          // string reason = 3;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_Blacklist.reason");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_Blacklist)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_Blacklist::ByteSizeLong(const MessageLite& base) {
          const Operate_Blacklist& this_ = static_cast<const Operate_Blacklist&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_Blacklist::ByteSizeLong() const {
          const Operate_Blacklist& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_Blacklist)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string reason = 3;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // uint64 accountId = 2;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_accountid());
            }
            // uint32 writeType = 1;
            if (this_._internal_writetype() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_writetype());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_Blacklist::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_Blacklist*>(&to_msg);
  auto& from = static_cast<const Operate_Blacklist&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_Blacklist)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  if (from._internal_writetype() != 0) {
    _this->_impl_.writetype_ = from._impl_.writetype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_Blacklist::CopyFrom(const Operate_Blacklist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_Blacklist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_Blacklist::InternalSwap(Operate_Blacklist* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operate_Blacklist, _impl_.writetype_)
      + sizeof(Operate_Blacklist::_impl_.writetype_)
      - PROTOBUF_FIELD_OFFSET(Operate_Blacklist, _impl_.accountid_)>(
          reinterpret_cast<char*>(&_impl_.accountid_),
          reinterpret_cast<char*>(&other->_impl_.accountid_));
}

::google::protobuf::Metadata Operate_Blacklist::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operate_AccountNameChange::_Internal {
 public:
};

Operate_AccountNameChange::Operate_AccountNameChange(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.Operate_AccountNameChange)
}
inline PROTOBUF_NDEBUG_INLINE Operate_AccountNameChange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::Operate_AccountNameChange& from_msg)
      : accountname_(arena, from.accountname_),
        _cached_size_{0} {}

Operate_AccountNameChange::Operate_AccountNameChange(
    ::google::protobuf::Arena* arena,
    const Operate_AccountNameChange& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operate_AccountNameChange* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.accountid_ = from._impl_.accountid_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.Operate_AccountNameChange)
}
inline PROTOBUF_NDEBUG_INLINE Operate_AccountNameChange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accountname_(arena),
        _cached_size_{0} {}

inline void Operate_AccountNameChange::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accountid_ = {};
}
Operate_AccountNameChange::~Operate_AccountNameChange() {
  // @@protoc_insertion_point(destructor:DC.Packet.Operate_AccountNameChange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operate_AccountNameChange::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountname_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Operate_AccountNameChange::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Operate_AccountNameChange_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Operate_AccountNameChange::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Operate_AccountNameChange>(),
            ::google::protobuf::Message::GetNewImpl<Operate_AccountNameChange>(),
            ::google::protobuf::Message::GetClearImpl<Operate_AccountNameChange>(), &Operate_AccountNameChange::ByteSizeLong,
                &Operate_AccountNameChange::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Operate_AccountNameChange, _impl_._cached_size_),
            false,
        },
        &Operate_AccountNameChange::kDescriptorMethods,
        &descriptor_table_Operate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Operate_AccountNameChange::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2> Operate_AccountNameChange::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::Operate_AccountNameChange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string accountName = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_AccountNameChange, _impl_.accountname_)}},
    // uint64 accountId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operate_AccountNameChange, _impl_.accountid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Operate_AccountNameChange, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 accountId = 1;
    {PROTOBUF_FIELD_OFFSET(Operate_AccountNameChange, _impl_.accountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string accountName = 2;
    {PROTOBUF_FIELD_OFFSET(Operate_AccountNameChange, _impl_.accountname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\0\13\0\0\0\0\0"
    "DC.Packet.Operate_AccountNameChange"
    "accountName"
  }},
};

PROTOBUF_NOINLINE void Operate_AccountNameChange::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.Operate_AccountNameChange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountname_.ClearToEmpty();
  _impl_.accountid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operate_AccountNameChange::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operate_AccountNameChange& this_ = static_cast<const Operate_AccountNameChange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operate_AccountNameChange::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operate_AccountNameChange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.Operate_AccountNameChange)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 accountId = 1;
          if (this_._internal_accountid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_accountid(), target);
          }

          // string accountName = 2;
          if (!this_._internal_accountname().empty()) {
            const std::string& _s = this_._internal_accountname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.Operate_AccountNameChange.accountName");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.Operate_AccountNameChange)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operate_AccountNameChange::ByteSizeLong(const MessageLite& base) {
          const Operate_AccountNameChange& this_ = static_cast<const Operate_AccountNameChange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operate_AccountNameChange::ByteSizeLong() const {
          const Operate_AccountNameChange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.Operate_AccountNameChange)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountName = 2;
            if (!this_._internal_accountname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountname());
            }
            // uint64 accountId = 1;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_accountid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operate_AccountNameChange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operate_AccountNameChange*>(&to_msg);
  auto& from = static_cast<const Operate_AccountNameChange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.Operate_AccountNameChange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountname().empty()) {
    _this->_internal_set_accountname(from._internal_accountname());
  }
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operate_AccountNameChange::CopyFrom(const Operate_AccountNameChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.Operate_AccountNameChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operate_AccountNameChange::InternalSwap(Operate_AccountNameChange* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountname_, &other->_impl_.accountname_, arena);
        swap(_impl_.accountid_, other->_impl_.accountid_);
}

::google::protobuf::Metadata Operate_AccountNameChange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Packet
}  // namespace DC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_Operate_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
