// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Operate.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_Operate_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Operate_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "_Item.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Operate_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Operate_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Operate_2eproto;
namespace DC {
namespace Packet {
class HackLogInfo;
struct HackLogInfoDefaultTypeInternal;
extern HackLogInfoDefaultTypeInternal _HackLogInfo_default_instance_;
class Operate_AccountNameChange;
struct Operate_AccountNameChangeDefaultTypeInternal;
extern Operate_AccountNameChangeDefaultTypeInternal _Operate_AccountNameChange_default_instance_;
class Operate_Add_Announce_Msg;
struct Operate_Add_Announce_MsgDefaultTypeInternal;
extern Operate_Add_Announce_MsgDefaultTypeInternal _Operate_Add_Announce_Msg_default_instance_;
class Operate_Add_Bad_Word;
struct Operate_Add_Bad_WordDefaultTypeInternal;
extern Operate_Add_Bad_WordDefaultTypeInternal _Operate_Add_Bad_Word_default_instance_;
class Operate_AllHackInfo;
struct Operate_AllHackInfoDefaultTypeInternal;
extern Operate_AllHackInfoDefaultTypeInternal _Operate_AllHackInfo_default_instance_;
class Operate_AllIronShieldList;
struct Operate_AllIronShieldListDefaultTypeInternal;
extern Operate_AllIronShieldListDefaultTypeInternal _Operate_AllIronShieldList_default_instance_;
class Operate_AllReportList;
struct Operate_AllReportListDefaultTypeInternal;
extern Operate_AllReportListDefaultTypeInternal _Operate_AllReportList_default_instance_;
class Operate_Bad_Word_List;
struct Operate_Bad_Word_ListDefaultTypeInternal;
extern Operate_Bad_Word_ListDefaultTypeInternal _Operate_Bad_Word_List_default_instance_;
class Operate_Ban_Hardware;
struct Operate_Ban_HardwareDefaultTypeInternal;
extern Operate_Ban_HardwareDefaultTypeInternal _Operate_Ban_Hardware_default_instance_;
class Operate_Ban_Report_User;
struct Operate_Ban_Report_UserDefaultTypeInternal;
extern Operate_Ban_Report_UserDefaultTypeInternal _Operate_Ban_Report_User_default_instance_;
class Operate_Ban_User;
struct Operate_Ban_UserDefaultTypeInternal;
extern Operate_Ban_UserDefaultTypeInternal _Operate_Ban_User_default_instance_;
class Operate_Ban_User2;
struct Operate_Ban_User2DefaultTypeInternal;
extern Operate_Ban_User2DefaultTypeInternal _Operate_Ban_User2_default_instance_;
class Operate_Blacklist;
struct Operate_BlacklistDefaultTypeInternal;
extern Operate_BlacklistDefaultTypeInternal _Operate_Blacklist_default_instance_;
class Operate_BulkBanInfo;
struct Operate_BulkBanInfoDefaultTypeInternal;
extern Operate_BulkBanInfoDefaultTypeInternal _Operate_BulkBanInfo_default_instance_;
class Operate_HackUserBanBulk;
struct Operate_HackUserBanBulkDefaultTypeInternal;
extern Operate_HackUserBanBulkDefaultTypeInternal _Operate_HackUserBanBulk_default_instance_;
class Operate_HackUserUnbanBulk;
struct Operate_HackUserUnbanBulkDefaultTypeInternal;
extern Operate_HackUserUnbanBulkDefaultTypeInternal _Operate_HackUserUnbanBulk_default_instance_;
class Operate_Hacklog;
struct Operate_HacklogDefaultTypeInternal;
extern Operate_HacklogDefaultTypeInternal _Operate_Hacklog_default_instance_;
class Operate_OperateBanHardwareInfo;
struct Operate_OperateBanHardwareInfoDefaultTypeInternal;
extern Operate_OperateBanHardwareInfoDefaultTypeInternal _Operate_OperateBanHardwareInfo_default_instance_;
class Operate_OperateBanInfo;
struct Operate_OperateBanInfoDefaultTypeInternal;
extern Operate_OperateBanInfoDefaultTypeInternal _Operate_OperateBanInfo_default_instance_;
class Operate_OperateBanUserInfos;
struct Operate_OperateBanUserInfosDefaultTypeInternal;
extern Operate_OperateBanUserInfosDefaultTypeInternal _Operate_OperateBanUserInfos_default_instance_;
class Operate_OperateDuplicateHardwareInfo;
struct Operate_OperateDuplicateHardwareInfoDefaultTypeInternal;
extern Operate_OperateDuplicateHardwareInfoDefaultTypeInternal _Operate_OperateDuplicateHardwareInfo_default_instance_;
class Operate_OperateFileInfo;
struct Operate_OperateFileInfoDefaultTypeInternal;
extern Operate_OperateFileInfoDefaultTypeInternal _Operate_OperateFileInfo_default_instance_;
class Operate_OperateHardwareAccountInfo;
struct Operate_OperateHardwareAccountInfoDefaultTypeInternal;
extern Operate_OperateHardwareAccountInfoDefaultTypeInternal _Operate_OperateHardwareAccountInfo_default_instance_;
class Operate_OperateHardwareInfo;
struct Operate_OperateHardwareInfoDefaultTypeInternal;
extern Operate_OperateHardwareInfoDefaultTypeInternal _Operate_OperateHardwareInfo_default_instance_;
class Operate_OperateIronShieldInfo;
struct Operate_OperateIronShieldInfoDefaultTypeInternal;
extern Operate_OperateIronShieldInfoDefaultTypeInternal _Operate_OperateIronShieldInfo_default_instance_;
class Operate_OperateLoginLogInfo;
struct Operate_OperateLoginLogInfoDefaultTypeInternal;
extern Operate_OperateLoginLogInfoDefaultTypeInternal _Operate_OperateLoginLogInfo_default_instance_;
class Operate_OperatePlatformInfo;
struct Operate_OperatePlatformInfoDefaultTypeInternal;
extern Operate_OperatePlatformInfoDefaultTypeInternal _Operate_OperatePlatformInfo_default_instance_;
class Operate_OperateReportBodyInfo;
struct Operate_OperateReportBodyInfoDefaultTypeInternal;
extern Operate_OperateReportBodyInfoDefaultTypeInternal _Operate_OperateReportBodyInfo_default_instance_;
class Operate_SearchHackReasonResult;
struct Operate_SearchHackReasonResultDefaultTypeInternal;
extern Operate_SearchHackReasonResultDefaultTypeInternal _Operate_SearchHackReasonResult_default_instance_;
class Operate_add_hardware_ban;
struct Operate_add_hardware_banDefaultTypeInternal;
extern Operate_add_hardware_banDefaultTypeInternal _Operate_add_hardware_ban_default_instance_;
class Operate_announceMessageInfo;
struct Operate_announceMessageInfoDefaultTypeInternal;
extern Operate_announceMessageInfoDefaultTypeInternal _Operate_announceMessageInfo_default_instance_;
class Operate_ban_Hardware_list;
struct Operate_ban_Hardware_listDefaultTypeInternal;
extern Operate_ban_Hardware_listDefaultTypeInternal _Operate_ban_Hardware_list_default_instance_;
class Operate_ban_history;
struct Operate_ban_historyDefaultTypeInternal;
extern Operate_ban_historyDefaultTypeInternal _Operate_ban_history_default_instance_;
class Operate_ban_info_list;
struct Operate_ban_info_listDefaultTypeInternal;
extern Operate_ban_info_listDefaultTypeInternal _Operate_ban_info_list_default_instance_;
class Operate_ban_user_info;
struct Operate_ban_user_infoDefaultTypeInternal;
extern Operate_ban_user_infoDefaultTypeInternal _Operate_ban_user_info_default_instance_;
class Operate_ban_user_info_list;
struct Operate_ban_user_info_listDefaultTypeInternal;
extern Operate_ban_user_info_listDefaultTypeInternal _Operate_ban_user_info_list_default_instance_;
class Operate_characterInfo;
struct Operate_characterInfoDefaultTypeInternal;
extern Operate_characterInfoDefaultTypeInternal _Operate_characterInfo_default_instance_;
class Operate_character_info;
struct Operate_character_infoDefaultTypeInternal;
extern Operate_character_infoDefaultTypeInternal _Operate_character_info_default_instance_;
class Operate_character_info_list;
struct Operate_character_info_listDefaultTypeInternal;
extern Operate_character_info_listDefaultTypeInternal _Operate_character_info_list_default_instance_;
class Operate_dll_info;
struct Operate_dll_infoDefaultTypeInternal;
extern Operate_dll_infoDefaultTypeInternal _Operate_dll_info_default_instance_;
class Operate_dll_list;
struct Operate_dll_listDefaultTypeInternal;
extern Operate_dll_listDefaultTypeInternal _Operate_dll_list_default_instance_;
class Operate_hack_report_list;
struct Operate_hack_report_listDefaultTypeInternal;
extern Operate_hack_report_listDefaultTypeInternal _Operate_hack_report_list_default_instance_;
class Operate_iron_shield_info;
struct Operate_iron_shield_infoDefaultTypeInternal;
extern Operate_iron_shield_infoDefaultTypeInternal _Operate_iron_shield_info_default_instance_;
class Operate_iron_shield_info_list;
struct Operate_iron_shield_info_listDefaultTypeInternal;
extern Operate_iron_shield_info_listDefaultTypeInternal _Operate_iron_shield_info_list_default_instance_;
class Operate_iron_shield_list;
struct Operate_iron_shield_listDefaultTypeInternal;
extern Operate_iron_shield_listDefaultTypeInternal _Operate_iron_shield_list_default_instance_;
class Operate_login_log;
struct Operate_login_logDefaultTypeInternal;
extern Operate_login_logDefaultTypeInternal _Operate_login_log_default_instance_;
class Operate_login_log_list;
struct Operate_login_log_listDefaultTypeInternal;
extern Operate_login_log_listDefaultTypeInternal _Operate_login_log_list_default_instance_;
class Operate_nickname_change;
struct Operate_nickname_changeDefaultTypeInternal;
extern Operate_nickname_changeDefaultTypeInternal _Operate_nickname_change_default_instance_;
class Operate_report_info;
struct Operate_report_infoDefaultTypeInternal;
extern Operate_report_infoDefaultTypeInternal _Operate_report_info_default_instance_;
class Operate_report_info_list;
struct Operate_report_info_listDefaultTypeInternal;
extern Operate_report_info_listDefaultTypeInternal _Operate_report_info_list_default_instance_;
class Operate_userInfo;
struct Operate_userInfoDefaultTypeInternal;
extern Operate_userInfoDefaultTypeInternal _Operate_userInfo_default_instance_;
class ReasonSearchBanUserInfo;
struct ReasonSearchBanUserInfoDefaultTypeInternal;
extern ReasonSearchBanUserInfoDefaultTypeInternal _ReasonSearchBanUserInfo_default_instance_;
class ban_info;
struct ban_infoDefaultTypeInternal;
extern ban_infoDefaultTypeInternal _ban_info_default_instance_;
}  // namespace Packet
}  // namespace DC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace DC {
namespace Packet {

// ===================================================================


// -------------------------------------------------------------------

class ban_info final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.ban_info) */ {
 public:
  inline ban_info() : ban_info(nullptr) {}
  ~ban_info() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ban_info(
      ::google::protobuf::internal::ConstantInitialized);

  inline ban_info(const ban_info& from) : ban_info(nullptr, from) {}
  inline ban_info(ban_info&& from) noexcept
      : ban_info(nullptr, std::move(from)) {}
  inline ban_info& operator=(const ban_info& from) {
    CopyFrom(from);
    return *this;
  }
  inline ban_info& operator=(ban_info&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ban_info& default_instance() {
    return *internal_default_instance();
  }
  static inline const ban_info* internal_default_instance() {
    return reinterpret_cast<const ban_info*>(
        &_ban_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(ban_info& a, ban_info& b) { a.Swap(&b); }
  inline void Swap(ban_info* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ban_info* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ban_info* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ban_info>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ban_info& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ban_info& from) { ban_info::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ban_info* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.ban_info"; }

 protected:
  explicit ban_info(::google::protobuf::Arena* arena);
  ban_info(::google::protobuf::Arena* arena, const ban_info& from);
  ban_info(::google::protobuf::Arena* arena, ban_info&& from) noexcept
      : ban_info(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kBanTypeFieldNumber = 2,
    kCommentFieldNumber = 3,
    kRegisterTimeFieldNumber = 4,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string banType = 2;
  void clear_bantype() ;
  const std::string& bantype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bantype(Arg_&& arg, Args_... args);
  std::string* mutable_bantype();
  PROTOBUF_NODISCARD std::string* release_bantype();
  void set_allocated_bantype(std::string* value);

  private:
  const std::string& _internal_bantype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bantype(
      const std::string& value);
  std::string* _internal_mutable_bantype();

  public:
  // string comment = 3;
  void clear_comment() ;
  const std::string& comment() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_comment(Arg_&& arg, Args_... args);
  std::string* mutable_comment();
  PROTOBUF_NODISCARD std::string* release_comment();
  void set_allocated_comment(std::string* value);

  private:
  const std::string& _internal_comment() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_comment(
      const std::string& value);
  std::string* _internal_mutable_comment();

  public:
  // string registerTime = 4;
  void clear_registertime() ;
  const std::string& registertime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_registertime(Arg_&& arg, Args_... args);
  std::string* mutable_registertime();
  PROTOBUF_NODISCARD std::string* release_registertime();
  void set_allocated_registertime(std::string* value);

  private:
  const std::string& _internal_registertime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_registertime(
      const std::string& value);
  std::string* _internal_mutable_registertime();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.ban_info)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      62, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ban_info_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ban_info& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr bantype_;
    ::google::protobuf::internal::ArenaStringPtr comment_;
    ::google::protobuf::internal::ArenaStringPtr registertime_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class ReasonSearchBanUserInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.ReasonSearchBanUserInfo) */ {
 public:
  inline ReasonSearchBanUserInfo() : ReasonSearchBanUserInfo(nullptr) {}
  ~ReasonSearchBanUserInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReasonSearchBanUserInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReasonSearchBanUserInfo(const ReasonSearchBanUserInfo& from) : ReasonSearchBanUserInfo(nullptr, from) {}
  inline ReasonSearchBanUserInfo(ReasonSearchBanUserInfo&& from) noexcept
      : ReasonSearchBanUserInfo(nullptr, std::move(from)) {}
  inline ReasonSearchBanUserInfo& operator=(const ReasonSearchBanUserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReasonSearchBanUserInfo& operator=(ReasonSearchBanUserInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReasonSearchBanUserInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReasonSearchBanUserInfo* internal_default_instance() {
    return reinterpret_cast<const ReasonSearchBanUserInfo*>(
        &_ReasonSearchBanUserInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(ReasonSearchBanUserInfo& a, ReasonSearchBanUserInfo& b) { a.Swap(&b); }
  inline void Swap(ReasonSearchBanUserInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReasonSearchBanUserInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReasonSearchBanUserInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ReasonSearchBanUserInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReasonSearchBanUserInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReasonSearchBanUserInfo& from) { ReasonSearchBanUserInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReasonSearchBanUserInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.ReasonSearchBanUserInfo"; }

 protected:
  explicit ReasonSearchBanUserInfo(::google::protobuf::Arena* arena);
  ReasonSearchBanUserInfo(::google::protobuf::Arena* arena, const ReasonSearchBanUserInfo& from);
  ReasonSearchBanUserInfo(::google::protobuf::Arena* arena, ReasonSearchBanUserInfo&& from) noexcept
      : ReasonSearchBanUserInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNicknameFieldNumber = 2,
    kReasonFieldNumber = 3,
    kCommentFieldNumber = 5,
    kBeginTimeFieldNumber = 6,
    kEndTimeFieldNumber = 7,
    kRegisterTimeFieldNumber = 8,
    kAccountIdFieldNumber = 1,
    kSortTimeFieldNumber = 9,
    kBanTypeFieldNumber = 4,
  };
  // string nickname = 2;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string reason = 3;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // string comment = 5;
  void clear_comment() ;
  const std::string& comment() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_comment(Arg_&& arg, Args_... args);
  std::string* mutable_comment();
  PROTOBUF_NODISCARD std::string* release_comment();
  void set_allocated_comment(std::string* value);

  private:
  const std::string& _internal_comment() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_comment(
      const std::string& value);
  std::string* _internal_mutable_comment();

  public:
  // string beginTime = 6;
  void clear_begintime() ;
  const std::string& begintime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_begintime(Arg_&& arg, Args_... args);
  std::string* mutable_begintime();
  PROTOBUF_NODISCARD std::string* release_begintime();
  void set_allocated_begintime(std::string* value);

  private:
  const std::string& _internal_begintime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_begintime(
      const std::string& value);
  std::string* _internal_mutable_begintime();

  public:
  // string endTime = 7;
  void clear_endtime() ;
  const std::string& endtime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_endtime(Arg_&& arg, Args_... args);
  std::string* mutable_endtime();
  PROTOBUF_NODISCARD std::string* release_endtime();
  void set_allocated_endtime(std::string* value);

  private:
  const std::string& _internal_endtime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_endtime(
      const std::string& value);
  std::string* _internal_mutable_endtime();

  public:
  // string registerTime = 8;
  void clear_registertime() ;
  const std::string& registertime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_registertime(Arg_&& arg, Args_... args);
  std::string* mutable_registertime();
  PROTOBUF_NODISCARD std::string* release_registertime();
  void set_allocated_registertime(std::string* value);

  private:
  const std::string& _internal_registertime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_registertime(
      const std::string& value);
  std::string* _internal_mutable_registertime();

  public:
  // uint64 accountId = 1;
  void clear_accountid() ;
  ::uint64_t accountid() const;
  void set_accountid(::uint64_t value);

  private:
  ::uint64_t _internal_accountid() const;
  void _internal_set_accountid(::uint64_t value);

  public:
  // uint64 sortTime = 9;
  void clear_sorttime() ;
  ::uint64_t sorttime() const;
  void set_sorttime(::uint64_t value);

  private:
  ::uint64_t _internal_sorttime() const;
  void _internal_set_sorttime(::uint64_t value);

  public:
  // int32 banType = 4;
  void clear_bantype() ;
  ::int32_t bantype() const;
  void set_bantype(::int32_t value);

  private:
  ::int32_t _internal_bantype() const;
  void _internal_set_bantype(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.ReasonSearchBanUserInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      99, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ReasonSearchBanUserInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReasonSearchBanUserInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::google::protobuf::internal::ArenaStringPtr comment_;
    ::google::protobuf::internal::ArenaStringPtr begintime_;
    ::google::protobuf::internal::ArenaStringPtr endtime_;
    ::google::protobuf::internal::ArenaStringPtr registertime_;
    ::uint64_t accountid_;
    ::uint64_t sorttime_;
    ::int32_t bantype_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_userInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_userInfo) */ {
 public:
  inline Operate_userInfo() : Operate_userInfo(nullptr) {}
  ~Operate_userInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_userInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_userInfo(const Operate_userInfo& from) : Operate_userInfo(nullptr, from) {}
  inline Operate_userInfo(Operate_userInfo&& from) noexcept
      : Operate_userInfo(nullptr, std::move(from)) {}
  inline Operate_userInfo& operator=(const Operate_userInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_userInfo& operator=(Operate_userInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_userInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_userInfo* internal_default_instance() {
    return reinterpret_cast<const Operate_userInfo*>(
        &_Operate_userInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Operate_userInfo& a, Operate_userInfo& b) { a.Swap(&b); }
  inline void Swap(Operate_userInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_userInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_userInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_userInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_userInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_userInfo& from) { Operate_userInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_userInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_userInfo"; }

 protected:
  explicit Operate_userInfo(::google::protobuf::Arena* arena);
  Operate_userInfo(::google::protobuf::Arena* arena, const Operate_userInfo& from);
  Operate_userInfo(::google::protobuf::Arena* arena, Operate_userInfo&& from) noexcept
      : Operate_userInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNicknameListFieldNumber = 2,
    kAccountIdFieldNumber = 1,
  };
  // repeated string nicknameList = 2;
  int nicknamelist_size() const;
  private:
  int _internal_nicknamelist_size() const;

  public:
  void clear_nicknamelist() ;
  const std::string& nicknamelist(int index) const;
  std::string* mutable_nicknamelist(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nicknamelist(int index, Arg_&& value, Args_... args);
  std::string* add_nicknamelist();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_nicknamelist(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& nicknamelist() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_nicknamelist();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_nicknamelist() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_nicknamelist();

  public:
  // uint64 accountId = 1;
  void clear_accountid() ;
  ::uint64_t accountid() const;
  void set_accountid(::uint64_t value);

  private:
  ::uint64_t _internal_accountid() const;
  void _internal_set_accountid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_userInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      47, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_userInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_userInfo& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> nicknamelist_;
    ::uint64_t accountid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_report_info final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_report_info) */ {
 public:
  inline Operate_report_info() : Operate_report_info(nullptr) {}
  ~Operate_report_info() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_report_info(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_report_info(const Operate_report_info& from) : Operate_report_info(nullptr, from) {}
  inline Operate_report_info(Operate_report_info&& from) noexcept
      : Operate_report_info(nullptr, std::move(from)) {}
  inline Operate_report_info& operator=(const Operate_report_info& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_report_info& operator=(Operate_report_info&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_report_info& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_report_info* internal_default_instance() {
    return reinterpret_cast<const Operate_report_info*>(
        &_Operate_report_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(Operate_report_info& a, Operate_report_info& b) { a.Swap(&b); }
  inline void Swap(Operate_report_info* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_report_info* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_report_info* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_report_info>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_report_info& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_report_info& from) { Operate_report_info::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_report_info* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_report_info"; }

 protected:
  explicit Operate_report_info(::google::protobuf::Arena* arena);
  Operate_report_info(::google::protobuf::Arena* arena, const Operate_report_info& from);
  Operate_report_info(::google::protobuf::Arena* arena, Operate_report_info&& from) noexcept
      : Operate_report_info(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetNicknameFieldNumber = 3,
    kRegisterDateFieldNumber = 5,
    kReportIdFieldNumber = 1,
    kTargetCharacterIdFieldNumber = 2,
    kGameIdFieldNumber = 4,
  };
  // string targetNickname = 3;
  void clear_targetnickname() ;
  const std::string& targetnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_targetnickname(Arg_&& arg, Args_... args);
  std::string* mutable_targetnickname();
  PROTOBUF_NODISCARD std::string* release_targetnickname();
  void set_allocated_targetnickname(std::string* value);

  private:
  const std::string& _internal_targetnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_targetnickname(
      const std::string& value);
  std::string* _internal_mutable_targetnickname();

  public:
  // string registerDate = 5;
  void clear_registerdate() ;
  const std::string& registerdate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_registerdate(Arg_&& arg, Args_... args);
  std::string* mutable_registerdate();
  PROTOBUF_NODISCARD std::string* release_registerdate();
  void set_allocated_registerdate(std::string* value);

  private:
  const std::string& _internal_registerdate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_registerdate(
      const std::string& value);
  std::string* _internal_mutable_registerdate();

  public:
  // uint64 reportId = 1;
  void clear_reportid() ;
  ::uint64_t reportid() const;
  void set_reportid(::uint64_t value);

  private:
  ::uint64_t _internal_reportid() const;
  void _internal_set_reportid(::uint64_t value);

  public:
  // uint64 targetCharacterId = 2;
  void clear_targetcharacterid() ;
  ::uint64_t targetcharacterid() const;
  void set_targetcharacterid(::uint64_t value);

  private:
  ::uint64_t _internal_targetcharacterid() const;
  void _internal_set_targetcharacterid(::uint64_t value);

  public:
  // uint64 gameId = 4;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_report_info)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_report_info_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_report_info& from_msg);
    ::google::protobuf::internal::ArenaStringPtr targetnickname_;
    ::google::protobuf::internal::ArenaStringPtr registerdate_;
    ::uint64_t reportid_;
    ::uint64_t targetcharacterid_;
    ::uint64_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_nickname_change final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_nickname_change) */ {
 public:
  inline Operate_nickname_change() : Operate_nickname_change(nullptr) {}
  ~Operate_nickname_change() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_nickname_change(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_nickname_change(const Operate_nickname_change& from) : Operate_nickname_change(nullptr, from) {}
  inline Operate_nickname_change(Operate_nickname_change&& from) noexcept
      : Operate_nickname_change(nullptr, std::move(from)) {}
  inline Operate_nickname_change& operator=(const Operate_nickname_change& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_nickname_change& operator=(Operate_nickname_change&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_nickname_change& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_nickname_change* internal_default_instance() {
    return reinterpret_cast<const Operate_nickname_change*>(
        &_Operate_nickname_change_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(Operate_nickname_change& a, Operate_nickname_change& b) { a.Swap(&b); }
  inline void Swap(Operate_nickname_change* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_nickname_change* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_nickname_change* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_nickname_change>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_nickname_change& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_nickname_change& from) { Operate_nickname_change::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_nickname_change* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_nickname_change"; }

 protected:
  explicit Operate_nickname_change(::google::protobuf::Arena* arena);
  Operate_nickname_change(::google::protobuf::Arena* arena, const Operate_nickname_change& from);
  Operate_nickname_change(::google::protobuf::Arena* arena, Operate_nickname_change&& from) noexcept
      : Operate_nickname_change(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSecurityCodeFieldNumber = 1,
    kCurrentNicknameFieldNumber = 2,
    kChangeNicknameFieldNumber = 3,
  };
  // string securityCode = 1;
  void clear_securitycode() ;
  const std::string& securitycode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_securitycode(Arg_&& arg, Args_... args);
  std::string* mutable_securitycode();
  PROTOBUF_NODISCARD std::string* release_securitycode();
  void set_allocated_securitycode(std::string* value);

  private:
  const std::string& _internal_securitycode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_securitycode(
      const std::string& value);
  std::string* _internal_mutable_securitycode();

  public:
  // string currentNickname = 2;
  void clear_currentnickname() ;
  const std::string& currentnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_currentnickname(Arg_&& arg, Args_... args);
  std::string* mutable_currentnickname();
  PROTOBUF_NODISCARD std::string* release_currentnickname();
  void set_allocated_currentnickname(std::string* value);

  private:
  const std::string& _internal_currentnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_currentnickname(
      const std::string& value);
  std::string* _internal_mutable_currentnickname();

  public:
  // string changeNickname = 3;
  void clear_changenickname() ;
  const std::string& changenickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_changenickname(Arg_&& arg, Args_... args);
  std::string* mutable_changenickname();
  PROTOBUF_NODISCARD std::string* release_changenickname();
  void set_allocated_changenickname(std::string* value);

  private:
  const std::string& _internal_changenickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_changenickname(
      const std::string& value);
  std::string* _internal_mutable_changenickname();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_nickname_change)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      83, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_nickname_change_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_nickname_change& from_msg);
    ::google::protobuf::internal::ArenaStringPtr securitycode_;
    ::google::protobuf::internal::ArenaStringPtr currentnickname_;
    ::google::protobuf::internal::ArenaStringPtr changenickname_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_login_log final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_login_log) */ {
 public:
  inline Operate_login_log() : Operate_login_log(nullptr) {}
  ~Operate_login_log() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_login_log(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_login_log(const Operate_login_log& from) : Operate_login_log(nullptr, from) {}
  inline Operate_login_log(Operate_login_log&& from) noexcept
      : Operate_login_log(nullptr, std::move(from)) {}
  inline Operate_login_log& operator=(const Operate_login_log& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_login_log& operator=(Operate_login_log&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_login_log& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_login_log* internal_default_instance() {
    return reinterpret_cast<const Operate_login_log*>(
        &_Operate_login_log_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(Operate_login_log& a, Operate_login_log& b) { a.Swap(&b); }
  inline void Swap(Operate_login_log* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_login_log* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_login_log* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_login_log>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_login_log& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_login_log& from) { Operate_login_log::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_login_log* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_login_log"; }

 protected:
  explicit Operate_login_log(::google::protobuf::Arena* arena);
  Operate_login_log(::google::protobuf::Arena* arena, const Operate_login_log& from);
  Operate_login_log(::google::protobuf::Arena* arena, Operate_login_log&& from) noexcept
      : Operate_login_log(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLoginTimeFieldNumber = 3,
    kLogoutTimeFieldNumber = 4,
    kIpAddressFieldNumber = 5,
    kIdxFieldNumber = 1,
    kAccountIdFieldNumber = 2,
  };
  // string loginTime = 3;
  void clear_logintime() ;
  const std::string& logintime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_logintime(Arg_&& arg, Args_... args);
  std::string* mutable_logintime();
  PROTOBUF_NODISCARD std::string* release_logintime();
  void set_allocated_logintime(std::string* value);

  private:
  const std::string& _internal_logintime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_logintime(
      const std::string& value);
  std::string* _internal_mutable_logintime();

  public:
  // string logoutTime = 4;
  void clear_logouttime() ;
  const std::string& logouttime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_logouttime(Arg_&& arg, Args_... args);
  std::string* mutable_logouttime();
  PROTOBUF_NODISCARD std::string* release_logouttime();
  void set_allocated_logouttime(std::string* value);

  private:
  const std::string& _internal_logouttime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_logouttime(
      const std::string& value);
  std::string* _internal_mutable_logouttime();

  public:
  // string ipAddress = 5;
  void clear_ipaddress() ;
  const std::string& ipaddress() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ipaddress(Arg_&& arg, Args_... args);
  std::string* mutable_ipaddress();
  PROTOBUF_NODISCARD std::string* release_ipaddress();
  void set_allocated_ipaddress(std::string* value);

  private:
  const std::string& _internal_ipaddress() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ipaddress(
      const std::string& value);
  std::string* _internal_mutable_ipaddress();

  public:
  // uint64 idx = 1;
  void clear_idx() ;
  ::uint64_t idx() const;
  void set_idx(::uint64_t value);

  private:
  ::uint64_t _internal_idx() const;
  void _internal_set_idx(::uint64_t value);

  public:
  // uint64 accountId = 2;
  void clear_accountid() ;
  ::uint64_t accountid() const;
  void set_accountid(::uint64_t value);

  private:
  ::uint64_t _internal_accountid() const;
  void _internal_set_accountid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_login_log)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_login_log_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_login_log& from_msg);
    ::google::protobuf::internal::ArenaStringPtr logintime_;
    ::google::protobuf::internal::ArenaStringPtr logouttime_;
    ::google::protobuf::internal::ArenaStringPtr ipaddress_;
    ::uint64_t idx_;
    ::uint64_t accountid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_iron_shield_list final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_iron_shield_list) */ {
 public:
  inline Operate_iron_shield_list() : Operate_iron_shield_list(nullptr) {}
  ~Operate_iron_shield_list() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_iron_shield_list(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_iron_shield_list(const Operate_iron_shield_list& from) : Operate_iron_shield_list(nullptr, from) {}
  inline Operate_iron_shield_list(Operate_iron_shield_list&& from) noexcept
      : Operate_iron_shield_list(nullptr, std::move(from)) {}
  inline Operate_iron_shield_list& operator=(const Operate_iron_shield_list& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_iron_shield_list& operator=(Operate_iron_shield_list&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_iron_shield_list& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_iron_shield_list* internal_default_instance() {
    return reinterpret_cast<const Operate_iron_shield_list*>(
        &_Operate_iron_shield_list_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(Operate_iron_shield_list& a, Operate_iron_shield_list& b) { a.Swap(&b); }
  inline void Swap(Operate_iron_shield_list* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_iron_shield_list* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_iron_shield_list* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_iron_shield_list>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_iron_shield_list& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_iron_shield_list& from) { Operate_iron_shield_list::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_iron_shield_list* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_iron_shield_list"; }

 protected:
  explicit Operate_iron_shield_list(::google::protobuf::Arena* arena);
  Operate_iron_shield_list(::google::protobuf::Arena* arena, const Operate_iron_shield_list& from);
  Operate_iron_shield_list(::google::protobuf::Arena* arena, Operate_iron_shield_list&& from) noexcept
      : Operate_iron_shield_list(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSecurityCodeFieldNumber = 1,
  };
  // string securityCode = 1;
  void clear_securitycode() ;
  const std::string& securitycode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_securitycode(Arg_&& arg, Args_... args);
  std::string* mutable_securitycode();
  PROTOBUF_NODISCARD std::string* release_securitycode();
  void set_allocated_securitycode(std::string* value);

  private:
  const std::string& _internal_securitycode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_securitycode(
      const std::string& value);
  std::string* _internal_mutable_securitycode();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_iron_shield_list)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      55, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_iron_shield_list_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_iron_shield_list& from_msg);
    ::google::protobuf::internal::ArenaStringPtr securitycode_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_iron_shield_info final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_iron_shield_info) */ {
 public:
  inline Operate_iron_shield_info() : Operate_iron_shield_info(nullptr) {}
  ~Operate_iron_shield_info() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_iron_shield_info(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_iron_shield_info(const Operate_iron_shield_info& from) : Operate_iron_shield_info(nullptr, from) {}
  inline Operate_iron_shield_info(Operate_iron_shield_info&& from) noexcept
      : Operate_iron_shield_info(nullptr, std::move(from)) {}
  inline Operate_iron_shield_info& operator=(const Operate_iron_shield_info& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_iron_shield_info& operator=(Operate_iron_shield_info&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_iron_shield_info& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_iron_shield_info* internal_default_instance() {
    return reinterpret_cast<const Operate_iron_shield_info*>(
        &_Operate_iron_shield_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(Operate_iron_shield_info& a, Operate_iron_shield_info& b) { a.Swap(&b); }
  inline void Swap(Operate_iron_shield_info* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_iron_shield_info* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_iron_shield_info* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_iron_shield_info>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_iron_shield_info& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_iron_shield_info& from) { Operate_iron_shield_info::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_iron_shield_info* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_iron_shield_info"; }

 protected:
  explicit Operate_iron_shield_info(::google::protobuf::Arena* arena);
  Operate_iron_shield_info(::google::protobuf::Arena* arena, const Operate_iron_shield_info& from);
  Operate_iron_shield_info(::google::protobuf::Arena* arena, Operate_iron_shield_info&& from) noexcept
      : Operate_iron_shield_info(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHardwareIdsFieldNumber = 4,
    kNicknameFieldNumber = 3,
    kCallbackTypeFieldNumber = 5,
    kRegisterDateFieldNumber = 6,
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
  };
  // repeated string hardwareIds = 4;
  int hardwareids_size() const;
  private:
  int _internal_hardwareids_size() const;

  public:
  void clear_hardwareids() ;
  const std::string& hardwareids(int index) const;
  std::string* mutable_hardwareids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hardwareids(int index, Arg_&& value, Args_... args);
  std::string* add_hardwareids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_hardwareids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& hardwareids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_hardwareids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_hardwareids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_hardwareids();

  public:
  // string nickname = 3;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string callbackType = 5;
  void clear_callbacktype() ;
  const std::string& callbacktype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_callbacktype(Arg_&& arg, Args_... args);
  std::string* mutable_callbacktype();
  PROTOBUF_NODISCARD std::string* release_callbacktype();
  void set_allocated_callbacktype(std::string* value);

  private:
  const std::string& _internal_callbacktype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_callbacktype(
      const std::string& value);
  std::string* _internal_mutable_callbacktype();

  public:
  // string registerDate = 6;
  void clear_registerdate() ;
  const std::string& registerdate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_registerdate(Arg_&& arg, Args_... args);
  std::string* mutable_registerdate();
  PROTOBUF_NODISCARD std::string* release_registerdate();
  void set_allocated_registerdate(std::string* value);

  private:
  const std::string& _internal_registerdate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_registerdate(
      const std::string& value);
  std::string* _internal_mutable_registerdate();

  public:
  // uint64 accountId = 1;
  void clear_accountid() ;
  ::uint64_t accountid() const;
  void set_accountid(::uint64_t value);

  private:
  ::uint64_t _internal_accountid() const;
  void _internal_set_accountid(::uint64_t value);

  public:
  // uint64 characterId = 2;
  void clear_characterid() ;
  ::uint64_t characterid() const;
  void set_characterid(::uint64_t value);

  private:
  ::uint64_t _internal_characterid() const;
  void _internal_set_characterid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_iron_shield_info)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      86, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_iron_shield_info_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_iron_shield_info& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> hardwareids_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr callbacktype_;
    ::google::protobuf::internal::ArenaStringPtr registerdate_;
    ::uint64_t accountid_;
    ::uint64_t characterid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_hack_report_list final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_hack_report_list) */ {
 public:
  inline Operate_hack_report_list() : Operate_hack_report_list(nullptr) {}
  ~Operate_hack_report_list() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_hack_report_list(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_hack_report_list(const Operate_hack_report_list& from) : Operate_hack_report_list(nullptr, from) {}
  inline Operate_hack_report_list(Operate_hack_report_list&& from) noexcept
      : Operate_hack_report_list(nullptr, std::move(from)) {}
  inline Operate_hack_report_list& operator=(const Operate_hack_report_list& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_hack_report_list& operator=(Operate_hack_report_list&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_hack_report_list& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_hack_report_list* internal_default_instance() {
    return reinterpret_cast<const Operate_hack_report_list*>(
        &_Operate_hack_report_list_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(Operate_hack_report_list& a, Operate_hack_report_list& b) { a.Swap(&b); }
  inline void Swap(Operate_hack_report_list* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_hack_report_list* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_hack_report_list* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_hack_report_list>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_hack_report_list& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_hack_report_list& from) { Operate_hack_report_list::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_hack_report_list* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_hack_report_list"; }

 protected:
  explicit Operate_hack_report_list(::google::protobuf::Arena* arena);
  Operate_hack_report_list(::google::protobuf::Arena* arena, const Operate_hack_report_list& from);
  Operate_hack_report_list(::google::protobuf::Arena* arena, Operate_hack_report_list&& from) noexcept
      : Operate_hack_report_list(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSecurityCodeFieldNumber = 1,
  };
  // string securityCode = 1;
  void clear_securitycode() ;
  const std::string& securitycode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_securitycode(Arg_&& arg, Args_... args);
  std::string* mutable_securitycode();
  PROTOBUF_NODISCARD std::string* release_securitycode();
  void set_allocated_securitycode(std::string* value);

  private:
  const std::string& _internal_securitycode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_securitycode(
      const std::string& value);
  std::string* _internal_mutable_securitycode();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_hack_report_list)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      55, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_hack_report_list_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_hack_report_list& from_msg);
    ::google::protobuf::internal::ArenaStringPtr securitycode_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_dll_list final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_dll_list) */ {
 public:
  inline Operate_dll_list() : Operate_dll_list(nullptr) {}
  ~Operate_dll_list() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_dll_list(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_dll_list(const Operate_dll_list& from) : Operate_dll_list(nullptr, from) {}
  inline Operate_dll_list(Operate_dll_list&& from) noexcept
      : Operate_dll_list(nullptr, std::move(from)) {}
  inline Operate_dll_list& operator=(const Operate_dll_list& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_dll_list& operator=(Operate_dll_list&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_dll_list& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_dll_list* internal_default_instance() {
    return reinterpret_cast<const Operate_dll_list*>(
        &_Operate_dll_list_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Operate_dll_list& a, Operate_dll_list& b) { a.Swap(&b); }
  inline void Swap(Operate_dll_list* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_dll_list* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_dll_list* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_dll_list>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_dll_list& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_dll_list& from) { Operate_dll_list::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_dll_list* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_dll_list"; }

 protected:
  explicit Operate_dll_list(::google::protobuf::Arena* arena);
  Operate_dll_list(::google::protobuf::Arena* arena, const Operate_dll_list& from);
  Operate_dll_list(::google::protobuf::Arena* arena, Operate_dll_list&& from) noexcept
      : Operate_dll_list(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDllsFieldNumber = 1,
  };
  // repeated string dlls = 1;
  int dlls_size() const;
  private:
  int _internal_dlls_size() const;

  public:
  void clear_dlls() ;
  const std::string& dlls(int index) const;
  std::string* mutable_dlls(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dlls(int index, Arg_&& value, Args_... args);
  std::string* add_dlls();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_dlls(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& dlls() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_dlls();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_dlls() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_dlls();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_dll_list)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      39, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_dll_list_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_dll_list& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> dlls_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_dll_info final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_dll_info) */ {
 public:
  inline Operate_dll_info() : Operate_dll_info(nullptr) {}
  ~Operate_dll_info() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_dll_info(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_dll_info(const Operate_dll_info& from) : Operate_dll_info(nullptr, from) {}
  inline Operate_dll_info(Operate_dll_info&& from) noexcept
      : Operate_dll_info(nullptr, std::move(from)) {}
  inline Operate_dll_info& operator=(const Operate_dll_info& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_dll_info& operator=(Operate_dll_info&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_dll_info& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_dll_info* internal_default_instance() {
    return reinterpret_cast<const Operate_dll_info*>(
        &_Operate_dll_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Operate_dll_info& a, Operate_dll_info& b) { a.Swap(&b); }
  inline void Swap(Operate_dll_info* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_dll_info* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_dll_info* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_dll_info>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_dll_info& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_dll_info& from) { Operate_dll_info::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_dll_info* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_dll_info"; }

 protected:
  explicit Operate_dll_info(::google::protobuf::Arena* arena);
  Operate_dll_info(::google::protobuf::Arena* arena, const Operate_dll_info& from);
  Operate_dll_info(::google::protobuf::Arena* arena, Operate_dll_info&& from) noexcept
      : Operate_dll_info(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSecurityCodeFieldNumber = 1,
    kDllPathFieldNumber = 2,
  };
  // string securityCode = 1;
  void clear_securitycode() ;
  const std::string& securitycode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_securitycode(Arg_&& arg, Args_... args);
  std::string* mutable_securitycode();
  PROTOBUF_NODISCARD std::string* release_securitycode();
  void set_allocated_securitycode(std::string* value);

  private:
  const std::string& _internal_securitycode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_securitycode(
      const std::string& value);
  std::string* _internal_mutable_securitycode();

  public:
  // string dllPath = 2;
  void clear_dllpath() ;
  const std::string& dllpath() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dllpath(Arg_&& arg, Args_... args);
  std::string* mutable_dllpath();
  PROTOBUF_NODISCARD std::string* release_dllpath();
  void set_allocated_dllpath(std::string* value);

  private:
  const std::string& _internal_dllpath() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dllpath(
      const std::string& value);
  std::string* _internal_mutable_dllpath();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_dll_info)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_dll_info_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_dll_info& from_msg);
    ::google::protobuf::internal::ArenaStringPtr securitycode_;
    ::google::protobuf::internal::ArenaStringPtr dllpath_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_character_info final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_character_info) */ {
 public:
  inline Operate_character_info() : Operate_character_info(nullptr) {}
  ~Operate_character_info() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_character_info(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_character_info(const Operate_character_info& from) : Operate_character_info(nullptr, from) {}
  inline Operate_character_info(Operate_character_info&& from) noexcept
      : Operate_character_info(nullptr, std::move(from)) {}
  inline Operate_character_info& operator=(const Operate_character_info& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_character_info& operator=(Operate_character_info&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_character_info& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_character_info* internal_default_instance() {
    return reinterpret_cast<const Operate_character_info*>(
        &_Operate_character_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(Operate_character_info& a, Operate_character_info& b) { a.Swap(&b); }
  inline void Swap(Operate_character_info* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_character_info* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_character_info* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_character_info>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_character_info& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_character_info& from) { Operate_character_info::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_character_info* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_character_info"; }

 protected:
  explicit Operate_character_info(::google::protobuf::Arena* arena);
  Operate_character_info(::google::protobuf::Arena* arena, const Operate_character_info& from);
  Operate_character_info(::google::protobuf::Arena* arena, Operate_character_info&& from) noexcept
      : Operate_character_info(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNicknameFieldNumber = 3,
    kCharacterClassFieldNumber = 4,
    kGebderFieldNumber = 5,
    kRegisterDateFieldNumber = 6,
    kLastLoginDateFieldNumber = 7,
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
  };
  // string nickname = 3;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string characterClass = 4;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // string gebder = 5;
  void clear_gebder() ;
  const std::string& gebder() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_gebder(Arg_&& arg, Args_... args);
  std::string* mutable_gebder();
  PROTOBUF_NODISCARD std::string* release_gebder();
  void set_allocated_gebder(std::string* value);

  private:
  const std::string& _internal_gebder() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_gebder(
      const std::string& value);
  std::string* _internal_mutable_gebder();

  public:
  // string registerDate = 6;
  void clear_registerdate() ;
  const std::string& registerdate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_registerdate(Arg_&& arg, Args_... args);
  std::string* mutable_registerdate();
  PROTOBUF_NODISCARD std::string* release_registerdate();
  void set_allocated_registerdate(std::string* value);

  private:
  const std::string& _internal_registerdate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_registerdate(
      const std::string& value);
  std::string* _internal_mutable_registerdate();

  public:
  // string lastLoginDate = 7;
  void clear_lastlogindate() ;
  const std::string& lastlogindate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lastlogindate(Arg_&& arg, Args_... args);
  std::string* mutable_lastlogindate();
  PROTOBUF_NODISCARD std::string* release_lastlogindate();
  void set_allocated_lastlogindate(std::string* value);

  private:
  const std::string& _internal_lastlogindate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lastlogindate(
      const std::string& value);
  std::string* _internal_mutable_lastlogindate();

  public:
  // uint64 accountId = 1;
  void clear_accountid() ;
  ::uint64_t accountid() const;
  void set_accountid(::uint64_t value);

  private:
  ::uint64_t _internal_accountid() const;
  void _internal_set_accountid(::uint64_t value);

  public:
  // uint64 characterId = 2;
  void clear_characterid() ;
  ::uint64_t characterid() const;
  void set_characterid(::uint64_t value);

  private:
  ::uint64_t _internal_characterid() const;
  void _internal_set_characterid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_character_info)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      94, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_character_info_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_character_info& from_msg);
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::google::protobuf::internal::ArenaStringPtr gebder_;
    ::google::protobuf::internal::ArenaStringPtr registerdate_;
    ::google::protobuf::internal::ArenaStringPtr lastlogindate_;
    ::uint64_t accountid_;
    ::uint64_t characterid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_ban_user_info final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_ban_user_info) */ {
 public:
  inline Operate_ban_user_info() : Operate_ban_user_info(nullptr) {}
  ~Operate_ban_user_info() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_ban_user_info(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_ban_user_info(const Operate_ban_user_info& from) : Operate_ban_user_info(nullptr, from) {}
  inline Operate_ban_user_info(Operate_ban_user_info&& from) noexcept
      : Operate_ban_user_info(nullptr, std::move(from)) {}
  inline Operate_ban_user_info& operator=(const Operate_ban_user_info& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_ban_user_info& operator=(Operate_ban_user_info&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_ban_user_info& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_ban_user_info* internal_default_instance() {
    return reinterpret_cast<const Operate_ban_user_info*>(
        &_Operate_ban_user_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(Operate_ban_user_info& a, Operate_ban_user_info& b) { a.Swap(&b); }
  inline void Swap(Operate_ban_user_info* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_ban_user_info* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_ban_user_info* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_ban_user_info>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_ban_user_info& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_ban_user_info& from) { Operate_ban_user_info::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_ban_user_info* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_ban_user_info"; }

 protected:
  explicit Operate_ban_user_info(::google::protobuf::Arena* arena);
  Operate_ban_user_info(::google::protobuf::Arena* arena, const Operate_ban_user_info& from);
  Operate_ban_user_info(::google::protobuf::Arena* arena, Operate_ban_user_info&& from) noexcept
      : Operate_ban_user_info(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBanTypeFieldNumber = 2,
    kCommentFieldNumber = 3,
    kRegisterDateFieldNumber = 4,
    kAccountIdFieldNumber = 1,
  };
  // string banType = 2;
  void clear_bantype() ;
  const std::string& bantype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bantype(Arg_&& arg, Args_... args);
  std::string* mutable_bantype();
  PROTOBUF_NODISCARD std::string* release_bantype();
  void set_allocated_bantype(std::string* value);

  private:
  const std::string& _internal_bantype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bantype(
      const std::string& value);
  std::string* _internal_mutable_bantype();

  public:
  // string comment = 3;
  void clear_comment() ;
  const std::string& comment() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_comment(Arg_&& arg, Args_... args);
  std::string* mutable_comment();
  PROTOBUF_NODISCARD std::string* release_comment();
  void set_allocated_comment(std::string* value);

  private:
  const std::string& _internal_comment() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_comment(
      const std::string& value);
  std::string* _internal_mutable_comment();

  public:
  // string registerDate = 4;
  void clear_registerdate() ;
  const std::string& registerdate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_registerdate(Arg_&& arg, Args_... args);
  std::string* mutable_registerdate();
  PROTOBUF_NODISCARD std::string* release_registerdate();
  void set_allocated_registerdate(std::string* value);

  private:
  const std::string& _internal_registerdate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_registerdate(
      const std::string& value);
  std::string* _internal_mutable_registerdate();

  public:
  // uint64 accountId = 1;
  void clear_accountid() ;
  ::uint64_t accountid() const;
  void set_accountid(::uint64_t value);

  private:
  ::uint64_t _internal_accountid() const;
  void _internal_set_accountid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_ban_user_info)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      66, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_ban_user_info_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_ban_user_info& from_msg);
    ::google::protobuf::internal::ArenaStringPtr bantype_;
    ::google::protobuf::internal::ArenaStringPtr comment_;
    ::google::protobuf::internal::ArenaStringPtr registerdate_;
    ::uint64_t accountid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_ban_history final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_ban_history) */ {
 public:
  inline Operate_ban_history() : Operate_ban_history(nullptr) {}
  ~Operate_ban_history() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_ban_history(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_ban_history(const Operate_ban_history& from) : Operate_ban_history(nullptr, from) {}
  inline Operate_ban_history(Operate_ban_history&& from) noexcept
      : Operate_ban_history(nullptr, std::move(from)) {}
  inline Operate_ban_history& operator=(const Operate_ban_history& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_ban_history& operator=(Operate_ban_history&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_ban_history& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_ban_history* internal_default_instance() {
    return reinterpret_cast<const Operate_ban_history*>(
        &_Operate_ban_history_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(Operate_ban_history& a, Operate_ban_history& b) { a.Swap(&b); }
  inline void Swap(Operate_ban_history* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_ban_history* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_ban_history* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_ban_history>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_ban_history& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_ban_history& from) { Operate_ban_history::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_ban_history* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_ban_history"; }

 protected:
  explicit Operate_ban_history(::google::protobuf::Arena* arena);
  Operate_ban_history(::google::protobuf::Arena* arena, const Operate_ban_history& from);
  Operate_ban_history(::google::protobuf::Arena* arena, Operate_ban_history&& from) noexcept
      : Operate_ban_history(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSecurityCodeFieldNumber = 1,
    kNicknameFieldNumber = 2,
  };
  // string securityCode = 1;
  void clear_securitycode() ;
  const std::string& securitycode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_securitycode(Arg_&& arg, Args_... args);
  std::string* mutable_securitycode();
  PROTOBUF_NODISCARD std::string* release_securitycode();
  void set_allocated_securitycode(std::string* value);

  private:
  const std::string& _internal_securitycode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_securitycode(
      const std::string& value);
  std::string* _internal_mutable_securitycode();

  public:
  // string nickname = 2;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_ban_history)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      58, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_ban_history_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_ban_history& from_msg);
    ::google::protobuf::internal::ArenaStringPtr securitycode_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_ban_Hardware_list final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_ban_Hardware_list) */ {
 public:
  inline Operate_ban_Hardware_list() : Operate_ban_Hardware_list(nullptr) {}
  ~Operate_ban_Hardware_list() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_ban_Hardware_list(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_ban_Hardware_list(const Operate_ban_Hardware_list& from) : Operate_ban_Hardware_list(nullptr, from) {}
  inline Operate_ban_Hardware_list(Operate_ban_Hardware_list&& from) noexcept
      : Operate_ban_Hardware_list(nullptr, std::move(from)) {}
  inline Operate_ban_Hardware_list& operator=(const Operate_ban_Hardware_list& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_ban_Hardware_list& operator=(Operate_ban_Hardware_list&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_ban_Hardware_list& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_ban_Hardware_list* internal_default_instance() {
    return reinterpret_cast<const Operate_ban_Hardware_list*>(
        &_Operate_ban_Hardware_list_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(Operate_ban_Hardware_list& a, Operate_ban_Hardware_list& b) { a.Swap(&b); }
  inline void Swap(Operate_ban_Hardware_list* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_ban_Hardware_list* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_ban_Hardware_list* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_ban_Hardware_list>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_ban_Hardware_list& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_ban_Hardware_list& from) { Operate_ban_Hardware_list::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_ban_Hardware_list* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_ban_Hardware_list"; }

 protected:
  explicit Operate_ban_Hardware_list(::google::protobuf::Arena* arena);
  Operate_ban_Hardware_list(::google::protobuf::Arena* arena, const Operate_ban_Hardware_list& from);
  Operate_ban_Hardware_list(::google::protobuf::Arena* arena, Operate_ban_Hardware_list&& from) noexcept
      : Operate_ban_Hardware_list(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSecurityCodeFieldNumber = 1,
  };
  // string securityCode = 1;
  void clear_securitycode() ;
  const std::string& securitycode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_securitycode(Arg_&& arg, Args_... args);
  std::string* mutable_securitycode();
  PROTOBUF_NODISCARD std::string* release_securitycode();
  void set_allocated_securitycode(std::string* value);

  private:
  const std::string& _internal_securitycode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_securitycode(
      const std::string& value);
  std::string* _internal_mutable_securitycode();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_ban_Hardware_list)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      56, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_ban_Hardware_list_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_ban_Hardware_list& from_msg);
    ::google::protobuf::internal::ArenaStringPtr securitycode_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_announceMessageInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_announceMessageInfo) */ {
 public:
  inline Operate_announceMessageInfo() : Operate_announceMessageInfo(nullptr) {}
  ~Operate_announceMessageInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_announceMessageInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_announceMessageInfo(const Operate_announceMessageInfo& from) : Operate_announceMessageInfo(nullptr, from) {}
  inline Operate_announceMessageInfo(Operate_announceMessageInfo&& from) noexcept
      : Operate_announceMessageInfo(nullptr, std::move(from)) {}
  inline Operate_announceMessageInfo& operator=(const Operate_announceMessageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_announceMessageInfo& operator=(Operate_announceMessageInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_announceMessageInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_announceMessageInfo* internal_default_instance() {
    return reinterpret_cast<const Operate_announceMessageInfo*>(
        &_Operate_announceMessageInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Operate_announceMessageInfo& a, Operate_announceMessageInfo& b) { a.Swap(&b); }
  inline void Swap(Operate_announceMessageInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_announceMessageInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_announceMessageInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_announceMessageInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_announceMessageInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_announceMessageInfo& from) { Operate_announceMessageInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_announceMessageInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_announceMessageInfo"; }

 protected:
  explicit Operate_announceMessageInfo(::google::protobuf::Arena* arena);
  Operate_announceMessageInfo(::google::protobuf::Arena* arena, const Operate_announceMessageInfo& from);
  Operate_announceMessageInfo(::google::protobuf::Arena* arena, Operate_announceMessageInfo&& from) noexcept
      : Operate_announceMessageInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAnnounceMessageFieldNumber = 2,
    kNationTypeFieldNumber = 1,
  };
  // string announceMessage = 2;
  void clear_announcemessage() ;
  const std::string& announcemessage() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_announcemessage(Arg_&& arg, Args_... args);
  std::string* mutable_announcemessage();
  PROTOBUF_NODISCARD std::string* release_announcemessage();
  void set_allocated_announcemessage(std::string* value);

  private:
  const std::string& _internal_announcemessage() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_announcemessage(
      const std::string& value);
  std::string* _internal_mutable_announcemessage();

  public:
  // int32 nationType = 1;
  void clear_nationtype() ;
  ::int32_t nationtype() const;
  void set_nationtype(::int32_t value);

  private:
  ::int32_t _internal_nationtype() const;
  void _internal_set_nationtype(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_announceMessageInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      61, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_announceMessageInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_announceMessageInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr announcemessage_;
    ::int32_t nationtype_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_add_hardware_ban final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_add_hardware_ban) */ {
 public:
  inline Operate_add_hardware_ban() : Operate_add_hardware_ban(nullptr) {}
  ~Operate_add_hardware_ban() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_add_hardware_ban(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_add_hardware_ban(const Operate_add_hardware_ban& from) : Operate_add_hardware_ban(nullptr, from) {}
  inline Operate_add_hardware_ban(Operate_add_hardware_ban&& from) noexcept
      : Operate_add_hardware_ban(nullptr, std::move(from)) {}
  inline Operate_add_hardware_ban& operator=(const Operate_add_hardware_ban& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_add_hardware_ban& operator=(Operate_add_hardware_ban&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_add_hardware_ban& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_add_hardware_ban* internal_default_instance() {
    return reinterpret_cast<const Operate_add_hardware_ban*>(
        &_Operate_add_hardware_ban_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(Operate_add_hardware_ban& a, Operate_add_hardware_ban& b) { a.Swap(&b); }
  inline void Swap(Operate_add_hardware_ban* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_add_hardware_ban* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_add_hardware_ban* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_add_hardware_ban>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_add_hardware_ban& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_add_hardware_ban& from) { Operate_add_hardware_ban::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_add_hardware_ban* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_add_hardware_ban"; }

 protected:
  explicit Operate_add_hardware_ban(::google::protobuf::Arena* arena);
  Operate_add_hardware_ban(::google::protobuf::Arena* arena, const Operate_add_hardware_ban& from);
  Operate_add_hardware_ban(::google::protobuf::Arena* arena, Operate_add_hardware_ban&& from) noexcept
      : Operate_add_hardware_ban(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSecurityCodeFieldNumber = 1,
    kHardwareIdFieldNumber = 2,
  };
  // string securityCode = 1;
  void clear_securitycode() ;
  const std::string& securitycode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_securitycode(Arg_&& arg, Args_... args);
  std::string* mutable_securitycode();
  PROTOBUF_NODISCARD std::string* release_securitycode();
  void set_allocated_securitycode(std::string* value);

  private:
  const std::string& _internal_securitycode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_securitycode(
      const std::string& value);
  std::string* _internal_mutable_securitycode();

  public:
  // string hardwareId = 2;
  void clear_hardwareid() ;
  const std::string& hardwareid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hardwareid(Arg_&& arg, Args_... args);
  std::string* mutable_hardwareid();
  PROTOBUF_NODISCARD std::string* release_hardwareid();
  void set_allocated_hardwareid(std::string* value);

  private:
  const std::string& _internal_hardwareid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hardwareid(
      const std::string& value);
  std::string* _internal_mutable_hardwareid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_add_hardware_ban)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      65, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_add_hardware_ban_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_add_hardware_ban& from_msg);
    ::google::protobuf::internal::ArenaStringPtr securitycode_;
    ::google::protobuf::internal::ArenaStringPtr hardwareid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_OperatePlatformInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_OperatePlatformInfo) */ {
 public:
  inline Operate_OperatePlatformInfo() : Operate_OperatePlatformInfo(nullptr) {}
  ~Operate_OperatePlatformInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_OperatePlatformInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_OperatePlatformInfo(const Operate_OperatePlatformInfo& from) : Operate_OperatePlatformInfo(nullptr, from) {}
  inline Operate_OperatePlatformInfo(Operate_OperatePlatformInfo&& from) noexcept
      : Operate_OperatePlatformInfo(nullptr, std::move(from)) {}
  inline Operate_OperatePlatformInfo& operator=(const Operate_OperatePlatformInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_OperatePlatformInfo& operator=(Operate_OperatePlatformInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_OperatePlatformInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_OperatePlatformInfo* internal_default_instance() {
    return reinterpret_cast<const Operate_OperatePlatformInfo*>(
        &_Operate_OperatePlatformInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(Operate_OperatePlatformInfo& a, Operate_OperatePlatformInfo& b) { a.Swap(&b); }
  inline void Swap(Operate_OperatePlatformInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_OperatePlatformInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_OperatePlatformInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_OperatePlatformInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_OperatePlatformInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_OperatePlatformInfo& from) { Operate_OperatePlatformInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_OperatePlatformInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_OperatePlatformInfo"; }

 protected:
  explicit Operate_OperatePlatformInfo(::google::protobuf::Arena* arena);
  Operate_OperatePlatformInfo(::google::protobuf::Arena* arena, const Operate_OperatePlatformInfo& from);
  Operate_OperatePlatformInfo(::google::protobuf::Arena* arena, Operate_OperatePlatformInfo&& from) noexcept
      : Operate_OperatePlatformInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIronmaceidFieldNumber = 1,
    kEmailFieldNumber = 2,
    kUsernameFieldNumber = 3,
    kAccountNickNameFieldNumber = 4,
  };
  // string ironmaceid = 1;
  void clear_ironmaceid() ;
  const std::string& ironmaceid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ironmaceid(Arg_&& arg, Args_... args);
  std::string* mutable_ironmaceid();
  PROTOBUF_NODISCARD std::string* release_ironmaceid();
  void set_allocated_ironmaceid(std::string* value);

  private:
  const std::string& _internal_ironmaceid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ironmaceid(
      const std::string& value);
  std::string* _internal_mutable_ironmaceid();

  public:
  // string email = 2;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // string username = 3;
  void clear_username() ;
  const std::string& username() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_username(Arg_&& arg, Args_... args);
  std::string* mutable_username();
  PROTOBUF_NODISCARD std::string* release_username();
  void set_allocated_username(std::string* value);

  private:
  const std::string& _internal_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_username(
      const std::string& value);
  std::string* _internal_mutable_username();

  public:
  // string accountNickName = 4;
  void clear_accountnickname() ;
  const std::string& accountnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountnickname(Arg_&& arg, Args_... args);
  std::string* mutable_accountnickname();
  PROTOBUF_NODISCARD std::string* release_accountnickname();
  void set_allocated_accountnickname(std::string* value);

  private:
  const std::string& _internal_accountnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountnickname(
      const std::string& value);
  std::string* _internal_mutable_accountnickname();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_OperatePlatformInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      84, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_OperatePlatformInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_OperatePlatformInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr ironmaceid_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr username_;
    ::google::protobuf::internal::ArenaStringPtr accountnickname_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_OperateLoginLogInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_OperateLoginLogInfo) */ {
 public:
  inline Operate_OperateLoginLogInfo() : Operate_OperateLoginLogInfo(nullptr) {}
  ~Operate_OperateLoginLogInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_OperateLoginLogInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_OperateLoginLogInfo(const Operate_OperateLoginLogInfo& from) : Operate_OperateLoginLogInfo(nullptr, from) {}
  inline Operate_OperateLoginLogInfo(Operate_OperateLoginLogInfo&& from) noexcept
      : Operate_OperateLoginLogInfo(nullptr, std::move(from)) {}
  inline Operate_OperateLoginLogInfo& operator=(const Operate_OperateLoginLogInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_OperateLoginLogInfo& operator=(Operate_OperateLoginLogInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_OperateLoginLogInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_OperateLoginLogInfo* internal_default_instance() {
    return reinterpret_cast<const Operate_OperateLoginLogInfo*>(
        &_Operate_OperateLoginLogInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(Operate_OperateLoginLogInfo& a, Operate_OperateLoginLogInfo& b) { a.Swap(&b); }
  inline void Swap(Operate_OperateLoginLogInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_OperateLoginLogInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_OperateLoginLogInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_OperateLoginLogInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_OperateLoginLogInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_OperateLoginLogInfo& from) { Operate_OperateLoginLogInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_OperateLoginLogInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_OperateLoginLogInfo"; }

 protected:
  explicit Operate_OperateLoginLogInfo(::google::protobuf::Arena* arena);
  Operate_OperateLoginLogInfo(::google::protobuf::Arena* arena, const Operate_OperateLoginLogInfo& from);
  Operate_OperateLoginLogInfo(::google::protobuf::Arena* arena, Operate_OperateLoginLogInfo&& from) noexcept
      : Operate_OperateLoginLogInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLoginTimeFieldNumber = 2,
    kLogoutTimeFieldNumber = 3,
    kIpAddressFieldNumber = 4,
    kAccountIdFieldNumber = 1,
  };
  // string loginTime = 2;
  void clear_logintime() ;
  const std::string& logintime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_logintime(Arg_&& arg, Args_... args);
  std::string* mutable_logintime();
  PROTOBUF_NODISCARD std::string* release_logintime();
  void set_allocated_logintime(std::string* value);

  private:
  const std::string& _internal_logintime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_logintime(
      const std::string& value);
  std::string* _internal_mutable_logintime();

  public:
  // string logoutTime = 3;
  void clear_logouttime() ;
  const std::string& logouttime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_logouttime(Arg_&& arg, Args_... args);
  std::string* mutable_logouttime();
  PROTOBUF_NODISCARD std::string* release_logouttime();
  void set_allocated_logouttime(std::string* value);

  private:
  const std::string& _internal_logouttime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_logouttime(
      const std::string& value);
  std::string* _internal_mutable_logouttime();

  public:
  // string ipAddress = 4;
  void clear_ipaddress() ;
  const std::string& ipaddress() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ipaddress(Arg_&& arg, Args_... args);
  std::string* mutable_ipaddress();
  PROTOBUF_NODISCARD std::string* release_ipaddress();
  void set_allocated_ipaddress(std::string* value);

  private:
  const std::string& _internal_ipaddress() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ipaddress(
      const std::string& value);
  std::string* _internal_mutable_ipaddress();

  public:
  // uint64 accountId = 1;
  void clear_accountid() ;
  ::uint64_t accountid() const;
  void set_accountid(::uint64_t value);

  private:
  ::uint64_t _internal_accountid() const;
  void _internal_set_accountid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_OperateLoginLogInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      74, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_OperateLoginLogInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_OperateLoginLogInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr logintime_;
    ::google::protobuf::internal::ArenaStringPtr logouttime_;
    ::google::protobuf::internal::ArenaStringPtr ipaddress_;
    ::uint64_t accountid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_OperateHardwareAccountInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_OperateHardwareAccountInfo) */ {
 public:
  inline Operate_OperateHardwareAccountInfo() : Operate_OperateHardwareAccountInfo(nullptr) {}
  ~Operate_OperateHardwareAccountInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_OperateHardwareAccountInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_OperateHardwareAccountInfo(const Operate_OperateHardwareAccountInfo& from) : Operate_OperateHardwareAccountInfo(nullptr, from) {}
  inline Operate_OperateHardwareAccountInfo(Operate_OperateHardwareAccountInfo&& from) noexcept
      : Operate_OperateHardwareAccountInfo(nullptr, std::move(from)) {}
  inline Operate_OperateHardwareAccountInfo& operator=(const Operate_OperateHardwareAccountInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_OperateHardwareAccountInfo& operator=(Operate_OperateHardwareAccountInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_OperateHardwareAccountInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_OperateHardwareAccountInfo* internal_default_instance() {
    return reinterpret_cast<const Operate_OperateHardwareAccountInfo*>(
        &_Operate_OperateHardwareAccountInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(Operate_OperateHardwareAccountInfo& a, Operate_OperateHardwareAccountInfo& b) { a.Swap(&b); }
  inline void Swap(Operate_OperateHardwareAccountInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_OperateHardwareAccountInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_OperateHardwareAccountInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_OperateHardwareAccountInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_OperateHardwareAccountInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_OperateHardwareAccountInfo& from) { Operate_OperateHardwareAccountInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_OperateHardwareAccountInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_OperateHardwareAccountInfo"; }

 protected:
  explicit Operate_OperateHardwareAccountInfo(::google::protobuf::Arena* arena);
  Operate_OperateHardwareAccountInfo(::google::protobuf::Arena* arena, const Operate_OperateHardwareAccountInfo& from);
  Operate_OperateHardwareAccountInfo(::google::protobuf::Arena* arena, Operate_OperateHardwareAccountInfo&& from) noexcept
      : Operate_OperateHardwareAccountInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHardwareIdFieldNumber = 2,
    kLastUpdateDateFieldNumber = 3,
    kIsHardwareBanFieldNumber = 4,
    kAccountIdFieldNumber = 1,
  };
  // string hardwareId = 2;
  void clear_hardwareid() ;
  const std::string& hardwareid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hardwareid(Arg_&& arg, Args_... args);
  std::string* mutable_hardwareid();
  PROTOBUF_NODISCARD std::string* release_hardwareid();
  void set_allocated_hardwareid(std::string* value);

  private:
  const std::string& _internal_hardwareid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hardwareid(
      const std::string& value);
  std::string* _internal_mutable_hardwareid();

  public:
  // string lastUpdateDate = 3;
  void clear_lastupdatedate() ;
  const std::string& lastupdatedate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lastupdatedate(Arg_&& arg, Args_... args);
  std::string* mutable_lastupdatedate();
  PROTOBUF_NODISCARD std::string* release_lastupdatedate();
  void set_allocated_lastupdatedate(std::string* value);

  private:
  const std::string& _internal_lastupdatedate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lastupdatedate(
      const std::string& value);
  std::string* _internal_mutable_lastupdatedate();

  public:
  // string isHardwareBan = 4;
  void clear_ishardwareban() ;
  const std::string& ishardwareban() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ishardwareban(Arg_&& arg, Args_... args);
  std::string* mutable_ishardwareban();
  PROTOBUF_NODISCARD std::string* release_ishardwareban();
  void set_allocated_ishardwareban(std::string* value);

  private:
  const std::string& _internal_ishardwareban() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ishardwareban(
      const std::string& value);
  std::string* _internal_mutable_ishardwareban();

  public:
  // uint64 accountId = 1;
  void clear_accountid() ;
  ::uint64_t accountid() const;
  void set_accountid(::uint64_t value);

  private:
  ::uint64_t _internal_accountid() const;
  void _internal_set_accountid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_OperateHardwareAccountInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      90, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_OperateHardwareAccountInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_OperateHardwareAccountInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr hardwareid_;
    ::google::protobuf::internal::ArenaStringPtr lastupdatedate_;
    ::google::protobuf::internal::ArenaStringPtr ishardwareban_;
    ::uint64_t accountid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_OperateFileInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_OperateFileInfo) */ {
 public:
  inline Operate_OperateFileInfo() : Operate_OperateFileInfo(nullptr) {}
  ~Operate_OperateFileInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_OperateFileInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_OperateFileInfo(const Operate_OperateFileInfo& from) : Operate_OperateFileInfo(nullptr, from) {}
  inline Operate_OperateFileInfo(Operate_OperateFileInfo&& from) noexcept
      : Operate_OperateFileInfo(nullptr, std::move(from)) {}
  inline Operate_OperateFileInfo& operator=(const Operate_OperateFileInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_OperateFileInfo& operator=(Operate_OperateFileInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_OperateFileInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_OperateFileInfo* internal_default_instance() {
    return reinterpret_cast<const Operate_OperateFileInfo*>(
        &_Operate_OperateFileInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(Operate_OperateFileInfo& a, Operate_OperateFileInfo& b) { a.Swap(&b); }
  inline void Swap(Operate_OperateFileInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_OperateFileInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_OperateFileInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_OperateFileInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_OperateFileInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_OperateFileInfo& from) { Operate_OperateFileInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_OperateFileInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_OperateFileInfo"; }

 protected:
  explicit Operate_OperateFileInfo(::google::protobuf::Arena* arena);
  Operate_OperateFileInfo(::google::protobuf::Arena* arena, const Operate_OperateFileInfo& from);
  Operate_OperateFileInfo(::google::protobuf::Arena* arena, Operate_OperateFileInfo&& from) noexcept
      : Operate_OperateFileInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kUrlFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string url = 2;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_OperateFileInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      49, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_OperateFileInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_OperateFileInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr url_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_OperateDuplicateHardwareInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_OperateDuplicateHardwareInfo) */ {
 public:
  inline Operate_OperateDuplicateHardwareInfo() : Operate_OperateDuplicateHardwareInfo(nullptr) {}
  ~Operate_OperateDuplicateHardwareInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_OperateDuplicateHardwareInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_OperateDuplicateHardwareInfo(const Operate_OperateDuplicateHardwareInfo& from) : Operate_OperateDuplicateHardwareInfo(nullptr, from) {}
  inline Operate_OperateDuplicateHardwareInfo(Operate_OperateDuplicateHardwareInfo&& from) noexcept
      : Operate_OperateDuplicateHardwareInfo(nullptr, std::move(from)) {}
  inline Operate_OperateDuplicateHardwareInfo& operator=(const Operate_OperateDuplicateHardwareInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_OperateDuplicateHardwareInfo& operator=(Operate_OperateDuplicateHardwareInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_OperateDuplicateHardwareInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_OperateDuplicateHardwareInfo* internal_default_instance() {
    return reinterpret_cast<const Operate_OperateDuplicateHardwareInfo*>(
        &_Operate_OperateDuplicateHardwareInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(Operate_OperateDuplicateHardwareInfo& a, Operate_OperateDuplicateHardwareInfo& b) { a.Swap(&b); }
  inline void Swap(Operate_OperateDuplicateHardwareInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_OperateDuplicateHardwareInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_OperateDuplicateHardwareInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_OperateDuplicateHardwareInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_OperateDuplicateHardwareInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_OperateDuplicateHardwareInfo& from) { Operate_OperateDuplicateHardwareInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_OperateDuplicateHardwareInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_OperateDuplicateHardwareInfo"; }

 protected:
  explicit Operate_OperateDuplicateHardwareInfo(::google::protobuf::Arena* arena);
  Operate_OperateDuplicateHardwareInfo(::google::protobuf::Arena* arena, const Operate_OperateDuplicateHardwareInfo& from);
  Operate_OperateDuplicateHardwareInfo(::google::protobuf::Arena* arena, Operate_OperateDuplicateHardwareInfo&& from) noexcept
      : Operate_OperateDuplicateHardwareInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHardwareIdFieldNumber = 2,
    kIsAccountBanFieldNumber = 3,
    kAccountIdFieldNumber = 1,
  };
  // string hardwareId = 2;
  void clear_hardwareid() ;
  const std::string& hardwareid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hardwareid(Arg_&& arg, Args_... args);
  std::string* mutable_hardwareid();
  PROTOBUF_NODISCARD std::string* release_hardwareid();
  void set_allocated_hardwareid(std::string* value);

  private:
  const std::string& _internal_hardwareid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hardwareid(
      const std::string& value);
  std::string* _internal_mutable_hardwareid();

  public:
  // string isAccountBan = 3;
  void clear_isaccountban() ;
  const std::string& isaccountban() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_isaccountban(Arg_&& arg, Args_... args);
  std::string* mutable_isaccountban();
  PROTOBUF_NODISCARD std::string* release_isaccountban();
  void set_allocated_isaccountban(std::string* value);

  private:
  const std::string& _internal_isaccountban() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_isaccountban(
      const std::string& value);
  std::string* _internal_mutable_isaccountban();

  public:
  // uint64 accountId = 1;
  void clear_accountid() ;
  ::uint64_t accountid() const;
  void set_accountid(::uint64_t value);

  private:
  ::uint64_t _internal_accountid() const;
  void _internal_set_accountid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_OperateDuplicateHardwareInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      77, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_OperateDuplicateHardwareInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_OperateDuplicateHardwareInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr hardwareid_;
    ::google::protobuf::internal::ArenaStringPtr isaccountban_;
    ::uint64_t accountid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_OperateBanUserInfos final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_OperateBanUserInfos) */ {
 public:
  inline Operate_OperateBanUserInfos() : Operate_OperateBanUserInfos(nullptr) {}
  ~Operate_OperateBanUserInfos() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_OperateBanUserInfos(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_OperateBanUserInfos(const Operate_OperateBanUserInfos& from) : Operate_OperateBanUserInfos(nullptr, from) {}
  inline Operate_OperateBanUserInfos(Operate_OperateBanUserInfos&& from) noexcept
      : Operate_OperateBanUserInfos(nullptr, std::move(from)) {}
  inline Operate_OperateBanUserInfos& operator=(const Operate_OperateBanUserInfos& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_OperateBanUserInfos& operator=(Operate_OperateBanUserInfos&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_OperateBanUserInfos& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_OperateBanUserInfos* internal_default_instance() {
    return reinterpret_cast<const Operate_OperateBanUserInfos*>(
        &_Operate_OperateBanUserInfos_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(Operate_OperateBanUserInfos& a, Operate_OperateBanUserInfos& b) { a.Swap(&b); }
  inline void Swap(Operate_OperateBanUserInfos* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_OperateBanUserInfos* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_OperateBanUserInfos* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_OperateBanUserInfos>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_OperateBanUserInfos& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_OperateBanUserInfos& from) { Operate_OperateBanUserInfos::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_OperateBanUserInfos* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_OperateBanUserInfos"; }

 protected:
  explicit Operate_OperateBanUserInfos(::google::protobuf::Arena* arena);
  Operate_OperateBanUserInfos(::google::protobuf::Arena* arena, const Operate_OperateBanUserInfos& from);
  Operate_OperateBanUserInfos(::google::protobuf::Arena* arena, Operate_OperateBanUserInfos&& from) noexcept
      : Operate_OperateBanUserInfos(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCommentFieldNumber = 4,
    kBeginTimeFieldNumber = 5,
    kEndTimeFieldNumber = 6,
    kRegisterTimeFieldNumber = 7,
    kIsHardwareBanFieldNumber = 8,
    kAccountIdFieldNumber = 1,
    kLogIdxFieldNumber = 3,
    kBanTypeFieldNumber = 2,
  };
  // string comment = 4;
  void clear_comment() ;
  const std::string& comment() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_comment(Arg_&& arg, Args_... args);
  std::string* mutable_comment();
  PROTOBUF_NODISCARD std::string* release_comment();
  void set_allocated_comment(std::string* value);

  private:
  const std::string& _internal_comment() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_comment(
      const std::string& value);
  std::string* _internal_mutable_comment();

  public:
  // string beginTime = 5;
  void clear_begintime() ;
  const std::string& begintime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_begintime(Arg_&& arg, Args_... args);
  std::string* mutable_begintime();
  PROTOBUF_NODISCARD std::string* release_begintime();
  void set_allocated_begintime(std::string* value);

  private:
  const std::string& _internal_begintime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_begintime(
      const std::string& value);
  std::string* _internal_mutable_begintime();

  public:
  // string endTime = 6;
  void clear_endtime() ;
  const std::string& endtime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_endtime(Arg_&& arg, Args_... args);
  std::string* mutable_endtime();
  PROTOBUF_NODISCARD std::string* release_endtime();
  void set_allocated_endtime(std::string* value);

  private:
  const std::string& _internal_endtime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_endtime(
      const std::string& value);
  std::string* _internal_mutable_endtime();

  public:
  // string registerTime = 7;
  void clear_registertime() ;
  const std::string& registertime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_registertime(Arg_&& arg, Args_... args);
  std::string* mutable_registertime();
  PROTOBUF_NODISCARD std::string* release_registertime();
  void set_allocated_registertime(std::string* value);

  private:
  const std::string& _internal_registertime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_registertime(
      const std::string& value);
  std::string* _internal_mutable_registertime();

  public:
  // string isHardwareBan = 8;
  void clear_ishardwareban() ;
  const std::string& ishardwareban() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ishardwareban(Arg_&& arg, Args_... args);
  std::string* mutable_ishardwareban();
  PROTOBUF_NODISCARD std::string* release_ishardwareban();
  void set_allocated_ishardwareban(std::string* value);

  private:
  const std::string& _internal_ishardwareban() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ishardwareban(
      const std::string& value);
  std::string* _internal_mutable_ishardwareban();

  public:
  // uint64 accountId = 1;
  void clear_accountid() ;
  ::uint64_t accountid() const;
  void set_accountid(::uint64_t value);

  private:
  ::uint64_t _internal_accountid() const;
  void _internal_set_accountid(::uint64_t value);

  public:
  // uint64 logIdx = 3;
  void clear_logidx() ;
  ::uint64_t logidx() const;
  void set_logidx(::uint64_t value);

  private:
  ::uint64_t _internal_logidx() const;
  void _internal_set_logidx(::uint64_t value);

  public:
  // int32 banType = 2;
  void clear_bantype() ;
  ::int32_t bantype() const;
  void set_bantype(::int32_t value);

  private:
  ::int32_t _internal_bantype() const;
  void _internal_set_bantype(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_OperateBanUserInfos)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      102, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_OperateBanUserInfos_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_OperateBanUserInfos& from_msg);
    ::google::protobuf::internal::ArenaStringPtr comment_;
    ::google::protobuf::internal::ArenaStringPtr begintime_;
    ::google::protobuf::internal::ArenaStringPtr endtime_;
    ::google::protobuf::internal::ArenaStringPtr registertime_;
    ::google::protobuf::internal::ArenaStringPtr ishardwareban_;
    ::uint64_t accountid_;
    ::uint64_t logidx_;
    ::int32_t bantype_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_OperateBanInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_OperateBanInfo) */ {
 public:
  inline Operate_OperateBanInfo() : Operate_OperateBanInfo(nullptr) {}
  ~Operate_OperateBanInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_OperateBanInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_OperateBanInfo(const Operate_OperateBanInfo& from) : Operate_OperateBanInfo(nullptr, from) {}
  inline Operate_OperateBanInfo(Operate_OperateBanInfo&& from) noexcept
      : Operate_OperateBanInfo(nullptr, std::move(from)) {}
  inline Operate_OperateBanInfo& operator=(const Operate_OperateBanInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_OperateBanInfo& operator=(Operate_OperateBanInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_OperateBanInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_OperateBanInfo* internal_default_instance() {
    return reinterpret_cast<const Operate_OperateBanInfo*>(
        &_Operate_OperateBanInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(Operate_OperateBanInfo& a, Operate_OperateBanInfo& b) { a.Swap(&b); }
  inline void Swap(Operate_OperateBanInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_OperateBanInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_OperateBanInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_OperateBanInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_OperateBanInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_OperateBanInfo& from) { Operate_OperateBanInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_OperateBanInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_OperateBanInfo"; }

 protected:
  explicit Operate_OperateBanInfo(::google::protobuf::Arena* arena);
  Operate_OperateBanInfo(::google::protobuf::Arena* arena, const Operate_OperateBanInfo& from);
  Operate_OperateBanInfo(::google::protobuf::Arena* arena, Operate_OperateBanInfo&& from) noexcept
      : Operate_OperateBanInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kBanTypeFieldNumber = 2,
    kCommentFieldNumber = 3,
    kRegisterTimeFieldNumber = 4,
    kBeginTimeFieldNumber = 5,
    kEndTimeFieldNumber = 6,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string banType = 2;
  void clear_bantype() ;
  const std::string& bantype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bantype(Arg_&& arg, Args_... args);
  std::string* mutable_bantype();
  PROTOBUF_NODISCARD std::string* release_bantype();
  void set_allocated_bantype(std::string* value);

  private:
  const std::string& _internal_bantype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bantype(
      const std::string& value);
  std::string* _internal_mutable_bantype();

  public:
  // string comment = 3;
  void clear_comment() ;
  const std::string& comment() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_comment(Arg_&& arg, Args_... args);
  std::string* mutable_comment();
  PROTOBUF_NODISCARD std::string* release_comment();
  void set_allocated_comment(std::string* value);

  private:
  const std::string& _internal_comment() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_comment(
      const std::string& value);
  std::string* _internal_mutable_comment();

  public:
  // string registerTime = 4;
  void clear_registertime() ;
  const std::string& registertime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_registertime(Arg_&& arg, Args_... args);
  std::string* mutable_registertime();
  PROTOBUF_NODISCARD std::string* release_registertime();
  void set_allocated_registertime(std::string* value);

  private:
  const std::string& _internal_registertime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_registertime(
      const std::string& value);
  std::string* _internal_mutable_registertime();

  public:
  // string beginTime = 5;
  void clear_begintime() ;
  const std::string& begintime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_begintime(Arg_&& arg, Args_... args);
  std::string* mutable_begintime();
  PROTOBUF_NODISCARD std::string* release_begintime();
  void set_allocated_begintime(std::string* value);

  private:
  const std::string& _internal_begintime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_begintime(
      const std::string& value);
  std::string* _internal_mutable_begintime();

  public:
  // string endTime = 6;
  void clear_endtime() ;
  const std::string& endtime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_endtime(Arg_&& arg, Args_... args);
  std::string* mutable_endtime();
  PROTOBUF_NODISCARD std::string* release_endtime();
  void set_allocated_endtime(std::string* value);

  private:
  const std::string& _internal_endtime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_endtime(
      const std::string& value);
  std::string* _internal_mutable_endtime();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_OperateBanInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      92, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_OperateBanInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_OperateBanInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr bantype_;
    ::google::protobuf::internal::ArenaStringPtr comment_;
    ::google::protobuf::internal::ArenaStringPtr registertime_;
    ::google::protobuf::internal::ArenaStringPtr begintime_;
    ::google::protobuf::internal::ArenaStringPtr endtime_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_OperateBanHardwareInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_OperateBanHardwareInfo) */ {
 public:
  inline Operate_OperateBanHardwareInfo() : Operate_OperateBanHardwareInfo(nullptr) {}
  ~Operate_OperateBanHardwareInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_OperateBanHardwareInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_OperateBanHardwareInfo(const Operate_OperateBanHardwareInfo& from) : Operate_OperateBanHardwareInfo(nullptr, from) {}
  inline Operate_OperateBanHardwareInfo(Operate_OperateBanHardwareInfo&& from) noexcept
      : Operate_OperateBanHardwareInfo(nullptr, std::move(from)) {}
  inline Operate_OperateBanHardwareInfo& operator=(const Operate_OperateBanHardwareInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_OperateBanHardwareInfo& operator=(Operate_OperateBanHardwareInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_OperateBanHardwareInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_OperateBanHardwareInfo* internal_default_instance() {
    return reinterpret_cast<const Operate_OperateBanHardwareInfo*>(
        &_Operate_OperateBanHardwareInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(Operate_OperateBanHardwareInfo& a, Operate_OperateBanHardwareInfo& b) { a.Swap(&b); }
  inline void Swap(Operate_OperateBanHardwareInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_OperateBanHardwareInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_OperateBanHardwareInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_OperateBanHardwareInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_OperateBanHardwareInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_OperateBanHardwareInfo& from) { Operate_OperateBanHardwareInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_OperateBanHardwareInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_OperateBanHardwareInfo"; }

 protected:
  explicit Operate_OperateBanHardwareInfo(::google::protobuf::Arena* arena);
  Operate_OperateBanHardwareInfo(::google::protobuf::Arena* arena, const Operate_OperateBanHardwareInfo& from);
  Operate_OperateBanHardwareInfo(::google::protobuf::Arena* arena, Operate_OperateBanHardwareInfo&& from) noexcept
      : Operate_OperateBanHardwareInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHardwareIdFieldNumber = 1,
    kBanTypeFieldNumber = 2,
    kCommentFieldNumber = 3,
    kRegisterTimeFieldNumber = 4,
  };
  // string hardwareId = 1;
  void clear_hardwareid() ;
  const std::string& hardwareid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hardwareid(Arg_&& arg, Args_... args);
  std::string* mutable_hardwareid();
  PROTOBUF_NODISCARD std::string* release_hardwareid();
  void set_allocated_hardwareid(std::string* value);

  private:
  const std::string& _internal_hardwareid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hardwareid(
      const std::string& value);
  std::string* _internal_mutable_hardwareid();

  public:
  // string banType = 2;
  void clear_bantype() ;
  const std::string& bantype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bantype(Arg_&& arg, Args_... args);
  std::string* mutable_bantype();
  PROTOBUF_NODISCARD std::string* release_bantype();
  void set_allocated_bantype(std::string* value);

  private:
  const std::string& _internal_bantype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bantype(
      const std::string& value);
  std::string* _internal_mutable_bantype();

  public:
  // string comment = 3;
  void clear_comment() ;
  const std::string& comment() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_comment(Arg_&& arg, Args_... args);
  std::string* mutable_comment();
  PROTOBUF_NODISCARD std::string* release_comment();
  void set_allocated_comment(std::string* value);

  private:
  const std::string& _internal_comment() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_comment(
      const std::string& value);
  std::string* _internal_mutable_comment();

  public:
  // string registerTime = 4;
  void clear_registertime() ;
  const std::string& registertime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_registertime(Arg_&& arg, Args_... args);
  std::string* mutable_registertime();
  PROTOBUF_NODISCARD std::string* release_registertime();
  void set_allocated_registertime(std::string* value);

  private:
  const std::string& _internal_registertime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_registertime(
      const std::string& value);
  std::string* _internal_mutable_registertime();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_OperateBanHardwareInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      85, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_OperateBanHardwareInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_OperateBanHardwareInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr hardwareid_;
    ::google::protobuf::internal::ArenaStringPtr bantype_;
    ::google::protobuf::internal::ArenaStringPtr comment_;
    ::google::protobuf::internal::ArenaStringPtr registertime_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_BulkBanInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_BulkBanInfo) */ {
 public:
  inline Operate_BulkBanInfo() : Operate_BulkBanInfo(nullptr) {}
  ~Operate_BulkBanInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_BulkBanInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_BulkBanInfo(const Operate_BulkBanInfo& from) : Operate_BulkBanInfo(nullptr, from) {}
  inline Operate_BulkBanInfo(Operate_BulkBanInfo&& from) noexcept
      : Operate_BulkBanInfo(nullptr, std::move(from)) {}
  inline Operate_BulkBanInfo& operator=(const Operate_BulkBanInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_BulkBanInfo& operator=(Operate_BulkBanInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_BulkBanInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_BulkBanInfo* internal_default_instance() {
    return reinterpret_cast<const Operate_BulkBanInfo*>(
        &_Operate_BulkBanInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(Operate_BulkBanInfo& a, Operate_BulkBanInfo& b) { a.Swap(&b); }
  inline void Swap(Operate_BulkBanInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_BulkBanInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_BulkBanInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_BulkBanInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_BulkBanInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_BulkBanInfo& from) { Operate_BulkBanInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_BulkBanInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_BulkBanInfo"; }

 protected:
  explicit Operate_BulkBanInfo(::google::protobuf::Arena* arena);
  Operate_BulkBanInfo(::google::protobuf::Arena* arena, const Operate_BulkBanInfo& from);
  Operate_BulkBanInfo(::google::protobuf::Arena* arena, Operate_BulkBanInfo&& from) noexcept
      : Operate_BulkBanInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNicknameFieldNumber = 2,
    kAccountIdFieldNumber = 1,
  };
  // string nickname = 2;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // uint64 accountId = 1;
  void clear_accountid() ;
  ::uint64_t accountid() const;
  void set_accountid(::uint64_t value);

  private:
  ::uint64_t _internal_accountid() const;
  void _internal_set_accountid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_BulkBanInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_BulkBanInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_BulkBanInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::uint64_t accountid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_Blacklist final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_Blacklist) */ {
 public:
  inline Operate_Blacklist() : Operate_Blacklist(nullptr) {}
  ~Operate_Blacklist() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_Blacklist(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_Blacklist(const Operate_Blacklist& from) : Operate_Blacklist(nullptr, from) {}
  inline Operate_Blacklist(Operate_Blacklist&& from) noexcept
      : Operate_Blacklist(nullptr, std::move(from)) {}
  inline Operate_Blacklist& operator=(const Operate_Blacklist& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_Blacklist& operator=(Operate_Blacklist&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_Blacklist& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_Blacklist* internal_default_instance() {
    return reinterpret_cast<const Operate_Blacklist*>(
        &_Operate_Blacklist_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 51;
  friend void swap(Operate_Blacklist& a, Operate_Blacklist& b) { a.Swap(&b); }
  inline void Swap(Operate_Blacklist* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_Blacklist* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_Blacklist* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_Blacklist>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_Blacklist& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_Blacklist& from) { Operate_Blacklist::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_Blacklist* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_Blacklist"; }

 protected:
  explicit Operate_Blacklist(::google::protobuf::Arena* arena);
  Operate_Blacklist(::google::protobuf::Arena* arena, const Operate_Blacklist& from);
  Operate_Blacklist(::google::protobuf::Arena* arena, Operate_Blacklist&& from) noexcept
      : Operate_Blacklist(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReasonFieldNumber = 3,
    kAccountIdFieldNumber = 2,
    kWriteTypeFieldNumber = 1,
  };
  // string reason = 3;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // uint64 accountId = 2;
  void clear_accountid() ;
  ::uint64_t accountid() const;
  void set_accountid(::uint64_t value);

  private:
  ::uint64_t _internal_accountid() const;
  void _internal_set_accountid(::uint64_t value);

  public:
  // uint32 writeType = 1;
  void clear_writetype() ;
  ::uint32_t writetype() const;
  void set_writetype(::uint32_t value);

  private:
  ::uint32_t _internal_writetype() const;
  void _internal_set_writetype(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_Blacklist)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_Blacklist_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_Blacklist& from_msg);
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::uint64_t accountid_;
    ::uint32_t writetype_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_Ban_User2 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_Ban_User2) */ {
 public:
  inline Operate_Ban_User2() : Operate_Ban_User2(nullptr) {}
  ~Operate_Ban_User2() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_Ban_User2(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_Ban_User2(const Operate_Ban_User2& from) : Operate_Ban_User2(nullptr, from) {}
  inline Operate_Ban_User2(Operate_Ban_User2&& from) noexcept
      : Operate_Ban_User2(nullptr, std::move(from)) {}
  inline Operate_Ban_User2& operator=(const Operate_Ban_User2& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_Ban_User2& operator=(Operate_Ban_User2&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_Ban_User2& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_Ban_User2* internal_default_instance() {
    return reinterpret_cast<const Operate_Ban_User2*>(
        &_Operate_Ban_User2_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(Operate_Ban_User2& a, Operate_Ban_User2& b) { a.Swap(&b); }
  inline void Swap(Operate_Ban_User2* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_Ban_User2* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_Ban_User2* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_Ban_User2>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_Ban_User2& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_Ban_User2& from) { Operate_Ban_User2::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_Ban_User2* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_Ban_User2"; }

 protected:
  explicit Operate_Ban_User2(::google::protobuf::Arena* arena);
  Operate_Ban_User2(::google::protobuf::Arena* arena, const Operate_Ban_User2& from);
  Operate_Ban_User2(::google::protobuf::Arena* arena, Operate_Ban_User2&& from) noexcept
      : Operate_Ban_User2(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSecurityCodeFieldNumber = 1,
    kNickNameFieldNumber = 3,
    kReasonFieldNumber = 4,
    kJiraIdFieldNumber = 7,
    kAccountIdFieldNumber = 2,
    kBanTypeFieldNumber = 5,
    kBanTimeMinFieldNumber = 6,
    kIsRankResetFieldNumber = 8,
    kIsRankRecoveryFieldNumber = 9,
    kLogIdxFieldNumber = 10,
  };
  // string securityCode = 1;
  void clear_securitycode() ;
  const std::string& securitycode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_securitycode(Arg_&& arg, Args_... args);
  std::string* mutable_securitycode();
  PROTOBUF_NODISCARD std::string* release_securitycode();
  void set_allocated_securitycode(std::string* value);

  private:
  const std::string& _internal_securitycode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_securitycode(
      const std::string& value);
  std::string* _internal_mutable_securitycode();

  public:
  // string nickName = 3;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string reason = 4;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // string jiraId = 7;
  void clear_jiraid() ;
  const std::string& jiraid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_jiraid(Arg_&& arg, Args_... args);
  std::string* mutable_jiraid();
  PROTOBUF_NODISCARD std::string* release_jiraid();
  void set_allocated_jiraid(std::string* value);

  private:
  const std::string& _internal_jiraid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_jiraid(
      const std::string& value);
  std::string* _internal_mutable_jiraid();

  public:
  // uint64 accountId = 2;
  void clear_accountid() ;
  ::uint64_t accountid() const;
  void set_accountid(::uint64_t value);

  private:
  ::uint64_t _internal_accountid() const;
  void _internal_set_accountid(::uint64_t value);

  public:
  // uint32 banType = 5;
  void clear_bantype() ;
  ::uint32_t bantype() const;
  void set_bantype(::uint32_t value);

  private:
  ::uint32_t _internal_bantype() const;
  void _internal_set_bantype(::uint32_t value);

  public:
  // uint32 banTime_min = 6;
  void clear_bantime_min() ;
  ::uint32_t bantime_min() const;
  void set_bantime_min(::uint32_t value);

  private:
  ::uint32_t _internal_bantime_min() const;
  void _internal_set_bantime_min(::uint32_t value);

  public:
  // uint32 isRankReset = 8;
  void clear_isrankreset() ;
  ::uint32_t isrankreset() const;
  void set_isrankreset(::uint32_t value);

  private:
  ::uint32_t _internal_isrankreset() const;
  void _internal_set_isrankreset(::uint32_t value);

  public:
  // uint32 isRankRecovery = 9;
  void clear_isrankrecovery() ;
  ::uint32_t isrankrecovery() const;
  void set_isrankrecovery(::uint32_t value);

  private:
  ::uint32_t _internal_isrankrecovery() const;
  void _internal_set_isrankrecovery(::uint32_t value);

  public:
  // uint64 logIdx = 10;
  void clear_logidx() ;
  ::uint64_t logidx() const;
  void set_logidx(::uint64_t value);

  private:
  ::uint64_t _internal_logidx() const;
  void _internal_set_logidx(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_Ban_User2)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      76, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_Ban_User2_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_Ban_User2& from_msg);
    ::google::protobuf::internal::ArenaStringPtr securitycode_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::google::protobuf::internal::ArenaStringPtr jiraid_;
    ::uint64_t accountid_;
    ::uint32_t bantype_;
    ::uint32_t bantime_min_;
    ::uint32_t isrankreset_;
    ::uint32_t isrankrecovery_;
    ::uint64_t logidx_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_Ban_User final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_Ban_User) */ {
 public:
  inline Operate_Ban_User() : Operate_Ban_User(nullptr) {}
  ~Operate_Ban_User() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_Ban_User(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_Ban_User(const Operate_Ban_User& from) : Operate_Ban_User(nullptr, from) {}
  inline Operate_Ban_User(Operate_Ban_User&& from) noexcept
      : Operate_Ban_User(nullptr, std::move(from)) {}
  inline Operate_Ban_User& operator=(const Operate_Ban_User& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_Ban_User& operator=(Operate_Ban_User&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_Ban_User& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_Ban_User* internal_default_instance() {
    return reinterpret_cast<const Operate_Ban_User*>(
        &_Operate_Ban_User_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(Operate_Ban_User& a, Operate_Ban_User& b) { a.Swap(&b); }
  inline void Swap(Operate_Ban_User* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_Ban_User* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_Ban_User* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_Ban_User>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_Ban_User& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_Ban_User& from) { Operate_Ban_User::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_Ban_User* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_Ban_User"; }

 protected:
  explicit Operate_Ban_User(::google::protobuf::Arena* arena);
  Operate_Ban_User(::google::protobuf::Arena* arena, const Operate_Ban_User& from);
  Operate_Ban_User(::google::protobuf::Arena* arena, Operate_Ban_User&& from) noexcept
      : Operate_Ban_User(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSecurityCodeFieldNumber = 1,
    kNickNameFieldNumber = 2,
    kReasonFieldNumber = 3,
    kBanTypeFieldNumber = 4,
    kBanTimeMinFieldNumber = 5,
  };
  // string securityCode = 1;
  void clear_securitycode() ;
  const std::string& securitycode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_securitycode(Arg_&& arg, Args_... args);
  std::string* mutable_securitycode();
  PROTOBUF_NODISCARD std::string* release_securitycode();
  void set_allocated_securitycode(std::string* value);

  private:
  const std::string& _internal_securitycode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_securitycode(
      const std::string& value);
  std::string* _internal_mutable_securitycode();

  public:
  // string nickName = 2;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string reason = 3;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // uint32 banType = 4;
  void clear_bantype() ;
  ::uint32_t bantype() const;
  void set_bantype(::uint32_t value);

  private:
  ::uint32_t _internal_bantype() const;
  void _internal_set_bantype(::uint32_t value);

  public:
  // uint32 banTime_min = 5;
  void clear_bantime_min() ;
  ::uint32_t bantime_min() const;
  void set_bantime_min(::uint32_t value);

  private:
  ::uint32_t _internal_bantime_min() const;
  void _internal_set_bantime_min(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_Ban_User)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      61, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_Ban_User_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_Ban_User& from_msg);
    ::google::protobuf::internal::ArenaStringPtr securitycode_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::uint32_t bantype_;
    ::uint32_t bantime_min_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_Ban_Report_User final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_Ban_Report_User) */ {
 public:
  inline Operate_Ban_Report_User() : Operate_Ban_Report_User(nullptr) {}
  ~Operate_Ban_Report_User() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_Ban_Report_User(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_Ban_Report_User(const Operate_Ban_Report_User& from) : Operate_Ban_Report_User(nullptr, from) {}
  inline Operate_Ban_Report_User(Operate_Ban_Report_User&& from) noexcept
      : Operate_Ban_Report_User(nullptr, std::move(from)) {}
  inline Operate_Ban_Report_User& operator=(const Operate_Ban_Report_User& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_Ban_Report_User& operator=(Operate_Ban_Report_User&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_Ban_Report_User& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_Ban_Report_User* internal_default_instance() {
    return reinterpret_cast<const Operate_Ban_Report_User*>(
        &_Operate_Ban_Report_User_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(Operate_Ban_Report_User& a, Operate_Ban_Report_User& b) { a.Swap(&b); }
  inline void Swap(Operate_Ban_Report_User* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_Ban_Report_User* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_Ban_Report_User* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_Ban_Report_User>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_Ban_Report_User& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_Ban_Report_User& from) { Operate_Ban_Report_User::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_Ban_Report_User* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_Ban_Report_User"; }

 protected:
  explicit Operate_Ban_Report_User(::google::protobuf::Arena* arena);
  Operate_Ban_Report_User(::google::protobuf::Arena* arena, const Operate_Ban_Report_User& from);
  Operate_Ban_Report_User(::google::protobuf::Arena* arena, Operate_Ban_Report_User&& from) noexcept
      : Operate_Ban_Report_User(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSecurityCodeFieldNumber = 1,
    kReportIdFieldNumber = 2,
    kNickNameFieldNumber = 3,
    kBanReasonFieldNumber = 5,
    kBanTimeMinFieldNumber = 4,
  };
  // string securityCode = 1;
  void clear_securitycode() ;
  const std::string& securitycode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_securitycode(Arg_&& arg, Args_... args);
  std::string* mutable_securitycode();
  PROTOBUF_NODISCARD std::string* release_securitycode();
  void set_allocated_securitycode(std::string* value);

  private:
  const std::string& _internal_securitycode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_securitycode(
      const std::string& value);
  std::string* _internal_mutable_securitycode();

  public:
  // string reportId = 2;
  void clear_reportid() ;
  const std::string& reportid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reportid(Arg_&& arg, Args_... args);
  std::string* mutable_reportid();
  PROTOBUF_NODISCARD std::string* release_reportid();
  void set_allocated_reportid(std::string* value);

  private:
  const std::string& _internal_reportid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reportid(
      const std::string& value);
  std::string* _internal_mutable_reportid();

  public:
  // string nickName = 3;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string banReason = 5;
  void clear_banreason() ;
  const std::string& banreason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_banreason(Arg_&& arg, Args_... args);
  std::string* mutable_banreason();
  PROTOBUF_NODISCARD std::string* release_banreason();
  void set_allocated_banreason(std::string* value);

  private:
  const std::string& _internal_banreason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_banreason(
      const std::string& value);
  std::string* _internal_mutable_banreason();

  public:
  // uint32 banTime_min = 4;
  void clear_bantime_min() ;
  ::uint32_t bantime_min() const;
  void set_bantime_min(::uint32_t value);

  private:
  ::uint32_t _internal_bantime_min() const;
  void _internal_set_bantime_min(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_Ban_Report_User)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      79, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_Ban_Report_User_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_Ban_Report_User& from_msg);
    ::google::protobuf::internal::ArenaStringPtr securitycode_;
    ::google::protobuf::internal::ArenaStringPtr reportid_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr banreason_;
    ::uint32_t bantime_min_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_Ban_Hardware final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_Ban_Hardware) */ {
 public:
  inline Operate_Ban_Hardware() : Operate_Ban_Hardware(nullptr) {}
  ~Operate_Ban_Hardware() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_Ban_Hardware(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_Ban_Hardware(const Operate_Ban_Hardware& from) : Operate_Ban_Hardware(nullptr, from) {}
  inline Operate_Ban_Hardware(Operate_Ban_Hardware&& from) noexcept
      : Operate_Ban_Hardware(nullptr, std::move(from)) {}
  inline Operate_Ban_Hardware& operator=(const Operate_Ban_Hardware& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_Ban_Hardware& operator=(Operate_Ban_Hardware&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_Ban_Hardware& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_Ban_Hardware* internal_default_instance() {
    return reinterpret_cast<const Operate_Ban_Hardware*>(
        &_Operate_Ban_Hardware_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(Operate_Ban_Hardware& a, Operate_Ban_Hardware& b) { a.Swap(&b); }
  inline void Swap(Operate_Ban_Hardware* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_Ban_Hardware* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_Ban_Hardware* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_Ban_Hardware>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_Ban_Hardware& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_Ban_Hardware& from) { Operate_Ban_Hardware::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_Ban_Hardware* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_Ban_Hardware"; }

 protected:
  explicit Operate_Ban_Hardware(::google::protobuf::Arena* arena);
  Operate_Ban_Hardware(::google::protobuf::Arena* arena, const Operate_Ban_Hardware& from);
  Operate_Ban_Hardware(::google::protobuf::Arena* arena, Operate_Ban_Hardware&& from) noexcept
      : Operate_Ban_Hardware(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHardwareIdFieldNumber = 1,
    kReasonFieldNumber = 2,
    kBanTypeFieldNumber = 3,
    kBanTimeMinFieldNumber = 4,
  };
  // string hardwareId = 1;
  void clear_hardwareid() ;
  const std::string& hardwareid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hardwareid(Arg_&& arg, Args_... args);
  std::string* mutable_hardwareid();
  PROTOBUF_NODISCARD std::string* release_hardwareid();
  void set_allocated_hardwareid(std::string* value);

  private:
  const std::string& _internal_hardwareid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hardwareid(
      const std::string& value);
  std::string* _internal_mutable_hardwareid();

  public:
  // string reason = 2;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // uint32 banType = 3;
  void clear_bantype() ;
  ::uint32_t bantype() const;
  void set_bantype(::uint32_t value);

  private:
  ::uint32_t _internal_bantype() const;
  void _internal_set_bantype(::uint32_t value);

  public:
  // uint32 banTime_min = 4;
  void clear_bantime_min() ;
  ::uint32_t bantime_min() const;
  void set_bantime_min(::uint32_t value);

  private:
  ::uint32_t _internal_bantime_min() const;
  void _internal_set_bantime_min(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_Ban_Hardware)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      55, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_Ban_Hardware_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_Ban_Hardware& from_msg);
    ::google::protobuf::internal::ArenaStringPtr hardwareid_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::uint32_t bantype_;
    ::uint32_t bantime_min_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_Bad_Word_List final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_Bad_Word_List) */ {
 public:
  inline Operate_Bad_Word_List() : Operate_Bad_Word_List(nullptr) {}
  ~Operate_Bad_Word_List() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_Bad_Word_List(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_Bad_Word_List(const Operate_Bad_Word_List& from) : Operate_Bad_Word_List(nullptr, from) {}
  inline Operate_Bad_Word_List(Operate_Bad_Word_List&& from) noexcept
      : Operate_Bad_Word_List(nullptr, std::move(from)) {}
  inline Operate_Bad_Word_List& operator=(const Operate_Bad_Word_List& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_Bad_Word_List& operator=(Operate_Bad_Word_List&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_Bad_Word_List& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_Bad_Word_List* internal_default_instance() {
    return reinterpret_cast<const Operate_Bad_Word_List*>(
        &_Operate_Bad_Word_List_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Operate_Bad_Word_List& a, Operate_Bad_Word_List& b) { a.Swap(&b); }
  inline void Swap(Operate_Bad_Word_List* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_Bad_Word_List* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_Bad_Word_List* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_Bad_Word_List>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_Bad_Word_List& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_Bad_Word_List& from) { Operate_Bad_Word_List::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_Bad_Word_List* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_Bad_Word_List"; }

 protected:
  explicit Operate_Bad_Word_List(::google::protobuf::Arena* arena);
  Operate_Bad_Word_List(::google::protobuf::Arena* arena, const Operate_Bad_Word_List& from);
  Operate_Bad_Word_List(::google::protobuf::Arena* arena, Operate_Bad_Word_List&& from) noexcept
      : Operate_Bad_Word_List(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBadWordFieldNumber = 1,
  };
  // repeated string badWord = 1;
  int badword_size() const;
  private:
  int _internal_badword_size() const;

  public:
  void clear_badword() ;
  const std::string& badword(int index) const;
  std::string* mutable_badword(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_badword(int index, Arg_&& value, Args_... args);
  std::string* add_badword();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_badword(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& badword() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_badword();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_badword() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_badword();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_Bad_Word_List)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      47, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_Bad_Word_List_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_Bad_Word_List& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> badword_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_Add_Bad_Word final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_Add_Bad_Word) */ {
 public:
  inline Operate_Add_Bad_Word() : Operate_Add_Bad_Word(nullptr) {}
  ~Operate_Add_Bad_Word() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_Add_Bad_Word(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_Add_Bad_Word(const Operate_Add_Bad_Word& from) : Operate_Add_Bad_Word(nullptr, from) {}
  inline Operate_Add_Bad_Word(Operate_Add_Bad_Word&& from) noexcept
      : Operate_Add_Bad_Word(nullptr, std::move(from)) {}
  inline Operate_Add_Bad_Word& operator=(const Operate_Add_Bad_Word& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_Add_Bad_Word& operator=(Operate_Add_Bad_Word&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_Add_Bad_Word& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_Add_Bad_Word* internal_default_instance() {
    return reinterpret_cast<const Operate_Add_Bad_Word*>(
        &_Operate_Add_Bad_Word_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Operate_Add_Bad_Word& a, Operate_Add_Bad_Word& b) { a.Swap(&b); }
  inline void Swap(Operate_Add_Bad_Word* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_Add_Bad_Word* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_Add_Bad_Word* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_Add_Bad_Word>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_Add_Bad_Word& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_Add_Bad_Word& from) { Operate_Add_Bad_Word::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_Add_Bad_Word* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_Add_Bad_Word"; }

 protected:
  explicit Operate_Add_Bad_Word(::google::protobuf::Arena* arena);
  Operate_Add_Bad_Word(::google::protobuf::Arena* arena, const Operate_Add_Bad_Word& from);
  Operate_Add_Bad_Word(::google::protobuf::Arena* arena, Operate_Add_Bad_Word&& from) noexcept
      : Operate_Add_Bad_Word(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSecurityCodeFieldNumber = 1,
    kBadWordFieldNumber = 2,
  };
  // string securityCode = 1;
  void clear_securitycode() ;
  const std::string& securitycode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_securitycode(Arg_&& arg, Args_... args);
  std::string* mutable_securitycode();
  PROTOBUF_NODISCARD std::string* release_securitycode();
  void set_allocated_securitycode(std::string* value);

  private:
  const std::string& _internal_securitycode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_securitycode(
      const std::string& value);
  std::string* _internal_mutable_securitycode();

  public:
  // string badWord = 2;
  void clear_badword() ;
  const std::string& badword() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_badword(Arg_&& arg, Args_... args);
  std::string* mutable_badword();
  PROTOBUF_NODISCARD std::string* release_badword();
  void set_allocated_badword(std::string* value);

  private:
  const std::string& _internal_badword() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_badword(
      const std::string& value);
  std::string* _internal_mutable_badword();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_Add_Bad_Word)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      58, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_Add_Bad_Word_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_Add_Bad_Word& from_msg);
    ::google::protobuf::internal::ArenaStringPtr securitycode_;
    ::google::protobuf::internal::ArenaStringPtr badword_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_AccountNameChange final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_AccountNameChange) */ {
 public:
  inline Operate_AccountNameChange() : Operate_AccountNameChange(nullptr) {}
  ~Operate_AccountNameChange() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_AccountNameChange(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_AccountNameChange(const Operate_AccountNameChange& from) : Operate_AccountNameChange(nullptr, from) {}
  inline Operate_AccountNameChange(Operate_AccountNameChange&& from) noexcept
      : Operate_AccountNameChange(nullptr, std::move(from)) {}
  inline Operate_AccountNameChange& operator=(const Operate_AccountNameChange& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_AccountNameChange& operator=(Operate_AccountNameChange&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_AccountNameChange& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_AccountNameChange* internal_default_instance() {
    return reinterpret_cast<const Operate_AccountNameChange*>(
        &_Operate_AccountNameChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 52;
  friend void swap(Operate_AccountNameChange& a, Operate_AccountNameChange& b) { a.Swap(&b); }
  inline void Swap(Operate_AccountNameChange* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_AccountNameChange* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_AccountNameChange* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_AccountNameChange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_AccountNameChange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_AccountNameChange& from) { Operate_AccountNameChange::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_AccountNameChange* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_AccountNameChange"; }

 protected:
  explicit Operate_AccountNameChange(::google::protobuf::Arena* arena);
  Operate_AccountNameChange(::google::protobuf::Arena* arena, const Operate_AccountNameChange& from);
  Operate_AccountNameChange(::google::protobuf::Arena* arena, Operate_AccountNameChange&& from) noexcept
      : Operate_AccountNameChange(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountNameFieldNumber = 2,
    kAccountIdFieldNumber = 1,
  };
  // string accountName = 2;
  void clear_accountname() ;
  const std::string& accountname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountname(Arg_&& arg, Args_... args);
  std::string* mutable_accountname();
  PROTOBUF_NODISCARD std::string* release_accountname();
  void set_allocated_accountname(std::string* value);

  private:
  const std::string& _internal_accountname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountname(
      const std::string& value);
  std::string* _internal_mutable_accountname();

  public:
  // uint64 accountId = 1;
  void clear_accountid() ;
  ::uint64_t accountid() const;
  void set_accountid(::uint64_t value);

  private:
  ::uint64_t _internal_accountid() const;
  void _internal_set_accountid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_AccountNameChange)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      55, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_AccountNameChange_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_AccountNameChange& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountname_;
    ::uint64_t accountid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class HackLogInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.HackLogInfo) */ {
 public:
  inline HackLogInfo() : HackLogInfo(nullptr) {}
  ~HackLogInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HackLogInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline HackLogInfo(const HackLogInfo& from) : HackLogInfo(nullptr, from) {}
  inline HackLogInfo(HackLogInfo&& from) noexcept
      : HackLogInfo(nullptr, std::move(from)) {}
  inline HackLogInfo& operator=(const HackLogInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline HackLogInfo& operator=(HackLogInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HackLogInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const HackLogInfo* internal_default_instance() {
    return reinterpret_cast<const HackLogInfo*>(
        &_HackLogInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(HackLogInfo& a, HackLogInfo& b) { a.Swap(&b); }
  inline void Swap(HackLogInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HackLogInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HackLogInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<HackLogInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HackLogInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HackLogInfo& from) { HackLogInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HackLogInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.HackLogInfo"; }

 protected:
  explicit HackLogInfo(::google::protobuf::Arena* arena);
  HackLogInfo(::google::protobuf::Arena* arena, const HackLogInfo& from);
  HackLogInfo(::google::protobuf::Arena* arena, HackLogInfo&& from) noexcept
      : HackLogInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLogIdxFieldNumber = 1,
    kAccountIdFieldNumber = 2,
    kCharacterIdFieldNumber = 3,
    kNicknameFieldNumber = 4,
    kReasonFieldNumber = 5,
    kRegisterTimeFieldNumber = 6,
  };
  // string logIdx = 1;
  void clear_logidx() ;
  const std::string& logidx() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_logidx(Arg_&& arg, Args_... args);
  std::string* mutable_logidx();
  PROTOBUF_NODISCARD std::string* release_logidx();
  void set_allocated_logidx(std::string* value);

  private:
  const std::string& _internal_logidx() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_logidx(
      const std::string& value);
  std::string* _internal_mutable_logidx();

  public:
  // string accountId = 2;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 3;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string nickname = 4;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string reason = 5;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // string registerTime = 6;
  void clear_registertime() ;
  const std::string& registertime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_registertime(Arg_&& arg, Args_... args);
  std::string* mutable_registertime();
  PROTOBUF_NODISCARD std::string* release_registertime();
  void set_allocated_registertime(std::string* value);

  private:
  const std::string& _internal_registertime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_registertime(
      const std::string& value);
  std::string* _internal_mutable_registertime();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.HackLogInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      82, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_HackLogInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HackLogInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr logidx_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::google::protobuf::internal::ArenaStringPtr registertime_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_report_info_list final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_report_info_list) */ {
 public:
  inline Operate_report_info_list() : Operate_report_info_list(nullptr) {}
  ~Operate_report_info_list() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_report_info_list(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_report_info_list(const Operate_report_info_list& from) : Operate_report_info_list(nullptr, from) {}
  inline Operate_report_info_list(Operate_report_info_list&& from) noexcept
      : Operate_report_info_list(nullptr, std::move(from)) {}
  inline Operate_report_info_list& operator=(const Operate_report_info_list& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_report_info_list& operator=(Operate_report_info_list&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_report_info_list& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_report_info_list* internal_default_instance() {
    return reinterpret_cast<const Operate_report_info_list*>(
        &_Operate_report_info_list_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(Operate_report_info_list& a, Operate_report_info_list& b) { a.Swap(&b); }
  inline void Swap(Operate_report_info_list* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_report_info_list* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_report_info_list* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_report_info_list>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_report_info_list& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_report_info_list& from) { Operate_report_info_list::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_report_info_list* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_report_info_list"; }

 protected:
  explicit Operate_report_info_list(::google::protobuf::Arena* arena);
  Operate_report_info_list(::google::protobuf::Arena* arena, const Operate_report_info_list& from);
  Operate_report_info_list(::google::protobuf::Arena* arena, Operate_report_info_list&& from) noexcept
      : Operate_report_info_list(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 1,
  };
  // repeated .DC.Packet.Operate_report_info infos = 1;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::DC::Packet::Operate_report_info* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_report_info>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_report_info>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_report_info>* _internal_mutable_infos();
  public:
  const ::DC::Packet::Operate_report_info& infos(int index) const;
  ::DC::Packet::Operate_report_info* add_infos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_report_info>& infos() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_report_info_list)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_report_info_list_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_report_info_list& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_report_info > infos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_login_log_list final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_login_log_list) */ {
 public:
  inline Operate_login_log_list() : Operate_login_log_list(nullptr) {}
  ~Operate_login_log_list() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_login_log_list(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_login_log_list(const Operate_login_log_list& from) : Operate_login_log_list(nullptr, from) {}
  inline Operate_login_log_list(Operate_login_log_list&& from) noexcept
      : Operate_login_log_list(nullptr, std::move(from)) {}
  inline Operate_login_log_list& operator=(const Operate_login_log_list& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_login_log_list& operator=(Operate_login_log_list&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_login_log_list& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_login_log_list* internal_default_instance() {
    return reinterpret_cast<const Operate_login_log_list*>(
        &_Operate_login_log_list_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(Operate_login_log_list& a, Operate_login_log_list& b) { a.Swap(&b); }
  inline void Swap(Operate_login_log_list* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_login_log_list* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_login_log_list* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_login_log_list>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_login_log_list& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_login_log_list& from) { Operate_login_log_list::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_login_log_list* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_login_log_list"; }

 protected:
  explicit Operate_login_log_list(::google::protobuf::Arena* arena);
  Operate_login_log_list(::google::protobuf::Arena* arena, const Operate_login_log_list& from);
  Operate_login_log_list(::google::protobuf::Arena* arena, Operate_login_log_list&& from) noexcept
      : Operate_login_log_list(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLogsFieldNumber = 1,
  };
  // repeated .DC.Packet.Operate_login_log logs = 1;
  int logs_size() const;
  private:
  int _internal_logs_size() const;

  public:
  void clear_logs() ;
  ::DC::Packet::Operate_login_log* mutable_logs(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_login_log>* mutable_logs();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_login_log>& _internal_logs() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_login_log>* _internal_mutable_logs();
  public:
  const ::DC::Packet::Operate_login_log& logs(int index) const;
  ::DC::Packet::Operate_login_log* add_logs();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_login_log>& logs() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_login_log_list)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_login_log_list_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_login_log_list& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_login_log > logs_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_iron_shield_info_list final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_iron_shield_info_list) */ {
 public:
  inline Operate_iron_shield_info_list() : Operate_iron_shield_info_list(nullptr) {}
  ~Operate_iron_shield_info_list() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_iron_shield_info_list(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_iron_shield_info_list(const Operate_iron_shield_info_list& from) : Operate_iron_shield_info_list(nullptr, from) {}
  inline Operate_iron_shield_info_list(Operate_iron_shield_info_list&& from) noexcept
      : Operate_iron_shield_info_list(nullptr, std::move(from)) {}
  inline Operate_iron_shield_info_list& operator=(const Operate_iron_shield_info_list& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_iron_shield_info_list& operator=(Operate_iron_shield_info_list&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_iron_shield_info_list& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_iron_shield_info_list* internal_default_instance() {
    return reinterpret_cast<const Operate_iron_shield_info_list*>(
        &_Operate_iron_shield_info_list_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(Operate_iron_shield_info_list& a, Operate_iron_shield_info_list& b) { a.Swap(&b); }
  inline void Swap(Operate_iron_shield_info_list* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_iron_shield_info_list* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_iron_shield_info_list* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_iron_shield_info_list>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_iron_shield_info_list& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_iron_shield_info_list& from) { Operate_iron_shield_info_list::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_iron_shield_info_list* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_iron_shield_info_list"; }

 protected:
  explicit Operate_iron_shield_info_list(::google::protobuf::Arena* arena);
  Operate_iron_shield_info_list(::google::protobuf::Arena* arena, const Operate_iron_shield_info_list& from);
  Operate_iron_shield_info_list(::google::protobuf::Arena* arena, Operate_iron_shield_info_list&& from) noexcept
      : Operate_iron_shield_info_list(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 1,
  };
  // repeated .DC.Packet.Operate_iron_shield_info infos = 1;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::DC::Packet::Operate_iron_shield_info* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_iron_shield_info>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_iron_shield_info>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_iron_shield_info>* _internal_mutable_infos();
  public:
  const ::DC::Packet::Operate_iron_shield_info& infos(int index) const;
  ::DC::Packet::Operate_iron_shield_info* add_infos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_iron_shield_info>& infos() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_iron_shield_info_list)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_iron_shield_info_list_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_iron_shield_info_list& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_iron_shield_info > infos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_character_info_list final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_character_info_list) */ {
 public:
  inline Operate_character_info_list() : Operate_character_info_list(nullptr) {}
  ~Operate_character_info_list() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_character_info_list(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_character_info_list(const Operate_character_info_list& from) : Operate_character_info_list(nullptr, from) {}
  inline Operate_character_info_list(Operate_character_info_list&& from) noexcept
      : Operate_character_info_list(nullptr, std::move(from)) {}
  inline Operate_character_info_list& operator=(const Operate_character_info_list& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_character_info_list& operator=(Operate_character_info_list&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_character_info_list& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_character_info_list* internal_default_instance() {
    return reinterpret_cast<const Operate_character_info_list*>(
        &_Operate_character_info_list_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(Operate_character_info_list& a, Operate_character_info_list& b) { a.Swap(&b); }
  inline void Swap(Operate_character_info_list* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_character_info_list* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_character_info_list* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_character_info_list>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_character_info_list& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_character_info_list& from) { Operate_character_info_list::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_character_info_list* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_character_info_list"; }

 protected:
  explicit Operate_character_info_list(::google::protobuf::Arena* arena);
  Operate_character_info_list(::google::protobuf::Arena* arena, const Operate_character_info_list& from);
  Operate_character_info_list(::google::protobuf::Arena* arena, Operate_character_info_list&& from) noexcept
      : Operate_character_info_list(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 1,
  };
  // repeated .DC.Packet.Operate_character_info infos = 1;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::DC::Packet::Operate_character_info* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_character_info>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_character_info>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_character_info>* _internal_mutable_infos();
  public:
  const ::DC::Packet::Operate_character_info& infos(int index) const;
  ::DC::Packet::Operate_character_info* add_infos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_character_info>& infos() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_character_info_list)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_character_info_list_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_character_info_list& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_character_info > infos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_ban_user_info_list final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_ban_user_info_list) */ {
 public:
  inline Operate_ban_user_info_list() : Operate_ban_user_info_list(nullptr) {}
  ~Operate_ban_user_info_list() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_ban_user_info_list(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_ban_user_info_list(const Operate_ban_user_info_list& from) : Operate_ban_user_info_list(nullptr, from) {}
  inline Operate_ban_user_info_list(Operate_ban_user_info_list&& from) noexcept
      : Operate_ban_user_info_list(nullptr, std::move(from)) {}
  inline Operate_ban_user_info_list& operator=(const Operate_ban_user_info_list& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_ban_user_info_list& operator=(Operate_ban_user_info_list&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_ban_user_info_list& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_ban_user_info_list* internal_default_instance() {
    return reinterpret_cast<const Operate_ban_user_info_list*>(
        &_Operate_ban_user_info_list_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(Operate_ban_user_info_list& a, Operate_ban_user_info_list& b) { a.Swap(&b); }
  inline void Swap(Operate_ban_user_info_list* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_ban_user_info_list* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_ban_user_info_list* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_ban_user_info_list>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_ban_user_info_list& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_ban_user_info_list& from) { Operate_ban_user_info_list::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_ban_user_info_list* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_ban_user_info_list"; }

 protected:
  explicit Operate_ban_user_info_list(::google::protobuf::Arena* arena);
  Operate_ban_user_info_list(::google::protobuf::Arena* arena, const Operate_ban_user_info_list& from);
  Operate_ban_user_info_list(::google::protobuf::Arena* arena, Operate_ban_user_info_list&& from) noexcept
      : Operate_ban_user_info_list(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 1,
  };
  // repeated .DC.Packet.Operate_ban_user_info infos = 1;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::DC::Packet::Operate_ban_user_info* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_ban_user_info>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_ban_user_info>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_ban_user_info>* _internal_mutable_infos();
  public:
  const ::DC::Packet::Operate_ban_user_info& infos(int index) const;
  ::DC::Packet::Operate_ban_user_info* add_infos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_ban_user_info>& infos() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_ban_user_info_list)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_ban_user_info_list_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_ban_user_info_list& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_ban_user_info > infos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_ban_info_list final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_ban_info_list) */ {
 public:
  inline Operate_ban_info_list() : Operate_ban_info_list(nullptr) {}
  ~Operate_ban_info_list() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_ban_info_list(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_ban_info_list(const Operate_ban_info_list& from) : Operate_ban_info_list(nullptr, from) {}
  inline Operate_ban_info_list(Operate_ban_info_list&& from) noexcept
      : Operate_ban_info_list(nullptr, std::move(from)) {}
  inline Operate_ban_info_list& operator=(const Operate_ban_info_list& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_ban_info_list& operator=(Operate_ban_info_list&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_ban_info_list& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_ban_info_list* internal_default_instance() {
    return reinterpret_cast<const Operate_ban_info_list*>(
        &_Operate_ban_info_list_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(Operate_ban_info_list& a, Operate_ban_info_list& b) { a.Swap(&b); }
  inline void Swap(Operate_ban_info_list* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_ban_info_list* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_ban_info_list* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_ban_info_list>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_ban_info_list& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_ban_info_list& from) { Operate_ban_info_list::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_ban_info_list* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_ban_info_list"; }

 protected:
  explicit Operate_ban_info_list(::google::protobuf::Arena* arena);
  Operate_ban_info_list(::google::protobuf::Arena* arena, const Operate_ban_info_list& from);
  Operate_ban_info_list(::google::protobuf::Arena* arena, Operate_ban_info_list&& from) noexcept
      : Operate_ban_info_list(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 1,
  };
  // repeated .DC.Packet.ban_info infos = 1;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::DC::Packet::ban_info* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::ban_info>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::ban_info>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::ban_info>* _internal_mutable_infos();
  public:
  const ::DC::Packet::ban_info& infos(int index) const;
  ::DC::Packet::ban_info* add_infos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::ban_info>& infos() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_ban_info_list)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_ban_info_list_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_ban_info_list& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::ban_info > infos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_SearchHackReasonResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_SearchHackReasonResult) */ {
 public:
  inline Operate_SearchHackReasonResult() : Operate_SearchHackReasonResult(nullptr) {}
  ~Operate_SearchHackReasonResult() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_SearchHackReasonResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_SearchHackReasonResult(const Operate_SearchHackReasonResult& from) : Operate_SearchHackReasonResult(nullptr, from) {}
  inline Operate_SearchHackReasonResult(Operate_SearchHackReasonResult&& from) noexcept
      : Operate_SearchHackReasonResult(nullptr, std::move(from)) {}
  inline Operate_SearchHackReasonResult& operator=(const Operate_SearchHackReasonResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_SearchHackReasonResult& operator=(Operate_SearchHackReasonResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_SearchHackReasonResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_SearchHackReasonResult* internal_default_instance() {
    return reinterpret_cast<const Operate_SearchHackReasonResult*>(
        &_Operate_SearchHackReasonResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 47;
  friend void swap(Operate_SearchHackReasonResult& a, Operate_SearchHackReasonResult& b) { a.Swap(&b); }
  inline void Swap(Operate_SearchHackReasonResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_SearchHackReasonResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_SearchHackReasonResult* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_SearchHackReasonResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_SearchHackReasonResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_SearchHackReasonResult& from) { Operate_SearchHackReasonResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_SearchHackReasonResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_SearchHackReasonResult"; }

 protected:
  explicit Operate_SearchHackReasonResult(::google::protobuf::Arena* arena);
  Operate_SearchHackReasonResult(::google::protobuf::Arena* arena, const Operate_SearchHackReasonResult& from);
  Operate_SearchHackReasonResult(::google::protobuf::Arena* arena, Operate_SearchHackReasonResult&& from) noexcept
      : Operate_SearchHackReasonResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 1,
    kMaxPageSizeFieldNumber = 2,
    kCurrentPageFieldNumber = 3,
    kSearchTypeFieldNumber = 4,
  };
  // repeated .DC.Packet.ReasonSearchBanUserInfo infos = 1;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::DC::Packet::ReasonSearchBanUserInfo* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::ReasonSearchBanUserInfo>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::ReasonSearchBanUserInfo>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::ReasonSearchBanUserInfo>* _internal_mutable_infos();
  public:
  const ::DC::Packet::ReasonSearchBanUserInfo& infos(int index) const;
  ::DC::Packet::ReasonSearchBanUserInfo* add_infos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::ReasonSearchBanUserInfo>& infos() const;
  // int32 maxPageSize = 2;
  void clear_maxpagesize() ;
  ::int32_t maxpagesize() const;
  void set_maxpagesize(::int32_t value);

  private:
  ::int32_t _internal_maxpagesize() const;
  void _internal_set_maxpagesize(::int32_t value);

  public:
  // int32 currentPage = 3;
  void clear_currentpage() ;
  ::int32_t currentpage() const;
  void set_currentpage(::int32_t value);

  private:
  ::int32_t _internal_currentpage() const;
  void _internal_set_currentpage(::int32_t value);

  public:
  // int32 searchType = 4;
  void clear_searchtype() ;
  ::int32_t searchtype() const;
  void set_searchtype(::int32_t value);

  private:
  ::int32_t _internal_searchtype() const;
  void _internal_set_searchtype(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_SearchHackReasonResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_SearchHackReasonResult_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_SearchHackReasonResult& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::ReasonSearchBanUserInfo > infos_;
    ::int32_t maxpagesize_;
    ::int32_t currentpage_;
    ::int32_t searchtype_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_OperateReportBodyInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_OperateReportBodyInfo) */ {
 public:
  inline Operate_OperateReportBodyInfo() : Operate_OperateReportBodyInfo(nullptr) {}
  ~Operate_OperateReportBodyInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_OperateReportBodyInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_OperateReportBodyInfo(const Operate_OperateReportBodyInfo& from) : Operate_OperateReportBodyInfo(nullptr, from) {}
  inline Operate_OperateReportBodyInfo(Operate_OperateReportBodyInfo&& from) noexcept
      : Operate_OperateReportBodyInfo(nullptr, std::move(from)) {}
  inline Operate_OperateReportBodyInfo& operator=(const Operate_OperateReportBodyInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_OperateReportBodyInfo& operator=(Operate_OperateReportBodyInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_OperateReportBodyInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_OperateReportBodyInfo* internal_default_instance() {
    return reinterpret_cast<const Operate_OperateReportBodyInfo*>(
        &_Operate_OperateReportBodyInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(Operate_OperateReportBodyInfo& a, Operate_OperateReportBodyInfo& b) { a.Swap(&b); }
  inline void Swap(Operate_OperateReportBodyInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_OperateReportBodyInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_OperateReportBodyInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_OperateReportBodyInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_OperateReportBodyInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_OperateReportBodyInfo& from) { Operate_OperateReportBodyInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_OperateReportBodyInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_OperateReportBodyInfo"; }

 protected:
  explicit Operate_OperateReportBodyInfo(::google::protobuf::Arena* arena);
  Operate_OperateReportBodyInfo(::google::protobuf::Arena* arena, const Operate_OperateReportBodyInfo& from);
  Operate_OperateReportBodyInfo(::google::protobuf::Arena* arena, Operate_OperateReportBodyInfo&& from) noexcept
      : Operate_OperateReportBodyInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetNicknameFieldNumber = 4,
    kRegisterDateFieldNumber = 7,
    kFileFieldNumber = 6,
    kReportIdFieldNumber = 1,
    kReportAccountIdFieldNumber = 2,
    kTargetCharacterIdFieldNumber = 3,
    kGameIdFieldNumber = 5,
  };
  // string targetNickname = 4;
  void clear_targetnickname() ;
  const std::string& targetnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_targetnickname(Arg_&& arg, Args_... args);
  std::string* mutable_targetnickname();
  PROTOBUF_NODISCARD std::string* release_targetnickname();
  void set_allocated_targetnickname(std::string* value);

  private:
  const std::string& _internal_targetnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_targetnickname(
      const std::string& value);
  std::string* _internal_mutable_targetnickname();

  public:
  // string registerDate = 7;
  void clear_registerdate() ;
  const std::string& registerdate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_registerdate(Arg_&& arg, Args_... args);
  std::string* mutable_registerdate();
  PROTOBUF_NODISCARD std::string* release_registerdate();
  void set_allocated_registerdate(std::string* value);

  private:
  const std::string& _internal_registerdate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_registerdate(
      const std::string& value);
  std::string* _internal_mutable_registerdate();

  public:
  // .DC.Packet.Operate_OperateFileInfo file = 6;
  bool has_file() const;
  void clear_file() ;
  const ::DC::Packet::Operate_OperateFileInfo& file() const;
  PROTOBUF_NODISCARD ::DC::Packet::Operate_OperateFileInfo* release_file();
  ::DC::Packet::Operate_OperateFileInfo* mutable_file();
  void set_allocated_file(::DC::Packet::Operate_OperateFileInfo* value);
  void unsafe_arena_set_allocated_file(::DC::Packet::Operate_OperateFileInfo* value);
  ::DC::Packet::Operate_OperateFileInfo* unsafe_arena_release_file();

  private:
  const ::DC::Packet::Operate_OperateFileInfo& _internal_file() const;
  ::DC::Packet::Operate_OperateFileInfo* _internal_mutable_file();

  public:
  // uint64 reportId = 1;
  void clear_reportid() ;
  ::uint64_t reportid() const;
  void set_reportid(::uint64_t value);

  private:
  ::uint64_t _internal_reportid() const;
  void _internal_set_reportid(::uint64_t value);

  public:
  // uint64 reportAccountId = 2;
  void clear_reportaccountid() ;
  ::uint64_t reportaccountid() const;
  void set_reportaccountid(::uint64_t value);

  private:
  ::uint64_t _internal_reportaccountid() const;
  void _internal_set_reportaccountid(::uint64_t value);

  public:
  // uint64 targetCharacterId = 3;
  void clear_targetcharacterid() ;
  ::uint64_t targetcharacterid() const;
  void set_targetcharacterid(::uint64_t value);

  private:
  ::uint64_t _internal_targetcharacterid() const;
  void _internal_set_targetcharacterid(::uint64_t value);

  public:
  // uint64 gameId = 5;
  void clear_gameid() ;
  ::uint64_t gameid() const;
  void set_gameid(::uint64_t value);

  private:
  ::uint64_t _internal_gameid() const;
  void _internal_set_gameid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_OperateReportBodyInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      74, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_OperateReportBodyInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_OperateReportBodyInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr targetnickname_;
    ::google::protobuf::internal::ArenaStringPtr registerdate_;
    ::DC::Packet::Operate_OperateFileInfo* file_;
    ::uint64_t reportid_;
    ::uint64_t reportaccountid_;
    ::uint64_t targetcharacterid_;
    ::uint64_t gameid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_OperateIronShieldInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_OperateIronShieldInfo) */ {
 public:
  inline Operate_OperateIronShieldInfo() : Operate_OperateIronShieldInfo(nullptr) {}
  ~Operate_OperateIronShieldInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_OperateIronShieldInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_OperateIronShieldInfo(const Operate_OperateIronShieldInfo& from) : Operate_OperateIronShieldInfo(nullptr, from) {}
  inline Operate_OperateIronShieldInfo(Operate_OperateIronShieldInfo&& from) noexcept
      : Operate_OperateIronShieldInfo(nullptr, std::move(from)) {}
  inline Operate_OperateIronShieldInfo& operator=(const Operate_OperateIronShieldInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_OperateIronShieldInfo& operator=(Operate_OperateIronShieldInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_OperateIronShieldInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_OperateIronShieldInfo* internal_default_instance() {
    return reinterpret_cast<const Operate_OperateIronShieldInfo*>(
        &_Operate_OperateIronShieldInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(Operate_OperateIronShieldInfo& a, Operate_OperateIronShieldInfo& b) { a.Swap(&b); }
  inline void Swap(Operate_OperateIronShieldInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_OperateIronShieldInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_OperateIronShieldInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_OperateIronShieldInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_OperateIronShieldInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_OperateIronShieldInfo& from) { Operate_OperateIronShieldInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_OperateIronShieldInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_OperateIronShieldInfo"; }

 protected:
  explicit Operate_OperateIronShieldInfo(::google::protobuf::Arena* arena);
  Operate_OperateIronShieldInfo(::google::protobuf::Arena* arena, const Operate_OperateIronShieldInfo& from);
  Operate_OperateIronShieldInfo(::google::protobuf::Arena* arena, Operate_OperateIronShieldInfo&& from) noexcept
      : Operate_OperateIronShieldInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHardwareIdsFieldNumber = 8,
    kNicknameFieldNumber = 4,
    kCallbackTypeFieldNumber = 5,
    kRegisterTimeFieldNumber = 7,
    kFileFieldNumber = 6,
    kIdxFieldNumber = 1,
    kAccountIdFieldNumber = 2,
    kCharacterIdFieldNumber = 3,
  };
  // repeated string hardwareIds = 8;
  int hardwareids_size() const;
  private:
  int _internal_hardwareids_size() const;

  public:
  void clear_hardwareids() ;
  const std::string& hardwareids(int index) const;
  std::string* mutable_hardwareids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hardwareids(int index, Arg_&& value, Args_... args);
  std::string* add_hardwareids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_hardwareids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& hardwareids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_hardwareids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_hardwareids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_hardwareids();

  public:
  // string nickname = 4;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string callbackType = 5;
  void clear_callbacktype() ;
  const std::string& callbacktype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_callbacktype(Arg_&& arg, Args_... args);
  std::string* mutable_callbacktype();
  PROTOBUF_NODISCARD std::string* release_callbacktype();
  void set_allocated_callbacktype(std::string* value);

  private:
  const std::string& _internal_callbacktype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_callbacktype(
      const std::string& value);
  std::string* _internal_mutable_callbacktype();

  public:
  // string RegisterTime = 7;
  void clear_registertime() ;
  const std::string& registertime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_registertime(Arg_&& arg, Args_... args);
  std::string* mutable_registertime();
  PROTOBUF_NODISCARD std::string* release_registertime();
  void set_allocated_registertime(std::string* value);

  private:
  const std::string& _internal_registertime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_registertime(
      const std::string& value);
  std::string* _internal_mutable_registertime();

  public:
  // .DC.Packet.Operate_OperateFileInfo file = 6;
  bool has_file() const;
  void clear_file() ;
  const ::DC::Packet::Operate_OperateFileInfo& file() const;
  PROTOBUF_NODISCARD ::DC::Packet::Operate_OperateFileInfo* release_file();
  ::DC::Packet::Operate_OperateFileInfo* mutable_file();
  void set_allocated_file(::DC::Packet::Operate_OperateFileInfo* value);
  void unsafe_arena_set_allocated_file(::DC::Packet::Operate_OperateFileInfo* value);
  ::DC::Packet::Operate_OperateFileInfo* unsafe_arena_release_file();

  private:
  const ::DC::Packet::Operate_OperateFileInfo& _internal_file() const;
  ::DC::Packet::Operate_OperateFileInfo* _internal_mutable_file();

  public:
  // uint64 idx = 1;
  void clear_idx() ;
  ::uint64_t idx() const;
  void set_idx(::uint64_t value);

  private:
  ::uint64_t _internal_idx() const;
  void _internal_set_idx(::uint64_t value);

  public:
  // uint64 accountId = 2;
  void clear_accountid() ;
  ::uint64_t accountid() const;
  void set_accountid(::uint64_t value);

  private:
  ::uint64_t _internal_accountid() const;
  void _internal_set_accountid(::uint64_t value);

  public:
  // uint64 characterId = 3;
  void clear_characterid() ;
  ::uint64_t characterid() const;
  void set_characterid(::uint64_t value);

  private:
  ::uint64_t _internal_characterid() const;
  void _internal_set_characterid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_OperateIronShieldInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      99, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_OperateIronShieldInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_OperateIronShieldInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> hardwareids_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr callbacktype_;
    ::google::protobuf::internal::ArenaStringPtr registertime_;
    ::DC::Packet::Operate_OperateFileInfo* file_;
    ::uint64_t idx_;
    ::uint64_t accountid_;
    ::uint64_t characterid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_OperateHardwareInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_OperateHardwareInfo) */ {
 public:
  inline Operate_OperateHardwareInfo() : Operate_OperateHardwareInfo(nullptr) {}
  ~Operate_OperateHardwareInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_OperateHardwareInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_OperateHardwareInfo(const Operate_OperateHardwareInfo& from) : Operate_OperateHardwareInfo(nullptr, from) {}
  inline Operate_OperateHardwareInfo(Operate_OperateHardwareInfo&& from) noexcept
      : Operate_OperateHardwareInfo(nullptr, std::move(from)) {}
  inline Operate_OperateHardwareInfo& operator=(const Operate_OperateHardwareInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_OperateHardwareInfo& operator=(Operate_OperateHardwareInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_OperateHardwareInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_OperateHardwareInfo* internal_default_instance() {
    return reinterpret_cast<const Operate_OperateHardwareInfo*>(
        &_Operate_OperateHardwareInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(Operate_OperateHardwareInfo& a, Operate_OperateHardwareInfo& b) { a.Swap(&b); }
  inline void Swap(Operate_OperateHardwareInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_OperateHardwareInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_OperateHardwareInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_OperateHardwareInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_OperateHardwareInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_OperateHardwareInfo& from) { Operate_OperateHardwareInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_OperateHardwareInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_OperateHardwareInfo"; }

 protected:
  explicit Operate_OperateHardwareInfo(::google::protobuf::Arena* arena);
  Operate_OperateHardwareInfo(::google::protobuf::Arena* arena, const Operate_OperateHardwareInfo& from);
  Operate_OperateHardwareInfo(::google::protobuf::Arena* arena, Operate_OperateHardwareInfo&& from) noexcept
      : Operate_OperateHardwareInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHardwareAccountInfosFieldNumber = 1,
    kDuplicateHardwareInfosFieldNumber = 2,
  };
  // repeated .DC.Packet.Operate_OperateHardwareAccountInfo hardwareAccountInfos = 1;
  int hardwareaccountinfos_size() const;
  private:
  int _internal_hardwareaccountinfos_size() const;

  public:
  void clear_hardwareaccountinfos() ;
  ::DC::Packet::Operate_OperateHardwareAccountInfo* mutable_hardwareaccountinfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateHardwareAccountInfo>* mutable_hardwareaccountinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateHardwareAccountInfo>& _internal_hardwareaccountinfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateHardwareAccountInfo>* _internal_mutable_hardwareaccountinfos();
  public:
  const ::DC::Packet::Operate_OperateHardwareAccountInfo& hardwareaccountinfos(int index) const;
  ::DC::Packet::Operate_OperateHardwareAccountInfo* add_hardwareaccountinfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateHardwareAccountInfo>& hardwareaccountinfos() const;
  // repeated .DC.Packet.Operate_OperateDuplicateHardwareInfo duplicateHardwareInfos = 2;
  int duplicatehardwareinfos_size() const;
  private:
  int _internal_duplicatehardwareinfos_size() const;

  public:
  void clear_duplicatehardwareinfos() ;
  ::DC::Packet::Operate_OperateDuplicateHardwareInfo* mutable_duplicatehardwareinfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateDuplicateHardwareInfo>* mutable_duplicatehardwareinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateDuplicateHardwareInfo>& _internal_duplicatehardwareinfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateDuplicateHardwareInfo>* _internal_mutable_duplicatehardwareinfos();
  public:
  const ::DC::Packet::Operate_OperateDuplicateHardwareInfo& duplicatehardwareinfos(int index) const;
  ::DC::Packet::Operate_OperateDuplicateHardwareInfo* add_duplicatehardwareinfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateDuplicateHardwareInfo>& duplicatehardwareinfos() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_OperateHardwareInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_OperateHardwareInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_OperateHardwareInfo& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_OperateHardwareAccountInfo > hardwareaccountinfos_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_OperateDuplicateHardwareInfo > duplicatehardwareinfos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_Hacklog final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_Hacklog) */ {
 public:
  inline Operate_Hacklog() : Operate_Hacklog(nullptr) {}
  ~Operate_Hacklog() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_Hacklog(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_Hacklog(const Operate_Hacklog& from) : Operate_Hacklog(nullptr, from) {}
  inline Operate_Hacklog(Operate_Hacklog&& from) noexcept
      : Operate_Hacklog(nullptr, std::move(from)) {}
  inline Operate_Hacklog& operator=(const Operate_Hacklog& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_Hacklog& operator=(Operate_Hacklog&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_Hacklog& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_Hacklog* internal_default_instance() {
    return reinterpret_cast<const Operate_Hacklog*>(
        &_Operate_Hacklog_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(Operate_Hacklog& a, Operate_Hacklog& b) { a.Swap(&b); }
  inline void Swap(Operate_Hacklog* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_Hacklog* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_Hacklog* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_Hacklog>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_Hacklog& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_Hacklog& from) { Operate_Hacklog::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_Hacklog* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_Hacklog"; }

 protected:
  explicit Operate_Hacklog(::google::protobuf::Arena* arena);
  Operate_Hacklog(::google::protobuf::Arena* arena, const Operate_Hacklog& from);
  Operate_Hacklog(::google::protobuf::Arena* arena, Operate_Hacklog&& from) noexcept
      : Operate_Hacklog(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 1,
  };
  // repeated .DC.Packet.HackLogInfo infos = 1;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::DC::Packet::HackLogInfo* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::HackLogInfo>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::HackLogInfo>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::HackLogInfo>* _internal_mutable_infos();
  public:
  const ::DC::Packet::HackLogInfo& infos(int index) const;
  ::DC::Packet::HackLogInfo* add_infos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::HackLogInfo>& infos() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_Hacklog)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_Hacklog_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_Hacklog& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::HackLogInfo > infos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_HackUserUnbanBulk final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_HackUserUnbanBulk) */ {
 public:
  inline Operate_HackUserUnbanBulk() : Operate_HackUserUnbanBulk(nullptr) {}
  ~Operate_HackUserUnbanBulk() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_HackUserUnbanBulk(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_HackUserUnbanBulk(const Operate_HackUserUnbanBulk& from) : Operate_HackUserUnbanBulk(nullptr, from) {}
  inline Operate_HackUserUnbanBulk(Operate_HackUserUnbanBulk&& from) noexcept
      : Operate_HackUserUnbanBulk(nullptr, std::move(from)) {}
  inline Operate_HackUserUnbanBulk& operator=(const Operate_HackUserUnbanBulk& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_HackUserUnbanBulk& operator=(Operate_HackUserUnbanBulk&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_HackUserUnbanBulk& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_HackUserUnbanBulk* internal_default_instance() {
    return reinterpret_cast<const Operate_HackUserUnbanBulk*>(
        &_Operate_HackUserUnbanBulk_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 50;
  friend void swap(Operate_HackUserUnbanBulk& a, Operate_HackUserUnbanBulk& b) { a.Swap(&b); }
  inline void Swap(Operate_HackUserUnbanBulk* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_HackUserUnbanBulk* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_HackUserUnbanBulk* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_HackUserUnbanBulk>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_HackUserUnbanBulk& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_HackUserUnbanBulk& from) { Operate_HackUserUnbanBulk::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_HackUserUnbanBulk* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_HackUserUnbanBulk"; }

 protected:
  explicit Operate_HackUserUnbanBulk(::google::protobuf::Arena* arena);
  Operate_HackUserUnbanBulk(::google::protobuf::Arena* arena, const Operate_HackUserUnbanBulk& from);
  Operate_HackUserUnbanBulk(::google::protobuf::Arena* arena, Operate_HackUserUnbanBulk&& from) noexcept
      : Operate_HackUserUnbanBulk(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 1,
    kReasonFieldNumber = 2,
    kJiraIdFieldNumber = 3,
    kWithLoginHardwareBanFieldNumber = 4,
  };
  // repeated .DC.Packet.Operate_BulkBanInfo infos = 1;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::DC::Packet::Operate_BulkBanInfo* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_BulkBanInfo>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_BulkBanInfo>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_BulkBanInfo>* _internal_mutable_infos();
  public:
  const ::DC::Packet::Operate_BulkBanInfo& infos(int index) const;
  ::DC::Packet::Operate_BulkBanInfo* add_infos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_BulkBanInfo>& infos() const;
  // string reason = 2;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // string jiraId = 3;
  void clear_jiraid() ;
  const std::string& jiraid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_jiraid(Arg_&& arg, Args_... args);
  std::string* mutable_jiraid();
  PROTOBUF_NODISCARD std::string* release_jiraid();
  void set_allocated_jiraid(std::string* value);

  private:
  const std::string& _internal_jiraid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_jiraid(
      const std::string& value);
  std::string* _internal_mutable_jiraid();

  public:
  // uint32 withLoginHardwareBan = 4;
  void clear_withloginhardwareban() ;
  ::uint32_t withloginhardwareban() const;
  void set_withloginhardwareban(::uint32_t value);

  private:
  ::uint32_t _internal_withloginhardwareban() const;
  void _internal_set_withloginhardwareban(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_HackUserUnbanBulk)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      56, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_HackUserUnbanBulk_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_HackUserUnbanBulk& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_BulkBanInfo > infos_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::google::protobuf::internal::ArenaStringPtr jiraid_;
    ::uint32_t withloginhardwareban_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_HackUserBanBulk final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_HackUserBanBulk) */ {
 public:
  inline Operate_HackUserBanBulk() : Operate_HackUserBanBulk(nullptr) {}
  ~Operate_HackUserBanBulk() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_HackUserBanBulk(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_HackUserBanBulk(const Operate_HackUserBanBulk& from) : Operate_HackUserBanBulk(nullptr, from) {}
  inline Operate_HackUserBanBulk(Operate_HackUserBanBulk&& from) noexcept
      : Operate_HackUserBanBulk(nullptr, std::move(from)) {}
  inline Operate_HackUserBanBulk& operator=(const Operate_HackUserBanBulk& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_HackUserBanBulk& operator=(Operate_HackUserBanBulk&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_HackUserBanBulk& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_HackUserBanBulk* internal_default_instance() {
    return reinterpret_cast<const Operate_HackUserBanBulk*>(
        &_Operate_HackUserBanBulk_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 49;
  friend void swap(Operate_HackUserBanBulk& a, Operate_HackUserBanBulk& b) { a.Swap(&b); }
  inline void Swap(Operate_HackUserBanBulk* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_HackUserBanBulk* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_HackUserBanBulk* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_HackUserBanBulk>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_HackUserBanBulk& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_HackUserBanBulk& from) { Operate_HackUserBanBulk::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_HackUserBanBulk* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_HackUserBanBulk"; }

 protected:
  explicit Operate_HackUserBanBulk(::google::protobuf::Arena* arena);
  Operate_HackUserBanBulk(::google::protobuf::Arena* arena, const Operate_HackUserBanBulk& from);
  Operate_HackUserBanBulk(::google::protobuf::Arena* arena, Operate_HackUserBanBulk&& from) noexcept
      : Operate_HackUserBanBulk(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 1,
    kReasonFieldNumber = 2,
    kJiraIdFieldNumber = 5,
    kBanTypeFieldNumber = 3,
    kBanTimeMinFieldNumber = 4,
    kLogIdxFieldNumber = 7,
    kWithLoginHardwareBanFieldNumber = 6,
  };
  // repeated .DC.Packet.Operate_BulkBanInfo infos = 1;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::DC::Packet::Operate_BulkBanInfo* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_BulkBanInfo>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_BulkBanInfo>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_BulkBanInfo>* _internal_mutable_infos();
  public:
  const ::DC::Packet::Operate_BulkBanInfo& infos(int index) const;
  ::DC::Packet::Operate_BulkBanInfo* add_infos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_BulkBanInfo>& infos() const;
  // string reason = 2;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // string jiraId = 5;
  void clear_jiraid() ;
  const std::string& jiraid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_jiraid(Arg_&& arg, Args_... args);
  std::string* mutable_jiraid();
  PROTOBUF_NODISCARD std::string* release_jiraid();
  void set_allocated_jiraid(std::string* value);

  private:
  const std::string& _internal_jiraid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_jiraid(
      const std::string& value);
  std::string* _internal_mutable_jiraid();

  public:
  // uint32 banType = 3;
  void clear_bantype() ;
  ::uint32_t bantype() const;
  void set_bantype(::uint32_t value);

  private:
  ::uint32_t _internal_bantype() const;
  void _internal_set_bantype(::uint32_t value);

  public:
  // uint32 banTime_min = 4;
  void clear_bantime_min() ;
  ::uint32_t bantime_min() const;
  void set_bantime_min(::uint32_t value);

  private:
  ::uint32_t _internal_bantime_min() const;
  void _internal_set_bantime_min(::uint32_t value);

  public:
  // uint64 logIdx = 7;
  void clear_logidx() ;
  ::uint64_t logidx() const;
  void set_logidx(::uint64_t value);

  private:
  ::uint64_t _internal_logidx() const;
  void _internal_set_logidx(::uint64_t value);

  public:
  // uint32 withLoginHardwareBan = 6;
  void clear_withloginhardwareban() ;
  ::uint32_t withloginhardwareban() const;
  void set_withloginhardwareban(::uint32_t value);

  private:
  ::uint32_t _internal_withloginhardwareban() const;
  void _internal_set_withloginhardwareban(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_HackUserBanBulk)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_HackUserBanBulk_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_HackUserBanBulk& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_BulkBanInfo > infos_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::google::protobuf::internal::ArenaStringPtr jiraid_;
    ::uint32_t bantype_;
    ::uint32_t bantime_min_;
    ::uint64_t logidx_;
    ::uint32_t withloginhardwareban_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_Add_Announce_Msg final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_Add_Announce_Msg) */ {
 public:
  inline Operate_Add_Announce_Msg() : Operate_Add_Announce_Msg(nullptr) {}
  ~Operate_Add_Announce_Msg() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_Add_Announce_Msg(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_Add_Announce_Msg(const Operate_Add_Announce_Msg& from) : Operate_Add_Announce_Msg(nullptr, from) {}
  inline Operate_Add_Announce_Msg(Operate_Add_Announce_Msg&& from) noexcept
      : Operate_Add_Announce_Msg(nullptr, std::move(from)) {}
  inline Operate_Add_Announce_Msg& operator=(const Operate_Add_Announce_Msg& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_Add_Announce_Msg& operator=(Operate_Add_Announce_Msg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_Add_Announce_Msg& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_Add_Announce_Msg* internal_default_instance() {
    return reinterpret_cast<const Operate_Add_Announce_Msg*>(
        &_Operate_Add_Announce_Msg_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Operate_Add_Announce_Msg& a, Operate_Add_Announce_Msg& b) { a.Swap(&b); }
  inline void Swap(Operate_Add_Announce_Msg* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_Add_Announce_Msg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_Add_Announce_Msg* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_Add_Announce_Msg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_Add_Announce_Msg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_Add_Announce_Msg& from) { Operate_Add_Announce_Msg::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_Add_Announce_Msg* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_Add_Announce_Msg"; }

 protected:
  explicit Operate_Add_Announce_Msg(::google::protobuf::Arena* arena);
  Operate_Add_Announce_Msg(::google::protobuf::Arena* arena, const Operate_Add_Announce_Msg& from);
  Operate_Add_Announce_Msg(::google::protobuf::Arena* arena, Operate_Add_Announce_Msg&& from) noexcept
      : Operate_Add_Announce_Msg(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAnnounceListFieldNumber = 2,
    kSecurityCodeFieldNumber = 1,
  };
  // repeated .DC.Packet.Operate_announceMessageInfo announceList = 2;
  int announcelist_size() const;
  private:
  int _internal_announcelist_size() const;

  public:
  void clear_announcelist() ;
  ::DC::Packet::Operate_announceMessageInfo* mutable_announcelist(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_announceMessageInfo>* mutable_announcelist();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_announceMessageInfo>& _internal_announcelist() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_announceMessageInfo>* _internal_mutable_announcelist();
  public:
  const ::DC::Packet::Operate_announceMessageInfo& announcelist(int index) const;
  ::DC::Packet::Operate_announceMessageInfo* add_announcelist();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_announceMessageInfo>& announcelist() const;
  // string securityCode = 1;
  void clear_securitycode() ;
  const std::string& securitycode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_securitycode(Arg_&& arg, Args_... args);
  std::string* mutable_securitycode();
  PROTOBUF_NODISCARD std::string* release_securitycode();
  void set_allocated_securitycode(std::string* value);

  private:
  const std::string& _internal_securitycode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_securitycode(
      const std::string& value);
  std::string* _internal_mutable_securitycode();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_Add_Announce_Msg)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      55, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_Add_Announce_Msg_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_Add_Announce_Msg& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_announceMessageInfo > announcelist_;
    ::google::protobuf::internal::ArenaStringPtr securitycode_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_AllReportList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_AllReportList) */ {
 public:
  inline Operate_AllReportList() : Operate_AllReportList(nullptr) {}
  ~Operate_AllReportList() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_AllReportList(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_AllReportList(const Operate_AllReportList& from) : Operate_AllReportList(nullptr, from) {}
  inline Operate_AllReportList(Operate_AllReportList&& from) noexcept
      : Operate_AllReportList(nullptr, std::move(from)) {}
  inline Operate_AllReportList& operator=(const Operate_AllReportList& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_AllReportList& operator=(Operate_AllReportList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_AllReportList& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_AllReportList* internal_default_instance() {
    return reinterpret_cast<const Operate_AllReportList*>(
        &_Operate_AllReportList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(Operate_AllReportList& a, Operate_AllReportList& b) { a.Swap(&b); }
  inline void Swap(Operate_AllReportList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_AllReportList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_AllReportList* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_AllReportList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_AllReportList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_AllReportList& from) { Operate_AllReportList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_AllReportList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_AllReportList"; }

 protected:
  explicit Operate_AllReportList(::google::protobuf::Arena* arena);
  Operate_AllReportList(::google::protobuf::Arena* arena, const Operate_AllReportList& from);
  Operate_AllReportList(::google::protobuf::Arena* arena, Operate_AllReportList&& from) noexcept
      : Operate_AllReportList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReportFieldNumber = 1,
  };
  // repeated .DC.Packet.Operate_OperateReportBodyInfo report = 1;
  int report_size() const;
  private:
  int _internal_report_size() const;

  public:
  void clear_report() ;
  ::DC::Packet::Operate_OperateReportBodyInfo* mutable_report(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateReportBodyInfo>* mutable_report();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateReportBodyInfo>& _internal_report() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateReportBodyInfo>* _internal_mutable_report();
  public:
  const ::DC::Packet::Operate_OperateReportBodyInfo& report(int index) const;
  ::DC::Packet::Operate_OperateReportBodyInfo* add_report();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateReportBodyInfo>& report() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_AllReportList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_AllReportList_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_AllReportList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_OperateReportBodyInfo > report_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_AllIronShieldList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_AllIronShieldList) */ {
 public:
  inline Operate_AllIronShieldList() : Operate_AllIronShieldList(nullptr) {}
  ~Operate_AllIronShieldList() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_AllIronShieldList(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_AllIronShieldList(const Operate_AllIronShieldList& from) : Operate_AllIronShieldList(nullptr, from) {}
  inline Operate_AllIronShieldList(Operate_AllIronShieldList&& from) noexcept
      : Operate_AllIronShieldList(nullptr, std::move(from)) {}
  inline Operate_AllIronShieldList& operator=(const Operate_AllIronShieldList& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_AllIronShieldList& operator=(Operate_AllIronShieldList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_AllIronShieldList& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_AllIronShieldList* internal_default_instance() {
    return reinterpret_cast<const Operate_AllIronShieldList*>(
        &_Operate_AllIronShieldList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(Operate_AllIronShieldList& a, Operate_AllIronShieldList& b) { a.Swap(&b); }
  inline void Swap(Operate_AllIronShieldList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_AllIronShieldList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_AllIronShieldList* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_AllIronShieldList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_AllIronShieldList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_AllIronShieldList& from) { Operate_AllIronShieldList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_AllIronShieldList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_AllIronShieldList"; }

 protected:
  explicit Operate_AllIronShieldList(::google::protobuf::Arena* arena);
  Operate_AllIronShieldList(::google::protobuf::Arena* arena, const Operate_AllIronShieldList& from);
  Operate_AllIronShieldList(::google::protobuf::Arena* arena, Operate_AllIronShieldList&& from) noexcept
      : Operate_AllIronShieldList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIronShieldFieldNumber = 1,
  };
  // repeated .DC.Packet.Operate_OperateIronShieldInfo ironShield = 1;
  int ironshield_size() const;
  private:
  int _internal_ironshield_size() const;

  public:
  void clear_ironshield() ;
  ::DC::Packet::Operate_OperateIronShieldInfo* mutable_ironshield(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateIronShieldInfo>* mutable_ironshield();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateIronShieldInfo>& _internal_ironshield() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateIronShieldInfo>* _internal_mutable_ironshield();
  public:
  const ::DC::Packet::Operate_OperateIronShieldInfo& ironshield(int index) const;
  ::DC::Packet::Operate_OperateIronShieldInfo* add_ironshield();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateIronShieldInfo>& ironshield() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_AllIronShieldList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_AllIronShieldList_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_AllIronShieldList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_OperateIronShieldInfo > ironshield_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_AllHackInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_AllHackInfo) */ {
 public:
  inline Operate_AllHackInfo() : Operate_AllHackInfo(nullptr) {}
  ~Operate_AllHackInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_AllHackInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_AllHackInfo(const Operate_AllHackInfo& from) : Operate_AllHackInfo(nullptr, from) {}
  inline Operate_AllHackInfo(Operate_AllHackInfo&& from) noexcept
      : Operate_AllHackInfo(nullptr, std::move(from)) {}
  inline Operate_AllHackInfo& operator=(const Operate_AllHackInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_AllHackInfo& operator=(Operate_AllHackInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_AllHackInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_AllHackInfo* internal_default_instance() {
    return reinterpret_cast<const Operate_AllHackInfo*>(
        &_Operate_AllHackInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(Operate_AllHackInfo& a, Operate_AllHackInfo& b) { a.Swap(&b); }
  inline void Swap(Operate_AllHackInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_AllHackInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_AllHackInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_AllHackInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_AllHackInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_AllHackInfo& from) { Operate_AllHackInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_AllHackInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_AllHackInfo"; }

 protected:
  explicit Operate_AllHackInfo(::google::protobuf::Arena* arena);
  Operate_AllHackInfo(::google::protobuf::Arena* arena, const Operate_AllHackInfo& from);
  Operate_AllHackInfo(::google::protobuf::Arena* arena, Operate_AllHackInfo&& from) noexcept
      : Operate_AllHackInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCharacterInfosFieldNumber = 1,
    kReportBodyInfosFieldNumber = 2,
    kIronShieldInfosFieldNumber = 3,
    kBanUserInfosFieldNumber = 4,
    kLoginLogInfosFieldNumber = 5,
    kHardwareAccountInfosFieldNumber = 6,
    kDuplicateHardwareInfosFieldNumber = 7,
    kFileInfosFieldNumber = 8,
    kBanInfosFieldNumber = 9,
    kBanHardwareInfosFieldNumber = 10,
    kFindBanListFieldNumber = 12,
    kBanListFieldNumber = 13,
    kHackInfosFieldNumber = 11,
    kPlatformInfoFieldNumber = 14,
  };
  // repeated .DC.Packet.Operate_character_info characterInfos = 1;
  int characterinfos_size() const;
  private:
  int _internal_characterinfos_size() const;

  public:
  void clear_characterinfos() ;
  ::DC::Packet::Operate_character_info* mutable_characterinfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_character_info>* mutable_characterinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_character_info>& _internal_characterinfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_character_info>* _internal_mutable_characterinfos();
  public:
  const ::DC::Packet::Operate_character_info& characterinfos(int index) const;
  ::DC::Packet::Operate_character_info* add_characterinfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_character_info>& characterinfos() const;
  // repeated .DC.Packet.Operate_OperateReportBodyInfo reportBodyInfos = 2;
  int reportbodyinfos_size() const;
  private:
  int _internal_reportbodyinfos_size() const;

  public:
  void clear_reportbodyinfos() ;
  ::DC::Packet::Operate_OperateReportBodyInfo* mutable_reportbodyinfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateReportBodyInfo>* mutable_reportbodyinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateReportBodyInfo>& _internal_reportbodyinfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateReportBodyInfo>* _internal_mutable_reportbodyinfos();
  public:
  const ::DC::Packet::Operate_OperateReportBodyInfo& reportbodyinfos(int index) const;
  ::DC::Packet::Operate_OperateReportBodyInfo* add_reportbodyinfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateReportBodyInfo>& reportbodyinfos() const;
  // repeated .DC.Packet.Operate_OperateIronShieldInfo ironShieldInfos = 3;
  int ironshieldinfos_size() const;
  private:
  int _internal_ironshieldinfos_size() const;

  public:
  void clear_ironshieldinfos() ;
  ::DC::Packet::Operate_OperateIronShieldInfo* mutable_ironshieldinfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateIronShieldInfo>* mutable_ironshieldinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateIronShieldInfo>& _internal_ironshieldinfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateIronShieldInfo>* _internal_mutable_ironshieldinfos();
  public:
  const ::DC::Packet::Operate_OperateIronShieldInfo& ironshieldinfos(int index) const;
  ::DC::Packet::Operate_OperateIronShieldInfo* add_ironshieldinfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateIronShieldInfo>& ironshieldinfos() const;
  // repeated .DC.Packet.Operate_OperateBanUserInfos banUserInfos = 4;
  int banuserinfos_size() const;
  private:
  int _internal_banuserinfos_size() const;

  public:
  void clear_banuserinfos() ;
  ::DC::Packet::Operate_OperateBanUserInfos* mutable_banuserinfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanUserInfos>* mutable_banuserinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanUserInfos>& _internal_banuserinfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanUserInfos>* _internal_mutable_banuserinfos();
  public:
  const ::DC::Packet::Operate_OperateBanUserInfos& banuserinfos(int index) const;
  ::DC::Packet::Operate_OperateBanUserInfos* add_banuserinfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanUserInfos>& banuserinfos() const;
  // repeated .DC.Packet.Operate_OperateLoginLogInfo loginLogInfos = 5;
  int loginloginfos_size() const;
  private:
  int _internal_loginloginfos_size() const;

  public:
  void clear_loginloginfos() ;
  ::DC::Packet::Operate_OperateLoginLogInfo* mutable_loginloginfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateLoginLogInfo>* mutable_loginloginfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateLoginLogInfo>& _internal_loginloginfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateLoginLogInfo>* _internal_mutable_loginloginfos();
  public:
  const ::DC::Packet::Operate_OperateLoginLogInfo& loginloginfos(int index) const;
  ::DC::Packet::Operate_OperateLoginLogInfo* add_loginloginfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateLoginLogInfo>& loginloginfos() const;
  // repeated .DC.Packet.Operate_OperateHardwareAccountInfo hardwareAccountInfos = 6;
  int hardwareaccountinfos_size() const;
  private:
  int _internal_hardwareaccountinfos_size() const;

  public:
  void clear_hardwareaccountinfos() ;
  ::DC::Packet::Operate_OperateHardwareAccountInfo* mutable_hardwareaccountinfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateHardwareAccountInfo>* mutable_hardwareaccountinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateHardwareAccountInfo>& _internal_hardwareaccountinfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateHardwareAccountInfo>* _internal_mutable_hardwareaccountinfos();
  public:
  const ::DC::Packet::Operate_OperateHardwareAccountInfo& hardwareaccountinfos(int index) const;
  ::DC::Packet::Operate_OperateHardwareAccountInfo* add_hardwareaccountinfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateHardwareAccountInfo>& hardwareaccountinfos() const;
  // repeated .DC.Packet.Operate_OperateDuplicateHardwareInfo duplicateHardwareInfos = 7;
  int duplicatehardwareinfos_size() const;
  private:
  int _internal_duplicatehardwareinfos_size() const;

  public:
  void clear_duplicatehardwareinfos() ;
  ::DC::Packet::Operate_OperateDuplicateHardwareInfo* mutable_duplicatehardwareinfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateDuplicateHardwareInfo>* mutable_duplicatehardwareinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateDuplicateHardwareInfo>& _internal_duplicatehardwareinfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateDuplicateHardwareInfo>* _internal_mutable_duplicatehardwareinfos();
  public:
  const ::DC::Packet::Operate_OperateDuplicateHardwareInfo& duplicatehardwareinfos(int index) const;
  ::DC::Packet::Operate_OperateDuplicateHardwareInfo* add_duplicatehardwareinfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateDuplicateHardwareInfo>& duplicatehardwareinfos() const;
  // repeated .DC.Packet.Operate_OperateFileInfo fileInfos = 8;
  int fileinfos_size() const;
  private:
  int _internal_fileinfos_size() const;

  public:
  void clear_fileinfos() ;
  ::DC::Packet::Operate_OperateFileInfo* mutable_fileinfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateFileInfo>* mutable_fileinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateFileInfo>& _internal_fileinfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateFileInfo>* _internal_mutable_fileinfos();
  public:
  const ::DC::Packet::Operate_OperateFileInfo& fileinfos(int index) const;
  ::DC::Packet::Operate_OperateFileInfo* add_fileinfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateFileInfo>& fileinfos() const;
  // repeated .DC.Packet.Operate_OperateBanInfo banInfos = 9;
  int baninfos_size() const;
  private:
  int _internal_baninfos_size() const;

  public:
  void clear_baninfos() ;
  ::DC::Packet::Operate_OperateBanInfo* mutable_baninfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanInfo>* mutable_baninfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanInfo>& _internal_baninfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanInfo>* _internal_mutable_baninfos();
  public:
  const ::DC::Packet::Operate_OperateBanInfo& baninfos(int index) const;
  ::DC::Packet::Operate_OperateBanInfo* add_baninfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanInfo>& baninfos() const;
  // repeated .DC.Packet.Operate_OperateBanHardwareInfo banHardwareInfos = 10;
  int banhardwareinfos_size() const;
  private:
  int _internal_banhardwareinfos_size() const;

  public:
  void clear_banhardwareinfos() ;
  ::DC::Packet::Operate_OperateBanHardwareInfo* mutable_banhardwareinfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanHardwareInfo>* mutable_banhardwareinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanHardwareInfo>& _internal_banhardwareinfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanHardwareInfo>* _internal_mutable_banhardwareinfos();
  public:
  const ::DC::Packet::Operate_OperateBanHardwareInfo& banhardwareinfos(int index) const;
  ::DC::Packet::Operate_OperateBanHardwareInfo* add_banhardwareinfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanHardwareInfo>& banhardwareinfos() const;
  // repeated uint64 findBanList = 12;
  int findbanlist_size() const;
  private:
  int _internal_findbanlist_size() const;

  public:
  void clear_findbanlist() ;
  ::uint64_t findbanlist(int index) const;
  void set_findbanlist(int index, ::uint64_t value);
  void add_findbanlist(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& findbanlist() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_findbanlist();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_findbanlist() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_findbanlist();

  public:
  // repeated uint64 banList = 13;
  int banlist_size() const;
  private:
  int _internal_banlist_size() const;

  public:
  void clear_banlist() ;
  ::uint64_t banlist(int index) const;
  void set_banlist(int index, ::uint64_t value);
  void add_banlist(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& banlist() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_banlist();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_banlist() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_banlist();

  public:
  // .DC.Packet.Operate_Hacklog hackInfos = 11;
  bool has_hackinfos() const;
  void clear_hackinfos() ;
  const ::DC::Packet::Operate_Hacklog& hackinfos() const;
  PROTOBUF_NODISCARD ::DC::Packet::Operate_Hacklog* release_hackinfos();
  ::DC::Packet::Operate_Hacklog* mutable_hackinfos();
  void set_allocated_hackinfos(::DC::Packet::Operate_Hacklog* value);
  void unsafe_arena_set_allocated_hackinfos(::DC::Packet::Operate_Hacklog* value);
  ::DC::Packet::Operate_Hacklog* unsafe_arena_release_hackinfos();

  private:
  const ::DC::Packet::Operate_Hacklog& _internal_hackinfos() const;
  ::DC::Packet::Operate_Hacklog* _internal_mutable_hackinfos();

  public:
  // .DC.Packet.Operate_OperatePlatformInfo platformInfo = 14;
  bool has_platforminfo() const;
  void clear_platforminfo() ;
  const ::DC::Packet::Operate_OperatePlatformInfo& platforminfo() const;
  PROTOBUF_NODISCARD ::DC::Packet::Operate_OperatePlatformInfo* release_platforminfo();
  ::DC::Packet::Operate_OperatePlatformInfo* mutable_platforminfo();
  void set_allocated_platforminfo(::DC::Packet::Operate_OperatePlatformInfo* value);
  void unsafe_arena_set_allocated_platforminfo(::DC::Packet::Operate_OperatePlatformInfo* value);
  ::DC::Packet::Operate_OperatePlatformInfo* unsafe_arena_release_platforminfo();

  private:
  const ::DC::Packet::Operate_OperatePlatformInfo& _internal_platforminfo() const;
  ::DC::Packet::Operate_OperatePlatformInfo* _internal_mutable_platforminfo();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_AllHackInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 12,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_AllHackInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_AllHackInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_character_info > characterinfos_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_OperateReportBodyInfo > reportbodyinfos_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_OperateIronShieldInfo > ironshieldinfos_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_OperateBanUserInfos > banuserinfos_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_OperateLoginLogInfo > loginloginfos_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_OperateHardwareAccountInfo > hardwareaccountinfos_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_OperateDuplicateHardwareInfo > duplicatehardwareinfos_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_OperateFileInfo > fileinfos_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_OperateBanInfo > baninfos_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::Operate_OperateBanHardwareInfo > banhardwareinfos_;
    ::google::protobuf::RepeatedField<::uint64_t> findbanlist_;
    ::google::protobuf::internal::CachedSize _findbanlist_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint64_t> banlist_;
    ::google::protobuf::internal::CachedSize _banlist_cached_byte_size_;
    ::DC::Packet::Operate_Hacklog* hackinfos_;
    ::DC::Packet::Operate_OperatePlatformInfo* platforminfo_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};
// -------------------------------------------------------------------

class Operate_characterInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.Operate_characterInfo) */ {
 public:
  inline Operate_characterInfo() : Operate_characterInfo(nullptr) {}
  ~Operate_characterInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operate_characterInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operate_characterInfo(const Operate_characterInfo& from) : Operate_characterInfo(nullptr, from) {}
  inline Operate_characterInfo(Operate_characterInfo&& from) noexcept
      : Operate_characterInfo(nullptr, std::move(from)) {}
  inline Operate_characterInfo& operator=(const Operate_characterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operate_characterInfo& operator=(Operate_characterInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operate_characterInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operate_characterInfo* internal_default_instance() {
    return reinterpret_cast<const Operate_characterInfo*>(
        &_Operate_characterInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(Operate_characterInfo& a, Operate_characterInfo& b) { a.Swap(&b); }
  inline void Swap(Operate_characterInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operate_characterInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operate_characterInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operate_characterInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operate_characterInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operate_characterInfo& from) { Operate_characterInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operate_characterInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.Operate_characterInfo"; }

 protected:
  explicit Operate_characterInfo(::google::protobuf::Arena* arena);
  Operate_characterInfo(::google::protobuf::Arena* arena, const Operate_characterInfo& from);
  Operate_characterInfo(::google::protobuf::Arena* arena, Operate_characterInfo&& from) noexcept
      : Operate_characterInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInventoryItemsFieldNumber = 8,
    kStorageItemsFieldNumber = 9,
    kNicknameFieldNumber = 3,
    kCharacterClassFieldNumber = 4,
    kGenderFieldNumber = 5,
    kRegisterdateFieldNumber = 6,
    kLastlogindateFieldNumber = 7,
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
  };
  // repeated .DC.Packet.SItems inventoryItems = 8;
  int inventoryitems_size() const;
  private:
  int _internal_inventoryitems_size() const;

  public:
  void clear_inventoryitems() ;
  ::DC::Packet::SItems* mutable_inventoryitems(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItems>* mutable_inventoryitems();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItems>& _internal_inventoryitems() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItems>* _internal_mutable_inventoryitems();
  public:
  const ::DC::Packet::SItems& inventoryitems(int index) const;
  ::DC::Packet::SItems* add_inventoryitems();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItems>& inventoryitems() const;
  // repeated .DC.Packet.SItems storageItems = 9;
  int storageitems_size() const;
  private:
  int _internal_storageitems_size() const;

  public:
  void clear_storageitems() ;
  ::DC::Packet::SItems* mutable_storageitems(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItems>* mutable_storageitems();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItems>& _internal_storageitems() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItems>* _internal_mutable_storageitems();
  public:
  const ::DC::Packet::SItems& storageitems(int index) const;
  ::DC::Packet::SItems* add_storageitems();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItems>& storageitems() const;
  // string nickname = 3;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string characterClass = 4;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // string gender = 5;
  void clear_gender() ;
  const std::string& gender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_gender(Arg_&& arg, Args_... args);
  std::string* mutable_gender();
  PROTOBUF_NODISCARD std::string* release_gender();
  void set_allocated_gender(std::string* value);

  private:
  const std::string& _internal_gender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_gender(
      const std::string& value);
  std::string* _internal_mutable_gender();

  public:
  // string registerdate = 6;
  void clear_registerdate() ;
  const std::string& registerdate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_registerdate(Arg_&& arg, Args_... args);
  std::string* mutable_registerdate();
  PROTOBUF_NODISCARD std::string* release_registerdate();
  void set_allocated_registerdate(std::string* value);

  private:
  const std::string& _internal_registerdate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_registerdate(
      const std::string& value);
  std::string* _internal_mutable_registerdate();

  public:
  // string lastlogindate = 7;
  void clear_lastlogindate() ;
  const std::string& lastlogindate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lastlogindate(Arg_&& arg, Args_... args);
  std::string* mutable_lastlogindate();
  PROTOBUF_NODISCARD std::string* release_lastlogindate();
  void set_allocated_lastlogindate(std::string* value);

  private:
  const std::string& _internal_lastlogindate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lastlogindate(
      const std::string& value);
  std::string* _internal_mutable_lastlogindate();

  public:
  // uint64 accountId = 1;
  void clear_accountid() ;
  ::uint64_t accountid() const;
  void set_accountid(::uint64_t value);

  private:
  ::uint64_t _internal_accountid() const;
  void _internal_set_accountid(::uint64_t value);

  public:
  // uint64 characterId = 2;
  void clear_characterid() ;
  ::uint64_t characterid() const;
  void set_characterid(::uint64_t value);

  private:
  ::uint64_t _internal_characterid() const;
  void _internal_set_characterid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.Operate_characterInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 2,
      101, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Operate_characterInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operate_characterInfo& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SItems > inventoryitems_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SItems > storageitems_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::google::protobuf::internal::ArenaStringPtr gender_;
    ::google::protobuf::internal::ArenaStringPtr registerdate_;
    ::google::protobuf::internal::ArenaStringPtr lastlogindate_;
    ::uint64_t accountid_;
    ::uint64_t characterid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Operate_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Operate_Bad_Word_List

// repeated string badWord = 1;
inline int Operate_Bad_Word_List::_internal_badword_size() const {
  return _internal_badword().size();
}
inline int Operate_Bad_Word_List::badword_size() const {
  return _internal_badword_size();
}
inline void Operate_Bad_Word_List::clear_badword() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.badword_.Clear();
}
inline std::string* Operate_Bad_Word_List::add_badword() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_badword()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.Operate_Bad_Word_List.badWord)
  return _s;
}
inline const std::string& Operate_Bad_Word_List::badword(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Bad_Word_List.badWord)
  return _internal_badword().Get(index);
}
inline std::string* Operate_Bad_Word_List::mutable_badword(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Bad_Word_List.badWord)
  return _internal_mutable_badword()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Operate_Bad_Word_List::set_badword(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_badword()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Bad_Word_List.badWord)
}
template <typename Arg_, typename... Args_>
inline void Operate_Bad_Word_List::add_badword(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_badword(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_Bad_Word_List.badWord)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Operate_Bad_Word_List::badword() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_Bad_Word_List.badWord)
  return _internal_badword();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Operate_Bad_Word_List::mutable_badword() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_Bad_Word_List.badWord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_badword();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Operate_Bad_Word_List::_internal_badword() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.badword_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Operate_Bad_Word_List::_internal_mutable_badword() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.badword_;
}

// -------------------------------------------------------------------

// Operate_Add_Bad_Word

// string securityCode = 1;
inline void Operate_Add_Bad_Word::clear_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.ClearToEmpty();
}
inline const std::string& Operate_Add_Bad_Word::securitycode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Add_Bad_Word.securityCode)
  return _internal_securitycode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Add_Bad_Word::set_securitycode(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Add_Bad_Word.securityCode)
}
inline std::string* Operate_Add_Bad_Word::mutable_securitycode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_securitycode();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Add_Bad_Word.securityCode)
  return _s;
}
inline const std::string& Operate_Add_Bad_Word::_internal_securitycode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.securitycode_.Get();
}
inline void Operate_Add_Bad_Word::_internal_set_securitycode(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(value, GetArena());
}
inline std::string* Operate_Add_Bad_Word::_internal_mutable_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.securitycode_.Mutable( GetArena());
}
inline std::string* Operate_Add_Bad_Word::release_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Add_Bad_Word.securityCode)
  return _impl_.securitycode_.Release();
}
inline void Operate_Add_Bad_Word::set_allocated_securitycode(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.securitycode_.IsDefault()) {
          _impl_.securitycode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Add_Bad_Word.securityCode)
}

// string badWord = 2;
inline void Operate_Add_Bad_Word::clear_badword() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.badword_.ClearToEmpty();
}
inline const std::string& Operate_Add_Bad_Word::badword() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Add_Bad_Word.badWord)
  return _internal_badword();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Add_Bad_Word::set_badword(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.badword_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Add_Bad_Word.badWord)
}
inline std::string* Operate_Add_Bad_Word::mutable_badword() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_badword();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Add_Bad_Word.badWord)
  return _s;
}
inline const std::string& Operate_Add_Bad_Word::_internal_badword() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.badword_.Get();
}
inline void Operate_Add_Bad_Word::_internal_set_badword(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.badword_.Set(value, GetArena());
}
inline std::string* Operate_Add_Bad_Word::_internal_mutable_badword() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.badword_.Mutable( GetArena());
}
inline std::string* Operate_Add_Bad_Word::release_badword() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Add_Bad_Word.badWord)
  return _impl_.badword_.Release();
}
inline void Operate_Add_Bad_Word::set_allocated_badword(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.badword_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.badword_.IsDefault()) {
          _impl_.badword_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Add_Bad_Word.badWord)
}

// -------------------------------------------------------------------

// Operate_announceMessageInfo

// int32 nationType = 1;
inline void Operate_announceMessageInfo::clear_nationtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nationtype_ = 0;
}
inline ::int32_t Operate_announceMessageInfo::nationtype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_announceMessageInfo.nationType)
  return _internal_nationtype();
}
inline void Operate_announceMessageInfo::set_nationtype(::int32_t value) {
  _internal_set_nationtype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_announceMessageInfo.nationType)
}
inline ::int32_t Operate_announceMessageInfo::_internal_nationtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nationtype_;
}
inline void Operate_announceMessageInfo::_internal_set_nationtype(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nationtype_ = value;
}

// string announceMessage = 2;
inline void Operate_announceMessageInfo::clear_announcemessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.announcemessage_.ClearToEmpty();
}
inline const std::string& Operate_announceMessageInfo::announcemessage() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_announceMessageInfo.announceMessage)
  return _internal_announcemessage();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_announceMessageInfo::set_announcemessage(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.announcemessage_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_announceMessageInfo.announceMessage)
}
inline std::string* Operate_announceMessageInfo::mutable_announcemessage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_announcemessage();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_announceMessageInfo.announceMessage)
  return _s;
}
inline const std::string& Operate_announceMessageInfo::_internal_announcemessage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.announcemessage_.Get();
}
inline void Operate_announceMessageInfo::_internal_set_announcemessage(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.announcemessage_.Set(value, GetArena());
}
inline std::string* Operate_announceMessageInfo::_internal_mutable_announcemessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.announcemessage_.Mutable( GetArena());
}
inline std::string* Operate_announceMessageInfo::release_announcemessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_announceMessageInfo.announceMessage)
  return _impl_.announcemessage_.Release();
}
inline void Operate_announceMessageInfo::set_allocated_announcemessage(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.announcemessage_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.announcemessage_.IsDefault()) {
          _impl_.announcemessage_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_announceMessageInfo.announceMessage)
}

// -------------------------------------------------------------------

// Operate_Add_Announce_Msg

// string securityCode = 1;
inline void Operate_Add_Announce_Msg::clear_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.ClearToEmpty();
}
inline const std::string& Operate_Add_Announce_Msg::securitycode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Add_Announce_Msg.securityCode)
  return _internal_securitycode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Add_Announce_Msg::set_securitycode(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Add_Announce_Msg.securityCode)
}
inline std::string* Operate_Add_Announce_Msg::mutable_securitycode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_securitycode();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Add_Announce_Msg.securityCode)
  return _s;
}
inline const std::string& Operate_Add_Announce_Msg::_internal_securitycode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.securitycode_.Get();
}
inline void Operate_Add_Announce_Msg::_internal_set_securitycode(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(value, GetArena());
}
inline std::string* Operate_Add_Announce_Msg::_internal_mutable_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.securitycode_.Mutable( GetArena());
}
inline std::string* Operate_Add_Announce_Msg::release_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Add_Announce_Msg.securityCode)
  return _impl_.securitycode_.Release();
}
inline void Operate_Add_Announce_Msg::set_allocated_securitycode(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.securitycode_.IsDefault()) {
          _impl_.securitycode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Add_Announce_Msg.securityCode)
}

// repeated .DC.Packet.Operate_announceMessageInfo announceList = 2;
inline int Operate_Add_Announce_Msg::_internal_announcelist_size() const {
  return _internal_announcelist().size();
}
inline int Operate_Add_Announce_Msg::announcelist_size() const {
  return _internal_announcelist_size();
}
inline void Operate_Add_Announce_Msg::clear_announcelist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.announcelist_.Clear();
}
inline ::DC::Packet::Operate_announceMessageInfo* Operate_Add_Announce_Msg::mutable_announcelist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Add_Announce_Msg.announceList)
  return _internal_mutable_announcelist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_announceMessageInfo>* Operate_Add_Announce_Msg::mutable_announcelist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_Add_Announce_Msg.announceList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_announcelist();
}
inline const ::DC::Packet::Operate_announceMessageInfo& Operate_Add_Announce_Msg::announcelist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Add_Announce_Msg.announceList)
  return _internal_announcelist().Get(index);
}
inline ::DC::Packet::Operate_announceMessageInfo* Operate_Add_Announce_Msg::add_announcelist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_announceMessageInfo* _add = _internal_mutable_announcelist()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_Add_Announce_Msg.announceList)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_announceMessageInfo>& Operate_Add_Announce_Msg::announcelist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_Add_Announce_Msg.announceList)
  return _internal_announcelist();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_announceMessageInfo>&
Operate_Add_Announce_Msg::_internal_announcelist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.announcelist_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_announceMessageInfo>*
Operate_Add_Announce_Msg::_internal_mutable_announcelist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.announcelist_;
}

// -------------------------------------------------------------------

// Operate_dll_info

// string securityCode = 1;
inline void Operate_dll_info::clear_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.ClearToEmpty();
}
inline const std::string& Operate_dll_info::securitycode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_dll_info.securityCode)
  return _internal_securitycode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_dll_info::set_securitycode(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_dll_info.securityCode)
}
inline std::string* Operate_dll_info::mutable_securitycode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_securitycode();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_dll_info.securityCode)
  return _s;
}
inline const std::string& Operate_dll_info::_internal_securitycode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.securitycode_.Get();
}
inline void Operate_dll_info::_internal_set_securitycode(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(value, GetArena());
}
inline std::string* Operate_dll_info::_internal_mutable_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.securitycode_.Mutable( GetArena());
}
inline std::string* Operate_dll_info::release_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_dll_info.securityCode)
  return _impl_.securitycode_.Release();
}
inline void Operate_dll_info::set_allocated_securitycode(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.securitycode_.IsDefault()) {
          _impl_.securitycode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_dll_info.securityCode)
}

// string dllPath = 2;
inline void Operate_dll_info::clear_dllpath() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dllpath_.ClearToEmpty();
}
inline const std::string& Operate_dll_info::dllpath() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_dll_info.dllPath)
  return _internal_dllpath();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_dll_info::set_dllpath(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dllpath_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_dll_info.dllPath)
}
inline std::string* Operate_dll_info::mutable_dllpath() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dllpath();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_dll_info.dllPath)
  return _s;
}
inline const std::string& Operate_dll_info::_internal_dllpath() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dllpath_.Get();
}
inline void Operate_dll_info::_internal_set_dllpath(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dllpath_.Set(value, GetArena());
}
inline std::string* Operate_dll_info::_internal_mutable_dllpath() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dllpath_.Mutable( GetArena());
}
inline std::string* Operate_dll_info::release_dllpath() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_dll_info.dllPath)
  return _impl_.dllpath_.Release();
}
inline void Operate_dll_info::set_allocated_dllpath(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dllpath_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dllpath_.IsDefault()) {
          _impl_.dllpath_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_dll_info.dllPath)
}

// -------------------------------------------------------------------

// Operate_dll_list

// repeated string dlls = 1;
inline int Operate_dll_list::_internal_dlls_size() const {
  return _internal_dlls().size();
}
inline int Operate_dll_list::dlls_size() const {
  return _internal_dlls_size();
}
inline void Operate_dll_list::clear_dlls() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dlls_.Clear();
}
inline std::string* Operate_dll_list::add_dlls() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_dlls()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.Operate_dll_list.dlls)
  return _s;
}
inline const std::string& Operate_dll_list::dlls(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_dll_list.dlls)
  return _internal_dlls().Get(index);
}
inline std::string* Operate_dll_list::mutable_dlls(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_dll_list.dlls)
  return _internal_mutable_dlls()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Operate_dll_list::set_dlls(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_dlls()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_dll_list.dlls)
}
template <typename Arg_, typename... Args_>
inline void Operate_dll_list::add_dlls(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_dlls(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_dll_list.dlls)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Operate_dll_list::dlls() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_dll_list.dlls)
  return _internal_dlls();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Operate_dll_list::mutable_dlls() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_dll_list.dlls)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dlls();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Operate_dll_list::_internal_dlls() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dlls_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Operate_dll_list::_internal_mutable_dlls() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dlls_;
}

// -------------------------------------------------------------------

// Operate_userInfo

// uint64 accountId = 1;
inline void Operate_userInfo::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_userInfo::accountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_userInfo.accountId)
  return _internal_accountid();
}
inline void Operate_userInfo::set_accountid(::uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_userInfo.accountId)
}
inline ::uint64_t Operate_userInfo::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void Operate_userInfo::_internal_set_accountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// repeated string nicknameList = 2;
inline int Operate_userInfo::_internal_nicknamelist_size() const {
  return _internal_nicknamelist().size();
}
inline int Operate_userInfo::nicknamelist_size() const {
  return _internal_nicknamelist_size();
}
inline void Operate_userInfo::clear_nicknamelist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nicknamelist_.Clear();
}
inline std::string* Operate_userInfo::add_nicknamelist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_nicknamelist()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.Operate_userInfo.nicknameList)
  return _s;
}
inline const std::string& Operate_userInfo::nicknamelist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_userInfo.nicknameList)
  return _internal_nicknamelist().Get(index);
}
inline std::string* Operate_userInfo::mutable_nicknamelist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_userInfo.nicknameList)
  return _internal_mutable_nicknamelist()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Operate_userInfo::set_nicknamelist(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_nicknamelist()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_userInfo.nicknameList)
}
template <typename Arg_, typename... Args_>
inline void Operate_userInfo::add_nicknamelist(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_nicknamelist(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_userInfo.nicknameList)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Operate_userInfo::nicknamelist() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_userInfo.nicknameList)
  return _internal_nicknamelist();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Operate_userInfo::mutable_nicknamelist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_userInfo.nicknameList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nicknamelist();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Operate_userInfo::_internal_nicknamelist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nicknamelist_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Operate_userInfo::_internal_mutable_nicknamelist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nicknamelist_;
}

// -------------------------------------------------------------------

// HackLogInfo

// string logIdx = 1;
inline void HackLogInfo::clear_logidx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logidx_.ClearToEmpty();
}
inline const std::string& HackLogInfo::logidx() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.HackLogInfo.logIdx)
  return _internal_logidx();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HackLogInfo::set_logidx(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logidx_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.HackLogInfo.logIdx)
}
inline std::string* HackLogInfo::mutable_logidx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_logidx();
  // @@protoc_insertion_point(field_mutable:DC.Packet.HackLogInfo.logIdx)
  return _s;
}
inline const std::string& HackLogInfo::_internal_logidx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.logidx_.Get();
}
inline void HackLogInfo::_internal_set_logidx(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logidx_.Set(value, GetArena());
}
inline std::string* HackLogInfo::_internal_mutable_logidx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.logidx_.Mutable( GetArena());
}
inline std::string* HackLogInfo::release_logidx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.HackLogInfo.logIdx)
  return _impl_.logidx_.Release();
}
inline void HackLogInfo::set_allocated_logidx(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logidx_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.logidx_.IsDefault()) {
          _impl_.logidx_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.HackLogInfo.logIdx)
}

// string accountId = 2;
inline void HackLogInfo::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& HackLogInfo::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.HackLogInfo.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HackLogInfo::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.HackLogInfo.accountId)
}
inline std::string* HackLogInfo::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.HackLogInfo.accountId)
  return _s;
}
inline const std::string& HackLogInfo::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void HackLogInfo::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* HackLogInfo::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* HackLogInfo::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.HackLogInfo.accountId)
  return _impl_.accountid_.Release();
}
inline void HackLogInfo::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.HackLogInfo.accountId)
}

// string characterId = 3;
inline void HackLogInfo::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& HackLogInfo::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.HackLogInfo.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HackLogInfo::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.HackLogInfo.characterId)
}
inline std::string* HackLogInfo::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.HackLogInfo.characterId)
  return _s;
}
inline const std::string& HackLogInfo::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void HackLogInfo::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* HackLogInfo::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* HackLogInfo::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.HackLogInfo.characterId)
  return _impl_.characterid_.Release();
}
inline void HackLogInfo::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.HackLogInfo.characterId)
}

// string nickname = 4;
inline void HackLogInfo::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& HackLogInfo::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.HackLogInfo.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HackLogInfo::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.HackLogInfo.nickname)
}
inline std::string* HackLogInfo::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.HackLogInfo.nickname)
  return _s;
}
inline const std::string& HackLogInfo::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nickname_.Get();
}
inline void HackLogInfo::_internal_set_nickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* HackLogInfo::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* HackLogInfo::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.HackLogInfo.nickname)
  return _impl_.nickname_.Release();
}
inline void HackLogInfo::set_allocated_nickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.HackLogInfo.nickname)
}

// string reason = 5;
inline void HackLogInfo::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& HackLogInfo::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.HackLogInfo.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HackLogInfo::set_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.HackLogInfo.reason)
}
inline std::string* HackLogInfo::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:DC.Packet.HackLogInfo.reason)
  return _s;
}
inline const std::string& HackLogInfo::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void HackLogInfo::_internal_set_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* HackLogInfo::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* HackLogInfo::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.HackLogInfo.reason)
  return _impl_.reason_.Release();
}
inline void HackLogInfo::set_allocated_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reason_.IsDefault()) {
          _impl_.reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.HackLogInfo.reason)
}

// string registerTime = 6;
inline void HackLogInfo::clear_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.ClearToEmpty();
}
inline const std::string& HackLogInfo::registertime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.HackLogInfo.registerTime)
  return _internal_registertime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HackLogInfo::set_registertime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.HackLogInfo.registerTime)
}
inline std::string* HackLogInfo::mutable_registertime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_registertime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.HackLogInfo.registerTime)
  return _s;
}
inline const std::string& HackLogInfo::_internal_registertime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.registertime_.Get();
}
inline void HackLogInfo::_internal_set_registertime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.Set(value, GetArena());
}
inline std::string* HackLogInfo::_internal_mutable_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.registertime_.Mutable( GetArena());
}
inline std::string* HackLogInfo::release_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.HackLogInfo.registerTime)
  return _impl_.registertime_.Release();
}
inline void HackLogInfo::set_allocated_registertime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.registertime_.IsDefault()) {
          _impl_.registertime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.HackLogInfo.registerTime)
}

// -------------------------------------------------------------------

// Operate_Hacklog

// repeated .DC.Packet.HackLogInfo infos = 1;
inline int Operate_Hacklog::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int Operate_Hacklog::infos_size() const {
  return _internal_infos_size();
}
inline void Operate_Hacklog::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::DC::Packet::HackLogInfo* Operate_Hacklog::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Hacklog.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::HackLogInfo>* Operate_Hacklog::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_Hacklog.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::DC::Packet::HackLogInfo& Operate_Hacklog::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Hacklog.infos)
  return _internal_infos().Get(index);
}
inline ::DC::Packet::HackLogInfo* Operate_Hacklog::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::HackLogInfo* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_Hacklog.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::HackLogInfo>& Operate_Hacklog::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_Hacklog.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::HackLogInfo>&
Operate_Hacklog::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::HackLogInfo>*
Operate_Hacklog::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

// -------------------------------------------------------------------

// Operate_Ban_Report_User

// string securityCode = 1;
inline void Operate_Ban_Report_User::clear_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.ClearToEmpty();
}
inline const std::string& Operate_Ban_Report_User::securitycode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_Report_User.securityCode)
  return _internal_securitycode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Ban_Report_User::set_securitycode(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_Report_User.securityCode)
}
inline std::string* Operate_Ban_Report_User::mutable_securitycode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_securitycode();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Ban_Report_User.securityCode)
  return _s;
}
inline const std::string& Operate_Ban_Report_User::_internal_securitycode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.securitycode_.Get();
}
inline void Operate_Ban_Report_User::_internal_set_securitycode(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(value, GetArena());
}
inline std::string* Operate_Ban_Report_User::_internal_mutable_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.securitycode_.Mutable( GetArena());
}
inline std::string* Operate_Ban_Report_User::release_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Ban_Report_User.securityCode)
  return _impl_.securitycode_.Release();
}
inline void Operate_Ban_Report_User::set_allocated_securitycode(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.securitycode_.IsDefault()) {
          _impl_.securitycode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Ban_Report_User.securityCode)
}

// string reportId = 2;
inline void Operate_Ban_Report_User::clear_reportid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportid_.ClearToEmpty();
}
inline const std::string& Operate_Ban_Report_User::reportid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_Report_User.reportId)
  return _internal_reportid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Ban_Report_User::set_reportid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_Report_User.reportId)
}
inline std::string* Operate_Ban_Report_User::mutable_reportid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reportid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Ban_Report_User.reportId)
  return _s;
}
inline const std::string& Operate_Ban_Report_User::_internal_reportid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reportid_.Get();
}
inline void Operate_Ban_Report_User::_internal_set_reportid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportid_.Set(value, GetArena());
}
inline std::string* Operate_Ban_Report_User::_internal_mutable_reportid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reportid_.Mutable( GetArena());
}
inline std::string* Operate_Ban_Report_User::release_reportid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Ban_Report_User.reportId)
  return _impl_.reportid_.Release();
}
inline void Operate_Ban_Report_User::set_allocated_reportid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reportid_.IsDefault()) {
          _impl_.reportid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Ban_Report_User.reportId)
}

// string nickName = 3;
inline void Operate_Ban_Report_User::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& Operate_Ban_Report_User::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_Report_User.nickName)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Ban_Report_User::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_Report_User.nickName)
}
inline std::string* Operate_Ban_Report_User::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Ban_Report_User.nickName)
  return _s;
}
inline const std::string& Operate_Ban_Report_User::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nickname_.Get();
}
inline void Operate_Ban_Report_User::_internal_set_nickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* Operate_Ban_Report_User::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* Operate_Ban_Report_User::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Ban_Report_User.nickName)
  return _impl_.nickname_.Release();
}
inline void Operate_Ban_Report_User::set_allocated_nickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Ban_Report_User.nickName)
}

// uint32 banTime_min = 4;
inline void Operate_Ban_Report_User::clear_bantime_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantime_min_ = 0u;
}
inline ::uint32_t Operate_Ban_Report_User::bantime_min() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_Report_User.banTime_min)
  return _internal_bantime_min();
}
inline void Operate_Ban_Report_User::set_bantime_min(::uint32_t value) {
  _internal_set_bantime_min(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_Report_User.banTime_min)
}
inline ::uint32_t Operate_Ban_Report_User::_internal_bantime_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantime_min_;
}
inline void Operate_Ban_Report_User::_internal_set_bantime_min(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantime_min_ = value;
}

// string banReason = 5;
inline void Operate_Ban_Report_User::clear_banreason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.banreason_.ClearToEmpty();
}
inline const std::string& Operate_Ban_Report_User::banreason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_Report_User.banReason)
  return _internal_banreason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Ban_Report_User::set_banreason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.banreason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_Report_User.banReason)
}
inline std::string* Operate_Ban_Report_User::mutable_banreason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_banreason();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Ban_Report_User.banReason)
  return _s;
}
inline const std::string& Operate_Ban_Report_User::_internal_banreason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.banreason_.Get();
}
inline void Operate_Ban_Report_User::_internal_set_banreason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.banreason_.Set(value, GetArena());
}
inline std::string* Operate_Ban_Report_User::_internal_mutable_banreason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.banreason_.Mutable( GetArena());
}
inline std::string* Operate_Ban_Report_User::release_banreason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Ban_Report_User.banReason)
  return _impl_.banreason_.Release();
}
inline void Operate_Ban_Report_User::set_allocated_banreason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.banreason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.banreason_.IsDefault()) {
          _impl_.banreason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Ban_Report_User.banReason)
}

// -------------------------------------------------------------------

// Operate_hack_report_list

// string securityCode = 1;
inline void Operate_hack_report_list::clear_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.ClearToEmpty();
}
inline const std::string& Operate_hack_report_list::securitycode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_hack_report_list.securityCode)
  return _internal_securitycode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_hack_report_list::set_securitycode(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_hack_report_list.securityCode)
}
inline std::string* Operate_hack_report_list::mutable_securitycode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_securitycode();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_hack_report_list.securityCode)
  return _s;
}
inline const std::string& Operate_hack_report_list::_internal_securitycode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.securitycode_.Get();
}
inline void Operate_hack_report_list::_internal_set_securitycode(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(value, GetArena());
}
inline std::string* Operate_hack_report_list::_internal_mutable_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.securitycode_.Mutable( GetArena());
}
inline std::string* Operate_hack_report_list::release_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_hack_report_list.securityCode)
  return _impl_.securitycode_.Release();
}
inline void Operate_hack_report_list::set_allocated_securitycode(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.securitycode_.IsDefault()) {
          _impl_.securitycode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_hack_report_list.securityCode)
}

// -------------------------------------------------------------------

// Operate_iron_shield_list

// string securityCode = 1;
inline void Operate_iron_shield_list::clear_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.ClearToEmpty();
}
inline const std::string& Operate_iron_shield_list::securitycode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_iron_shield_list.securityCode)
  return _internal_securitycode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_iron_shield_list::set_securitycode(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_iron_shield_list.securityCode)
}
inline std::string* Operate_iron_shield_list::mutable_securitycode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_securitycode();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_iron_shield_list.securityCode)
  return _s;
}
inline const std::string& Operate_iron_shield_list::_internal_securitycode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.securitycode_.Get();
}
inline void Operate_iron_shield_list::_internal_set_securitycode(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(value, GetArena());
}
inline std::string* Operate_iron_shield_list::_internal_mutable_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.securitycode_.Mutable( GetArena());
}
inline std::string* Operate_iron_shield_list::release_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_iron_shield_list.securityCode)
  return _impl_.securitycode_.Release();
}
inline void Operate_iron_shield_list::set_allocated_securitycode(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.securitycode_.IsDefault()) {
          _impl_.securitycode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_iron_shield_list.securityCode)
}

// -------------------------------------------------------------------

// Operate_add_hardware_ban

// string securityCode = 1;
inline void Operate_add_hardware_ban::clear_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.ClearToEmpty();
}
inline const std::string& Operate_add_hardware_ban::securitycode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_add_hardware_ban.securityCode)
  return _internal_securitycode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_add_hardware_ban::set_securitycode(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_add_hardware_ban.securityCode)
}
inline std::string* Operate_add_hardware_ban::mutable_securitycode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_securitycode();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_add_hardware_ban.securityCode)
  return _s;
}
inline const std::string& Operate_add_hardware_ban::_internal_securitycode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.securitycode_.Get();
}
inline void Operate_add_hardware_ban::_internal_set_securitycode(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(value, GetArena());
}
inline std::string* Operate_add_hardware_ban::_internal_mutable_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.securitycode_.Mutable( GetArena());
}
inline std::string* Operate_add_hardware_ban::release_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_add_hardware_ban.securityCode)
  return _impl_.securitycode_.Release();
}
inline void Operate_add_hardware_ban::set_allocated_securitycode(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.securitycode_.IsDefault()) {
          _impl_.securitycode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_add_hardware_ban.securityCode)
}

// string hardwareId = 2;
inline void Operate_add_hardware_ban::clear_hardwareid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.ClearToEmpty();
}
inline const std::string& Operate_add_hardware_ban::hardwareid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_add_hardware_ban.hardwareId)
  return _internal_hardwareid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_add_hardware_ban::set_hardwareid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_add_hardware_ban.hardwareId)
}
inline std::string* Operate_add_hardware_ban::mutable_hardwareid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hardwareid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_add_hardware_ban.hardwareId)
  return _s;
}
inline const std::string& Operate_add_hardware_ban::_internal_hardwareid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hardwareid_.Get();
}
inline void Operate_add_hardware_ban::_internal_set_hardwareid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.Set(value, GetArena());
}
inline std::string* Operate_add_hardware_ban::_internal_mutable_hardwareid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hardwareid_.Mutable( GetArena());
}
inline std::string* Operate_add_hardware_ban::release_hardwareid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_add_hardware_ban.hardwareId)
  return _impl_.hardwareid_.Release();
}
inline void Operate_add_hardware_ban::set_allocated_hardwareid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hardwareid_.IsDefault()) {
          _impl_.hardwareid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_add_hardware_ban.hardwareId)
}

// -------------------------------------------------------------------

// Operate_ban_history

// string securityCode = 1;
inline void Operate_ban_history::clear_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.ClearToEmpty();
}
inline const std::string& Operate_ban_history::securitycode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_ban_history.securityCode)
  return _internal_securitycode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_ban_history::set_securitycode(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_ban_history.securityCode)
}
inline std::string* Operate_ban_history::mutable_securitycode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_securitycode();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_ban_history.securityCode)
  return _s;
}
inline const std::string& Operate_ban_history::_internal_securitycode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.securitycode_.Get();
}
inline void Operate_ban_history::_internal_set_securitycode(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(value, GetArena());
}
inline std::string* Operate_ban_history::_internal_mutable_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.securitycode_.Mutable( GetArena());
}
inline std::string* Operate_ban_history::release_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_ban_history.securityCode)
  return _impl_.securitycode_.Release();
}
inline void Operate_ban_history::set_allocated_securitycode(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.securitycode_.IsDefault()) {
          _impl_.securitycode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_ban_history.securityCode)
}

// string nickname = 2;
inline void Operate_ban_history::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& Operate_ban_history::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_ban_history.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_ban_history::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_ban_history.nickname)
}
inline std::string* Operate_ban_history::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_ban_history.nickname)
  return _s;
}
inline const std::string& Operate_ban_history::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nickname_.Get();
}
inline void Operate_ban_history::_internal_set_nickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* Operate_ban_history::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* Operate_ban_history::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_ban_history.nickname)
  return _impl_.nickname_.Release();
}
inline void Operate_ban_history::set_allocated_nickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_ban_history.nickname)
}

// -------------------------------------------------------------------

// ban_info

// string accountId = 1;
inline void ban_info::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& ban_info::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.ban_info.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ban_info::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.ban_info.accountId)
}
inline std::string* ban_info::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.ban_info.accountId)
  return _s;
}
inline const std::string& ban_info::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void ban_info::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* ban_info::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* ban_info::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.ban_info.accountId)
  return _impl_.accountid_.Release();
}
inline void ban_info::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.ban_info.accountId)
}

// string banType = 2;
inline void ban_info::clear_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_.ClearToEmpty();
}
inline const std::string& ban_info::bantype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.ban_info.banType)
  return _internal_bantype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ban_info::set_bantype(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.ban_info.banType)
}
inline std::string* ban_info::mutable_bantype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bantype();
  // @@protoc_insertion_point(field_mutable:DC.Packet.ban_info.banType)
  return _s;
}
inline const std::string& ban_info::_internal_bantype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantype_.Get();
}
inline void ban_info::_internal_set_bantype(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_.Set(value, GetArena());
}
inline std::string* ban_info::_internal_mutable_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bantype_.Mutable( GetArena());
}
inline std::string* ban_info::release_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.ban_info.banType)
  return _impl_.bantype_.Release();
}
inline void ban_info::set_allocated_bantype(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bantype_.IsDefault()) {
          _impl_.bantype_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.ban_info.banType)
}

// string comment = 3;
inline void ban_info::clear_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.ClearToEmpty();
}
inline const std::string& ban_info::comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.ban_info.comment)
  return _internal_comment();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ban_info::set_comment(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.ban_info.comment)
}
inline std::string* ban_info::mutable_comment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_comment();
  // @@protoc_insertion_point(field_mutable:DC.Packet.ban_info.comment)
  return _s;
}
inline const std::string& ban_info::_internal_comment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comment_.Get();
}
inline void ban_info::_internal_set_comment(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.Set(value, GetArena());
}
inline std::string* ban_info::_internal_mutable_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.comment_.Mutable( GetArena());
}
inline std::string* ban_info::release_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.ban_info.comment)
  return _impl_.comment_.Release();
}
inline void ban_info::set_allocated_comment(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.comment_.IsDefault()) {
          _impl_.comment_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.ban_info.comment)
}

// string registerTime = 4;
inline void ban_info::clear_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.ClearToEmpty();
}
inline const std::string& ban_info::registertime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.ban_info.registerTime)
  return _internal_registertime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ban_info::set_registertime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.ban_info.registerTime)
}
inline std::string* ban_info::mutable_registertime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_registertime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.ban_info.registerTime)
  return _s;
}
inline const std::string& ban_info::_internal_registertime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.registertime_.Get();
}
inline void ban_info::_internal_set_registertime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.Set(value, GetArena());
}
inline std::string* ban_info::_internal_mutable_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.registertime_.Mutable( GetArena());
}
inline std::string* ban_info::release_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.ban_info.registerTime)
  return _impl_.registertime_.Release();
}
inline void ban_info::set_allocated_registertime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.registertime_.IsDefault()) {
          _impl_.registertime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.ban_info.registerTime)
}

// -------------------------------------------------------------------

// Operate_ban_info_list

// repeated .DC.Packet.ban_info infos = 1;
inline int Operate_ban_info_list::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int Operate_ban_info_list::infos_size() const {
  return _internal_infos_size();
}
inline void Operate_ban_info_list::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::DC::Packet::ban_info* Operate_ban_info_list::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_ban_info_list.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::ban_info>* Operate_ban_info_list::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_ban_info_list.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::DC::Packet::ban_info& Operate_ban_info_list::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_ban_info_list.infos)
  return _internal_infos().Get(index);
}
inline ::DC::Packet::ban_info* Operate_ban_info_list::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::ban_info* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_ban_info_list.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::ban_info>& Operate_ban_info_list::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_ban_info_list.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::ban_info>&
Operate_ban_info_list::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::ban_info>*
Operate_ban_info_list::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

// -------------------------------------------------------------------

// Operate_ban_Hardware_list

// string securityCode = 1;
inline void Operate_ban_Hardware_list::clear_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.ClearToEmpty();
}
inline const std::string& Operate_ban_Hardware_list::securitycode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_ban_Hardware_list.securityCode)
  return _internal_securitycode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_ban_Hardware_list::set_securitycode(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_ban_Hardware_list.securityCode)
}
inline std::string* Operate_ban_Hardware_list::mutable_securitycode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_securitycode();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_ban_Hardware_list.securityCode)
  return _s;
}
inline const std::string& Operate_ban_Hardware_list::_internal_securitycode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.securitycode_.Get();
}
inline void Operate_ban_Hardware_list::_internal_set_securitycode(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(value, GetArena());
}
inline std::string* Operate_ban_Hardware_list::_internal_mutable_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.securitycode_.Mutable( GetArena());
}
inline std::string* Operate_ban_Hardware_list::release_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_ban_Hardware_list.securityCode)
  return _impl_.securitycode_.Release();
}
inline void Operate_ban_Hardware_list::set_allocated_securitycode(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.securitycode_.IsDefault()) {
          _impl_.securitycode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_ban_Hardware_list.securityCode)
}

// -------------------------------------------------------------------

// Operate_nickname_change

// string securityCode = 1;
inline void Operate_nickname_change::clear_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.ClearToEmpty();
}
inline const std::string& Operate_nickname_change::securitycode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_nickname_change.securityCode)
  return _internal_securitycode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_nickname_change::set_securitycode(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_nickname_change.securityCode)
}
inline std::string* Operate_nickname_change::mutable_securitycode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_securitycode();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_nickname_change.securityCode)
  return _s;
}
inline const std::string& Operate_nickname_change::_internal_securitycode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.securitycode_.Get();
}
inline void Operate_nickname_change::_internal_set_securitycode(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(value, GetArena());
}
inline std::string* Operate_nickname_change::_internal_mutable_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.securitycode_.Mutable( GetArena());
}
inline std::string* Operate_nickname_change::release_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_nickname_change.securityCode)
  return _impl_.securitycode_.Release();
}
inline void Operate_nickname_change::set_allocated_securitycode(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.securitycode_.IsDefault()) {
          _impl_.securitycode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_nickname_change.securityCode)
}

// string currentNickname = 2;
inline void Operate_nickname_change::clear_currentnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentnickname_.ClearToEmpty();
}
inline const std::string& Operate_nickname_change::currentnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_nickname_change.currentNickname)
  return _internal_currentnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_nickname_change::set_currentnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_nickname_change.currentNickname)
}
inline std::string* Operate_nickname_change::mutable_currentnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_currentnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_nickname_change.currentNickname)
  return _s;
}
inline const std::string& Operate_nickname_change::_internal_currentnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currentnickname_.Get();
}
inline void Operate_nickname_change::_internal_set_currentnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentnickname_.Set(value, GetArena());
}
inline std::string* Operate_nickname_change::_internal_mutable_currentnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.currentnickname_.Mutable( GetArena());
}
inline std::string* Operate_nickname_change::release_currentnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_nickname_change.currentNickname)
  return _impl_.currentnickname_.Release();
}
inline void Operate_nickname_change::set_allocated_currentnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.currentnickname_.IsDefault()) {
          _impl_.currentnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_nickname_change.currentNickname)
}

// string changeNickname = 3;
inline void Operate_nickname_change::clear_changenickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.changenickname_.ClearToEmpty();
}
inline const std::string& Operate_nickname_change::changenickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_nickname_change.changeNickname)
  return _internal_changenickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_nickname_change::set_changenickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.changenickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_nickname_change.changeNickname)
}
inline std::string* Operate_nickname_change::mutable_changenickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_changenickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_nickname_change.changeNickname)
  return _s;
}
inline const std::string& Operate_nickname_change::_internal_changenickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.changenickname_.Get();
}
inline void Operate_nickname_change::_internal_set_changenickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.changenickname_.Set(value, GetArena());
}
inline std::string* Operate_nickname_change::_internal_mutable_changenickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.changenickname_.Mutable( GetArena());
}
inline std::string* Operate_nickname_change::release_changenickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_nickname_change.changeNickname)
  return _impl_.changenickname_.Release();
}
inline void Operate_nickname_change::set_allocated_changenickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.changenickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.changenickname_.IsDefault()) {
          _impl_.changenickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_nickname_change.changeNickname)
}

// -------------------------------------------------------------------

// Operate_character_info

// uint64 accountId = 1;
inline void Operate_character_info::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_character_info::accountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_character_info.accountId)
  return _internal_accountid();
}
inline void Operate_character_info::set_accountid(::uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_character_info.accountId)
}
inline ::uint64_t Operate_character_info::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void Operate_character_info::_internal_set_accountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// uint64 characterId = 2;
inline void Operate_character_info::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_character_info::characterid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_character_info.characterId)
  return _internal_characterid();
}
inline void Operate_character_info::set_characterid(::uint64_t value) {
  _internal_set_characterid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_character_info.characterId)
}
inline ::uint64_t Operate_character_info::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_;
}
inline void Operate_character_info::_internal_set_characterid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_ = value;
}

// string nickname = 3;
inline void Operate_character_info::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& Operate_character_info::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_character_info.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_character_info::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_character_info.nickname)
}
inline std::string* Operate_character_info::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_character_info.nickname)
  return _s;
}
inline const std::string& Operate_character_info::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nickname_.Get();
}
inline void Operate_character_info::_internal_set_nickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* Operate_character_info::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* Operate_character_info::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_character_info.nickname)
  return _impl_.nickname_.Release();
}
inline void Operate_character_info::set_allocated_nickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_character_info.nickname)
}

// string characterClass = 4;
inline void Operate_character_info::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& Operate_character_info::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_character_info.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_character_info::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_character_info.characterClass)
}
inline std::string* Operate_character_info::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_character_info.characterClass)
  return _s;
}
inline const std::string& Operate_character_info::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void Operate_character_info::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* Operate_character_info::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* Operate_character_info::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_character_info.characterClass)
  return _impl_.characterclass_.Release();
}
inline void Operate_character_info::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_character_info.characterClass)
}

// string gebder = 5;
inline void Operate_character_info::clear_gebder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gebder_.ClearToEmpty();
}
inline const std::string& Operate_character_info::gebder() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_character_info.gebder)
  return _internal_gebder();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_character_info::set_gebder(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gebder_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_character_info.gebder)
}
inline std::string* Operate_character_info::mutable_gebder() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_gebder();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_character_info.gebder)
  return _s;
}
inline const std::string& Operate_character_info::_internal_gebder() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gebder_.Get();
}
inline void Operate_character_info::_internal_set_gebder(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gebder_.Set(value, GetArena());
}
inline std::string* Operate_character_info::_internal_mutable_gebder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.gebder_.Mutable( GetArena());
}
inline std::string* Operate_character_info::release_gebder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_character_info.gebder)
  return _impl_.gebder_.Release();
}
inline void Operate_character_info::set_allocated_gebder(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gebder_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.gebder_.IsDefault()) {
          _impl_.gebder_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_character_info.gebder)
}

// string registerDate = 6;
inline void Operate_character_info::clear_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.ClearToEmpty();
}
inline const std::string& Operate_character_info::registerdate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_character_info.registerDate)
  return _internal_registerdate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_character_info::set_registerdate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_character_info.registerDate)
}
inline std::string* Operate_character_info::mutable_registerdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_registerdate();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_character_info.registerDate)
  return _s;
}
inline const std::string& Operate_character_info::_internal_registerdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.registerdate_.Get();
}
inline void Operate_character_info::_internal_set_registerdate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.Set(value, GetArena());
}
inline std::string* Operate_character_info::_internal_mutable_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.registerdate_.Mutable( GetArena());
}
inline std::string* Operate_character_info::release_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_character_info.registerDate)
  return _impl_.registerdate_.Release();
}
inline void Operate_character_info::set_allocated_registerdate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.registerdate_.IsDefault()) {
          _impl_.registerdate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_character_info.registerDate)
}

// string lastLoginDate = 7;
inline void Operate_character_info::clear_lastlogindate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastlogindate_.ClearToEmpty();
}
inline const std::string& Operate_character_info::lastlogindate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_character_info.lastLoginDate)
  return _internal_lastlogindate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_character_info::set_lastlogindate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastlogindate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_character_info.lastLoginDate)
}
inline std::string* Operate_character_info::mutable_lastlogindate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lastlogindate();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_character_info.lastLoginDate)
  return _s;
}
inline const std::string& Operate_character_info::_internal_lastlogindate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastlogindate_.Get();
}
inline void Operate_character_info::_internal_set_lastlogindate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastlogindate_.Set(value, GetArena());
}
inline std::string* Operate_character_info::_internal_mutable_lastlogindate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.lastlogindate_.Mutable( GetArena());
}
inline std::string* Operate_character_info::release_lastlogindate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_character_info.lastLoginDate)
  return _impl_.lastlogindate_.Release();
}
inline void Operate_character_info::set_allocated_lastlogindate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastlogindate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lastlogindate_.IsDefault()) {
          _impl_.lastlogindate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_character_info.lastLoginDate)
}

// -------------------------------------------------------------------

// Operate_character_info_list

// repeated .DC.Packet.Operate_character_info infos = 1;
inline int Operate_character_info_list::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int Operate_character_info_list::infos_size() const {
  return _internal_infos_size();
}
inline void Operate_character_info_list::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::DC::Packet::Operate_character_info* Operate_character_info_list::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_character_info_list.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_character_info>* Operate_character_info_list::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_character_info_list.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::DC::Packet::Operate_character_info& Operate_character_info_list::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_character_info_list.infos)
  return _internal_infos().Get(index);
}
inline ::DC::Packet::Operate_character_info* Operate_character_info_list::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_character_info* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_character_info_list.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_character_info>& Operate_character_info_list::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_character_info_list.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_character_info>&
Operate_character_info_list::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_character_info>*
Operate_character_info_list::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

// -------------------------------------------------------------------

// Operate_report_info

// uint64 reportId = 1;
inline void Operate_report_info::clear_reportid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_report_info::reportid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_report_info.reportId)
  return _internal_reportid();
}
inline void Operate_report_info::set_reportid(::uint64_t value) {
  _internal_set_reportid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_report_info.reportId)
}
inline ::uint64_t Operate_report_info::_internal_reportid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reportid_;
}
inline void Operate_report_info::_internal_set_reportid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportid_ = value;
}

// uint64 targetCharacterId = 2;
inline void Operate_report_info::clear_targetcharacterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetcharacterid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_report_info::targetcharacterid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_report_info.targetCharacterId)
  return _internal_targetcharacterid();
}
inline void Operate_report_info::set_targetcharacterid(::uint64_t value) {
  _internal_set_targetcharacterid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_report_info.targetCharacterId)
}
inline ::uint64_t Operate_report_info::_internal_targetcharacterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targetcharacterid_;
}
inline void Operate_report_info::_internal_set_targetcharacterid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetcharacterid_ = value;
}

// string targetNickname = 3;
inline void Operate_report_info::clear_targetnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetnickname_.ClearToEmpty();
}
inline const std::string& Operate_report_info::targetnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_report_info.targetNickname)
  return _internal_targetnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_report_info::set_targetnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_report_info.targetNickname)
}
inline std::string* Operate_report_info::mutable_targetnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_targetnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_report_info.targetNickname)
  return _s;
}
inline const std::string& Operate_report_info::_internal_targetnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targetnickname_.Get();
}
inline void Operate_report_info::_internal_set_targetnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetnickname_.Set(value, GetArena());
}
inline std::string* Operate_report_info::_internal_mutable_targetnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.targetnickname_.Mutable( GetArena());
}
inline std::string* Operate_report_info::release_targetnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_report_info.targetNickname)
  return _impl_.targetnickname_.Release();
}
inline void Operate_report_info::set_allocated_targetnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.targetnickname_.IsDefault()) {
          _impl_.targetnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_report_info.targetNickname)
}

// uint64 gameId = 4;
inline void Operate_report_info::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_report_info::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_report_info.gameId)
  return _internal_gameid();
}
inline void Operate_report_info::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_report_info.gameId)
}
inline ::uint64_t Operate_report_info::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void Operate_report_info::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// string registerDate = 5;
inline void Operate_report_info::clear_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.ClearToEmpty();
}
inline const std::string& Operate_report_info::registerdate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_report_info.registerDate)
  return _internal_registerdate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_report_info::set_registerdate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_report_info.registerDate)
}
inline std::string* Operate_report_info::mutable_registerdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_registerdate();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_report_info.registerDate)
  return _s;
}
inline const std::string& Operate_report_info::_internal_registerdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.registerdate_.Get();
}
inline void Operate_report_info::_internal_set_registerdate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.Set(value, GetArena());
}
inline std::string* Operate_report_info::_internal_mutable_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.registerdate_.Mutable( GetArena());
}
inline std::string* Operate_report_info::release_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_report_info.registerDate)
  return _impl_.registerdate_.Release();
}
inline void Operate_report_info::set_allocated_registerdate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.registerdate_.IsDefault()) {
          _impl_.registerdate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_report_info.registerDate)
}

// -------------------------------------------------------------------

// Operate_report_info_list

// repeated .DC.Packet.Operate_report_info infos = 1;
inline int Operate_report_info_list::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int Operate_report_info_list::infos_size() const {
  return _internal_infos_size();
}
inline void Operate_report_info_list::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::DC::Packet::Operate_report_info* Operate_report_info_list::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_report_info_list.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_report_info>* Operate_report_info_list::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_report_info_list.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::DC::Packet::Operate_report_info& Operate_report_info_list::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_report_info_list.infos)
  return _internal_infos().Get(index);
}
inline ::DC::Packet::Operate_report_info* Operate_report_info_list::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_report_info* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_report_info_list.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_report_info>& Operate_report_info_list::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_report_info_list.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_report_info>&
Operate_report_info_list::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_report_info>*
Operate_report_info_list::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

// -------------------------------------------------------------------

// Operate_iron_shield_info

// uint64 accountId = 1;
inline void Operate_iron_shield_info::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_iron_shield_info::accountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_iron_shield_info.accountId)
  return _internal_accountid();
}
inline void Operate_iron_shield_info::set_accountid(::uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_iron_shield_info.accountId)
}
inline ::uint64_t Operate_iron_shield_info::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void Operate_iron_shield_info::_internal_set_accountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// uint64 characterId = 2;
inline void Operate_iron_shield_info::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_iron_shield_info::characterid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_iron_shield_info.characterId)
  return _internal_characterid();
}
inline void Operate_iron_shield_info::set_characterid(::uint64_t value) {
  _internal_set_characterid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_iron_shield_info.characterId)
}
inline ::uint64_t Operate_iron_shield_info::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_;
}
inline void Operate_iron_shield_info::_internal_set_characterid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_ = value;
}

// string nickname = 3;
inline void Operate_iron_shield_info::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& Operate_iron_shield_info::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_iron_shield_info.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_iron_shield_info::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_iron_shield_info.nickname)
}
inline std::string* Operate_iron_shield_info::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_iron_shield_info.nickname)
  return _s;
}
inline const std::string& Operate_iron_shield_info::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nickname_.Get();
}
inline void Operate_iron_shield_info::_internal_set_nickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* Operate_iron_shield_info::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* Operate_iron_shield_info::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_iron_shield_info.nickname)
  return _impl_.nickname_.Release();
}
inline void Operate_iron_shield_info::set_allocated_nickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_iron_shield_info.nickname)
}

// repeated string hardwareIds = 4;
inline int Operate_iron_shield_info::_internal_hardwareids_size() const {
  return _internal_hardwareids().size();
}
inline int Operate_iron_shield_info::hardwareids_size() const {
  return _internal_hardwareids_size();
}
inline void Operate_iron_shield_info::clear_hardwareids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareids_.Clear();
}
inline std::string* Operate_iron_shield_info::add_hardwareids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_hardwareids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.Operate_iron_shield_info.hardwareIds)
  return _s;
}
inline const std::string& Operate_iron_shield_info::hardwareids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_iron_shield_info.hardwareIds)
  return _internal_hardwareids().Get(index);
}
inline std::string* Operate_iron_shield_info::mutable_hardwareids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_iron_shield_info.hardwareIds)
  return _internal_mutable_hardwareids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Operate_iron_shield_info::set_hardwareids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_hardwareids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_iron_shield_info.hardwareIds)
}
template <typename Arg_, typename... Args_>
inline void Operate_iron_shield_info::add_hardwareids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_hardwareids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_iron_shield_info.hardwareIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Operate_iron_shield_info::hardwareids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_iron_shield_info.hardwareIds)
  return _internal_hardwareids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Operate_iron_shield_info::mutable_hardwareids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_iron_shield_info.hardwareIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_hardwareids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Operate_iron_shield_info::_internal_hardwareids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hardwareids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Operate_iron_shield_info::_internal_mutable_hardwareids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.hardwareids_;
}

// string callbackType = 5;
inline void Operate_iron_shield_info::clear_callbacktype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.callbacktype_.ClearToEmpty();
}
inline const std::string& Operate_iron_shield_info::callbacktype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_iron_shield_info.callbackType)
  return _internal_callbacktype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_iron_shield_info::set_callbacktype(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.callbacktype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_iron_shield_info.callbackType)
}
inline std::string* Operate_iron_shield_info::mutable_callbacktype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_callbacktype();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_iron_shield_info.callbackType)
  return _s;
}
inline const std::string& Operate_iron_shield_info::_internal_callbacktype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.callbacktype_.Get();
}
inline void Operate_iron_shield_info::_internal_set_callbacktype(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.callbacktype_.Set(value, GetArena());
}
inline std::string* Operate_iron_shield_info::_internal_mutable_callbacktype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.callbacktype_.Mutable( GetArena());
}
inline std::string* Operate_iron_shield_info::release_callbacktype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_iron_shield_info.callbackType)
  return _impl_.callbacktype_.Release();
}
inline void Operate_iron_shield_info::set_allocated_callbacktype(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.callbacktype_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.callbacktype_.IsDefault()) {
          _impl_.callbacktype_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_iron_shield_info.callbackType)
}

// string registerDate = 6;
inline void Operate_iron_shield_info::clear_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.ClearToEmpty();
}
inline const std::string& Operate_iron_shield_info::registerdate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_iron_shield_info.registerDate)
  return _internal_registerdate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_iron_shield_info::set_registerdate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_iron_shield_info.registerDate)
}
inline std::string* Operate_iron_shield_info::mutable_registerdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_registerdate();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_iron_shield_info.registerDate)
  return _s;
}
inline const std::string& Operate_iron_shield_info::_internal_registerdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.registerdate_.Get();
}
inline void Operate_iron_shield_info::_internal_set_registerdate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.Set(value, GetArena());
}
inline std::string* Operate_iron_shield_info::_internal_mutable_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.registerdate_.Mutable( GetArena());
}
inline std::string* Operate_iron_shield_info::release_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_iron_shield_info.registerDate)
  return _impl_.registerdate_.Release();
}
inline void Operate_iron_shield_info::set_allocated_registerdate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.registerdate_.IsDefault()) {
          _impl_.registerdate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_iron_shield_info.registerDate)
}

// -------------------------------------------------------------------

// Operate_iron_shield_info_list

// repeated .DC.Packet.Operate_iron_shield_info infos = 1;
inline int Operate_iron_shield_info_list::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int Operate_iron_shield_info_list::infos_size() const {
  return _internal_infos_size();
}
inline void Operate_iron_shield_info_list::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::DC::Packet::Operate_iron_shield_info* Operate_iron_shield_info_list::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_iron_shield_info_list.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_iron_shield_info>* Operate_iron_shield_info_list::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_iron_shield_info_list.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::DC::Packet::Operate_iron_shield_info& Operate_iron_shield_info_list::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_iron_shield_info_list.infos)
  return _internal_infos().Get(index);
}
inline ::DC::Packet::Operate_iron_shield_info* Operate_iron_shield_info_list::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_iron_shield_info* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_iron_shield_info_list.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_iron_shield_info>& Operate_iron_shield_info_list::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_iron_shield_info_list.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_iron_shield_info>&
Operate_iron_shield_info_list::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_iron_shield_info>*
Operate_iron_shield_info_list::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

// -------------------------------------------------------------------

// Operate_ban_user_info

// uint64 accountId = 1;
inline void Operate_ban_user_info::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_ban_user_info::accountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_ban_user_info.accountId)
  return _internal_accountid();
}
inline void Operate_ban_user_info::set_accountid(::uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_ban_user_info.accountId)
}
inline ::uint64_t Operate_ban_user_info::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void Operate_ban_user_info::_internal_set_accountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// string banType = 2;
inline void Operate_ban_user_info::clear_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_.ClearToEmpty();
}
inline const std::string& Operate_ban_user_info::bantype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_ban_user_info.banType)
  return _internal_bantype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_ban_user_info::set_bantype(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_ban_user_info.banType)
}
inline std::string* Operate_ban_user_info::mutable_bantype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bantype();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_ban_user_info.banType)
  return _s;
}
inline const std::string& Operate_ban_user_info::_internal_bantype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantype_.Get();
}
inline void Operate_ban_user_info::_internal_set_bantype(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_.Set(value, GetArena());
}
inline std::string* Operate_ban_user_info::_internal_mutable_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bantype_.Mutable( GetArena());
}
inline std::string* Operate_ban_user_info::release_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_ban_user_info.banType)
  return _impl_.bantype_.Release();
}
inline void Operate_ban_user_info::set_allocated_bantype(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bantype_.IsDefault()) {
          _impl_.bantype_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_ban_user_info.banType)
}

// string comment = 3;
inline void Operate_ban_user_info::clear_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.ClearToEmpty();
}
inline const std::string& Operate_ban_user_info::comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_ban_user_info.comment)
  return _internal_comment();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_ban_user_info::set_comment(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_ban_user_info.comment)
}
inline std::string* Operate_ban_user_info::mutable_comment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_comment();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_ban_user_info.comment)
  return _s;
}
inline const std::string& Operate_ban_user_info::_internal_comment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comment_.Get();
}
inline void Operate_ban_user_info::_internal_set_comment(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.Set(value, GetArena());
}
inline std::string* Operate_ban_user_info::_internal_mutable_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.comment_.Mutable( GetArena());
}
inline std::string* Operate_ban_user_info::release_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_ban_user_info.comment)
  return _impl_.comment_.Release();
}
inline void Operate_ban_user_info::set_allocated_comment(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.comment_.IsDefault()) {
          _impl_.comment_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_ban_user_info.comment)
}

// string registerDate = 4;
inline void Operate_ban_user_info::clear_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.ClearToEmpty();
}
inline const std::string& Operate_ban_user_info::registerdate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_ban_user_info.registerDate)
  return _internal_registerdate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_ban_user_info::set_registerdate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_ban_user_info.registerDate)
}
inline std::string* Operate_ban_user_info::mutable_registerdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_registerdate();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_ban_user_info.registerDate)
  return _s;
}
inline const std::string& Operate_ban_user_info::_internal_registerdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.registerdate_.Get();
}
inline void Operate_ban_user_info::_internal_set_registerdate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.Set(value, GetArena());
}
inline std::string* Operate_ban_user_info::_internal_mutable_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.registerdate_.Mutable( GetArena());
}
inline std::string* Operate_ban_user_info::release_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_ban_user_info.registerDate)
  return _impl_.registerdate_.Release();
}
inline void Operate_ban_user_info::set_allocated_registerdate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.registerdate_.IsDefault()) {
          _impl_.registerdate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_ban_user_info.registerDate)
}

// -------------------------------------------------------------------

// Operate_ban_user_info_list

// repeated .DC.Packet.Operate_ban_user_info infos = 1;
inline int Operate_ban_user_info_list::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int Operate_ban_user_info_list::infos_size() const {
  return _internal_infos_size();
}
inline void Operate_ban_user_info_list::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::DC::Packet::Operate_ban_user_info* Operate_ban_user_info_list::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_ban_user_info_list.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_ban_user_info>* Operate_ban_user_info_list::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_ban_user_info_list.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::DC::Packet::Operate_ban_user_info& Operate_ban_user_info_list::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_ban_user_info_list.infos)
  return _internal_infos().Get(index);
}
inline ::DC::Packet::Operate_ban_user_info* Operate_ban_user_info_list::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_ban_user_info* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_ban_user_info_list.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_ban_user_info>& Operate_ban_user_info_list::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_ban_user_info_list.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_ban_user_info>&
Operate_ban_user_info_list::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_ban_user_info>*
Operate_ban_user_info_list::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

// -------------------------------------------------------------------

// Operate_login_log

// uint64 idx = 1;
inline void Operate_login_log::clear_idx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.idx_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_login_log::idx() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_login_log.idx)
  return _internal_idx();
}
inline void Operate_login_log::set_idx(::uint64_t value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_login_log.idx)
}
inline ::uint64_t Operate_login_log::_internal_idx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.idx_;
}
inline void Operate_login_log::_internal_set_idx(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.idx_ = value;
}

// uint64 accountId = 2;
inline void Operate_login_log::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_login_log::accountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_login_log.accountId)
  return _internal_accountid();
}
inline void Operate_login_log::set_accountid(::uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_login_log.accountId)
}
inline ::uint64_t Operate_login_log::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void Operate_login_log::_internal_set_accountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// string loginTime = 3;
inline void Operate_login_log::clear_logintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logintime_.ClearToEmpty();
}
inline const std::string& Operate_login_log::logintime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_login_log.loginTime)
  return _internal_logintime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_login_log::set_logintime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logintime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_login_log.loginTime)
}
inline std::string* Operate_login_log::mutable_logintime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_logintime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_login_log.loginTime)
  return _s;
}
inline const std::string& Operate_login_log::_internal_logintime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.logintime_.Get();
}
inline void Operate_login_log::_internal_set_logintime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logintime_.Set(value, GetArena());
}
inline std::string* Operate_login_log::_internal_mutable_logintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.logintime_.Mutable( GetArena());
}
inline std::string* Operate_login_log::release_logintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_login_log.loginTime)
  return _impl_.logintime_.Release();
}
inline void Operate_login_log::set_allocated_logintime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logintime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.logintime_.IsDefault()) {
          _impl_.logintime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_login_log.loginTime)
}

// string logoutTime = 4;
inline void Operate_login_log::clear_logouttime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logouttime_.ClearToEmpty();
}
inline const std::string& Operate_login_log::logouttime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_login_log.logoutTime)
  return _internal_logouttime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_login_log::set_logouttime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logouttime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_login_log.logoutTime)
}
inline std::string* Operate_login_log::mutable_logouttime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_logouttime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_login_log.logoutTime)
  return _s;
}
inline const std::string& Operate_login_log::_internal_logouttime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.logouttime_.Get();
}
inline void Operate_login_log::_internal_set_logouttime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logouttime_.Set(value, GetArena());
}
inline std::string* Operate_login_log::_internal_mutable_logouttime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.logouttime_.Mutable( GetArena());
}
inline std::string* Operate_login_log::release_logouttime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_login_log.logoutTime)
  return _impl_.logouttime_.Release();
}
inline void Operate_login_log::set_allocated_logouttime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logouttime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.logouttime_.IsDefault()) {
          _impl_.logouttime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_login_log.logoutTime)
}

// string ipAddress = 5;
inline void Operate_login_log::clear_ipaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ipaddress_.ClearToEmpty();
}
inline const std::string& Operate_login_log::ipaddress() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_login_log.ipAddress)
  return _internal_ipaddress();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_login_log::set_ipaddress(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ipaddress_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_login_log.ipAddress)
}
inline std::string* Operate_login_log::mutable_ipaddress() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ipaddress();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_login_log.ipAddress)
  return _s;
}
inline const std::string& Operate_login_log::_internal_ipaddress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ipaddress_.Get();
}
inline void Operate_login_log::_internal_set_ipaddress(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ipaddress_.Set(value, GetArena());
}
inline std::string* Operate_login_log::_internal_mutable_ipaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ipaddress_.Mutable( GetArena());
}
inline std::string* Operate_login_log::release_ipaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_login_log.ipAddress)
  return _impl_.ipaddress_.Release();
}
inline void Operate_login_log::set_allocated_ipaddress(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ipaddress_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ipaddress_.IsDefault()) {
          _impl_.ipaddress_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_login_log.ipAddress)
}

// -------------------------------------------------------------------

// Operate_login_log_list

// repeated .DC.Packet.Operate_login_log logs = 1;
inline int Operate_login_log_list::_internal_logs_size() const {
  return _internal_logs().size();
}
inline int Operate_login_log_list::logs_size() const {
  return _internal_logs_size();
}
inline void Operate_login_log_list::clear_logs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logs_.Clear();
}
inline ::DC::Packet::Operate_login_log* Operate_login_log_list::mutable_logs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_login_log_list.logs)
  return _internal_mutable_logs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_login_log>* Operate_login_log_list::mutable_logs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_login_log_list.logs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_logs();
}
inline const ::DC::Packet::Operate_login_log& Operate_login_log_list::logs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_login_log_list.logs)
  return _internal_logs().Get(index);
}
inline ::DC::Packet::Operate_login_log* Operate_login_log_list::add_logs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_login_log* _add = _internal_mutable_logs()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_login_log_list.logs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_login_log>& Operate_login_log_list::logs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_login_log_list.logs)
  return _internal_logs();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_login_log>&
Operate_login_log_list::_internal_logs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.logs_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_login_log>*
Operate_login_log_list::_internal_mutable_logs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.logs_;
}

// -------------------------------------------------------------------

// Operate_Ban_User

// string securityCode = 1;
inline void Operate_Ban_User::clear_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.ClearToEmpty();
}
inline const std::string& Operate_Ban_User::securitycode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_User.securityCode)
  return _internal_securitycode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Ban_User::set_securitycode(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_User.securityCode)
}
inline std::string* Operate_Ban_User::mutable_securitycode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_securitycode();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Ban_User.securityCode)
  return _s;
}
inline const std::string& Operate_Ban_User::_internal_securitycode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.securitycode_.Get();
}
inline void Operate_Ban_User::_internal_set_securitycode(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(value, GetArena());
}
inline std::string* Operate_Ban_User::_internal_mutable_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.securitycode_.Mutable( GetArena());
}
inline std::string* Operate_Ban_User::release_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Ban_User.securityCode)
  return _impl_.securitycode_.Release();
}
inline void Operate_Ban_User::set_allocated_securitycode(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.securitycode_.IsDefault()) {
          _impl_.securitycode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Ban_User.securityCode)
}

// string nickName = 2;
inline void Operate_Ban_User::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& Operate_Ban_User::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_User.nickName)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Ban_User::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_User.nickName)
}
inline std::string* Operate_Ban_User::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Ban_User.nickName)
  return _s;
}
inline const std::string& Operate_Ban_User::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nickname_.Get();
}
inline void Operate_Ban_User::_internal_set_nickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* Operate_Ban_User::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* Operate_Ban_User::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Ban_User.nickName)
  return _impl_.nickname_.Release();
}
inline void Operate_Ban_User::set_allocated_nickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Ban_User.nickName)
}

// string reason = 3;
inline void Operate_Ban_User::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& Operate_Ban_User::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_User.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Ban_User::set_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_User.reason)
}
inline std::string* Operate_Ban_User::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Ban_User.reason)
  return _s;
}
inline const std::string& Operate_Ban_User::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void Operate_Ban_User::_internal_set_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* Operate_Ban_User::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* Operate_Ban_User::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Ban_User.reason)
  return _impl_.reason_.Release();
}
inline void Operate_Ban_User::set_allocated_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reason_.IsDefault()) {
          _impl_.reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Ban_User.reason)
}

// uint32 banType = 4;
inline void Operate_Ban_User::clear_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_ = 0u;
}
inline ::uint32_t Operate_Ban_User::bantype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_User.banType)
  return _internal_bantype();
}
inline void Operate_Ban_User::set_bantype(::uint32_t value) {
  _internal_set_bantype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_User.banType)
}
inline ::uint32_t Operate_Ban_User::_internal_bantype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantype_;
}
inline void Operate_Ban_User::_internal_set_bantype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_ = value;
}

// uint32 banTime_min = 5;
inline void Operate_Ban_User::clear_bantime_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantime_min_ = 0u;
}
inline ::uint32_t Operate_Ban_User::bantime_min() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_User.banTime_min)
  return _internal_bantime_min();
}
inline void Operate_Ban_User::set_bantime_min(::uint32_t value) {
  _internal_set_bantime_min(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_User.banTime_min)
}
inline ::uint32_t Operate_Ban_User::_internal_bantime_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantime_min_;
}
inline void Operate_Ban_User::_internal_set_bantime_min(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantime_min_ = value;
}

// -------------------------------------------------------------------

// Operate_Ban_User2

// string securityCode = 1;
inline void Operate_Ban_User2::clear_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.ClearToEmpty();
}
inline const std::string& Operate_Ban_User2::securitycode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_User2.securityCode)
  return _internal_securitycode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Ban_User2::set_securitycode(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_User2.securityCode)
}
inline std::string* Operate_Ban_User2::mutable_securitycode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_securitycode();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Ban_User2.securityCode)
  return _s;
}
inline const std::string& Operate_Ban_User2::_internal_securitycode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.securitycode_.Get();
}
inline void Operate_Ban_User2::_internal_set_securitycode(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.Set(value, GetArena());
}
inline std::string* Operate_Ban_User2::_internal_mutable_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.securitycode_.Mutable( GetArena());
}
inline std::string* Operate_Ban_User2::release_securitycode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Ban_User2.securityCode)
  return _impl_.securitycode_.Release();
}
inline void Operate_Ban_User2::set_allocated_securitycode(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.securitycode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.securitycode_.IsDefault()) {
          _impl_.securitycode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Ban_User2.securityCode)
}

// uint64 accountId = 2;
inline void Operate_Ban_User2::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_Ban_User2::accountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_User2.accountId)
  return _internal_accountid();
}
inline void Operate_Ban_User2::set_accountid(::uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_User2.accountId)
}
inline ::uint64_t Operate_Ban_User2::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void Operate_Ban_User2::_internal_set_accountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// string nickName = 3;
inline void Operate_Ban_User2::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& Operate_Ban_User2::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_User2.nickName)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Ban_User2::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_User2.nickName)
}
inline std::string* Operate_Ban_User2::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Ban_User2.nickName)
  return _s;
}
inline const std::string& Operate_Ban_User2::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nickname_.Get();
}
inline void Operate_Ban_User2::_internal_set_nickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* Operate_Ban_User2::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* Operate_Ban_User2::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Ban_User2.nickName)
  return _impl_.nickname_.Release();
}
inline void Operate_Ban_User2::set_allocated_nickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Ban_User2.nickName)
}

// string reason = 4;
inline void Operate_Ban_User2::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& Operate_Ban_User2::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_User2.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Ban_User2::set_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_User2.reason)
}
inline std::string* Operate_Ban_User2::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Ban_User2.reason)
  return _s;
}
inline const std::string& Operate_Ban_User2::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void Operate_Ban_User2::_internal_set_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* Operate_Ban_User2::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* Operate_Ban_User2::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Ban_User2.reason)
  return _impl_.reason_.Release();
}
inline void Operate_Ban_User2::set_allocated_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reason_.IsDefault()) {
          _impl_.reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Ban_User2.reason)
}

// uint32 banType = 5;
inline void Operate_Ban_User2::clear_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_ = 0u;
}
inline ::uint32_t Operate_Ban_User2::bantype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_User2.banType)
  return _internal_bantype();
}
inline void Operate_Ban_User2::set_bantype(::uint32_t value) {
  _internal_set_bantype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_User2.banType)
}
inline ::uint32_t Operate_Ban_User2::_internal_bantype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantype_;
}
inline void Operate_Ban_User2::_internal_set_bantype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_ = value;
}

// uint32 banTime_min = 6;
inline void Operate_Ban_User2::clear_bantime_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantime_min_ = 0u;
}
inline ::uint32_t Operate_Ban_User2::bantime_min() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_User2.banTime_min)
  return _internal_bantime_min();
}
inline void Operate_Ban_User2::set_bantime_min(::uint32_t value) {
  _internal_set_bantime_min(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_User2.banTime_min)
}
inline ::uint32_t Operate_Ban_User2::_internal_bantime_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantime_min_;
}
inline void Operate_Ban_User2::_internal_set_bantime_min(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantime_min_ = value;
}

// string jiraId = 7;
inline void Operate_Ban_User2::clear_jiraid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jiraid_.ClearToEmpty();
}
inline const std::string& Operate_Ban_User2::jiraid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_User2.jiraId)
  return _internal_jiraid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Ban_User2::set_jiraid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jiraid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_User2.jiraId)
}
inline std::string* Operate_Ban_User2::mutable_jiraid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_jiraid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Ban_User2.jiraId)
  return _s;
}
inline const std::string& Operate_Ban_User2::_internal_jiraid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.jiraid_.Get();
}
inline void Operate_Ban_User2::_internal_set_jiraid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jiraid_.Set(value, GetArena());
}
inline std::string* Operate_Ban_User2::_internal_mutable_jiraid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.jiraid_.Mutable( GetArena());
}
inline std::string* Operate_Ban_User2::release_jiraid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Ban_User2.jiraId)
  return _impl_.jiraid_.Release();
}
inline void Operate_Ban_User2::set_allocated_jiraid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jiraid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.jiraid_.IsDefault()) {
          _impl_.jiraid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Ban_User2.jiraId)
}

// uint32 isRankReset = 8;
inline void Operate_Ban_User2::clear_isrankreset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isrankreset_ = 0u;
}
inline ::uint32_t Operate_Ban_User2::isrankreset() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_User2.isRankReset)
  return _internal_isrankreset();
}
inline void Operate_Ban_User2::set_isrankreset(::uint32_t value) {
  _internal_set_isrankreset(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_User2.isRankReset)
}
inline ::uint32_t Operate_Ban_User2::_internal_isrankreset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isrankreset_;
}
inline void Operate_Ban_User2::_internal_set_isrankreset(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isrankreset_ = value;
}

// uint32 isRankRecovery = 9;
inline void Operate_Ban_User2::clear_isrankrecovery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isrankrecovery_ = 0u;
}
inline ::uint32_t Operate_Ban_User2::isrankrecovery() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_User2.isRankRecovery)
  return _internal_isrankrecovery();
}
inline void Operate_Ban_User2::set_isrankrecovery(::uint32_t value) {
  _internal_set_isrankrecovery(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_User2.isRankRecovery)
}
inline ::uint32_t Operate_Ban_User2::_internal_isrankrecovery() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isrankrecovery_;
}
inline void Operate_Ban_User2::_internal_set_isrankrecovery(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isrankrecovery_ = value;
}

// uint64 logIdx = 10;
inline void Operate_Ban_User2::clear_logidx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logidx_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_Ban_User2::logidx() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_User2.logIdx)
  return _internal_logidx();
}
inline void Operate_Ban_User2::set_logidx(::uint64_t value) {
  _internal_set_logidx(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_User2.logIdx)
}
inline ::uint64_t Operate_Ban_User2::_internal_logidx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.logidx_;
}
inline void Operate_Ban_User2::_internal_set_logidx(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logidx_ = value;
}

// -------------------------------------------------------------------

// Operate_Ban_Hardware

// string hardwareId = 1;
inline void Operate_Ban_Hardware::clear_hardwareid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.ClearToEmpty();
}
inline const std::string& Operate_Ban_Hardware::hardwareid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_Hardware.hardwareId)
  return _internal_hardwareid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Ban_Hardware::set_hardwareid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_Hardware.hardwareId)
}
inline std::string* Operate_Ban_Hardware::mutable_hardwareid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hardwareid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Ban_Hardware.hardwareId)
  return _s;
}
inline const std::string& Operate_Ban_Hardware::_internal_hardwareid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hardwareid_.Get();
}
inline void Operate_Ban_Hardware::_internal_set_hardwareid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.Set(value, GetArena());
}
inline std::string* Operate_Ban_Hardware::_internal_mutable_hardwareid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hardwareid_.Mutable( GetArena());
}
inline std::string* Operate_Ban_Hardware::release_hardwareid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Ban_Hardware.hardwareId)
  return _impl_.hardwareid_.Release();
}
inline void Operate_Ban_Hardware::set_allocated_hardwareid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hardwareid_.IsDefault()) {
          _impl_.hardwareid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Ban_Hardware.hardwareId)
}

// string reason = 2;
inline void Operate_Ban_Hardware::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& Operate_Ban_Hardware::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_Hardware.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Ban_Hardware::set_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_Hardware.reason)
}
inline std::string* Operate_Ban_Hardware::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Ban_Hardware.reason)
  return _s;
}
inline const std::string& Operate_Ban_Hardware::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void Operate_Ban_Hardware::_internal_set_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* Operate_Ban_Hardware::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* Operate_Ban_Hardware::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Ban_Hardware.reason)
  return _impl_.reason_.Release();
}
inline void Operate_Ban_Hardware::set_allocated_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reason_.IsDefault()) {
          _impl_.reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Ban_Hardware.reason)
}

// uint32 banType = 3;
inline void Operate_Ban_Hardware::clear_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_ = 0u;
}
inline ::uint32_t Operate_Ban_Hardware::bantype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_Hardware.banType)
  return _internal_bantype();
}
inline void Operate_Ban_Hardware::set_bantype(::uint32_t value) {
  _internal_set_bantype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_Hardware.banType)
}
inline ::uint32_t Operate_Ban_Hardware::_internal_bantype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantype_;
}
inline void Operate_Ban_Hardware::_internal_set_bantype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_ = value;
}

// uint32 banTime_min = 4;
inline void Operate_Ban_Hardware::clear_bantime_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantime_min_ = 0u;
}
inline ::uint32_t Operate_Ban_Hardware::bantime_min() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Ban_Hardware.banTime_min)
  return _internal_bantime_min();
}
inline void Operate_Ban_Hardware::set_bantime_min(::uint32_t value) {
  _internal_set_bantime_min(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Ban_Hardware.banTime_min)
}
inline ::uint32_t Operate_Ban_Hardware::_internal_bantime_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantime_min_;
}
inline void Operate_Ban_Hardware::_internal_set_bantime_min(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantime_min_ = value;
}

// -------------------------------------------------------------------

// Operate_characterInfo

// uint64 accountId = 1;
inline void Operate_characterInfo::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_characterInfo::accountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_characterInfo.accountId)
  return _internal_accountid();
}
inline void Operate_characterInfo::set_accountid(::uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_characterInfo.accountId)
}
inline ::uint64_t Operate_characterInfo::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void Operate_characterInfo::_internal_set_accountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// uint64 characterId = 2;
inline void Operate_characterInfo::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_characterInfo::characterid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_characterInfo.characterId)
  return _internal_characterid();
}
inline void Operate_characterInfo::set_characterid(::uint64_t value) {
  _internal_set_characterid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_characterInfo.characterId)
}
inline ::uint64_t Operate_characterInfo::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_;
}
inline void Operate_characterInfo::_internal_set_characterid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_ = value;
}

// string nickname = 3;
inline void Operate_characterInfo::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& Operate_characterInfo::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_characterInfo.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_characterInfo::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_characterInfo.nickname)
}
inline std::string* Operate_characterInfo::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_characterInfo.nickname)
  return _s;
}
inline const std::string& Operate_characterInfo::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nickname_.Get();
}
inline void Operate_characterInfo::_internal_set_nickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* Operate_characterInfo::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* Operate_characterInfo::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_characterInfo.nickname)
  return _impl_.nickname_.Release();
}
inline void Operate_characterInfo::set_allocated_nickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_characterInfo.nickname)
}

// string characterClass = 4;
inline void Operate_characterInfo::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& Operate_characterInfo::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_characterInfo.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_characterInfo::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_characterInfo.characterClass)
}
inline std::string* Operate_characterInfo::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_characterInfo.characterClass)
  return _s;
}
inline const std::string& Operate_characterInfo::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void Operate_characterInfo::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* Operate_characterInfo::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* Operate_characterInfo::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_characterInfo.characterClass)
  return _impl_.characterclass_.Release();
}
inline void Operate_characterInfo::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_characterInfo.characterClass)
}

// string gender = 5;
inline void Operate_characterInfo::clear_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_.ClearToEmpty();
}
inline const std::string& Operate_characterInfo::gender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_characterInfo.gender)
  return _internal_gender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_characterInfo::set_gender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_characterInfo.gender)
}
inline std::string* Operate_characterInfo::mutable_gender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_gender();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_characterInfo.gender)
  return _s;
}
inline const std::string& Operate_characterInfo::_internal_gender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gender_.Get();
}
inline void Operate_characterInfo::_internal_set_gender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_.Set(value, GetArena());
}
inline std::string* Operate_characterInfo::_internal_mutable_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.gender_.Mutable( GetArena());
}
inline std::string* Operate_characterInfo::release_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_characterInfo.gender)
  return _impl_.gender_.Release();
}
inline void Operate_characterInfo::set_allocated_gender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.gender_.IsDefault()) {
          _impl_.gender_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_characterInfo.gender)
}

// string registerdate = 6;
inline void Operate_characterInfo::clear_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.ClearToEmpty();
}
inline const std::string& Operate_characterInfo::registerdate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_characterInfo.registerdate)
  return _internal_registerdate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_characterInfo::set_registerdate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_characterInfo.registerdate)
}
inline std::string* Operate_characterInfo::mutable_registerdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_registerdate();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_characterInfo.registerdate)
  return _s;
}
inline const std::string& Operate_characterInfo::_internal_registerdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.registerdate_.Get();
}
inline void Operate_characterInfo::_internal_set_registerdate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.Set(value, GetArena());
}
inline std::string* Operate_characterInfo::_internal_mutable_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.registerdate_.Mutable( GetArena());
}
inline std::string* Operate_characterInfo::release_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_characterInfo.registerdate)
  return _impl_.registerdate_.Release();
}
inline void Operate_characterInfo::set_allocated_registerdate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.registerdate_.IsDefault()) {
          _impl_.registerdate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_characterInfo.registerdate)
}

// string lastlogindate = 7;
inline void Operate_characterInfo::clear_lastlogindate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastlogindate_.ClearToEmpty();
}
inline const std::string& Operate_characterInfo::lastlogindate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_characterInfo.lastlogindate)
  return _internal_lastlogindate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_characterInfo::set_lastlogindate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastlogindate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_characterInfo.lastlogindate)
}
inline std::string* Operate_characterInfo::mutable_lastlogindate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lastlogindate();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_characterInfo.lastlogindate)
  return _s;
}
inline const std::string& Operate_characterInfo::_internal_lastlogindate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastlogindate_.Get();
}
inline void Operate_characterInfo::_internal_set_lastlogindate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastlogindate_.Set(value, GetArena());
}
inline std::string* Operate_characterInfo::_internal_mutable_lastlogindate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.lastlogindate_.Mutable( GetArena());
}
inline std::string* Operate_characterInfo::release_lastlogindate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_characterInfo.lastlogindate)
  return _impl_.lastlogindate_.Release();
}
inline void Operate_characterInfo::set_allocated_lastlogindate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastlogindate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lastlogindate_.IsDefault()) {
          _impl_.lastlogindate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_characterInfo.lastlogindate)
}

// repeated .DC.Packet.SItems inventoryItems = 8;
inline int Operate_characterInfo::_internal_inventoryitems_size() const {
  return _internal_inventoryitems().size();
}
inline int Operate_characterInfo::inventoryitems_size() const {
  return _internal_inventoryitems_size();
}
inline ::DC::Packet::SItems* Operate_characterInfo::mutable_inventoryitems(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_characterInfo.inventoryItems)
  return _internal_mutable_inventoryitems()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItems>* Operate_characterInfo::mutable_inventoryitems()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_characterInfo.inventoryItems)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_inventoryitems();
}
inline const ::DC::Packet::SItems& Operate_characterInfo::inventoryitems(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_characterInfo.inventoryItems)
  return _internal_inventoryitems().Get(index);
}
inline ::DC::Packet::SItems* Operate_characterInfo::add_inventoryitems() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SItems* _add = _internal_mutable_inventoryitems()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_characterInfo.inventoryItems)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItems>& Operate_characterInfo::inventoryitems() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_characterInfo.inventoryItems)
  return _internal_inventoryitems();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItems>&
Operate_characterInfo::_internal_inventoryitems() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inventoryitems_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItems>*
Operate_characterInfo::_internal_mutable_inventoryitems() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.inventoryitems_;
}

// repeated .DC.Packet.SItems storageItems = 9;
inline int Operate_characterInfo::_internal_storageitems_size() const {
  return _internal_storageitems().size();
}
inline int Operate_characterInfo::storageitems_size() const {
  return _internal_storageitems_size();
}
inline ::DC::Packet::SItems* Operate_characterInfo::mutable_storageitems(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_characterInfo.storageItems)
  return _internal_mutable_storageitems()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItems>* Operate_characterInfo::mutable_storageitems()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_characterInfo.storageItems)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_storageitems();
}
inline const ::DC::Packet::SItems& Operate_characterInfo::storageitems(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_characterInfo.storageItems)
  return _internal_storageitems().Get(index);
}
inline ::DC::Packet::SItems* Operate_characterInfo::add_storageitems() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SItems* _add = _internal_mutable_storageitems()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_characterInfo.storageItems)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItems>& Operate_characterInfo::storageitems() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_characterInfo.storageItems)
  return _internal_storageitems();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItems>&
Operate_characterInfo::_internal_storageitems() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.storageitems_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItems>*
Operate_characterInfo::_internal_mutable_storageitems() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.storageitems_;
}

// -------------------------------------------------------------------

// Operate_OperateReportBodyInfo

// uint64 reportId = 1;
inline void Operate_OperateReportBodyInfo::clear_reportid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_OperateReportBodyInfo::reportid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateReportBodyInfo.reportId)
  return _internal_reportid();
}
inline void Operate_OperateReportBodyInfo::set_reportid(::uint64_t value) {
  _internal_set_reportid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateReportBodyInfo.reportId)
}
inline ::uint64_t Operate_OperateReportBodyInfo::_internal_reportid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reportid_;
}
inline void Operate_OperateReportBodyInfo::_internal_set_reportid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportid_ = value;
}

// uint64 reportAccountId = 2;
inline void Operate_OperateReportBodyInfo::clear_reportaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportaccountid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_OperateReportBodyInfo::reportaccountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateReportBodyInfo.reportAccountId)
  return _internal_reportaccountid();
}
inline void Operate_OperateReportBodyInfo::set_reportaccountid(::uint64_t value) {
  _internal_set_reportaccountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateReportBodyInfo.reportAccountId)
}
inline ::uint64_t Operate_OperateReportBodyInfo::_internal_reportaccountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reportaccountid_;
}
inline void Operate_OperateReportBodyInfo::_internal_set_reportaccountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportaccountid_ = value;
}

// uint64 targetCharacterId = 3;
inline void Operate_OperateReportBodyInfo::clear_targetcharacterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetcharacterid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_OperateReportBodyInfo::targetcharacterid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateReportBodyInfo.targetCharacterId)
  return _internal_targetcharacterid();
}
inline void Operate_OperateReportBodyInfo::set_targetcharacterid(::uint64_t value) {
  _internal_set_targetcharacterid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateReportBodyInfo.targetCharacterId)
}
inline ::uint64_t Operate_OperateReportBodyInfo::_internal_targetcharacterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targetcharacterid_;
}
inline void Operate_OperateReportBodyInfo::_internal_set_targetcharacterid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetcharacterid_ = value;
}

// string targetNickname = 4;
inline void Operate_OperateReportBodyInfo::clear_targetnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetnickname_.ClearToEmpty();
}
inline const std::string& Operate_OperateReportBodyInfo::targetnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateReportBodyInfo.targetNickname)
  return _internal_targetnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateReportBodyInfo::set_targetnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateReportBodyInfo.targetNickname)
}
inline std::string* Operate_OperateReportBodyInfo::mutable_targetnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_targetnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateReportBodyInfo.targetNickname)
  return _s;
}
inline const std::string& Operate_OperateReportBodyInfo::_internal_targetnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targetnickname_.Get();
}
inline void Operate_OperateReportBodyInfo::_internal_set_targetnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetnickname_.Set(value, GetArena());
}
inline std::string* Operate_OperateReportBodyInfo::_internal_mutable_targetnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.targetnickname_.Mutable( GetArena());
}
inline std::string* Operate_OperateReportBodyInfo::release_targetnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateReportBodyInfo.targetNickname)
  return _impl_.targetnickname_.Release();
}
inline void Operate_OperateReportBodyInfo::set_allocated_targetnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.targetnickname_.IsDefault()) {
          _impl_.targetnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateReportBodyInfo.targetNickname)
}

// uint64 gameId = 5;
inline void Operate_OperateReportBodyInfo::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_OperateReportBodyInfo::gameid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateReportBodyInfo.gameId)
  return _internal_gameid();
}
inline void Operate_OperateReportBodyInfo::set_gameid(::uint64_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateReportBodyInfo.gameId)
}
inline ::uint64_t Operate_OperateReportBodyInfo::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void Operate_OperateReportBodyInfo::_internal_set_gameid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// .DC.Packet.Operate_OperateFileInfo file = 6;
inline bool Operate_OperateReportBodyInfo::has_file() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.file_ != nullptr);
  return value;
}
inline void Operate_OperateReportBodyInfo::clear_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.file_ != nullptr) _impl_.file_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::Operate_OperateFileInfo& Operate_OperateReportBodyInfo::_internal_file() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::Operate_OperateFileInfo* p = _impl_.file_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::Operate_OperateFileInfo&>(::DC::Packet::_Operate_OperateFileInfo_default_instance_);
}
inline const ::DC::Packet::Operate_OperateFileInfo& Operate_OperateReportBodyInfo::file() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateReportBodyInfo.file)
  return _internal_file();
}
inline void Operate_OperateReportBodyInfo::unsafe_arena_set_allocated_file(::DC::Packet::Operate_OperateFileInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.file_);
  }
  _impl_.file_ = reinterpret_cast<::DC::Packet::Operate_OperateFileInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.Operate_OperateReportBodyInfo.file)
}
inline ::DC::Packet::Operate_OperateFileInfo* Operate_OperateReportBodyInfo::release_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::Operate_OperateFileInfo* released = _impl_.file_;
  _impl_.file_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::Operate_OperateFileInfo* Operate_OperateReportBodyInfo::unsafe_arena_release_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateReportBodyInfo.file)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::Operate_OperateFileInfo* temp = _impl_.file_;
  _impl_.file_ = nullptr;
  return temp;
}
inline ::DC::Packet::Operate_OperateFileInfo* Operate_OperateReportBodyInfo::_internal_mutable_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.file_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::Operate_OperateFileInfo>(GetArena());
    _impl_.file_ = reinterpret_cast<::DC::Packet::Operate_OperateFileInfo*>(p);
  }
  return _impl_.file_;
}
inline ::DC::Packet::Operate_OperateFileInfo* Operate_OperateReportBodyInfo::mutable_file() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::Operate_OperateFileInfo* _msg = _internal_mutable_file();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateReportBodyInfo.file)
  return _msg;
}
inline void Operate_OperateReportBodyInfo::set_allocated_file(::DC::Packet::Operate_OperateFileInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.file_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.file_ = reinterpret_cast<::DC::Packet::Operate_OperateFileInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateReportBodyInfo.file)
}

// string registerDate = 7;
inline void Operate_OperateReportBodyInfo::clear_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.ClearToEmpty();
}
inline const std::string& Operate_OperateReportBodyInfo::registerdate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateReportBodyInfo.registerDate)
  return _internal_registerdate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateReportBodyInfo::set_registerdate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateReportBodyInfo.registerDate)
}
inline std::string* Operate_OperateReportBodyInfo::mutable_registerdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_registerdate();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateReportBodyInfo.registerDate)
  return _s;
}
inline const std::string& Operate_OperateReportBodyInfo::_internal_registerdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.registerdate_.Get();
}
inline void Operate_OperateReportBodyInfo::_internal_set_registerdate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.Set(value, GetArena());
}
inline std::string* Operate_OperateReportBodyInfo::_internal_mutable_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.registerdate_.Mutable( GetArena());
}
inline std::string* Operate_OperateReportBodyInfo::release_registerdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateReportBodyInfo.registerDate)
  return _impl_.registerdate_.Release();
}
inline void Operate_OperateReportBodyInfo::set_allocated_registerdate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registerdate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.registerdate_.IsDefault()) {
          _impl_.registerdate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateReportBodyInfo.registerDate)
}

// -------------------------------------------------------------------

// Operate_OperateIronShieldInfo

// uint64 idx = 1;
inline void Operate_OperateIronShieldInfo::clear_idx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.idx_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_OperateIronShieldInfo::idx() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateIronShieldInfo.idx)
  return _internal_idx();
}
inline void Operate_OperateIronShieldInfo::set_idx(::uint64_t value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateIronShieldInfo.idx)
}
inline ::uint64_t Operate_OperateIronShieldInfo::_internal_idx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.idx_;
}
inline void Operate_OperateIronShieldInfo::_internal_set_idx(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.idx_ = value;
}

// uint64 accountId = 2;
inline void Operate_OperateIronShieldInfo::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_OperateIronShieldInfo::accountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateIronShieldInfo.accountId)
  return _internal_accountid();
}
inline void Operate_OperateIronShieldInfo::set_accountid(::uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateIronShieldInfo.accountId)
}
inline ::uint64_t Operate_OperateIronShieldInfo::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void Operate_OperateIronShieldInfo::_internal_set_accountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// uint64 characterId = 3;
inline void Operate_OperateIronShieldInfo::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_OperateIronShieldInfo::characterid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateIronShieldInfo.characterId)
  return _internal_characterid();
}
inline void Operate_OperateIronShieldInfo::set_characterid(::uint64_t value) {
  _internal_set_characterid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateIronShieldInfo.characterId)
}
inline ::uint64_t Operate_OperateIronShieldInfo::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_;
}
inline void Operate_OperateIronShieldInfo::_internal_set_characterid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_ = value;
}

// string nickname = 4;
inline void Operate_OperateIronShieldInfo::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& Operate_OperateIronShieldInfo::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateIronShieldInfo.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateIronShieldInfo::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateIronShieldInfo.nickname)
}
inline std::string* Operate_OperateIronShieldInfo::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateIronShieldInfo.nickname)
  return _s;
}
inline const std::string& Operate_OperateIronShieldInfo::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nickname_.Get();
}
inline void Operate_OperateIronShieldInfo::_internal_set_nickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* Operate_OperateIronShieldInfo::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* Operate_OperateIronShieldInfo::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateIronShieldInfo.nickname)
  return _impl_.nickname_.Release();
}
inline void Operate_OperateIronShieldInfo::set_allocated_nickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateIronShieldInfo.nickname)
}

// string callbackType = 5;
inline void Operate_OperateIronShieldInfo::clear_callbacktype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.callbacktype_.ClearToEmpty();
}
inline const std::string& Operate_OperateIronShieldInfo::callbacktype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateIronShieldInfo.callbackType)
  return _internal_callbacktype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateIronShieldInfo::set_callbacktype(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.callbacktype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateIronShieldInfo.callbackType)
}
inline std::string* Operate_OperateIronShieldInfo::mutable_callbacktype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_callbacktype();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateIronShieldInfo.callbackType)
  return _s;
}
inline const std::string& Operate_OperateIronShieldInfo::_internal_callbacktype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.callbacktype_.Get();
}
inline void Operate_OperateIronShieldInfo::_internal_set_callbacktype(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.callbacktype_.Set(value, GetArena());
}
inline std::string* Operate_OperateIronShieldInfo::_internal_mutable_callbacktype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.callbacktype_.Mutable( GetArena());
}
inline std::string* Operate_OperateIronShieldInfo::release_callbacktype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateIronShieldInfo.callbackType)
  return _impl_.callbacktype_.Release();
}
inline void Operate_OperateIronShieldInfo::set_allocated_callbacktype(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.callbacktype_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.callbacktype_.IsDefault()) {
          _impl_.callbacktype_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateIronShieldInfo.callbackType)
}

// .DC.Packet.Operate_OperateFileInfo file = 6;
inline bool Operate_OperateIronShieldInfo::has_file() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.file_ != nullptr);
  return value;
}
inline void Operate_OperateIronShieldInfo::clear_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.file_ != nullptr) _impl_.file_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::Operate_OperateFileInfo& Operate_OperateIronShieldInfo::_internal_file() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::Operate_OperateFileInfo* p = _impl_.file_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::Operate_OperateFileInfo&>(::DC::Packet::_Operate_OperateFileInfo_default_instance_);
}
inline const ::DC::Packet::Operate_OperateFileInfo& Operate_OperateIronShieldInfo::file() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateIronShieldInfo.file)
  return _internal_file();
}
inline void Operate_OperateIronShieldInfo::unsafe_arena_set_allocated_file(::DC::Packet::Operate_OperateFileInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.file_);
  }
  _impl_.file_ = reinterpret_cast<::DC::Packet::Operate_OperateFileInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.Operate_OperateIronShieldInfo.file)
}
inline ::DC::Packet::Operate_OperateFileInfo* Operate_OperateIronShieldInfo::release_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::Operate_OperateFileInfo* released = _impl_.file_;
  _impl_.file_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::Operate_OperateFileInfo* Operate_OperateIronShieldInfo::unsafe_arena_release_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateIronShieldInfo.file)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::Operate_OperateFileInfo* temp = _impl_.file_;
  _impl_.file_ = nullptr;
  return temp;
}
inline ::DC::Packet::Operate_OperateFileInfo* Operate_OperateIronShieldInfo::_internal_mutable_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.file_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::Operate_OperateFileInfo>(GetArena());
    _impl_.file_ = reinterpret_cast<::DC::Packet::Operate_OperateFileInfo*>(p);
  }
  return _impl_.file_;
}
inline ::DC::Packet::Operate_OperateFileInfo* Operate_OperateIronShieldInfo::mutable_file() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::Operate_OperateFileInfo* _msg = _internal_mutable_file();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateIronShieldInfo.file)
  return _msg;
}
inline void Operate_OperateIronShieldInfo::set_allocated_file(::DC::Packet::Operate_OperateFileInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.file_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.file_ = reinterpret_cast<::DC::Packet::Operate_OperateFileInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateIronShieldInfo.file)
}

// string RegisterTime = 7;
inline void Operate_OperateIronShieldInfo::clear_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.ClearToEmpty();
}
inline const std::string& Operate_OperateIronShieldInfo::registertime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateIronShieldInfo.RegisterTime)
  return _internal_registertime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateIronShieldInfo::set_registertime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateIronShieldInfo.RegisterTime)
}
inline std::string* Operate_OperateIronShieldInfo::mutable_registertime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_registertime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateIronShieldInfo.RegisterTime)
  return _s;
}
inline const std::string& Operate_OperateIronShieldInfo::_internal_registertime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.registertime_.Get();
}
inline void Operate_OperateIronShieldInfo::_internal_set_registertime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.Set(value, GetArena());
}
inline std::string* Operate_OperateIronShieldInfo::_internal_mutable_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.registertime_.Mutable( GetArena());
}
inline std::string* Operate_OperateIronShieldInfo::release_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateIronShieldInfo.RegisterTime)
  return _impl_.registertime_.Release();
}
inline void Operate_OperateIronShieldInfo::set_allocated_registertime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.registertime_.IsDefault()) {
          _impl_.registertime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateIronShieldInfo.RegisterTime)
}

// repeated string hardwareIds = 8;
inline int Operate_OperateIronShieldInfo::_internal_hardwareids_size() const {
  return _internal_hardwareids().size();
}
inline int Operate_OperateIronShieldInfo::hardwareids_size() const {
  return _internal_hardwareids_size();
}
inline void Operate_OperateIronShieldInfo::clear_hardwareids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareids_.Clear();
}
inline std::string* Operate_OperateIronShieldInfo::add_hardwareids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_hardwareids()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.Operate_OperateIronShieldInfo.hardwareIds)
  return _s;
}
inline const std::string& Operate_OperateIronShieldInfo::hardwareids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateIronShieldInfo.hardwareIds)
  return _internal_hardwareids().Get(index);
}
inline std::string* Operate_OperateIronShieldInfo::mutable_hardwareids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateIronShieldInfo.hardwareIds)
  return _internal_mutable_hardwareids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Operate_OperateIronShieldInfo::set_hardwareids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_hardwareids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateIronShieldInfo.hardwareIds)
}
template <typename Arg_, typename... Args_>
inline void Operate_OperateIronShieldInfo::add_hardwareids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_hardwareids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_OperateIronShieldInfo.hardwareIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Operate_OperateIronShieldInfo::hardwareids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_OperateIronShieldInfo.hardwareIds)
  return _internal_hardwareids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Operate_OperateIronShieldInfo::mutable_hardwareids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_OperateIronShieldInfo.hardwareIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_hardwareids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Operate_OperateIronShieldInfo::_internal_hardwareids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hardwareids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Operate_OperateIronShieldInfo::_internal_mutable_hardwareids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.hardwareids_;
}

// -------------------------------------------------------------------

// Operate_OperateBanUserInfos

// uint64 accountId = 1;
inline void Operate_OperateBanUserInfos::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_OperateBanUserInfos::accountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanUserInfos.accountId)
  return _internal_accountid();
}
inline void Operate_OperateBanUserInfos::set_accountid(::uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanUserInfos.accountId)
}
inline ::uint64_t Operate_OperateBanUserInfos::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void Operate_OperateBanUserInfos::_internal_set_accountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// int32 banType = 2;
inline void Operate_OperateBanUserInfos::clear_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_ = 0;
}
inline ::int32_t Operate_OperateBanUserInfos::bantype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanUserInfos.banType)
  return _internal_bantype();
}
inline void Operate_OperateBanUserInfos::set_bantype(::int32_t value) {
  _internal_set_bantype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanUserInfos.banType)
}
inline ::int32_t Operate_OperateBanUserInfos::_internal_bantype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantype_;
}
inline void Operate_OperateBanUserInfos::_internal_set_bantype(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_ = value;
}

// uint64 logIdx = 3;
inline void Operate_OperateBanUserInfos::clear_logidx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logidx_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_OperateBanUserInfos::logidx() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanUserInfos.logIdx)
  return _internal_logidx();
}
inline void Operate_OperateBanUserInfos::set_logidx(::uint64_t value) {
  _internal_set_logidx(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanUserInfos.logIdx)
}
inline ::uint64_t Operate_OperateBanUserInfos::_internal_logidx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.logidx_;
}
inline void Operate_OperateBanUserInfos::_internal_set_logidx(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logidx_ = value;
}

// string comment = 4;
inline void Operate_OperateBanUserInfos::clear_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.ClearToEmpty();
}
inline const std::string& Operate_OperateBanUserInfos::comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanUserInfos.comment)
  return _internal_comment();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateBanUserInfos::set_comment(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanUserInfos.comment)
}
inline std::string* Operate_OperateBanUserInfos::mutable_comment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_comment();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateBanUserInfos.comment)
  return _s;
}
inline const std::string& Operate_OperateBanUserInfos::_internal_comment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comment_.Get();
}
inline void Operate_OperateBanUserInfos::_internal_set_comment(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.Set(value, GetArena());
}
inline std::string* Operate_OperateBanUserInfos::_internal_mutable_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.comment_.Mutable( GetArena());
}
inline std::string* Operate_OperateBanUserInfos::release_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateBanUserInfos.comment)
  return _impl_.comment_.Release();
}
inline void Operate_OperateBanUserInfos::set_allocated_comment(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.comment_.IsDefault()) {
          _impl_.comment_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateBanUserInfos.comment)
}

// string beginTime = 5;
inline void Operate_OperateBanUserInfos::clear_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begintime_.ClearToEmpty();
}
inline const std::string& Operate_OperateBanUserInfos::begintime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanUserInfos.beginTime)
  return _internal_begintime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateBanUserInfos::set_begintime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begintime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanUserInfos.beginTime)
}
inline std::string* Operate_OperateBanUserInfos::mutable_begintime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_begintime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateBanUserInfos.beginTime)
  return _s;
}
inline const std::string& Operate_OperateBanUserInfos::_internal_begintime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.begintime_.Get();
}
inline void Operate_OperateBanUserInfos::_internal_set_begintime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begintime_.Set(value, GetArena());
}
inline std::string* Operate_OperateBanUserInfos::_internal_mutable_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.begintime_.Mutable( GetArena());
}
inline std::string* Operate_OperateBanUserInfos::release_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateBanUserInfos.beginTime)
  return _impl_.begintime_.Release();
}
inline void Operate_OperateBanUserInfos::set_allocated_begintime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begintime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.begintime_.IsDefault()) {
          _impl_.begintime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateBanUserInfos.beginTime)
}

// string endTime = 6;
inline void Operate_OperateBanUserInfos::clear_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endtime_.ClearToEmpty();
}
inline const std::string& Operate_OperateBanUserInfos::endtime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanUserInfos.endTime)
  return _internal_endtime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateBanUserInfos::set_endtime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endtime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanUserInfos.endTime)
}
inline std::string* Operate_OperateBanUserInfos::mutable_endtime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_endtime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateBanUserInfos.endTime)
  return _s;
}
inline const std::string& Operate_OperateBanUserInfos::_internal_endtime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.endtime_.Get();
}
inline void Operate_OperateBanUserInfos::_internal_set_endtime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endtime_.Set(value, GetArena());
}
inline std::string* Operate_OperateBanUserInfos::_internal_mutable_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.endtime_.Mutable( GetArena());
}
inline std::string* Operate_OperateBanUserInfos::release_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateBanUserInfos.endTime)
  return _impl_.endtime_.Release();
}
inline void Operate_OperateBanUserInfos::set_allocated_endtime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endtime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.endtime_.IsDefault()) {
          _impl_.endtime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateBanUserInfos.endTime)
}

// string registerTime = 7;
inline void Operate_OperateBanUserInfos::clear_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.ClearToEmpty();
}
inline const std::string& Operate_OperateBanUserInfos::registertime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanUserInfos.registerTime)
  return _internal_registertime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateBanUserInfos::set_registertime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanUserInfos.registerTime)
}
inline std::string* Operate_OperateBanUserInfos::mutable_registertime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_registertime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateBanUserInfos.registerTime)
  return _s;
}
inline const std::string& Operate_OperateBanUserInfos::_internal_registertime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.registertime_.Get();
}
inline void Operate_OperateBanUserInfos::_internal_set_registertime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.Set(value, GetArena());
}
inline std::string* Operate_OperateBanUserInfos::_internal_mutable_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.registertime_.Mutable( GetArena());
}
inline std::string* Operate_OperateBanUserInfos::release_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateBanUserInfos.registerTime)
  return _impl_.registertime_.Release();
}
inline void Operate_OperateBanUserInfos::set_allocated_registertime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.registertime_.IsDefault()) {
          _impl_.registertime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateBanUserInfos.registerTime)
}

// string isHardwareBan = 8;
inline void Operate_OperateBanUserInfos::clear_ishardwareban() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ishardwareban_.ClearToEmpty();
}
inline const std::string& Operate_OperateBanUserInfos::ishardwareban() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanUserInfos.isHardwareBan)
  return _internal_ishardwareban();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateBanUserInfos::set_ishardwareban(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ishardwareban_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanUserInfos.isHardwareBan)
}
inline std::string* Operate_OperateBanUserInfos::mutable_ishardwareban() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ishardwareban();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateBanUserInfos.isHardwareBan)
  return _s;
}
inline const std::string& Operate_OperateBanUserInfos::_internal_ishardwareban() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ishardwareban_.Get();
}
inline void Operate_OperateBanUserInfos::_internal_set_ishardwareban(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ishardwareban_.Set(value, GetArena());
}
inline std::string* Operate_OperateBanUserInfos::_internal_mutable_ishardwareban() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ishardwareban_.Mutable( GetArena());
}
inline std::string* Operate_OperateBanUserInfos::release_ishardwareban() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateBanUserInfos.isHardwareBan)
  return _impl_.ishardwareban_.Release();
}
inline void Operate_OperateBanUserInfos::set_allocated_ishardwareban(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ishardwareban_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ishardwareban_.IsDefault()) {
          _impl_.ishardwareban_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateBanUserInfos.isHardwareBan)
}

// -------------------------------------------------------------------

// Operate_OperateLoginLogInfo

// uint64 accountId = 1;
inline void Operate_OperateLoginLogInfo::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_OperateLoginLogInfo::accountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateLoginLogInfo.accountId)
  return _internal_accountid();
}
inline void Operate_OperateLoginLogInfo::set_accountid(::uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateLoginLogInfo.accountId)
}
inline ::uint64_t Operate_OperateLoginLogInfo::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void Operate_OperateLoginLogInfo::_internal_set_accountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// string loginTime = 2;
inline void Operate_OperateLoginLogInfo::clear_logintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logintime_.ClearToEmpty();
}
inline const std::string& Operate_OperateLoginLogInfo::logintime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateLoginLogInfo.loginTime)
  return _internal_logintime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateLoginLogInfo::set_logintime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logintime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateLoginLogInfo.loginTime)
}
inline std::string* Operate_OperateLoginLogInfo::mutable_logintime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_logintime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateLoginLogInfo.loginTime)
  return _s;
}
inline const std::string& Operate_OperateLoginLogInfo::_internal_logintime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.logintime_.Get();
}
inline void Operate_OperateLoginLogInfo::_internal_set_logintime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logintime_.Set(value, GetArena());
}
inline std::string* Operate_OperateLoginLogInfo::_internal_mutable_logintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.logintime_.Mutable( GetArena());
}
inline std::string* Operate_OperateLoginLogInfo::release_logintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateLoginLogInfo.loginTime)
  return _impl_.logintime_.Release();
}
inline void Operate_OperateLoginLogInfo::set_allocated_logintime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logintime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.logintime_.IsDefault()) {
          _impl_.logintime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateLoginLogInfo.loginTime)
}

// string logoutTime = 3;
inline void Operate_OperateLoginLogInfo::clear_logouttime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logouttime_.ClearToEmpty();
}
inline const std::string& Operate_OperateLoginLogInfo::logouttime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateLoginLogInfo.logoutTime)
  return _internal_logouttime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateLoginLogInfo::set_logouttime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logouttime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateLoginLogInfo.logoutTime)
}
inline std::string* Operate_OperateLoginLogInfo::mutable_logouttime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_logouttime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateLoginLogInfo.logoutTime)
  return _s;
}
inline const std::string& Operate_OperateLoginLogInfo::_internal_logouttime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.logouttime_.Get();
}
inline void Operate_OperateLoginLogInfo::_internal_set_logouttime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logouttime_.Set(value, GetArena());
}
inline std::string* Operate_OperateLoginLogInfo::_internal_mutable_logouttime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.logouttime_.Mutable( GetArena());
}
inline std::string* Operate_OperateLoginLogInfo::release_logouttime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateLoginLogInfo.logoutTime)
  return _impl_.logouttime_.Release();
}
inline void Operate_OperateLoginLogInfo::set_allocated_logouttime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logouttime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.logouttime_.IsDefault()) {
          _impl_.logouttime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateLoginLogInfo.logoutTime)
}

// string ipAddress = 4;
inline void Operate_OperateLoginLogInfo::clear_ipaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ipaddress_.ClearToEmpty();
}
inline const std::string& Operate_OperateLoginLogInfo::ipaddress() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateLoginLogInfo.ipAddress)
  return _internal_ipaddress();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateLoginLogInfo::set_ipaddress(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ipaddress_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateLoginLogInfo.ipAddress)
}
inline std::string* Operate_OperateLoginLogInfo::mutable_ipaddress() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ipaddress();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateLoginLogInfo.ipAddress)
  return _s;
}
inline const std::string& Operate_OperateLoginLogInfo::_internal_ipaddress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ipaddress_.Get();
}
inline void Operate_OperateLoginLogInfo::_internal_set_ipaddress(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ipaddress_.Set(value, GetArena());
}
inline std::string* Operate_OperateLoginLogInfo::_internal_mutable_ipaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ipaddress_.Mutable( GetArena());
}
inline std::string* Operate_OperateLoginLogInfo::release_ipaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateLoginLogInfo.ipAddress)
  return _impl_.ipaddress_.Release();
}
inline void Operate_OperateLoginLogInfo::set_allocated_ipaddress(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ipaddress_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ipaddress_.IsDefault()) {
          _impl_.ipaddress_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateLoginLogInfo.ipAddress)
}

// -------------------------------------------------------------------

// Operate_OperateHardwareAccountInfo

// uint64 accountId = 1;
inline void Operate_OperateHardwareAccountInfo::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_OperateHardwareAccountInfo::accountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateHardwareAccountInfo.accountId)
  return _internal_accountid();
}
inline void Operate_OperateHardwareAccountInfo::set_accountid(::uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateHardwareAccountInfo.accountId)
}
inline ::uint64_t Operate_OperateHardwareAccountInfo::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void Operate_OperateHardwareAccountInfo::_internal_set_accountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// string hardwareId = 2;
inline void Operate_OperateHardwareAccountInfo::clear_hardwareid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.ClearToEmpty();
}
inline const std::string& Operate_OperateHardwareAccountInfo::hardwareid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateHardwareAccountInfo.hardwareId)
  return _internal_hardwareid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateHardwareAccountInfo::set_hardwareid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateHardwareAccountInfo.hardwareId)
}
inline std::string* Operate_OperateHardwareAccountInfo::mutable_hardwareid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hardwareid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateHardwareAccountInfo.hardwareId)
  return _s;
}
inline const std::string& Operate_OperateHardwareAccountInfo::_internal_hardwareid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hardwareid_.Get();
}
inline void Operate_OperateHardwareAccountInfo::_internal_set_hardwareid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.Set(value, GetArena());
}
inline std::string* Operate_OperateHardwareAccountInfo::_internal_mutable_hardwareid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hardwareid_.Mutable( GetArena());
}
inline std::string* Operate_OperateHardwareAccountInfo::release_hardwareid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateHardwareAccountInfo.hardwareId)
  return _impl_.hardwareid_.Release();
}
inline void Operate_OperateHardwareAccountInfo::set_allocated_hardwareid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hardwareid_.IsDefault()) {
          _impl_.hardwareid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateHardwareAccountInfo.hardwareId)
}

// string lastUpdateDate = 3;
inline void Operate_OperateHardwareAccountInfo::clear_lastupdatedate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastupdatedate_.ClearToEmpty();
}
inline const std::string& Operate_OperateHardwareAccountInfo::lastupdatedate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateHardwareAccountInfo.lastUpdateDate)
  return _internal_lastupdatedate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateHardwareAccountInfo::set_lastupdatedate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastupdatedate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateHardwareAccountInfo.lastUpdateDate)
}
inline std::string* Operate_OperateHardwareAccountInfo::mutable_lastupdatedate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lastupdatedate();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateHardwareAccountInfo.lastUpdateDate)
  return _s;
}
inline const std::string& Operate_OperateHardwareAccountInfo::_internal_lastupdatedate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastupdatedate_.Get();
}
inline void Operate_OperateHardwareAccountInfo::_internal_set_lastupdatedate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastupdatedate_.Set(value, GetArena());
}
inline std::string* Operate_OperateHardwareAccountInfo::_internal_mutable_lastupdatedate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.lastupdatedate_.Mutable( GetArena());
}
inline std::string* Operate_OperateHardwareAccountInfo::release_lastupdatedate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateHardwareAccountInfo.lastUpdateDate)
  return _impl_.lastupdatedate_.Release();
}
inline void Operate_OperateHardwareAccountInfo::set_allocated_lastupdatedate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastupdatedate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lastupdatedate_.IsDefault()) {
          _impl_.lastupdatedate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateHardwareAccountInfo.lastUpdateDate)
}

// string isHardwareBan = 4;
inline void Operate_OperateHardwareAccountInfo::clear_ishardwareban() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ishardwareban_.ClearToEmpty();
}
inline const std::string& Operate_OperateHardwareAccountInfo::ishardwareban() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateHardwareAccountInfo.isHardwareBan)
  return _internal_ishardwareban();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateHardwareAccountInfo::set_ishardwareban(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ishardwareban_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateHardwareAccountInfo.isHardwareBan)
}
inline std::string* Operate_OperateHardwareAccountInfo::mutable_ishardwareban() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ishardwareban();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateHardwareAccountInfo.isHardwareBan)
  return _s;
}
inline const std::string& Operate_OperateHardwareAccountInfo::_internal_ishardwareban() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ishardwareban_.Get();
}
inline void Operate_OperateHardwareAccountInfo::_internal_set_ishardwareban(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ishardwareban_.Set(value, GetArena());
}
inline std::string* Operate_OperateHardwareAccountInfo::_internal_mutable_ishardwareban() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ishardwareban_.Mutable( GetArena());
}
inline std::string* Operate_OperateHardwareAccountInfo::release_ishardwareban() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateHardwareAccountInfo.isHardwareBan)
  return _impl_.ishardwareban_.Release();
}
inline void Operate_OperateHardwareAccountInfo::set_allocated_ishardwareban(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ishardwareban_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ishardwareban_.IsDefault()) {
          _impl_.ishardwareban_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateHardwareAccountInfo.isHardwareBan)
}

// -------------------------------------------------------------------

// Operate_OperateDuplicateHardwareInfo

// uint64 accountId = 1;
inline void Operate_OperateDuplicateHardwareInfo::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_OperateDuplicateHardwareInfo::accountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateDuplicateHardwareInfo.accountId)
  return _internal_accountid();
}
inline void Operate_OperateDuplicateHardwareInfo::set_accountid(::uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateDuplicateHardwareInfo.accountId)
}
inline ::uint64_t Operate_OperateDuplicateHardwareInfo::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void Operate_OperateDuplicateHardwareInfo::_internal_set_accountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// string hardwareId = 2;
inline void Operate_OperateDuplicateHardwareInfo::clear_hardwareid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.ClearToEmpty();
}
inline const std::string& Operate_OperateDuplicateHardwareInfo::hardwareid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateDuplicateHardwareInfo.hardwareId)
  return _internal_hardwareid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateDuplicateHardwareInfo::set_hardwareid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateDuplicateHardwareInfo.hardwareId)
}
inline std::string* Operate_OperateDuplicateHardwareInfo::mutable_hardwareid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hardwareid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateDuplicateHardwareInfo.hardwareId)
  return _s;
}
inline const std::string& Operate_OperateDuplicateHardwareInfo::_internal_hardwareid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hardwareid_.Get();
}
inline void Operate_OperateDuplicateHardwareInfo::_internal_set_hardwareid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.Set(value, GetArena());
}
inline std::string* Operate_OperateDuplicateHardwareInfo::_internal_mutable_hardwareid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hardwareid_.Mutable( GetArena());
}
inline std::string* Operate_OperateDuplicateHardwareInfo::release_hardwareid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateDuplicateHardwareInfo.hardwareId)
  return _impl_.hardwareid_.Release();
}
inline void Operate_OperateDuplicateHardwareInfo::set_allocated_hardwareid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hardwareid_.IsDefault()) {
          _impl_.hardwareid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateDuplicateHardwareInfo.hardwareId)
}

// string isAccountBan = 3;
inline void Operate_OperateDuplicateHardwareInfo::clear_isaccountban() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isaccountban_.ClearToEmpty();
}
inline const std::string& Operate_OperateDuplicateHardwareInfo::isaccountban() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateDuplicateHardwareInfo.isAccountBan)
  return _internal_isaccountban();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateDuplicateHardwareInfo::set_isaccountban(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isaccountban_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateDuplicateHardwareInfo.isAccountBan)
}
inline std::string* Operate_OperateDuplicateHardwareInfo::mutable_isaccountban() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_isaccountban();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateDuplicateHardwareInfo.isAccountBan)
  return _s;
}
inline const std::string& Operate_OperateDuplicateHardwareInfo::_internal_isaccountban() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isaccountban_.Get();
}
inline void Operate_OperateDuplicateHardwareInfo::_internal_set_isaccountban(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isaccountban_.Set(value, GetArena());
}
inline std::string* Operate_OperateDuplicateHardwareInfo::_internal_mutable_isaccountban() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.isaccountban_.Mutable( GetArena());
}
inline std::string* Operate_OperateDuplicateHardwareInfo::release_isaccountban() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateDuplicateHardwareInfo.isAccountBan)
  return _impl_.isaccountban_.Release();
}
inline void Operate_OperateDuplicateHardwareInfo::set_allocated_isaccountban(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isaccountban_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.isaccountban_.IsDefault()) {
          _impl_.isaccountban_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateDuplicateHardwareInfo.isAccountBan)
}

// -------------------------------------------------------------------

// Operate_OperateHardwareInfo

// repeated .DC.Packet.Operate_OperateHardwareAccountInfo hardwareAccountInfos = 1;
inline int Operate_OperateHardwareInfo::_internal_hardwareaccountinfos_size() const {
  return _internal_hardwareaccountinfos().size();
}
inline int Operate_OperateHardwareInfo::hardwareaccountinfos_size() const {
  return _internal_hardwareaccountinfos_size();
}
inline void Operate_OperateHardwareInfo::clear_hardwareaccountinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareaccountinfos_.Clear();
}
inline ::DC::Packet::Operate_OperateHardwareAccountInfo* Operate_OperateHardwareInfo::mutable_hardwareaccountinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateHardwareInfo.hardwareAccountInfos)
  return _internal_mutable_hardwareaccountinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateHardwareAccountInfo>* Operate_OperateHardwareInfo::mutable_hardwareaccountinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_OperateHardwareInfo.hardwareAccountInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_hardwareaccountinfos();
}
inline const ::DC::Packet::Operate_OperateHardwareAccountInfo& Operate_OperateHardwareInfo::hardwareaccountinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateHardwareInfo.hardwareAccountInfos)
  return _internal_hardwareaccountinfos().Get(index);
}
inline ::DC::Packet::Operate_OperateHardwareAccountInfo* Operate_OperateHardwareInfo::add_hardwareaccountinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_OperateHardwareAccountInfo* _add = _internal_mutable_hardwareaccountinfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_OperateHardwareInfo.hardwareAccountInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateHardwareAccountInfo>& Operate_OperateHardwareInfo::hardwareaccountinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_OperateHardwareInfo.hardwareAccountInfos)
  return _internal_hardwareaccountinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateHardwareAccountInfo>&
Operate_OperateHardwareInfo::_internal_hardwareaccountinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hardwareaccountinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateHardwareAccountInfo>*
Operate_OperateHardwareInfo::_internal_mutable_hardwareaccountinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.hardwareaccountinfos_;
}

// repeated .DC.Packet.Operate_OperateDuplicateHardwareInfo duplicateHardwareInfos = 2;
inline int Operate_OperateHardwareInfo::_internal_duplicatehardwareinfos_size() const {
  return _internal_duplicatehardwareinfos().size();
}
inline int Operate_OperateHardwareInfo::duplicatehardwareinfos_size() const {
  return _internal_duplicatehardwareinfos_size();
}
inline void Operate_OperateHardwareInfo::clear_duplicatehardwareinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duplicatehardwareinfos_.Clear();
}
inline ::DC::Packet::Operate_OperateDuplicateHardwareInfo* Operate_OperateHardwareInfo::mutable_duplicatehardwareinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateHardwareInfo.duplicateHardwareInfos)
  return _internal_mutable_duplicatehardwareinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateDuplicateHardwareInfo>* Operate_OperateHardwareInfo::mutable_duplicatehardwareinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_OperateHardwareInfo.duplicateHardwareInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_duplicatehardwareinfos();
}
inline const ::DC::Packet::Operate_OperateDuplicateHardwareInfo& Operate_OperateHardwareInfo::duplicatehardwareinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateHardwareInfo.duplicateHardwareInfos)
  return _internal_duplicatehardwareinfos().Get(index);
}
inline ::DC::Packet::Operate_OperateDuplicateHardwareInfo* Operate_OperateHardwareInfo::add_duplicatehardwareinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_OperateDuplicateHardwareInfo* _add = _internal_mutable_duplicatehardwareinfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_OperateHardwareInfo.duplicateHardwareInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateDuplicateHardwareInfo>& Operate_OperateHardwareInfo::duplicatehardwareinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_OperateHardwareInfo.duplicateHardwareInfos)
  return _internal_duplicatehardwareinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateDuplicateHardwareInfo>&
Operate_OperateHardwareInfo::_internal_duplicatehardwareinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.duplicatehardwareinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateDuplicateHardwareInfo>*
Operate_OperateHardwareInfo::_internal_mutable_duplicatehardwareinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.duplicatehardwareinfos_;
}

// -------------------------------------------------------------------

// Operate_OperateFileInfo

// string name = 1;
inline void Operate_OperateFileInfo::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Operate_OperateFileInfo::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateFileInfo.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateFileInfo::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateFileInfo.name)
}
inline std::string* Operate_OperateFileInfo::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateFileInfo.name)
  return _s;
}
inline const std::string& Operate_OperateFileInfo::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Operate_OperateFileInfo::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Operate_OperateFileInfo::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Operate_OperateFileInfo::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateFileInfo.name)
  return _impl_.name_.Release();
}
inline void Operate_OperateFileInfo::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateFileInfo.name)
}

// string url = 2;
inline void Operate_OperateFileInfo::clear_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& Operate_OperateFileInfo::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateFileInfo.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateFileInfo::set_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateFileInfo.url)
}
inline std::string* Operate_OperateFileInfo::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateFileInfo.url)
  return _s;
}
inline const std::string& Operate_OperateFileInfo::_internal_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.url_.Get();
}
inline void Operate_OperateFileInfo::_internal_set_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.Set(value, GetArena());
}
inline std::string* Operate_OperateFileInfo::_internal_mutable_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* Operate_OperateFileInfo::release_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateFileInfo.url)
  return _impl_.url_.Release();
}
inline void Operate_OperateFileInfo::set_allocated_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateFileInfo.url)
}

// -------------------------------------------------------------------

// Operate_OperateBanInfo

// string accountId = 1;
inline void Operate_OperateBanInfo::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& Operate_OperateBanInfo::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanInfo.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateBanInfo::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanInfo.accountId)
}
inline std::string* Operate_OperateBanInfo::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateBanInfo.accountId)
  return _s;
}
inline const std::string& Operate_OperateBanInfo::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void Operate_OperateBanInfo::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* Operate_OperateBanInfo::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* Operate_OperateBanInfo::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateBanInfo.accountId)
  return _impl_.accountid_.Release();
}
inline void Operate_OperateBanInfo::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateBanInfo.accountId)
}

// string banType = 2;
inline void Operate_OperateBanInfo::clear_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_.ClearToEmpty();
}
inline const std::string& Operate_OperateBanInfo::bantype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanInfo.banType)
  return _internal_bantype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateBanInfo::set_bantype(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanInfo.banType)
}
inline std::string* Operate_OperateBanInfo::mutable_bantype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bantype();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateBanInfo.banType)
  return _s;
}
inline const std::string& Operate_OperateBanInfo::_internal_bantype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantype_.Get();
}
inline void Operate_OperateBanInfo::_internal_set_bantype(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_.Set(value, GetArena());
}
inline std::string* Operate_OperateBanInfo::_internal_mutable_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bantype_.Mutable( GetArena());
}
inline std::string* Operate_OperateBanInfo::release_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateBanInfo.banType)
  return _impl_.bantype_.Release();
}
inline void Operate_OperateBanInfo::set_allocated_bantype(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bantype_.IsDefault()) {
          _impl_.bantype_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateBanInfo.banType)
}

// string comment = 3;
inline void Operate_OperateBanInfo::clear_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.ClearToEmpty();
}
inline const std::string& Operate_OperateBanInfo::comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanInfo.comment)
  return _internal_comment();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateBanInfo::set_comment(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanInfo.comment)
}
inline std::string* Operate_OperateBanInfo::mutable_comment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_comment();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateBanInfo.comment)
  return _s;
}
inline const std::string& Operate_OperateBanInfo::_internal_comment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comment_.Get();
}
inline void Operate_OperateBanInfo::_internal_set_comment(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.Set(value, GetArena());
}
inline std::string* Operate_OperateBanInfo::_internal_mutable_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.comment_.Mutable( GetArena());
}
inline std::string* Operate_OperateBanInfo::release_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateBanInfo.comment)
  return _impl_.comment_.Release();
}
inline void Operate_OperateBanInfo::set_allocated_comment(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.comment_.IsDefault()) {
          _impl_.comment_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateBanInfo.comment)
}

// string registerTime = 4;
inline void Operate_OperateBanInfo::clear_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.ClearToEmpty();
}
inline const std::string& Operate_OperateBanInfo::registertime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanInfo.registerTime)
  return _internal_registertime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateBanInfo::set_registertime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanInfo.registerTime)
}
inline std::string* Operate_OperateBanInfo::mutable_registertime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_registertime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateBanInfo.registerTime)
  return _s;
}
inline const std::string& Operate_OperateBanInfo::_internal_registertime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.registertime_.Get();
}
inline void Operate_OperateBanInfo::_internal_set_registertime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.Set(value, GetArena());
}
inline std::string* Operate_OperateBanInfo::_internal_mutable_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.registertime_.Mutable( GetArena());
}
inline std::string* Operate_OperateBanInfo::release_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateBanInfo.registerTime)
  return _impl_.registertime_.Release();
}
inline void Operate_OperateBanInfo::set_allocated_registertime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.registertime_.IsDefault()) {
          _impl_.registertime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateBanInfo.registerTime)
}

// string beginTime = 5;
inline void Operate_OperateBanInfo::clear_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begintime_.ClearToEmpty();
}
inline const std::string& Operate_OperateBanInfo::begintime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanInfo.beginTime)
  return _internal_begintime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateBanInfo::set_begintime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begintime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanInfo.beginTime)
}
inline std::string* Operate_OperateBanInfo::mutable_begintime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_begintime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateBanInfo.beginTime)
  return _s;
}
inline const std::string& Operate_OperateBanInfo::_internal_begintime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.begintime_.Get();
}
inline void Operate_OperateBanInfo::_internal_set_begintime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begintime_.Set(value, GetArena());
}
inline std::string* Operate_OperateBanInfo::_internal_mutable_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.begintime_.Mutable( GetArena());
}
inline std::string* Operate_OperateBanInfo::release_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateBanInfo.beginTime)
  return _impl_.begintime_.Release();
}
inline void Operate_OperateBanInfo::set_allocated_begintime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begintime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.begintime_.IsDefault()) {
          _impl_.begintime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateBanInfo.beginTime)
}

// string endTime = 6;
inline void Operate_OperateBanInfo::clear_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endtime_.ClearToEmpty();
}
inline const std::string& Operate_OperateBanInfo::endtime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanInfo.endTime)
  return _internal_endtime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateBanInfo::set_endtime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endtime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanInfo.endTime)
}
inline std::string* Operate_OperateBanInfo::mutable_endtime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_endtime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateBanInfo.endTime)
  return _s;
}
inline const std::string& Operate_OperateBanInfo::_internal_endtime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.endtime_.Get();
}
inline void Operate_OperateBanInfo::_internal_set_endtime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endtime_.Set(value, GetArena());
}
inline std::string* Operate_OperateBanInfo::_internal_mutable_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.endtime_.Mutable( GetArena());
}
inline std::string* Operate_OperateBanInfo::release_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateBanInfo.endTime)
  return _impl_.endtime_.Release();
}
inline void Operate_OperateBanInfo::set_allocated_endtime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endtime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.endtime_.IsDefault()) {
          _impl_.endtime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateBanInfo.endTime)
}

// -------------------------------------------------------------------

// Operate_OperateBanHardwareInfo

// string hardwareId = 1;
inline void Operate_OperateBanHardwareInfo::clear_hardwareid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.ClearToEmpty();
}
inline const std::string& Operate_OperateBanHardwareInfo::hardwareid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanHardwareInfo.hardwareId)
  return _internal_hardwareid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateBanHardwareInfo::set_hardwareid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanHardwareInfo.hardwareId)
}
inline std::string* Operate_OperateBanHardwareInfo::mutable_hardwareid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hardwareid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateBanHardwareInfo.hardwareId)
  return _s;
}
inline const std::string& Operate_OperateBanHardwareInfo::_internal_hardwareid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hardwareid_.Get();
}
inline void Operate_OperateBanHardwareInfo::_internal_set_hardwareid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.Set(value, GetArena());
}
inline std::string* Operate_OperateBanHardwareInfo::_internal_mutable_hardwareid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hardwareid_.Mutable( GetArena());
}
inline std::string* Operate_OperateBanHardwareInfo::release_hardwareid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateBanHardwareInfo.hardwareId)
  return _impl_.hardwareid_.Release();
}
inline void Operate_OperateBanHardwareInfo::set_allocated_hardwareid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hardwareid_.IsDefault()) {
          _impl_.hardwareid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateBanHardwareInfo.hardwareId)
}

// string banType = 2;
inline void Operate_OperateBanHardwareInfo::clear_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_.ClearToEmpty();
}
inline const std::string& Operate_OperateBanHardwareInfo::bantype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanHardwareInfo.banType)
  return _internal_bantype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateBanHardwareInfo::set_bantype(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanHardwareInfo.banType)
}
inline std::string* Operate_OperateBanHardwareInfo::mutable_bantype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bantype();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateBanHardwareInfo.banType)
  return _s;
}
inline const std::string& Operate_OperateBanHardwareInfo::_internal_bantype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantype_.Get();
}
inline void Operate_OperateBanHardwareInfo::_internal_set_bantype(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_.Set(value, GetArena());
}
inline std::string* Operate_OperateBanHardwareInfo::_internal_mutable_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bantype_.Mutable( GetArena());
}
inline std::string* Operate_OperateBanHardwareInfo::release_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateBanHardwareInfo.banType)
  return _impl_.bantype_.Release();
}
inline void Operate_OperateBanHardwareInfo::set_allocated_bantype(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bantype_.IsDefault()) {
          _impl_.bantype_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateBanHardwareInfo.banType)
}

// string comment = 3;
inline void Operate_OperateBanHardwareInfo::clear_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.ClearToEmpty();
}
inline const std::string& Operate_OperateBanHardwareInfo::comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanHardwareInfo.comment)
  return _internal_comment();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateBanHardwareInfo::set_comment(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanHardwareInfo.comment)
}
inline std::string* Operate_OperateBanHardwareInfo::mutable_comment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_comment();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateBanHardwareInfo.comment)
  return _s;
}
inline const std::string& Operate_OperateBanHardwareInfo::_internal_comment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comment_.Get();
}
inline void Operate_OperateBanHardwareInfo::_internal_set_comment(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.Set(value, GetArena());
}
inline std::string* Operate_OperateBanHardwareInfo::_internal_mutable_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.comment_.Mutable( GetArena());
}
inline std::string* Operate_OperateBanHardwareInfo::release_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateBanHardwareInfo.comment)
  return _impl_.comment_.Release();
}
inline void Operate_OperateBanHardwareInfo::set_allocated_comment(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.comment_.IsDefault()) {
          _impl_.comment_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateBanHardwareInfo.comment)
}

// string registerTime = 4;
inline void Operate_OperateBanHardwareInfo::clear_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.ClearToEmpty();
}
inline const std::string& Operate_OperateBanHardwareInfo::registertime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperateBanHardwareInfo.registerTime)
  return _internal_registertime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperateBanHardwareInfo::set_registertime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperateBanHardwareInfo.registerTime)
}
inline std::string* Operate_OperateBanHardwareInfo::mutable_registertime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_registertime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperateBanHardwareInfo.registerTime)
  return _s;
}
inline const std::string& Operate_OperateBanHardwareInfo::_internal_registertime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.registertime_.Get();
}
inline void Operate_OperateBanHardwareInfo::_internal_set_registertime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.Set(value, GetArena());
}
inline std::string* Operate_OperateBanHardwareInfo::_internal_mutable_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.registertime_.Mutable( GetArena());
}
inline std::string* Operate_OperateBanHardwareInfo::release_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperateBanHardwareInfo.registerTime)
  return _impl_.registertime_.Release();
}
inline void Operate_OperateBanHardwareInfo::set_allocated_registertime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.registertime_.IsDefault()) {
          _impl_.registertime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperateBanHardwareInfo.registerTime)
}

// -------------------------------------------------------------------

// Operate_OperatePlatformInfo

// string ironmaceid = 1;
inline void Operate_OperatePlatformInfo::clear_ironmaceid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ironmaceid_.ClearToEmpty();
}
inline const std::string& Operate_OperatePlatformInfo::ironmaceid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperatePlatformInfo.ironmaceid)
  return _internal_ironmaceid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperatePlatformInfo::set_ironmaceid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ironmaceid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperatePlatformInfo.ironmaceid)
}
inline std::string* Operate_OperatePlatformInfo::mutable_ironmaceid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ironmaceid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperatePlatformInfo.ironmaceid)
  return _s;
}
inline const std::string& Operate_OperatePlatformInfo::_internal_ironmaceid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ironmaceid_.Get();
}
inline void Operate_OperatePlatformInfo::_internal_set_ironmaceid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ironmaceid_.Set(value, GetArena());
}
inline std::string* Operate_OperatePlatformInfo::_internal_mutable_ironmaceid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ironmaceid_.Mutable( GetArena());
}
inline std::string* Operate_OperatePlatformInfo::release_ironmaceid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperatePlatformInfo.ironmaceid)
  return _impl_.ironmaceid_.Release();
}
inline void Operate_OperatePlatformInfo::set_allocated_ironmaceid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ironmaceid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ironmaceid_.IsDefault()) {
          _impl_.ironmaceid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperatePlatformInfo.ironmaceid)
}

// string email = 2;
inline void Operate_OperatePlatformInfo::clear_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_.ClearToEmpty();
}
inline const std::string& Operate_OperatePlatformInfo::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperatePlatformInfo.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperatePlatformInfo::set_email(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperatePlatformInfo.email)
}
inline std::string* Operate_OperatePlatformInfo::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperatePlatformInfo.email)
  return _s;
}
inline const std::string& Operate_OperatePlatformInfo::_internal_email() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.email_.Get();
}
inline void Operate_OperatePlatformInfo::_internal_set_email(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_.Set(value, GetArena());
}
inline std::string* Operate_OperatePlatformInfo::_internal_mutable_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* Operate_OperatePlatformInfo::release_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperatePlatformInfo.email)
  return _impl_.email_.Release();
}
inline void Operate_OperatePlatformInfo::set_allocated_email(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperatePlatformInfo.email)
}

// string username = 3;
inline void Operate_OperatePlatformInfo::clear_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.ClearToEmpty();
}
inline const std::string& Operate_OperatePlatformInfo::username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperatePlatformInfo.username)
  return _internal_username();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperatePlatformInfo::set_username(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperatePlatformInfo.username)
}
inline std::string* Operate_OperatePlatformInfo::mutable_username() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperatePlatformInfo.username)
  return _s;
}
inline const std::string& Operate_OperatePlatformInfo::_internal_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.username_.Get();
}
inline void Operate_OperatePlatformInfo::_internal_set_username(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.Set(value, GetArena());
}
inline std::string* Operate_OperatePlatformInfo::_internal_mutable_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.username_.Mutable( GetArena());
}
inline std::string* Operate_OperatePlatformInfo::release_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperatePlatformInfo.username)
  return _impl_.username_.Release();
}
inline void Operate_OperatePlatformInfo::set_allocated_username(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.username_.IsDefault()) {
          _impl_.username_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperatePlatformInfo.username)
}

// string accountNickName = 4;
inline void Operate_OperatePlatformInfo::clear_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.ClearToEmpty();
}
inline const std::string& Operate_OperatePlatformInfo::accountnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_OperatePlatformInfo.accountNickName)
  return _internal_accountnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_OperatePlatformInfo::set_accountnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_OperatePlatformInfo.accountNickName)
}
inline std::string* Operate_OperatePlatformInfo::mutable_accountnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_OperatePlatformInfo.accountNickName)
  return _s;
}
inline const std::string& Operate_OperatePlatformInfo::_internal_accountnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountnickname_.Get();
}
inline void Operate_OperatePlatformInfo::_internal_set_accountnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(value, GetArena());
}
inline std::string* Operate_OperatePlatformInfo::_internal_mutable_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountnickname_.Mutable( GetArena());
}
inline std::string* Operate_OperatePlatformInfo::release_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_OperatePlatformInfo.accountNickName)
  return _impl_.accountnickname_.Release();
}
inline void Operate_OperatePlatformInfo::set_allocated_accountnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountnickname_.IsDefault()) {
          _impl_.accountnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_OperatePlatformInfo.accountNickName)
}

// -------------------------------------------------------------------

// Operate_AllHackInfo

// repeated .DC.Packet.Operate_character_info characterInfos = 1;
inline int Operate_AllHackInfo::_internal_characterinfos_size() const {
  return _internal_characterinfos().size();
}
inline int Operate_AllHackInfo::characterinfos_size() const {
  return _internal_characterinfos_size();
}
inline void Operate_AllHackInfo::clear_characterinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterinfos_.Clear();
}
inline ::DC::Packet::Operate_character_info* Operate_AllHackInfo::mutable_characterinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_AllHackInfo.characterInfos)
  return _internal_mutable_characterinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_character_info>* Operate_AllHackInfo::mutable_characterinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_AllHackInfo.characterInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_characterinfos();
}
inline const ::DC::Packet::Operate_character_info& Operate_AllHackInfo::characterinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AllHackInfo.characterInfos)
  return _internal_characterinfos().Get(index);
}
inline ::DC::Packet::Operate_character_info* Operate_AllHackInfo::add_characterinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_character_info* _add = _internal_mutable_characterinfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_AllHackInfo.characterInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_character_info>& Operate_AllHackInfo::characterinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_AllHackInfo.characterInfos)
  return _internal_characterinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_character_info>&
Operate_AllHackInfo::_internal_characterinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_character_info>*
Operate_AllHackInfo::_internal_mutable_characterinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.characterinfos_;
}

// repeated .DC.Packet.Operate_OperateReportBodyInfo reportBodyInfos = 2;
inline int Operate_AllHackInfo::_internal_reportbodyinfos_size() const {
  return _internal_reportbodyinfos().size();
}
inline int Operate_AllHackInfo::reportbodyinfos_size() const {
  return _internal_reportbodyinfos_size();
}
inline void Operate_AllHackInfo::clear_reportbodyinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reportbodyinfos_.Clear();
}
inline ::DC::Packet::Operate_OperateReportBodyInfo* Operate_AllHackInfo::mutable_reportbodyinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_AllHackInfo.reportBodyInfos)
  return _internal_mutable_reportbodyinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateReportBodyInfo>* Operate_AllHackInfo::mutable_reportbodyinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_AllHackInfo.reportBodyInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_reportbodyinfos();
}
inline const ::DC::Packet::Operate_OperateReportBodyInfo& Operate_AllHackInfo::reportbodyinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AllHackInfo.reportBodyInfos)
  return _internal_reportbodyinfos().Get(index);
}
inline ::DC::Packet::Operate_OperateReportBodyInfo* Operate_AllHackInfo::add_reportbodyinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_OperateReportBodyInfo* _add = _internal_mutable_reportbodyinfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_AllHackInfo.reportBodyInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateReportBodyInfo>& Operate_AllHackInfo::reportbodyinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_AllHackInfo.reportBodyInfos)
  return _internal_reportbodyinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateReportBodyInfo>&
Operate_AllHackInfo::_internal_reportbodyinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reportbodyinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateReportBodyInfo>*
Operate_AllHackInfo::_internal_mutable_reportbodyinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.reportbodyinfos_;
}

// repeated .DC.Packet.Operate_OperateIronShieldInfo ironShieldInfos = 3;
inline int Operate_AllHackInfo::_internal_ironshieldinfos_size() const {
  return _internal_ironshieldinfos().size();
}
inline int Operate_AllHackInfo::ironshieldinfos_size() const {
  return _internal_ironshieldinfos_size();
}
inline void Operate_AllHackInfo::clear_ironshieldinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ironshieldinfos_.Clear();
}
inline ::DC::Packet::Operate_OperateIronShieldInfo* Operate_AllHackInfo::mutable_ironshieldinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_AllHackInfo.ironShieldInfos)
  return _internal_mutable_ironshieldinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateIronShieldInfo>* Operate_AllHackInfo::mutable_ironshieldinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_AllHackInfo.ironShieldInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ironshieldinfos();
}
inline const ::DC::Packet::Operate_OperateIronShieldInfo& Operate_AllHackInfo::ironshieldinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AllHackInfo.ironShieldInfos)
  return _internal_ironshieldinfos().Get(index);
}
inline ::DC::Packet::Operate_OperateIronShieldInfo* Operate_AllHackInfo::add_ironshieldinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_OperateIronShieldInfo* _add = _internal_mutable_ironshieldinfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_AllHackInfo.ironShieldInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateIronShieldInfo>& Operate_AllHackInfo::ironshieldinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_AllHackInfo.ironShieldInfos)
  return _internal_ironshieldinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateIronShieldInfo>&
Operate_AllHackInfo::_internal_ironshieldinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ironshieldinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateIronShieldInfo>*
Operate_AllHackInfo::_internal_mutable_ironshieldinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ironshieldinfos_;
}

// repeated .DC.Packet.Operate_OperateBanUserInfos banUserInfos = 4;
inline int Operate_AllHackInfo::_internal_banuserinfos_size() const {
  return _internal_banuserinfos().size();
}
inline int Operate_AllHackInfo::banuserinfos_size() const {
  return _internal_banuserinfos_size();
}
inline void Operate_AllHackInfo::clear_banuserinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.banuserinfos_.Clear();
}
inline ::DC::Packet::Operate_OperateBanUserInfos* Operate_AllHackInfo::mutable_banuserinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_AllHackInfo.banUserInfos)
  return _internal_mutable_banuserinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanUserInfos>* Operate_AllHackInfo::mutable_banuserinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_AllHackInfo.banUserInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_banuserinfos();
}
inline const ::DC::Packet::Operate_OperateBanUserInfos& Operate_AllHackInfo::banuserinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AllHackInfo.banUserInfos)
  return _internal_banuserinfos().Get(index);
}
inline ::DC::Packet::Operate_OperateBanUserInfos* Operate_AllHackInfo::add_banuserinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_OperateBanUserInfos* _add = _internal_mutable_banuserinfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_AllHackInfo.banUserInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanUserInfos>& Operate_AllHackInfo::banuserinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_AllHackInfo.banUserInfos)
  return _internal_banuserinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanUserInfos>&
Operate_AllHackInfo::_internal_banuserinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.banuserinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanUserInfos>*
Operate_AllHackInfo::_internal_mutable_banuserinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.banuserinfos_;
}

// repeated .DC.Packet.Operate_OperateLoginLogInfo loginLogInfos = 5;
inline int Operate_AllHackInfo::_internal_loginloginfos_size() const {
  return _internal_loginloginfos().size();
}
inline int Operate_AllHackInfo::loginloginfos_size() const {
  return _internal_loginloginfos_size();
}
inline void Operate_AllHackInfo::clear_loginloginfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.loginloginfos_.Clear();
}
inline ::DC::Packet::Operate_OperateLoginLogInfo* Operate_AllHackInfo::mutable_loginloginfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_AllHackInfo.loginLogInfos)
  return _internal_mutable_loginloginfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateLoginLogInfo>* Operate_AllHackInfo::mutable_loginloginfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_AllHackInfo.loginLogInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_loginloginfos();
}
inline const ::DC::Packet::Operate_OperateLoginLogInfo& Operate_AllHackInfo::loginloginfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AllHackInfo.loginLogInfos)
  return _internal_loginloginfos().Get(index);
}
inline ::DC::Packet::Operate_OperateLoginLogInfo* Operate_AllHackInfo::add_loginloginfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_OperateLoginLogInfo* _add = _internal_mutable_loginloginfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_AllHackInfo.loginLogInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateLoginLogInfo>& Operate_AllHackInfo::loginloginfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_AllHackInfo.loginLogInfos)
  return _internal_loginloginfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateLoginLogInfo>&
Operate_AllHackInfo::_internal_loginloginfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.loginloginfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateLoginLogInfo>*
Operate_AllHackInfo::_internal_mutable_loginloginfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.loginloginfos_;
}

// repeated .DC.Packet.Operate_OperateHardwareAccountInfo hardwareAccountInfos = 6;
inline int Operate_AllHackInfo::_internal_hardwareaccountinfos_size() const {
  return _internal_hardwareaccountinfos().size();
}
inline int Operate_AllHackInfo::hardwareaccountinfos_size() const {
  return _internal_hardwareaccountinfos_size();
}
inline void Operate_AllHackInfo::clear_hardwareaccountinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwareaccountinfos_.Clear();
}
inline ::DC::Packet::Operate_OperateHardwareAccountInfo* Operate_AllHackInfo::mutable_hardwareaccountinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_AllHackInfo.hardwareAccountInfos)
  return _internal_mutable_hardwareaccountinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateHardwareAccountInfo>* Operate_AllHackInfo::mutable_hardwareaccountinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_AllHackInfo.hardwareAccountInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_hardwareaccountinfos();
}
inline const ::DC::Packet::Operate_OperateHardwareAccountInfo& Operate_AllHackInfo::hardwareaccountinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AllHackInfo.hardwareAccountInfos)
  return _internal_hardwareaccountinfos().Get(index);
}
inline ::DC::Packet::Operate_OperateHardwareAccountInfo* Operate_AllHackInfo::add_hardwareaccountinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_OperateHardwareAccountInfo* _add = _internal_mutable_hardwareaccountinfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_AllHackInfo.hardwareAccountInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateHardwareAccountInfo>& Operate_AllHackInfo::hardwareaccountinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_AllHackInfo.hardwareAccountInfos)
  return _internal_hardwareaccountinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateHardwareAccountInfo>&
Operate_AllHackInfo::_internal_hardwareaccountinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hardwareaccountinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateHardwareAccountInfo>*
Operate_AllHackInfo::_internal_mutable_hardwareaccountinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.hardwareaccountinfos_;
}

// repeated .DC.Packet.Operate_OperateDuplicateHardwareInfo duplicateHardwareInfos = 7;
inline int Operate_AllHackInfo::_internal_duplicatehardwareinfos_size() const {
  return _internal_duplicatehardwareinfos().size();
}
inline int Operate_AllHackInfo::duplicatehardwareinfos_size() const {
  return _internal_duplicatehardwareinfos_size();
}
inline void Operate_AllHackInfo::clear_duplicatehardwareinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duplicatehardwareinfos_.Clear();
}
inline ::DC::Packet::Operate_OperateDuplicateHardwareInfo* Operate_AllHackInfo::mutable_duplicatehardwareinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_AllHackInfo.duplicateHardwareInfos)
  return _internal_mutable_duplicatehardwareinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateDuplicateHardwareInfo>* Operate_AllHackInfo::mutable_duplicatehardwareinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_AllHackInfo.duplicateHardwareInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_duplicatehardwareinfos();
}
inline const ::DC::Packet::Operate_OperateDuplicateHardwareInfo& Operate_AllHackInfo::duplicatehardwareinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AllHackInfo.duplicateHardwareInfos)
  return _internal_duplicatehardwareinfos().Get(index);
}
inline ::DC::Packet::Operate_OperateDuplicateHardwareInfo* Operate_AllHackInfo::add_duplicatehardwareinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_OperateDuplicateHardwareInfo* _add = _internal_mutable_duplicatehardwareinfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_AllHackInfo.duplicateHardwareInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateDuplicateHardwareInfo>& Operate_AllHackInfo::duplicatehardwareinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_AllHackInfo.duplicateHardwareInfos)
  return _internal_duplicatehardwareinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateDuplicateHardwareInfo>&
Operate_AllHackInfo::_internal_duplicatehardwareinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.duplicatehardwareinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateDuplicateHardwareInfo>*
Operate_AllHackInfo::_internal_mutable_duplicatehardwareinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.duplicatehardwareinfos_;
}

// repeated .DC.Packet.Operate_OperateFileInfo fileInfos = 8;
inline int Operate_AllHackInfo::_internal_fileinfos_size() const {
  return _internal_fileinfos().size();
}
inline int Operate_AllHackInfo::fileinfos_size() const {
  return _internal_fileinfos_size();
}
inline void Operate_AllHackInfo::clear_fileinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fileinfos_.Clear();
}
inline ::DC::Packet::Operate_OperateFileInfo* Operate_AllHackInfo::mutable_fileinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_AllHackInfo.fileInfos)
  return _internal_mutable_fileinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateFileInfo>* Operate_AllHackInfo::mutable_fileinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_AllHackInfo.fileInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_fileinfos();
}
inline const ::DC::Packet::Operate_OperateFileInfo& Operate_AllHackInfo::fileinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AllHackInfo.fileInfos)
  return _internal_fileinfos().Get(index);
}
inline ::DC::Packet::Operate_OperateFileInfo* Operate_AllHackInfo::add_fileinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_OperateFileInfo* _add = _internal_mutable_fileinfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_AllHackInfo.fileInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateFileInfo>& Operate_AllHackInfo::fileinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_AllHackInfo.fileInfos)
  return _internal_fileinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateFileInfo>&
Operate_AllHackInfo::_internal_fileinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fileinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateFileInfo>*
Operate_AllHackInfo::_internal_mutable_fileinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.fileinfos_;
}

// repeated .DC.Packet.Operate_OperateBanInfo banInfos = 9;
inline int Operate_AllHackInfo::_internal_baninfos_size() const {
  return _internal_baninfos().size();
}
inline int Operate_AllHackInfo::baninfos_size() const {
  return _internal_baninfos_size();
}
inline void Operate_AllHackInfo::clear_baninfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.baninfos_.Clear();
}
inline ::DC::Packet::Operate_OperateBanInfo* Operate_AllHackInfo::mutable_baninfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_AllHackInfo.banInfos)
  return _internal_mutable_baninfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanInfo>* Operate_AllHackInfo::mutable_baninfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_AllHackInfo.banInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_baninfos();
}
inline const ::DC::Packet::Operate_OperateBanInfo& Operate_AllHackInfo::baninfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AllHackInfo.banInfos)
  return _internal_baninfos().Get(index);
}
inline ::DC::Packet::Operate_OperateBanInfo* Operate_AllHackInfo::add_baninfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_OperateBanInfo* _add = _internal_mutable_baninfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_AllHackInfo.banInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanInfo>& Operate_AllHackInfo::baninfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_AllHackInfo.banInfos)
  return _internal_baninfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanInfo>&
Operate_AllHackInfo::_internal_baninfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.baninfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanInfo>*
Operate_AllHackInfo::_internal_mutable_baninfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.baninfos_;
}

// repeated .DC.Packet.Operate_OperateBanHardwareInfo banHardwareInfos = 10;
inline int Operate_AllHackInfo::_internal_banhardwareinfos_size() const {
  return _internal_banhardwareinfos().size();
}
inline int Operate_AllHackInfo::banhardwareinfos_size() const {
  return _internal_banhardwareinfos_size();
}
inline void Operate_AllHackInfo::clear_banhardwareinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.banhardwareinfos_.Clear();
}
inline ::DC::Packet::Operate_OperateBanHardwareInfo* Operate_AllHackInfo::mutable_banhardwareinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_AllHackInfo.banHardwareInfos)
  return _internal_mutable_banhardwareinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanHardwareInfo>* Operate_AllHackInfo::mutable_banhardwareinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_AllHackInfo.banHardwareInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_banhardwareinfos();
}
inline const ::DC::Packet::Operate_OperateBanHardwareInfo& Operate_AllHackInfo::banhardwareinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AllHackInfo.banHardwareInfos)
  return _internal_banhardwareinfos().Get(index);
}
inline ::DC::Packet::Operate_OperateBanHardwareInfo* Operate_AllHackInfo::add_banhardwareinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_OperateBanHardwareInfo* _add = _internal_mutable_banhardwareinfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_AllHackInfo.banHardwareInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanHardwareInfo>& Operate_AllHackInfo::banhardwareinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_AllHackInfo.banHardwareInfos)
  return _internal_banhardwareinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanHardwareInfo>&
Operate_AllHackInfo::_internal_banhardwareinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.banhardwareinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateBanHardwareInfo>*
Operate_AllHackInfo::_internal_mutable_banhardwareinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.banhardwareinfos_;
}

// .DC.Packet.Operate_Hacklog hackInfos = 11;
inline bool Operate_AllHackInfo::has_hackinfos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hackinfos_ != nullptr);
  return value;
}
inline void Operate_AllHackInfo::clear_hackinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hackinfos_ != nullptr) _impl_.hackinfos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::Operate_Hacklog& Operate_AllHackInfo::_internal_hackinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::Operate_Hacklog* p = _impl_.hackinfos_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::Operate_Hacklog&>(::DC::Packet::_Operate_Hacklog_default_instance_);
}
inline const ::DC::Packet::Operate_Hacklog& Operate_AllHackInfo::hackinfos() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AllHackInfo.hackInfos)
  return _internal_hackinfos();
}
inline void Operate_AllHackInfo::unsafe_arena_set_allocated_hackinfos(::DC::Packet::Operate_Hacklog* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hackinfos_);
  }
  _impl_.hackinfos_ = reinterpret_cast<::DC::Packet::Operate_Hacklog*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.Operate_AllHackInfo.hackInfos)
}
inline ::DC::Packet::Operate_Hacklog* Operate_AllHackInfo::release_hackinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::Operate_Hacklog* released = _impl_.hackinfos_;
  _impl_.hackinfos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::Operate_Hacklog* Operate_AllHackInfo::unsafe_arena_release_hackinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_AllHackInfo.hackInfos)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::Operate_Hacklog* temp = _impl_.hackinfos_;
  _impl_.hackinfos_ = nullptr;
  return temp;
}
inline ::DC::Packet::Operate_Hacklog* Operate_AllHackInfo::_internal_mutable_hackinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hackinfos_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::Operate_Hacklog>(GetArena());
    _impl_.hackinfos_ = reinterpret_cast<::DC::Packet::Operate_Hacklog*>(p);
  }
  return _impl_.hackinfos_;
}
inline ::DC::Packet::Operate_Hacklog* Operate_AllHackInfo::mutable_hackinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::Operate_Hacklog* _msg = _internal_mutable_hackinfos();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_AllHackInfo.hackInfos)
  return _msg;
}
inline void Operate_AllHackInfo::set_allocated_hackinfos(::DC::Packet::Operate_Hacklog* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.hackinfos_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.hackinfos_ = reinterpret_cast<::DC::Packet::Operate_Hacklog*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_AllHackInfo.hackInfos)
}

// repeated uint64 findBanList = 12;
inline int Operate_AllHackInfo::_internal_findbanlist_size() const {
  return _internal_findbanlist().size();
}
inline int Operate_AllHackInfo::findbanlist_size() const {
  return _internal_findbanlist_size();
}
inline void Operate_AllHackInfo::clear_findbanlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.findbanlist_.Clear();
}
inline ::uint64_t Operate_AllHackInfo::findbanlist(int index) const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AllHackInfo.findBanList)
  return _internal_findbanlist().Get(index);
}
inline void Operate_AllHackInfo::set_findbanlist(int index, ::uint64_t value) {
  _internal_mutable_findbanlist()->Set(index, value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_AllHackInfo.findBanList)
}
inline void Operate_AllHackInfo::add_findbanlist(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_findbanlist()->Add(value);
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_AllHackInfo.findBanList)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& Operate_AllHackInfo::findbanlist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_AllHackInfo.findBanList)
  return _internal_findbanlist();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* Operate_AllHackInfo::mutable_findbanlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_AllHackInfo.findBanList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_findbanlist();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
Operate_AllHackInfo::_internal_findbanlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.findbanlist_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* Operate_AllHackInfo::_internal_mutable_findbanlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.findbanlist_;
}

// repeated uint64 banList = 13;
inline int Operate_AllHackInfo::_internal_banlist_size() const {
  return _internal_banlist().size();
}
inline int Operate_AllHackInfo::banlist_size() const {
  return _internal_banlist_size();
}
inline void Operate_AllHackInfo::clear_banlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.banlist_.Clear();
}
inline ::uint64_t Operate_AllHackInfo::banlist(int index) const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AllHackInfo.banList)
  return _internal_banlist().Get(index);
}
inline void Operate_AllHackInfo::set_banlist(int index, ::uint64_t value) {
  _internal_mutable_banlist()->Set(index, value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_AllHackInfo.banList)
}
inline void Operate_AllHackInfo::add_banlist(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_banlist()->Add(value);
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_AllHackInfo.banList)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& Operate_AllHackInfo::banlist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_AllHackInfo.banList)
  return _internal_banlist();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* Operate_AllHackInfo::mutable_banlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_AllHackInfo.banList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_banlist();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
Operate_AllHackInfo::_internal_banlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.banlist_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* Operate_AllHackInfo::_internal_mutable_banlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.banlist_;
}

// .DC.Packet.Operate_OperatePlatformInfo platformInfo = 14;
inline bool Operate_AllHackInfo::has_platforminfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.platforminfo_ != nullptr);
  return value;
}
inline void Operate_AllHackInfo::clear_platforminfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.platforminfo_ != nullptr) _impl_.platforminfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::DC::Packet::Operate_OperatePlatformInfo& Operate_AllHackInfo::_internal_platforminfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::Operate_OperatePlatformInfo* p = _impl_.platforminfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::Operate_OperatePlatformInfo&>(::DC::Packet::_Operate_OperatePlatformInfo_default_instance_);
}
inline const ::DC::Packet::Operate_OperatePlatformInfo& Operate_AllHackInfo::platforminfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AllHackInfo.platformInfo)
  return _internal_platforminfo();
}
inline void Operate_AllHackInfo::unsafe_arena_set_allocated_platforminfo(::DC::Packet::Operate_OperatePlatformInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.platforminfo_);
  }
  _impl_.platforminfo_ = reinterpret_cast<::DC::Packet::Operate_OperatePlatformInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.Operate_AllHackInfo.platformInfo)
}
inline ::DC::Packet::Operate_OperatePlatformInfo* Operate_AllHackInfo::release_platforminfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DC::Packet::Operate_OperatePlatformInfo* released = _impl_.platforminfo_;
  _impl_.platforminfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::Operate_OperatePlatformInfo* Operate_AllHackInfo::unsafe_arena_release_platforminfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_AllHackInfo.platformInfo)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DC::Packet::Operate_OperatePlatformInfo* temp = _impl_.platforminfo_;
  _impl_.platforminfo_ = nullptr;
  return temp;
}
inline ::DC::Packet::Operate_OperatePlatformInfo* Operate_AllHackInfo::_internal_mutable_platforminfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.platforminfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::Operate_OperatePlatformInfo>(GetArena());
    _impl_.platforminfo_ = reinterpret_cast<::DC::Packet::Operate_OperatePlatformInfo*>(p);
  }
  return _impl_.platforminfo_;
}
inline ::DC::Packet::Operate_OperatePlatformInfo* Operate_AllHackInfo::mutable_platforminfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::DC::Packet::Operate_OperatePlatformInfo* _msg = _internal_mutable_platforminfo();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_AllHackInfo.platformInfo)
  return _msg;
}
inline void Operate_AllHackInfo::set_allocated_platforminfo(::DC::Packet::Operate_OperatePlatformInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.platforminfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.platforminfo_ = reinterpret_cast<::DC::Packet::Operate_OperatePlatformInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_AllHackInfo.platformInfo)
}

// -------------------------------------------------------------------

// Operate_AllReportList

// repeated .DC.Packet.Operate_OperateReportBodyInfo report = 1;
inline int Operate_AllReportList::_internal_report_size() const {
  return _internal_report().size();
}
inline int Operate_AllReportList::report_size() const {
  return _internal_report_size();
}
inline void Operate_AllReportList::clear_report() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_.Clear();
}
inline ::DC::Packet::Operate_OperateReportBodyInfo* Operate_AllReportList::mutable_report(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_AllReportList.report)
  return _internal_mutable_report()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateReportBodyInfo>* Operate_AllReportList::mutable_report()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_AllReportList.report)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_report();
}
inline const ::DC::Packet::Operate_OperateReportBodyInfo& Operate_AllReportList::report(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AllReportList.report)
  return _internal_report().Get(index);
}
inline ::DC::Packet::Operate_OperateReportBodyInfo* Operate_AllReportList::add_report() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_OperateReportBodyInfo* _add = _internal_mutable_report()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_AllReportList.report)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateReportBodyInfo>& Operate_AllReportList::report() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_AllReportList.report)
  return _internal_report();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateReportBodyInfo>&
Operate_AllReportList::_internal_report() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.report_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateReportBodyInfo>*
Operate_AllReportList::_internal_mutable_report() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.report_;
}

// -------------------------------------------------------------------

// Operate_AllIronShieldList

// repeated .DC.Packet.Operate_OperateIronShieldInfo ironShield = 1;
inline int Operate_AllIronShieldList::_internal_ironshield_size() const {
  return _internal_ironshield().size();
}
inline int Operate_AllIronShieldList::ironshield_size() const {
  return _internal_ironshield_size();
}
inline void Operate_AllIronShieldList::clear_ironshield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ironshield_.Clear();
}
inline ::DC::Packet::Operate_OperateIronShieldInfo* Operate_AllIronShieldList::mutable_ironshield(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_AllIronShieldList.ironShield)
  return _internal_mutable_ironshield()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateIronShieldInfo>* Operate_AllIronShieldList::mutable_ironshield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_AllIronShieldList.ironShield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ironshield();
}
inline const ::DC::Packet::Operate_OperateIronShieldInfo& Operate_AllIronShieldList::ironshield(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AllIronShieldList.ironShield)
  return _internal_ironshield().Get(index);
}
inline ::DC::Packet::Operate_OperateIronShieldInfo* Operate_AllIronShieldList::add_ironshield() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_OperateIronShieldInfo* _add = _internal_mutable_ironshield()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_AllIronShieldList.ironShield)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateIronShieldInfo>& Operate_AllIronShieldList::ironshield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_AllIronShieldList.ironShield)
  return _internal_ironshield();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateIronShieldInfo>&
Operate_AllIronShieldList::_internal_ironshield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ironshield_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_OperateIronShieldInfo>*
Operate_AllIronShieldList::_internal_mutable_ironshield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ironshield_;
}

// -------------------------------------------------------------------

// ReasonSearchBanUserInfo

// uint64 accountId = 1;
inline void ReasonSearchBanUserInfo::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = ::uint64_t{0u};
}
inline ::uint64_t ReasonSearchBanUserInfo::accountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.ReasonSearchBanUserInfo.accountId)
  return _internal_accountid();
}
inline void ReasonSearchBanUserInfo::set_accountid(::uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.ReasonSearchBanUserInfo.accountId)
}
inline ::uint64_t ReasonSearchBanUserInfo::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void ReasonSearchBanUserInfo::_internal_set_accountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// string nickname = 2;
inline void ReasonSearchBanUserInfo::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& ReasonSearchBanUserInfo::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.ReasonSearchBanUserInfo.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReasonSearchBanUserInfo::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.ReasonSearchBanUserInfo.nickname)
}
inline std::string* ReasonSearchBanUserInfo::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.ReasonSearchBanUserInfo.nickname)
  return _s;
}
inline const std::string& ReasonSearchBanUserInfo::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nickname_.Get();
}
inline void ReasonSearchBanUserInfo::_internal_set_nickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* ReasonSearchBanUserInfo::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* ReasonSearchBanUserInfo::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.ReasonSearchBanUserInfo.nickname)
  return _impl_.nickname_.Release();
}
inline void ReasonSearchBanUserInfo::set_allocated_nickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.ReasonSearchBanUserInfo.nickname)
}

// string reason = 3;
inline void ReasonSearchBanUserInfo::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& ReasonSearchBanUserInfo::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.ReasonSearchBanUserInfo.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReasonSearchBanUserInfo::set_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.ReasonSearchBanUserInfo.reason)
}
inline std::string* ReasonSearchBanUserInfo::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:DC.Packet.ReasonSearchBanUserInfo.reason)
  return _s;
}
inline const std::string& ReasonSearchBanUserInfo::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void ReasonSearchBanUserInfo::_internal_set_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* ReasonSearchBanUserInfo::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* ReasonSearchBanUserInfo::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.ReasonSearchBanUserInfo.reason)
  return _impl_.reason_.Release();
}
inline void ReasonSearchBanUserInfo::set_allocated_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reason_.IsDefault()) {
          _impl_.reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.ReasonSearchBanUserInfo.reason)
}

// int32 banType = 4;
inline void ReasonSearchBanUserInfo::clear_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_ = 0;
}
inline ::int32_t ReasonSearchBanUserInfo::bantype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.ReasonSearchBanUserInfo.banType)
  return _internal_bantype();
}
inline void ReasonSearchBanUserInfo::set_bantype(::int32_t value) {
  _internal_set_bantype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.ReasonSearchBanUserInfo.banType)
}
inline ::int32_t ReasonSearchBanUserInfo::_internal_bantype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantype_;
}
inline void ReasonSearchBanUserInfo::_internal_set_bantype(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_ = value;
}

// string comment = 5;
inline void ReasonSearchBanUserInfo::clear_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.ClearToEmpty();
}
inline const std::string& ReasonSearchBanUserInfo::comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.ReasonSearchBanUserInfo.comment)
  return _internal_comment();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReasonSearchBanUserInfo::set_comment(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.ReasonSearchBanUserInfo.comment)
}
inline std::string* ReasonSearchBanUserInfo::mutable_comment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_comment();
  // @@protoc_insertion_point(field_mutable:DC.Packet.ReasonSearchBanUserInfo.comment)
  return _s;
}
inline const std::string& ReasonSearchBanUserInfo::_internal_comment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comment_.Get();
}
inline void ReasonSearchBanUserInfo::_internal_set_comment(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.Set(value, GetArena());
}
inline std::string* ReasonSearchBanUserInfo::_internal_mutable_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.comment_.Mutable( GetArena());
}
inline std::string* ReasonSearchBanUserInfo::release_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.ReasonSearchBanUserInfo.comment)
  return _impl_.comment_.Release();
}
inline void ReasonSearchBanUserInfo::set_allocated_comment(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.comment_.IsDefault()) {
          _impl_.comment_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.ReasonSearchBanUserInfo.comment)
}

// string beginTime = 6;
inline void ReasonSearchBanUserInfo::clear_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begintime_.ClearToEmpty();
}
inline const std::string& ReasonSearchBanUserInfo::begintime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.ReasonSearchBanUserInfo.beginTime)
  return _internal_begintime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReasonSearchBanUserInfo::set_begintime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begintime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.ReasonSearchBanUserInfo.beginTime)
}
inline std::string* ReasonSearchBanUserInfo::mutable_begintime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_begintime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.ReasonSearchBanUserInfo.beginTime)
  return _s;
}
inline const std::string& ReasonSearchBanUserInfo::_internal_begintime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.begintime_.Get();
}
inline void ReasonSearchBanUserInfo::_internal_set_begintime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begintime_.Set(value, GetArena());
}
inline std::string* ReasonSearchBanUserInfo::_internal_mutable_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.begintime_.Mutable( GetArena());
}
inline std::string* ReasonSearchBanUserInfo::release_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.ReasonSearchBanUserInfo.beginTime)
  return _impl_.begintime_.Release();
}
inline void ReasonSearchBanUserInfo::set_allocated_begintime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begintime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.begintime_.IsDefault()) {
          _impl_.begintime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.ReasonSearchBanUserInfo.beginTime)
}

// string endTime = 7;
inline void ReasonSearchBanUserInfo::clear_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endtime_.ClearToEmpty();
}
inline const std::string& ReasonSearchBanUserInfo::endtime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.ReasonSearchBanUserInfo.endTime)
  return _internal_endtime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReasonSearchBanUserInfo::set_endtime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endtime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.ReasonSearchBanUserInfo.endTime)
}
inline std::string* ReasonSearchBanUserInfo::mutable_endtime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_endtime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.ReasonSearchBanUserInfo.endTime)
  return _s;
}
inline const std::string& ReasonSearchBanUserInfo::_internal_endtime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.endtime_.Get();
}
inline void ReasonSearchBanUserInfo::_internal_set_endtime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endtime_.Set(value, GetArena());
}
inline std::string* ReasonSearchBanUserInfo::_internal_mutable_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.endtime_.Mutable( GetArena());
}
inline std::string* ReasonSearchBanUserInfo::release_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.ReasonSearchBanUserInfo.endTime)
  return _impl_.endtime_.Release();
}
inline void ReasonSearchBanUserInfo::set_allocated_endtime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endtime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.endtime_.IsDefault()) {
          _impl_.endtime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.ReasonSearchBanUserInfo.endTime)
}

// string registerTime = 8;
inline void ReasonSearchBanUserInfo::clear_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.ClearToEmpty();
}
inline const std::string& ReasonSearchBanUserInfo::registertime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.ReasonSearchBanUserInfo.registerTime)
  return _internal_registertime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReasonSearchBanUserInfo::set_registertime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.ReasonSearchBanUserInfo.registerTime)
}
inline std::string* ReasonSearchBanUserInfo::mutable_registertime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_registertime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.ReasonSearchBanUserInfo.registerTime)
  return _s;
}
inline const std::string& ReasonSearchBanUserInfo::_internal_registertime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.registertime_.Get();
}
inline void ReasonSearchBanUserInfo::_internal_set_registertime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.Set(value, GetArena());
}
inline std::string* ReasonSearchBanUserInfo::_internal_mutable_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.registertime_.Mutable( GetArena());
}
inline std::string* ReasonSearchBanUserInfo::release_registertime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.ReasonSearchBanUserInfo.registerTime)
  return _impl_.registertime_.Release();
}
inline void ReasonSearchBanUserInfo::set_allocated_registertime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.registertime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.registertime_.IsDefault()) {
          _impl_.registertime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.ReasonSearchBanUserInfo.registerTime)
}

// uint64 sortTime = 9;
inline void ReasonSearchBanUserInfo::clear_sorttime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sorttime_ = ::uint64_t{0u};
}
inline ::uint64_t ReasonSearchBanUserInfo::sorttime() const {
  // @@protoc_insertion_point(field_get:DC.Packet.ReasonSearchBanUserInfo.sortTime)
  return _internal_sorttime();
}
inline void ReasonSearchBanUserInfo::set_sorttime(::uint64_t value) {
  _internal_set_sorttime(value);
  // @@protoc_insertion_point(field_set:DC.Packet.ReasonSearchBanUserInfo.sortTime)
}
inline ::uint64_t ReasonSearchBanUserInfo::_internal_sorttime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sorttime_;
}
inline void ReasonSearchBanUserInfo::_internal_set_sorttime(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sorttime_ = value;
}

// -------------------------------------------------------------------

// Operate_SearchHackReasonResult

// repeated .DC.Packet.ReasonSearchBanUserInfo infos = 1;
inline int Operate_SearchHackReasonResult::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int Operate_SearchHackReasonResult::infos_size() const {
  return _internal_infos_size();
}
inline void Operate_SearchHackReasonResult::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::DC::Packet::ReasonSearchBanUserInfo* Operate_SearchHackReasonResult::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_SearchHackReasonResult.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::ReasonSearchBanUserInfo>* Operate_SearchHackReasonResult::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_SearchHackReasonResult.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::DC::Packet::ReasonSearchBanUserInfo& Operate_SearchHackReasonResult::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_SearchHackReasonResult.infos)
  return _internal_infos().Get(index);
}
inline ::DC::Packet::ReasonSearchBanUserInfo* Operate_SearchHackReasonResult::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::ReasonSearchBanUserInfo* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_SearchHackReasonResult.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::ReasonSearchBanUserInfo>& Operate_SearchHackReasonResult::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_SearchHackReasonResult.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::ReasonSearchBanUserInfo>&
Operate_SearchHackReasonResult::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::ReasonSearchBanUserInfo>*
Operate_SearchHackReasonResult::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

// int32 maxPageSize = 2;
inline void Operate_SearchHackReasonResult::clear_maxpagesize() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxpagesize_ = 0;
}
inline ::int32_t Operate_SearchHackReasonResult::maxpagesize() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_SearchHackReasonResult.maxPageSize)
  return _internal_maxpagesize();
}
inline void Operate_SearchHackReasonResult::set_maxpagesize(::int32_t value) {
  _internal_set_maxpagesize(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_SearchHackReasonResult.maxPageSize)
}
inline ::int32_t Operate_SearchHackReasonResult::_internal_maxpagesize() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maxpagesize_;
}
inline void Operate_SearchHackReasonResult::_internal_set_maxpagesize(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxpagesize_ = value;
}

// int32 currentPage = 3;
inline void Operate_SearchHackReasonResult::clear_currentpage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentpage_ = 0;
}
inline ::int32_t Operate_SearchHackReasonResult::currentpage() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_SearchHackReasonResult.currentPage)
  return _internal_currentpage();
}
inline void Operate_SearchHackReasonResult::set_currentpage(::int32_t value) {
  _internal_set_currentpage(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_SearchHackReasonResult.currentPage)
}
inline ::int32_t Operate_SearchHackReasonResult::_internal_currentpage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currentpage_;
}
inline void Operate_SearchHackReasonResult::_internal_set_currentpage(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentpage_ = value;
}

// int32 searchType = 4;
inline void Operate_SearchHackReasonResult::clear_searchtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.searchtype_ = 0;
}
inline ::int32_t Operate_SearchHackReasonResult::searchtype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_SearchHackReasonResult.searchType)
  return _internal_searchtype();
}
inline void Operate_SearchHackReasonResult::set_searchtype(::int32_t value) {
  _internal_set_searchtype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_SearchHackReasonResult.searchType)
}
inline ::int32_t Operate_SearchHackReasonResult::_internal_searchtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.searchtype_;
}
inline void Operate_SearchHackReasonResult::_internal_set_searchtype(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.searchtype_ = value;
}

// -------------------------------------------------------------------

// Operate_BulkBanInfo

// uint64 accountId = 1;
inline void Operate_BulkBanInfo::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_BulkBanInfo::accountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_BulkBanInfo.accountId)
  return _internal_accountid();
}
inline void Operate_BulkBanInfo::set_accountid(::uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_BulkBanInfo.accountId)
}
inline ::uint64_t Operate_BulkBanInfo::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void Operate_BulkBanInfo::_internal_set_accountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// string nickname = 2;
inline void Operate_BulkBanInfo::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& Operate_BulkBanInfo::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_BulkBanInfo.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_BulkBanInfo::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_BulkBanInfo.nickname)
}
inline std::string* Operate_BulkBanInfo::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_BulkBanInfo.nickname)
  return _s;
}
inline const std::string& Operate_BulkBanInfo::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nickname_.Get();
}
inline void Operate_BulkBanInfo::_internal_set_nickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* Operate_BulkBanInfo::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* Operate_BulkBanInfo::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_BulkBanInfo.nickname)
  return _impl_.nickname_.Release();
}
inline void Operate_BulkBanInfo::set_allocated_nickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_BulkBanInfo.nickname)
}

// -------------------------------------------------------------------

// Operate_HackUserBanBulk

// repeated .DC.Packet.Operate_BulkBanInfo infos = 1;
inline int Operate_HackUserBanBulk::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int Operate_HackUserBanBulk::infos_size() const {
  return _internal_infos_size();
}
inline void Operate_HackUserBanBulk::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::DC::Packet::Operate_BulkBanInfo* Operate_HackUserBanBulk::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_HackUserBanBulk.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_BulkBanInfo>* Operate_HackUserBanBulk::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_HackUserBanBulk.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::DC::Packet::Operate_BulkBanInfo& Operate_HackUserBanBulk::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_HackUserBanBulk.infos)
  return _internal_infos().Get(index);
}
inline ::DC::Packet::Operate_BulkBanInfo* Operate_HackUserBanBulk::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_BulkBanInfo* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_HackUserBanBulk.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_BulkBanInfo>& Operate_HackUserBanBulk::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_HackUserBanBulk.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_BulkBanInfo>&
Operate_HackUserBanBulk::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_BulkBanInfo>*
Operate_HackUserBanBulk::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

// string reason = 2;
inline void Operate_HackUserBanBulk::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& Operate_HackUserBanBulk::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_HackUserBanBulk.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_HackUserBanBulk::set_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_HackUserBanBulk.reason)
}
inline std::string* Operate_HackUserBanBulk::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_HackUserBanBulk.reason)
  return _s;
}
inline const std::string& Operate_HackUserBanBulk::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void Operate_HackUserBanBulk::_internal_set_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* Operate_HackUserBanBulk::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* Operate_HackUserBanBulk::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_HackUserBanBulk.reason)
  return _impl_.reason_.Release();
}
inline void Operate_HackUserBanBulk::set_allocated_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reason_.IsDefault()) {
          _impl_.reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_HackUserBanBulk.reason)
}

// uint32 banType = 3;
inline void Operate_HackUserBanBulk::clear_bantype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_ = 0u;
}
inline ::uint32_t Operate_HackUserBanBulk::bantype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_HackUserBanBulk.banType)
  return _internal_bantype();
}
inline void Operate_HackUserBanBulk::set_bantype(::uint32_t value) {
  _internal_set_bantype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_HackUserBanBulk.banType)
}
inline ::uint32_t Operate_HackUserBanBulk::_internal_bantype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantype_;
}
inline void Operate_HackUserBanBulk::_internal_set_bantype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantype_ = value;
}

// uint32 banTime_min = 4;
inline void Operate_HackUserBanBulk::clear_bantime_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantime_min_ = 0u;
}
inline ::uint32_t Operate_HackUserBanBulk::bantime_min() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_HackUserBanBulk.banTime_min)
  return _internal_bantime_min();
}
inline void Operate_HackUserBanBulk::set_bantime_min(::uint32_t value) {
  _internal_set_bantime_min(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_HackUserBanBulk.banTime_min)
}
inline ::uint32_t Operate_HackUserBanBulk::_internal_bantime_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantime_min_;
}
inline void Operate_HackUserBanBulk::_internal_set_bantime_min(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantime_min_ = value;
}

// string jiraId = 5;
inline void Operate_HackUserBanBulk::clear_jiraid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jiraid_.ClearToEmpty();
}
inline const std::string& Operate_HackUserBanBulk::jiraid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_HackUserBanBulk.jiraId)
  return _internal_jiraid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_HackUserBanBulk::set_jiraid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jiraid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_HackUserBanBulk.jiraId)
}
inline std::string* Operate_HackUserBanBulk::mutable_jiraid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_jiraid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_HackUserBanBulk.jiraId)
  return _s;
}
inline const std::string& Operate_HackUserBanBulk::_internal_jiraid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.jiraid_.Get();
}
inline void Operate_HackUserBanBulk::_internal_set_jiraid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jiraid_.Set(value, GetArena());
}
inline std::string* Operate_HackUserBanBulk::_internal_mutable_jiraid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.jiraid_.Mutable( GetArena());
}
inline std::string* Operate_HackUserBanBulk::release_jiraid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_HackUserBanBulk.jiraId)
  return _impl_.jiraid_.Release();
}
inline void Operate_HackUserBanBulk::set_allocated_jiraid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jiraid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.jiraid_.IsDefault()) {
          _impl_.jiraid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_HackUserBanBulk.jiraId)
}

// uint32 withLoginHardwareBan = 6;
inline void Operate_HackUserBanBulk::clear_withloginhardwareban() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.withloginhardwareban_ = 0u;
}
inline ::uint32_t Operate_HackUserBanBulk::withloginhardwareban() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_HackUserBanBulk.withLoginHardwareBan)
  return _internal_withloginhardwareban();
}
inline void Operate_HackUserBanBulk::set_withloginhardwareban(::uint32_t value) {
  _internal_set_withloginhardwareban(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_HackUserBanBulk.withLoginHardwareBan)
}
inline ::uint32_t Operate_HackUserBanBulk::_internal_withloginhardwareban() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.withloginhardwareban_;
}
inline void Operate_HackUserBanBulk::_internal_set_withloginhardwareban(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.withloginhardwareban_ = value;
}

// uint64 logIdx = 7;
inline void Operate_HackUserBanBulk::clear_logidx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logidx_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_HackUserBanBulk::logidx() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_HackUserBanBulk.logIdx)
  return _internal_logidx();
}
inline void Operate_HackUserBanBulk::set_logidx(::uint64_t value) {
  _internal_set_logidx(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_HackUserBanBulk.logIdx)
}
inline ::uint64_t Operate_HackUserBanBulk::_internal_logidx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.logidx_;
}
inline void Operate_HackUserBanBulk::_internal_set_logidx(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logidx_ = value;
}

// -------------------------------------------------------------------

// Operate_HackUserUnbanBulk

// repeated .DC.Packet.Operate_BulkBanInfo infos = 1;
inline int Operate_HackUserUnbanBulk::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int Operate_HackUserUnbanBulk::infos_size() const {
  return _internal_infos_size();
}
inline void Operate_HackUserUnbanBulk::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::DC::Packet::Operate_BulkBanInfo* Operate_HackUserUnbanBulk::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_HackUserUnbanBulk.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_BulkBanInfo>* Operate_HackUserUnbanBulk::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.Operate_HackUserUnbanBulk.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::DC::Packet::Operate_BulkBanInfo& Operate_HackUserUnbanBulk::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_HackUserUnbanBulk.infos)
  return _internal_infos().Get(index);
}
inline ::DC::Packet::Operate_BulkBanInfo* Operate_HackUserUnbanBulk::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::Operate_BulkBanInfo* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.Operate_HackUserUnbanBulk.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_BulkBanInfo>& Operate_HackUserUnbanBulk::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.Operate_HackUserUnbanBulk.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_BulkBanInfo>&
Operate_HackUserUnbanBulk::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::Operate_BulkBanInfo>*
Operate_HackUserUnbanBulk::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

// string reason = 2;
inline void Operate_HackUserUnbanBulk::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& Operate_HackUserUnbanBulk::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_HackUserUnbanBulk.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_HackUserUnbanBulk::set_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_HackUserUnbanBulk.reason)
}
inline std::string* Operate_HackUserUnbanBulk::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_HackUserUnbanBulk.reason)
  return _s;
}
inline const std::string& Operate_HackUserUnbanBulk::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void Operate_HackUserUnbanBulk::_internal_set_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* Operate_HackUserUnbanBulk::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* Operate_HackUserUnbanBulk::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_HackUserUnbanBulk.reason)
  return _impl_.reason_.Release();
}
inline void Operate_HackUserUnbanBulk::set_allocated_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reason_.IsDefault()) {
          _impl_.reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_HackUserUnbanBulk.reason)
}

// string jiraId = 3;
inline void Operate_HackUserUnbanBulk::clear_jiraid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jiraid_.ClearToEmpty();
}
inline const std::string& Operate_HackUserUnbanBulk::jiraid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_HackUserUnbanBulk.jiraId)
  return _internal_jiraid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_HackUserUnbanBulk::set_jiraid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jiraid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_HackUserUnbanBulk.jiraId)
}
inline std::string* Operate_HackUserUnbanBulk::mutable_jiraid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_jiraid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_HackUserUnbanBulk.jiraId)
  return _s;
}
inline const std::string& Operate_HackUserUnbanBulk::_internal_jiraid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.jiraid_.Get();
}
inline void Operate_HackUserUnbanBulk::_internal_set_jiraid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jiraid_.Set(value, GetArena());
}
inline std::string* Operate_HackUserUnbanBulk::_internal_mutable_jiraid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.jiraid_.Mutable( GetArena());
}
inline std::string* Operate_HackUserUnbanBulk::release_jiraid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_HackUserUnbanBulk.jiraId)
  return _impl_.jiraid_.Release();
}
inline void Operate_HackUserUnbanBulk::set_allocated_jiraid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jiraid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.jiraid_.IsDefault()) {
          _impl_.jiraid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_HackUserUnbanBulk.jiraId)
}

// uint32 withLoginHardwareBan = 4;
inline void Operate_HackUserUnbanBulk::clear_withloginhardwareban() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.withloginhardwareban_ = 0u;
}
inline ::uint32_t Operate_HackUserUnbanBulk::withloginhardwareban() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_HackUserUnbanBulk.withLoginHardwareBan)
  return _internal_withloginhardwareban();
}
inline void Operate_HackUserUnbanBulk::set_withloginhardwareban(::uint32_t value) {
  _internal_set_withloginhardwareban(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_HackUserUnbanBulk.withLoginHardwareBan)
}
inline ::uint32_t Operate_HackUserUnbanBulk::_internal_withloginhardwareban() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.withloginhardwareban_;
}
inline void Operate_HackUserUnbanBulk::_internal_set_withloginhardwareban(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.withloginhardwareban_ = value;
}

// -------------------------------------------------------------------

// Operate_Blacklist

// uint32 writeType = 1;
inline void Operate_Blacklist::clear_writetype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.writetype_ = 0u;
}
inline ::uint32_t Operate_Blacklist::writetype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Blacklist.writeType)
  return _internal_writetype();
}
inline void Operate_Blacklist::set_writetype(::uint32_t value) {
  _internal_set_writetype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Blacklist.writeType)
}
inline ::uint32_t Operate_Blacklist::_internal_writetype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.writetype_;
}
inline void Operate_Blacklist::_internal_set_writetype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.writetype_ = value;
}

// uint64 accountId = 2;
inline void Operate_Blacklist::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_Blacklist::accountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Blacklist.accountId)
  return _internal_accountid();
}
inline void Operate_Blacklist::set_accountid(::uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Blacklist.accountId)
}
inline ::uint64_t Operate_Blacklist::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void Operate_Blacklist::_internal_set_accountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// string reason = 3;
inline void Operate_Blacklist::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& Operate_Blacklist::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_Blacklist.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_Blacklist::set_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_Blacklist.reason)
}
inline std::string* Operate_Blacklist::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_Blacklist.reason)
  return _s;
}
inline const std::string& Operate_Blacklist::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void Operate_Blacklist::_internal_set_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* Operate_Blacklist::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* Operate_Blacklist::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_Blacklist.reason)
  return _impl_.reason_.Release();
}
inline void Operate_Blacklist::set_allocated_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reason_.IsDefault()) {
          _impl_.reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_Blacklist.reason)
}

// -------------------------------------------------------------------

// Operate_AccountNameChange

// uint64 accountId = 1;
inline void Operate_AccountNameChange::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = ::uint64_t{0u};
}
inline ::uint64_t Operate_AccountNameChange::accountid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AccountNameChange.accountId)
  return _internal_accountid();
}
inline void Operate_AccountNameChange::set_accountid(::uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_AccountNameChange.accountId)
}
inline ::uint64_t Operate_AccountNameChange::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void Operate_AccountNameChange::_internal_set_accountid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// string accountName = 2;
inline void Operate_AccountNameChange::clear_accountname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountname_.ClearToEmpty();
}
inline const std::string& Operate_AccountNameChange::accountname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.Operate_AccountNameChange.accountName)
  return _internal_accountname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operate_AccountNameChange::set_accountname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.Operate_AccountNameChange.accountName)
}
inline std::string* Operate_AccountNameChange::mutable_accountname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.Operate_AccountNameChange.accountName)
  return _s;
}
inline const std::string& Operate_AccountNameChange::_internal_accountname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountname_.Get();
}
inline void Operate_AccountNameChange::_internal_set_accountname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountname_.Set(value, GetArena());
}
inline std::string* Operate_AccountNameChange::_internal_mutable_accountname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountname_.Mutable( GetArena());
}
inline std::string* Operate_AccountNameChange::release_accountname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.Operate_AccountNameChange.accountName)
  return _impl_.accountname_.Release();
}
inline void Operate_AccountNameChange::set_allocated_accountname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountname_.IsDefault()) {
          _impl_.accountname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.Operate_AccountNameChange.accountName)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Packet
}  // namespace DC


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Operate_2eproto_2epb_2eh
