// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Party.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_Party_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Party_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "_Chat.pb.h"
#include "_Character.pb.h"
#include "_Item.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Party_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Party_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Party_2eproto;
namespace DC {
namespace Packet {
class SC2S_PARTY_CHAT_REQ;
struct SC2S_PARTY_CHAT_REQDefaultTypeInternal;
extern SC2S_PARTY_CHAT_REQDefaultTypeInternal _SC2S_PARTY_CHAT_REQ_default_instance_;
class SC2S_PARTY_EXIT_REQ;
struct SC2S_PARTY_EXIT_REQDefaultTypeInternal;
extern SC2S_PARTY_EXIT_REQDefaultTypeInternal _SC2S_PARTY_EXIT_REQ_default_instance_;
class SC2S_PARTY_INVITE_ANSWER_REQ;
struct SC2S_PARTY_INVITE_ANSWER_REQDefaultTypeInternal;
extern SC2S_PARTY_INVITE_ANSWER_REQDefaultTypeInternal _SC2S_PARTY_INVITE_ANSWER_REQ_default_instance_;
class SC2S_PARTY_INVITE_REQ;
struct SC2S_PARTY_INVITE_REQDefaultTypeInternal;
extern SC2S_PARTY_INVITE_REQDefaultTypeInternal _SC2S_PARTY_INVITE_REQ_default_instance_;
class SC2S_PARTY_MEMBER_KICK_REQ;
struct SC2S_PARTY_MEMBER_KICK_REQDefaultTypeInternal;
extern SC2S_PARTY_MEMBER_KICK_REQDefaultTypeInternal _SC2S_PARTY_MEMBER_KICK_REQ_default_instance_;
class SC2S_PARTY_READY_REQ;
struct SC2S_PARTY_READY_REQDefaultTypeInternal;
extern SC2S_PARTY_READY_REQDefaultTypeInternal _SC2S_PARTY_READY_REQ_default_instance_;
class SC2S_PARTY_START_LOBBY_EMOTE_REQ;
struct SC2S_PARTY_START_LOBBY_EMOTE_REQDefaultTypeInternal;
extern SC2S_PARTY_START_LOBBY_EMOTE_REQDefaultTypeInternal _SC2S_PARTY_START_LOBBY_EMOTE_REQ_default_instance_;
class SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT;
struct SS2C_PARTY_ARMOR_SKIN_CHANGE_NOTDefaultTypeInternal;
extern SS2C_PARTY_ARMOR_SKIN_CHANGE_NOTDefaultTypeInternal _SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT_default_instance_;
class SS2C_PARTY_ARMOR_SKIN_LIST_NOT;
struct SS2C_PARTY_ARMOR_SKIN_LIST_NOTDefaultTypeInternal;
extern SS2C_PARTY_ARMOR_SKIN_LIST_NOTDefaultTypeInternal _SS2C_PARTY_ARMOR_SKIN_LIST_NOT_default_instance_;
class SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT;
struct SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOTDefaultTypeInternal;
extern SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOTDefaultTypeInternal _SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT_default_instance_;
class SS2C_PARTY_CHARACTER_SKIN_LIST_NOT;
struct SS2C_PARTY_CHARACTER_SKIN_LIST_NOTDefaultTypeInternal;
extern SS2C_PARTY_CHARACTER_SKIN_LIST_NOTDefaultTypeInternal _SS2C_PARTY_CHARACTER_SKIN_LIST_NOT_default_instance_;
class SS2C_PARTY_CHAT_NOT;
struct SS2C_PARTY_CHAT_NOTDefaultTypeInternal;
extern SS2C_PARTY_CHAT_NOTDefaultTypeInternal _SS2C_PARTY_CHAT_NOT_default_instance_;
class SS2C_PARTY_CHAT_RES;
struct SS2C_PARTY_CHAT_RESDefaultTypeInternal;
extern SS2C_PARTY_CHAT_RESDefaultTypeInternal _SS2C_PARTY_CHAT_RES_default_instance_;
class SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT;
struct SS2C_PARTY_EQUIP_ITEM_CHANGE_NOTDefaultTypeInternal;
extern SS2C_PARTY_EQUIP_ITEM_CHANGE_NOTDefaultTypeInternal _SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT_default_instance_;
class SS2C_PARTY_EXIT_RES;
struct SS2C_PARTY_EXIT_RESDefaultTypeInternal;
extern SS2C_PARTY_EXIT_RESDefaultTypeInternal _SS2C_PARTY_EXIT_RES_default_instance_;
class SS2C_PARTY_GAME_TYPE_CHANGE_NOT;
struct SS2C_PARTY_GAME_TYPE_CHANGE_NOTDefaultTypeInternal;
extern SS2C_PARTY_GAME_TYPE_CHANGE_NOTDefaultTypeInternal _SS2C_PARTY_GAME_TYPE_CHANGE_NOT_default_instance_;
class SS2C_PARTY_GEAR_SCORE_CHANGE_NOT;
struct SS2C_PARTY_GEAR_SCORE_CHANGE_NOTDefaultTypeInternal;
extern SS2C_PARTY_GEAR_SCORE_CHANGE_NOTDefaultTypeInternal _SS2C_PARTY_GEAR_SCORE_CHANGE_NOT_default_instance_;
class SS2C_PARTY_INVITE_ANSWER_RES;
struct SS2C_PARTY_INVITE_ANSWER_RESDefaultTypeInternal;
extern SS2C_PARTY_INVITE_ANSWER_RESDefaultTypeInternal _SS2C_PARTY_INVITE_ANSWER_RES_default_instance_;
class SS2C_PARTY_INVITE_ANSWER_RESULT_NOT;
struct SS2C_PARTY_INVITE_ANSWER_RESULT_NOTDefaultTypeInternal;
extern SS2C_PARTY_INVITE_ANSWER_RESULT_NOTDefaultTypeInternal _SS2C_PARTY_INVITE_ANSWER_RESULT_NOT_default_instance_;
class SS2C_PARTY_INVITE_NOT;
struct SS2C_PARTY_INVITE_NOTDefaultTypeInternal;
extern SS2C_PARTY_INVITE_NOTDefaultTypeInternal _SS2C_PARTY_INVITE_NOT_default_instance_;
class SS2C_PARTY_INVITE_RES;
struct SS2C_PARTY_INVITE_RESDefaultTypeInternal;
extern SS2C_PARTY_INVITE_RESDefaultTypeInternal _SS2C_PARTY_INVITE_RES_default_instance_;
class SS2C_PARTY_ITEM_SKIN_CHANGE_NOT;
struct SS2C_PARTY_ITEM_SKIN_CHANGE_NOTDefaultTypeInternal;
extern SS2C_PARTY_ITEM_SKIN_CHANGE_NOTDefaultTypeInternal _SS2C_PARTY_ITEM_SKIN_CHANGE_NOT_default_instance_;
class SS2C_PARTY_ITEM_SKIN_LIST_NOT;
struct SS2C_PARTY_ITEM_SKIN_LIST_NOTDefaultTypeInternal;
extern SS2C_PARTY_ITEM_SKIN_LIST_NOTDefaultTypeInternal _SS2C_PARTY_ITEM_SKIN_LIST_NOT_default_instance_;
class SS2C_PARTY_KICKED_OUT_NOT;
struct SS2C_PARTY_KICKED_OUT_NOTDefaultTypeInternal;
extern SS2C_PARTY_KICKED_OUT_NOTDefaultTypeInternal _SS2C_PARTY_KICKED_OUT_NOT_default_instance_;
class SS2C_PARTY_LOCATION_UPDATE_NOT;
struct SS2C_PARTY_LOCATION_UPDATE_NOTDefaultTypeInternal;
extern SS2C_PARTY_LOCATION_UPDATE_NOTDefaultTypeInternal _SS2C_PARTY_LOCATION_UPDATE_NOT_default_instance_;
class SS2C_PARTY_MEMBER_INFO_NOT;
struct SS2C_PARTY_MEMBER_INFO_NOTDefaultTypeInternal;
extern SS2C_PARTY_MEMBER_INFO_NOTDefaultTypeInternal _SS2C_PARTY_MEMBER_INFO_NOT_default_instance_;
class SS2C_PARTY_MEMBER_KICK_RES;
struct SS2C_PARTY_MEMBER_KICK_RESDefaultTypeInternal;
extern SS2C_PARTY_MEMBER_KICK_RESDefaultTypeInternal _SS2C_PARTY_MEMBER_KICK_RES_default_instance_;
class SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT;
struct SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOTDefaultTypeInternal;
extern SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOTDefaultTypeInternal _SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT_default_instance_;
class SS2C_PARTY_RANDOM_MATCHMAKING_NOT;
struct SS2C_PARTY_RANDOM_MATCHMAKING_NOTDefaultTypeInternal;
extern SS2C_PARTY_RANDOM_MATCHMAKING_NOTDefaultTypeInternal _SS2C_PARTY_RANDOM_MATCHMAKING_NOT_default_instance_;
class SS2C_PARTY_READY_CHANGE_NOT;
struct SS2C_PARTY_READY_CHANGE_NOTDefaultTypeInternal;
extern SS2C_PARTY_READY_CHANGE_NOTDefaultTypeInternal _SS2C_PARTY_READY_CHANGE_NOT_default_instance_;
class SS2C_PARTY_READY_RES;
struct SS2C_PARTY_READY_RESDefaultTypeInternal;
extern SS2C_PARTY_READY_RESDefaultTypeInternal _SS2C_PARTY_READY_RES_default_instance_;
class SS2C_PARTY_REGION_CHANGE_NOT;
struct SS2C_PARTY_REGION_CHANGE_NOTDefaultTypeInternal;
extern SS2C_PARTY_REGION_CHANGE_NOTDefaultTypeInternal _SS2C_PARTY_REGION_CHANGE_NOT_default_instance_;
class SS2C_PARTY_START_LOBBY_EMOTE_NOT;
struct SS2C_PARTY_START_LOBBY_EMOTE_NOTDefaultTypeInternal;
extern SS2C_PARTY_START_LOBBY_EMOTE_NOTDefaultTypeInternal _SS2C_PARTY_START_LOBBY_EMOTE_NOT_default_instance_;
class SS2C_PARTY_START_LOBBY_EMOTE_RES;
struct SS2C_PARTY_START_LOBBY_EMOTE_RESDefaultTypeInternal;
extern SS2C_PARTY_START_LOBBY_EMOTE_RESDefaultTypeInternal _SS2C_PARTY_START_LOBBY_EMOTE_RES_default_instance_;
}  // namespace Packet
}  // namespace DC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace DC {
namespace Packet {
enum PARTY_INVITE_ANSWER : int {
  INVITE_ANSWER_NONE = 0,
  INVITE_ANSWER_ACEEPT = 1,
  INVITE_ANSWER_CANCEL = 2,
  PARTY_INVITE_ANSWER_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PARTY_INVITE_ANSWER_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PARTY_INVITE_ANSWER_IsValid(int value);
extern const uint32_t PARTY_INVITE_ANSWER_internal_data_[];
constexpr PARTY_INVITE_ANSWER PARTY_INVITE_ANSWER_MIN = static_cast<PARTY_INVITE_ANSWER>(0);
constexpr PARTY_INVITE_ANSWER PARTY_INVITE_ANSWER_MAX = static_cast<PARTY_INVITE_ANSWER>(2);
constexpr int PARTY_INVITE_ANSWER_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
PARTY_INVITE_ANSWER_descriptor();
template <typename T>
const std::string& PARTY_INVITE_ANSWER_Name(T value) {
  static_assert(std::is_same<T, PARTY_INVITE_ANSWER>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PARTY_INVITE_ANSWER_Name().");
  return PARTY_INVITE_ANSWER_Name(static_cast<PARTY_INVITE_ANSWER>(value));
}
template <>
inline const std::string& PARTY_INVITE_ANSWER_Name(PARTY_INVITE_ANSWER value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PARTY_INVITE_ANSWER_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool PARTY_INVITE_ANSWER_Parse(absl::string_view name, PARTY_INVITE_ANSWER* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PARTY_INVITE_ANSWER>(
      PARTY_INVITE_ANSWER_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SS2C_PARTY_START_LOBBY_EMOTE_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_RES) */ {
 public:
  inline SS2C_PARTY_START_LOBBY_EMOTE_RES() : SS2C_PARTY_START_LOBBY_EMOTE_RES(nullptr) {}
  ~SS2C_PARTY_START_LOBBY_EMOTE_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_START_LOBBY_EMOTE_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_START_LOBBY_EMOTE_RES(const SS2C_PARTY_START_LOBBY_EMOTE_RES& from) : SS2C_PARTY_START_LOBBY_EMOTE_RES(nullptr, from) {}
  inline SS2C_PARTY_START_LOBBY_EMOTE_RES(SS2C_PARTY_START_LOBBY_EMOTE_RES&& from) noexcept
      : SS2C_PARTY_START_LOBBY_EMOTE_RES(nullptr, std::move(from)) {}
  inline SS2C_PARTY_START_LOBBY_EMOTE_RES& operator=(const SS2C_PARTY_START_LOBBY_EMOTE_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_START_LOBBY_EMOTE_RES& operator=(SS2C_PARTY_START_LOBBY_EMOTE_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_START_LOBBY_EMOTE_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_START_LOBBY_EMOTE_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_START_LOBBY_EMOTE_RES*>(
        &_SS2C_PARTY_START_LOBBY_EMOTE_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(SS2C_PARTY_START_LOBBY_EMOTE_RES& a, SS2C_PARTY_START_LOBBY_EMOTE_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_START_LOBBY_EMOTE_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_START_LOBBY_EMOTE_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_START_LOBBY_EMOTE_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_START_LOBBY_EMOTE_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_START_LOBBY_EMOTE_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_START_LOBBY_EMOTE_RES& from) { SS2C_PARTY_START_LOBBY_EMOTE_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_START_LOBBY_EMOTE_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_RES"; }

 protected:
  explicit SS2C_PARTY_START_LOBBY_EMOTE_RES(::google::protobuf::Arena* arena);
  SS2C_PARTY_START_LOBBY_EMOTE_RES(::google::protobuf::Arena* arena, const SS2C_PARTY_START_LOBBY_EMOTE_RES& from);
  SS2C_PARTY_START_LOBBY_EMOTE_RES(::google::protobuf::Arena* arena, SS2C_PARTY_START_LOBBY_EMOTE_RES&& from) noexcept
      : SS2C_PARTY_START_LOBBY_EMOTE_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_START_LOBBY_EMOTE_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_START_LOBBY_EMOTE_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_START_LOBBY_EMOTE_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT) */ {
 public:
  inline SS2C_PARTY_START_LOBBY_EMOTE_NOT() : SS2C_PARTY_START_LOBBY_EMOTE_NOT(nullptr) {}
  ~SS2C_PARTY_START_LOBBY_EMOTE_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_START_LOBBY_EMOTE_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_START_LOBBY_EMOTE_NOT(const SS2C_PARTY_START_LOBBY_EMOTE_NOT& from) : SS2C_PARTY_START_LOBBY_EMOTE_NOT(nullptr, from) {}
  inline SS2C_PARTY_START_LOBBY_EMOTE_NOT(SS2C_PARTY_START_LOBBY_EMOTE_NOT&& from) noexcept
      : SS2C_PARTY_START_LOBBY_EMOTE_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_START_LOBBY_EMOTE_NOT& operator=(const SS2C_PARTY_START_LOBBY_EMOTE_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_START_LOBBY_EMOTE_NOT& operator=(SS2C_PARTY_START_LOBBY_EMOTE_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_START_LOBBY_EMOTE_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_START_LOBBY_EMOTE_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_START_LOBBY_EMOTE_NOT*>(
        &_SS2C_PARTY_START_LOBBY_EMOTE_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(SS2C_PARTY_START_LOBBY_EMOTE_NOT& a, SS2C_PARTY_START_LOBBY_EMOTE_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_START_LOBBY_EMOTE_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_START_LOBBY_EMOTE_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_START_LOBBY_EMOTE_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_START_LOBBY_EMOTE_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_START_LOBBY_EMOTE_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_START_LOBBY_EMOTE_NOT& from) { SS2C_PARTY_START_LOBBY_EMOTE_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_START_LOBBY_EMOTE_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT"; }

 protected:
  explicit SS2C_PARTY_START_LOBBY_EMOTE_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_START_LOBBY_EMOTE_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_START_LOBBY_EMOTE_NOT& from);
  SS2C_PARTY_START_LOBBY_EMOTE_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_START_LOBBY_EMOTE_NOT&& from) noexcept
      : SS2C_PARTY_START_LOBBY_EMOTE_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kLobbyEmoteIdFieldNumber = 3,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string lobbyEmoteId = 3;
  void clear_lobbyemoteid() ;
  const std::string& lobbyemoteid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lobbyemoteid(Arg_&& arg, Args_... args);
  std::string* mutable_lobbyemoteid();
  PROTOBUF_NODISCARD std::string* release_lobbyemoteid();
  void set_allocated_lobbyemoteid(std::string* value);

  private:
  const std::string& _internal_lobbyemoteid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lobbyemoteid(
      const std::string& value);
  std::string* _internal_mutable_lobbyemoteid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      83, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_START_LOBBY_EMOTE_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_START_LOBBY_EMOTE_NOT& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr lobbyemoteid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_REGION_CHANGE_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_REGION_CHANGE_NOT) */ {
 public:
  inline SS2C_PARTY_REGION_CHANGE_NOT() : SS2C_PARTY_REGION_CHANGE_NOT(nullptr) {}
  ~SS2C_PARTY_REGION_CHANGE_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_REGION_CHANGE_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_REGION_CHANGE_NOT(const SS2C_PARTY_REGION_CHANGE_NOT& from) : SS2C_PARTY_REGION_CHANGE_NOT(nullptr, from) {}
  inline SS2C_PARTY_REGION_CHANGE_NOT(SS2C_PARTY_REGION_CHANGE_NOT&& from) noexcept
      : SS2C_PARTY_REGION_CHANGE_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_REGION_CHANGE_NOT& operator=(const SS2C_PARTY_REGION_CHANGE_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_REGION_CHANGE_NOT& operator=(SS2C_PARTY_REGION_CHANGE_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_REGION_CHANGE_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_REGION_CHANGE_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_REGION_CHANGE_NOT*>(
        &_SS2C_PARTY_REGION_CHANGE_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(SS2C_PARTY_REGION_CHANGE_NOT& a, SS2C_PARTY_REGION_CHANGE_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_REGION_CHANGE_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_REGION_CHANGE_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_REGION_CHANGE_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_REGION_CHANGE_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_REGION_CHANGE_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_REGION_CHANGE_NOT& from) { SS2C_PARTY_REGION_CHANGE_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_REGION_CHANGE_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_REGION_CHANGE_NOT"; }

 protected:
  explicit SS2C_PARTY_REGION_CHANGE_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_REGION_CHANGE_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_REGION_CHANGE_NOT& from);
  SS2C_PARTY_REGION_CHANGE_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_REGION_CHANGE_NOT&& from) noexcept
      : SS2C_PARTY_REGION_CHANGE_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRegionFieldNumber = 1,
  };
  // uint32 region = 1;
  void clear_region() ;
  ::uint32_t region() const;
  void set_region(::uint32_t value);

  private:
  ::uint32_t _internal_region() const;
  void _internal_set_region(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_REGION_CHANGE_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_REGION_CHANGE_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_REGION_CHANGE_NOT& from_msg);
    ::uint32_t region_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_READY_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_READY_RES) */ {
 public:
  inline SS2C_PARTY_READY_RES() : SS2C_PARTY_READY_RES(nullptr) {}
  ~SS2C_PARTY_READY_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_READY_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_READY_RES(const SS2C_PARTY_READY_RES& from) : SS2C_PARTY_READY_RES(nullptr, from) {}
  inline SS2C_PARTY_READY_RES(SS2C_PARTY_READY_RES&& from) noexcept
      : SS2C_PARTY_READY_RES(nullptr, std::move(from)) {}
  inline SS2C_PARTY_READY_RES& operator=(const SS2C_PARTY_READY_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_READY_RES& operator=(SS2C_PARTY_READY_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_READY_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_READY_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_READY_RES*>(
        &_SS2C_PARTY_READY_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(SS2C_PARTY_READY_RES& a, SS2C_PARTY_READY_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_READY_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_READY_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_READY_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_READY_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_READY_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_READY_RES& from) { SS2C_PARTY_READY_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_READY_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_READY_RES"; }

 protected:
  explicit SS2C_PARTY_READY_RES(::google::protobuf::Arena* arena);
  SS2C_PARTY_READY_RES(::google::protobuf::Arena* arena, const SS2C_PARTY_READY_RES& from);
  SS2C_PARTY_READY_RES(::google::protobuf::Arena* arena, SS2C_PARTY_READY_RES&& from) noexcept
      : SS2C_PARTY_READY_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
    kRestrictionMSFieldNumber = 2,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // uint32 restrictionMS = 2;
  void clear_restrictionms() ;
  ::uint32_t restrictionms() const;
  void set_restrictionms(::uint32_t value);

  private:
  ::uint32_t _internal_restrictionms() const;
  void _internal_set_restrictionms(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_READY_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_READY_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_READY_RES& from_msg);
    ::uint32_t result_;
    ::uint32_t restrictionms_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_READY_CHANGE_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_READY_CHANGE_NOT) */ {
 public:
  inline SS2C_PARTY_READY_CHANGE_NOT() : SS2C_PARTY_READY_CHANGE_NOT(nullptr) {}
  ~SS2C_PARTY_READY_CHANGE_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_READY_CHANGE_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_READY_CHANGE_NOT(const SS2C_PARTY_READY_CHANGE_NOT& from) : SS2C_PARTY_READY_CHANGE_NOT(nullptr, from) {}
  inline SS2C_PARTY_READY_CHANGE_NOT(SS2C_PARTY_READY_CHANGE_NOT&& from) noexcept
      : SS2C_PARTY_READY_CHANGE_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_READY_CHANGE_NOT& operator=(const SS2C_PARTY_READY_CHANGE_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_READY_CHANGE_NOT& operator=(SS2C_PARTY_READY_CHANGE_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_READY_CHANGE_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_READY_CHANGE_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_READY_CHANGE_NOT*>(
        &_SS2C_PARTY_READY_CHANGE_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(SS2C_PARTY_READY_CHANGE_NOT& a, SS2C_PARTY_READY_CHANGE_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_READY_CHANGE_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_READY_CHANGE_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_READY_CHANGE_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_READY_CHANGE_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_READY_CHANGE_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_READY_CHANGE_NOT& from) { SS2C_PARTY_READY_CHANGE_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_READY_CHANGE_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_READY_CHANGE_NOT"; }

 protected:
  explicit SS2C_PARTY_READY_CHANGE_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_READY_CHANGE_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_READY_CHANGE_NOT& from);
  SS2C_PARTY_READY_CHANGE_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_READY_CHANGE_NOT&& from) noexcept
      : SS2C_PARTY_READY_CHANGE_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kIsReadyFieldNumber = 3,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // uint32 isReady = 3;
  void clear_isready() ;
  ::uint32_t isready() const;
  void set_isready(::uint32_t value);

  private:
  ::uint32_t _internal_isready() const;
  void _internal_set_isready(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_READY_CHANGE_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      66, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_READY_CHANGE_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_READY_CHANGE_NOT& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::uint32_t isready_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_RANDOM_MATCHMAKING_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_RANDOM_MATCHMAKING_NOT) */ {
 public:
  inline SS2C_PARTY_RANDOM_MATCHMAKING_NOT() : SS2C_PARTY_RANDOM_MATCHMAKING_NOT(nullptr) {}
  ~SS2C_PARTY_RANDOM_MATCHMAKING_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_RANDOM_MATCHMAKING_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_RANDOM_MATCHMAKING_NOT(const SS2C_PARTY_RANDOM_MATCHMAKING_NOT& from) : SS2C_PARTY_RANDOM_MATCHMAKING_NOT(nullptr, from) {}
  inline SS2C_PARTY_RANDOM_MATCHMAKING_NOT(SS2C_PARTY_RANDOM_MATCHMAKING_NOT&& from) noexcept
      : SS2C_PARTY_RANDOM_MATCHMAKING_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_RANDOM_MATCHMAKING_NOT& operator=(const SS2C_PARTY_RANDOM_MATCHMAKING_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_RANDOM_MATCHMAKING_NOT& operator=(SS2C_PARTY_RANDOM_MATCHMAKING_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_RANDOM_MATCHMAKING_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_RANDOM_MATCHMAKING_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_RANDOM_MATCHMAKING_NOT*>(
        &_SS2C_PARTY_RANDOM_MATCHMAKING_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(SS2C_PARTY_RANDOM_MATCHMAKING_NOT& a, SS2C_PARTY_RANDOM_MATCHMAKING_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_RANDOM_MATCHMAKING_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_RANDOM_MATCHMAKING_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_RANDOM_MATCHMAKING_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_RANDOM_MATCHMAKING_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_RANDOM_MATCHMAKING_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_RANDOM_MATCHMAKING_NOT& from) { SS2C_PARTY_RANDOM_MATCHMAKING_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_RANDOM_MATCHMAKING_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_RANDOM_MATCHMAKING_NOT"; }

 protected:
  explicit SS2C_PARTY_RANDOM_MATCHMAKING_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_RANDOM_MATCHMAKING_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_RANDOM_MATCHMAKING_NOT& from);
  SS2C_PARTY_RANDOM_MATCHMAKING_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_RANDOM_MATCHMAKING_NOT&& from) noexcept
      : SS2C_PARTY_RANDOM_MATCHMAKING_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsRandomMatchmakingFieldNumber = 1,
  };
  // int32 isRandomMatchmaking = 1;
  void clear_israndommatchmaking() ;
  ::int32_t israndommatchmaking() const;
  void set_israndommatchmaking(::int32_t value);

  private:
  ::int32_t _internal_israndommatchmaking() const;
  void _internal_set_israndommatchmaking(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_RANDOM_MATCHMAKING_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_RANDOM_MATCHMAKING_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_RANDOM_MATCHMAKING_NOT& from_msg);
    ::int32_t israndommatchmaking_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT) */ {
 public:
  inline SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT() : SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT(nullptr) {}
  ~SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT(const SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT& from) : SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT(nullptr, from) {}
  inline SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT(SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT&& from) noexcept
      : SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT& operator=(const SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT& operator=(SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT*>(
        &_SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT& a, SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT& from) { SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT"; }

 protected:
  explicit SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT& from);
  SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT&& from) noexcept
      : SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLobbyEmoteIdListFieldNumber = 3,
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
  };
  // repeated string lobbyEmoteIdList = 3;
  int lobbyemoteidlist_size() const;
  private:
  int _internal_lobbyemoteidlist_size() const;

  public:
  void clear_lobbyemoteidlist() ;
  const std::string& lobbyemoteidlist(int index) const;
  std::string* mutable_lobbyemoteidlist(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lobbyemoteidlist(int index, Arg_&& value, Args_... args);
  std::string* add_lobbyemoteidlist();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_lobbyemoteidlist(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& lobbyemoteidlist() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_lobbyemoteidlist();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_lobbyemoteidlist() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_lobbyemoteidlist();

  public:
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      88, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> lobbyemoteidlist_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_MEMBER_KICK_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_MEMBER_KICK_RES) */ {
 public:
  inline SS2C_PARTY_MEMBER_KICK_RES() : SS2C_PARTY_MEMBER_KICK_RES(nullptr) {}
  ~SS2C_PARTY_MEMBER_KICK_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_MEMBER_KICK_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_MEMBER_KICK_RES(const SS2C_PARTY_MEMBER_KICK_RES& from) : SS2C_PARTY_MEMBER_KICK_RES(nullptr, from) {}
  inline SS2C_PARTY_MEMBER_KICK_RES(SS2C_PARTY_MEMBER_KICK_RES&& from) noexcept
      : SS2C_PARTY_MEMBER_KICK_RES(nullptr, std::move(from)) {}
  inline SS2C_PARTY_MEMBER_KICK_RES& operator=(const SS2C_PARTY_MEMBER_KICK_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_MEMBER_KICK_RES& operator=(SS2C_PARTY_MEMBER_KICK_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_MEMBER_KICK_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_MEMBER_KICK_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_MEMBER_KICK_RES*>(
        &_SS2C_PARTY_MEMBER_KICK_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(SS2C_PARTY_MEMBER_KICK_RES& a, SS2C_PARTY_MEMBER_KICK_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_MEMBER_KICK_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_MEMBER_KICK_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_MEMBER_KICK_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_MEMBER_KICK_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_MEMBER_KICK_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_MEMBER_KICK_RES& from) { SS2C_PARTY_MEMBER_KICK_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_MEMBER_KICK_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_MEMBER_KICK_RES"; }

 protected:
  explicit SS2C_PARTY_MEMBER_KICK_RES(::google::protobuf::Arena* arena);
  SS2C_PARTY_MEMBER_KICK_RES(::google::protobuf::Arena* arena, const SS2C_PARTY_MEMBER_KICK_RES& from);
  SS2C_PARTY_MEMBER_KICK_RES(::google::protobuf::Arena* arena, SS2C_PARTY_MEMBER_KICK_RES&& from) noexcept
      : SS2C_PARTY_MEMBER_KICK_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_MEMBER_KICK_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_MEMBER_KICK_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_MEMBER_KICK_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_LOCATION_UPDATE_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_LOCATION_UPDATE_NOT) */ {
 public:
  inline SS2C_PARTY_LOCATION_UPDATE_NOT() : SS2C_PARTY_LOCATION_UPDATE_NOT(nullptr) {}
  ~SS2C_PARTY_LOCATION_UPDATE_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_LOCATION_UPDATE_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_LOCATION_UPDATE_NOT(const SS2C_PARTY_LOCATION_UPDATE_NOT& from) : SS2C_PARTY_LOCATION_UPDATE_NOT(nullptr, from) {}
  inline SS2C_PARTY_LOCATION_UPDATE_NOT(SS2C_PARTY_LOCATION_UPDATE_NOT&& from) noexcept
      : SS2C_PARTY_LOCATION_UPDATE_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_LOCATION_UPDATE_NOT& operator=(const SS2C_PARTY_LOCATION_UPDATE_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_LOCATION_UPDATE_NOT& operator=(SS2C_PARTY_LOCATION_UPDATE_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_LOCATION_UPDATE_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_LOCATION_UPDATE_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_LOCATION_UPDATE_NOT*>(
        &_SS2C_PARTY_LOCATION_UPDATE_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(SS2C_PARTY_LOCATION_UPDATE_NOT& a, SS2C_PARTY_LOCATION_UPDATE_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_LOCATION_UPDATE_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_LOCATION_UPDATE_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_LOCATION_UPDATE_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_LOCATION_UPDATE_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_LOCATION_UPDATE_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_LOCATION_UPDATE_NOT& from) { SS2C_PARTY_LOCATION_UPDATE_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_LOCATION_UPDATE_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_LOCATION_UPDATE_NOT"; }

 protected:
  explicit SS2C_PARTY_LOCATION_UPDATE_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_LOCATION_UPDATE_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_LOCATION_UPDATE_NOT& from);
  SS2C_PARTY_LOCATION_UPDATE_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_LOCATION_UPDATE_NOT&& from) noexcept
      : SS2C_PARTY_LOCATION_UPDATE_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kUpdateLocationFieldNumber = 3,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // uint32 updateLocation = 3;
  void clear_updatelocation() ;
  ::uint32_t updatelocation() const;
  void set_updatelocation(::uint32_t value);

  private:
  ::uint32_t _internal_updatelocation() const;
  void _internal_set_updatelocation(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_LOCATION_UPDATE_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      69, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_LOCATION_UPDATE_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_LOCATION_UPDATE_NOT& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::uint32_t updatelocation_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_KICKED_OUT_NOT final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_KICKED_OUT_NOT) */ {
 public:
  inline SS2C_PARTY_KICKED_OUT_NOT() : SS2C_PARTY_KICKED_OUT_NOT(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_KICKED_OUT_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_KICKED_OUT_NOT(const SS2C_PARTY_KICKED_OUT_NOT& from) : SS2C_PARTY_KICKED_OUT_NOT(nullptr, from) {}
  inline SS2C_PARTY_KICKED_OUT_NOT(SS2C_PARTY_KICKED_OUT_NOT&& from) noexcept
      : SS2C_PARTY_KICKED_OUT_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_KICKED_OUT_NOT& operator=(const SS2C_PARTY_KICKED_OUT_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_KICKED_OUT_NOT& operator=(SS2C_PARTY_KICKED_OUT_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_KICKED_OUT_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_KICKED_OUT_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_KICKED_OUT_NOT*>(
        &_SS2C_PARTY_KICKED_OUT_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(SS2C_PARTY_KICKED_OUT_NOT& a, SS2C_PARTY_KICKED_OUT_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_KICKED_OUT_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_KICKED_OUT_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_KICKED_OUT_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SS2C_PARTY_KICKED_OUT_NOT>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SS2C_PARTY_KICKED_OUT_NOT& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SS2C_PARTY_KICKED_OUT_NOT& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_KICKED_OUT_NOT"; }

 protected:
  explicit SS2C_PARTY_KICKED_OUT_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_KICKED_OUT_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_KICKED_OUT_NOT& from);
  SS2C_PARTY_KICKED_OUT_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_KICKED_OUT_NOT&& from) noexcept
      : SS2C_PARTY_KICKED_OUT_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_KICKED_OUT_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_KICKED_OUT_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_KICKED_OUT_NOT& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_ITEM_SKIN_LIST_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT) */ {
 public:
  inline SS2C_PARTY_ITEM_SKIN_LIST_NOT() : SS2C_PARTY_ITEM_SKIN_LIST_NOT(nullptr) {}
  ~SS2C_PARTY_ITEM_SKIN_LIST_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_ITEM_SKIN_LIST_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_ITEM_SKIN_LIST_NOT(const SS2C_PARTY_ITEM_SKIN_LIST_NOT& from) : SS2C_PARTY_ITEM_SKIN_LIST_NOT(nullptr, from) {}
  inline SS2C_PARTY_ITEM_SKIN_LIST_NOT(SS2C_PARTY_ITEM_SKIN_LIST_NOT&& from) noexcept
      : SS2C_PARTY_ITEM_SKIN_LIST_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_ITEM_SKIN_LIST_NOT& operator=(const SS2C_PARTY_ITEM_SKIN_LIST_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_ITEM_SKIN_LIST_NOT& operator=(SS2C_PARTY_ITEM_SKIN_LIST_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_ITEM_SKIN_LIST_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_ITEM_SKIN_LIST_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_ITEM_SKIN_LIST_NOT*>(
        &_SS2C_PARTY_ITEM_SKIN_LIST_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(SS2C_PARTY_ITEM_SKIN_LIST_NOT& a, SS2C_PARTY_ITEM_SKIN_LIST_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_ITEM_SKIN_LIST_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_ITEM_SKIN_LIST_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_ITEM_SKIN_LIST_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_ITEM_SKIN_LIST_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_ITEM_SKIN_LIST_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_ITEM_SKIN_LIST_NOT& from) { SS2C_PARTY_ITEM_SKIN_LIST_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_ITEM_SKIN_LIST_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT"; }

 protected:
  explicit SS2C_PARTY_ITEM_SKIN_LIST_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_ITEM_SKIN_LIST_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_ITEM_SKIN_LIST_NOT& from);
  SS2C_PARTY_ITEM_SKIN_LIST_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_ITEM_SKIN_LIST_NOT&& from) noexcept
      : SS2C_PARTY_ITEM_SKIN_LIST_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemSkinIdListFieldNumber = 3,
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
  };
  // repeated string itemSkinIdList = 3;
  int itemskinidlist_size() const;
  private:
  int _internal_itemskinidlist_size() const;

  public:
  void clear_itemskinidlist() ;
  const std::string& itemskinidlist(int index) const;
  std::string* mutable_itemskinidlist(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_itemskinidlist(int index, Arg_&& value, Args_... args);
  std::string* add_itemskinidlist();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_itemskinidlist(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& itemskinidlist() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_itemskinidlist();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_itemskinidlist() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_itemskinidlist();

  public:
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      82, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_ITEM_SKIN_LIST_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_ITEM_SKIN_LIST_NOT& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> itemskinidlist_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_ITEM_SKIN_CHANGE_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT) */ {
 public:
  inline SS2C_PARTY_ITEM_SKIN_CHANGE_NOT() : SS2C_PARTY_ITEM_SKIN_CHANGE_NOT(nullptr) {}
  ~SS2C_PARTY_ITEM_SKIN_CHANGE_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_ITEM_SKIN_CHANGE_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_ITEM_SKIN_CHANGE_NOT(const SS2C_PARTY_ITEM_SKIN_CHANGE_NOT& from) : SS2C_PARTY_ITEM_SKIN_CHANGE_NOT(nullptr, from) {}
  inline SS2C_PARTY_ITEM_SKIN_CHANGE_NOT(SS2C_PARTY_ITEM_SKIN_CHANGE_NOT&& from) noexcept
      : SS2C_PARTY_ITEM_SKIN_CHANGE_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_ITEM_SKIN_CHANGE_NOT& operator=(const SS2C_PARTY_ITEM_SKIN_CHANGE_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_ITEM_SKIN_CHANGE_NOT& operator=(SS2C_PARTY_ITEM_SKIN_CHANGE_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_ITEM_SKIN_CHANGE_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_ITEM_SKIN_CHANGE_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_ITEM_SKIN_CHANGE_NOT*>(
        &_SS2C_PARTY_ITEM_SKIN_CHANGE_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(SS2C_PARTY_ITEM_SKIN_CHANGE_NOT& a, SS2C_PARTY_ITEM_SKIN_CHANGE_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_ITEM_SKIN_CHANGE_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_ITEM_SKIN_CHANGE_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_ITEM_SKIN_CHANGE_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_ITEM_SKIN_CHANGE_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_ITEM_SKIN_CHANGE_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_ITEM_SKIN_CHANGE_NOT& from) { SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_ITEM_SKIN_CHANGE_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT"; }

 protected:
  explicit SS2C_PARTY_ITEM_SKIN_CHANGE_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_ITEM_SKIN_CHANGE_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_ITEM_SKIN_CHANGE_NOT& from);
  SS2C_PARTY_ITEM_SKIN_CHANGE_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_ITEM_SKIN_CHANGE_NOT&& from) noexcept
      : SS2C_PARTY_ITEM_SKIN_CHANGE_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kOldItemSkinIdFieldNumber = 3,
    kNewItemSkinIdFieldNumber = 4,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string oldItemSkinId = 3;
  void clear_olditemskinid() ;
  const std::string& olditemskinid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_olditemskinid(Arg_&& arg, Args_... args);
  std::string* mutable_olditemskinid();
  PROTOBUF_NODISCARD std::string* release_olditemskinid();
  void set_allocated_olditemskinid(std::string* value);

  private:
  const std::string& _internal_olditemskinid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_olditemskinid(
      const std::string& value);
  std::string* _internal_mutable_olditemskinid();

  public:
  // string newItemSkinId = 4;
  void clear_newitemskinid() ;
  const std::string& newitemskinid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_newitemskinid(Arg_&& arg, Args_... args);
  std::string* mutable_newitemskinid();
  PROTOBUF_NODISCARD std::string* release_newitemskinid();
  void set_allocated_newitemskinid(std::string* value);

  private:
  const std::string& _internal_newitemskinid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_newitemskinid(
      const std::string& value);
  std::string* _internal_mutable_newitemskinid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      96, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_ITEM_SKIN_CHANGE_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_ITEM_SKIN_CHANGE_NOT& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr olditemskinid_;
    ::google::protobuf::internal::ArenaStringPtr newitemskinid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_INVITE_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_INVITE_RES) */ {
 public:
  inline SS2C_PARTY_INVITE_RES() : SS2C_PARTY_INVITE_RES(nullptr) {}
  ~SS2C_PARTY_INVITE_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_INVITE_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_INVITE_RES(const SS2C_PARTY_INVITE_RES& from) : SS2C_PARTY_INVITE_RES(nullptr, from) {}
  inline SS2C_PARTY_INVITE_RES(SS2C_PARTY_INVITE_RES&& from) noexcept
      : SS2C_PARTY_INVITE_RES(nullptr, std::move(from)) {}
  inline SS2C_PARTY_INVITE_RES& operator=(const SS2C_PARTY_INVITE_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_INVITE_RES& operator=(SS2C_PARTY_INVITE_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_INVITE_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_INVITE_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_INVITE_RES*>(
        &_SS2C_PARTY_INVITE_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SS2C_PARTY_INVITE_RES& a, SS2C_PARTY_INVITE_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_INVITE_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_INVITE_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_INVITE_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_INVITE_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_INVITE_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_INVITE_RES& from) { SS2C_PARTY_INVITE_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_INVITE_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_INVITE_RES"; }

 protected:
  explicit SS2C_PARTY_INVITE_RES(::google::protobuf::Arena* arena);
  SS2C_PARTY_INVITE_RES(::google::protobuf::Arena* arena, const SS2C_PARTY_INVITE_RES& from);
  SS2C_PARTY_INVITE_RES(::google::protobuf::Arena* arena, SS2C_PARTY_INVITE_RES&& from) noexcept
      : SS2C_PARTY_INVITE_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_INVITE_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_INVITE_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_INVITE_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_INVITE_ANSWER_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_INVITE_ANSWER_RES) */ {
 public:
  inline SS2C_PARTY_INVITE_ANSWER_RES() : SS2C_PARTY_INVITE_ANSWER_RES(nullptr) {}
  ~SS2C_PARTY_INVITE_ANSWER_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_INVITE_ANSWER_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_INVITE_ANSWER_RES(const SS2C_PARTY_INVITE_ANSWER_RES& from) : SS2C_PARTY_INVITE_ANSWER_RES(nullptr, from) {}
  inline SS2C_PARTY_INVITE_ANSWER_RES(SS2C_PARTY_INVITE_ANSWER_RES&& from) noexcept
      : SS2C_PARTY_INVITE_ANSWER_RES(nullptr, std::move(from)) {}
  inline SS2C_PARTY_INVITE_ANSWER_RES& operator=(const SS2C_PARTY_INVITE_ANSWER_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_INVITE_ANSWER_RES& operator=(SS2C_PARTY_INVITE_ANSWER_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_INVITE_ANSWER_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_INVITE_ANSWER_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_INVITE_ANSWER_RES*>(
        &_SS2C_PARTY_INVITE_ANSWER_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SS2C_PARTY_INVITE_ANSWER_RES& a, SS2C_PARTY_INVITE_ANSWER_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_INVITE_ANSWER_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_INVITE_ANSWER_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_INVITE_ANSWER_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_INVITE_ANSWER_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_INVITE_ANSWER_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_INVITE_ANSWER_RES& from) { SS2C_PARTY_INVITE_ANSWER_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_INVITE_ANSWER_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_INVITE_ANSWER_RES"; }

 protected:
  explicit SS2C_PARTY_INVITE_ANSWER_RES(::google::protobuf::Arena* arena);
  SS2C_PARTY_INVITE_ANSWER_RES(::google::protobuf::Arena* arena, const SS2C_PARTY_INVITE_ANSWER_RES& from);
  SS2C_PARTY_INVITE_ANSWER_RES(::google::protobuf::Arena* arena, SS2C_PARTY_INVITE_ANSWER_RES&& from) noexcept
      : SS2C_PARTY_INVITE_ANSWER_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_INVITE_ANSWER_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_INVITE_ANSWER_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_INVITE_ANSWER_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_GEAR_SCORE_CHANGE_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_GEAR_SCORE_CHANGE_NOT) */ {
 public:
  inline SS2C_PARTY_GEAR_SCORE_CHANGE_NOT() : SS2C_PARTY_GEAR_SCORE_CHANGE_NOT(nullptr) {}
  ~SS2C_PARTY_GEAR_SCORE_CHANGE_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_GEAR_SCORE_CHANGE_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_GEAR_SCORE_CHANGE_NOT(const SS2C_PARTY_GEAR_SCORE_CHANGE_NOT& from) : SS2C_PARTY_GEAR_SCORE_CHANGE_NOT(nullptr, from) {}
  inline SS2C_PARTY_GEAR_SCORE_CHANGE_NOT(SS2C_PARTY_GEAR_SCORE_CHANGE_NOT&& from) noexcept
      : SS2C_PARTY_GEAR_SCORE_CHANGE_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_GEAR_SCORE_CHANGE_NOT& operator=(const SS2C_PARTY_GEAR_SCORE_CHANGE_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_GEAR_SCORE_CHANGE_NOT& operator=(SS2C_PARTY_GEAR_SCORE_CHANGE_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_GEAR_SCORE_CHANGE_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_GEAR_SCORE_CHANGE_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_GEAR_SCORE_CHANGE_NOT*>(
        &_SS2C_PARTY_GEAR_SCORE_CHANGE_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(SS2C_PARTY_GEAR_SCORE_CHANGE_NOT& a, SS2C_PARTY_GEAR_SCORE_CHANGE_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_GEAR_SCORE_CHANGE_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_GEAR_SCORE_CHANGE_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_GEAR_SCORE_CHANGE_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_GEAR_SCORE_CHANGE_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_GEAR_SCORE_CHANGE_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_GEAR_SCORE_CHANGE_NOT& from) { SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_GEAR_SCORE_CHANGE_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_GEAR_SCORE_CHANGE_NOT"; }

 protected:
  explicit SS2C_PARTY_GEAR_SCORE_CHANGE_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_GEAR_SCORE_CHANGE_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_GEAR_SCORE_CHANGE_NOT& from);
  SS2C_PARTY_GEAR_SCORE_CHANGE_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_GEAR_SCORE_CHANGE_NOT&& from) noexcept
      : SS2C_PARTY_GEAR_SCORE_CHANGE_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kGearScoreFieldNumber = 3,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // uint32 gearScore = 3;
  void clear_gearscore() ;
  ::uint32_t gearscore() const;
  void set_gearscore(::uint32_t value);

  private:
  ::uint32_t _internal_gearscore() const;
  void _internal_set_gearscore(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_GEAR_SCORE_CHANGE_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      71, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_GEAR_SCORE_CHANGE_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_GEAR_SCORE_CHANGE_NOT& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::uint32_t gearscore_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_GAME_TYPE_CHANGE_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_GAME_TYPE_CHANGE_NOT) */ {
 public:
  inline SS2C_PARTY_GAME_TYPE_CHANGE_NOT() : SS2C_PARTY_GAME_TYPE_CHANGE_NOT(nullptr) {}
  ~SS2C_PARTY_GAME_TYPE_CHANGE_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_GAME_TYPE_CHANGE_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_GAME_TYPE_CHANGE_NOT(const SS2C_PARTY_GAME_TYPE_CHANGE_NOT& from) : SS2C_PARTY_GAME_TYPE_CHANGE_NOT(nullptr, from) {}
  inline SS2C_PARTY_GAME_TYPE_CHANGE_NOT(SS2C_PARTY_GAME_TYPE_CHANGE_NOT&& from) noexcept
      : SS2C_PARTY_GAME_TYPE_CHANGE_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_GAME_TYPE_CHANGE_NOT& operator=(const SS2C_PARTY_GAME_TYPE_CHANGE_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_GAME_TYPE_CHANGE_NOT& operator=(SS2C_PARTY_GAME_TYPE_CHANGE_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_GAME_TYPE_CHANGE_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_GAME_TYPE_CHANGE_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_GAME_TYPE_CHANGE_NOT*>(
        &_SS2C_PARTY_GAME_TYPE_CHANGE_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(SS2C_PARTY_GAME_TYPE_CHANGE_NOT& a, SS2C_PARTY_GAME_TYPE_CHANGE_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_GAME_TYPE_CHANGE_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_GAME_TYPE_CHANGE_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_GAME_TYPE_CHANGE_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_GAME_TYPE_CHANGE_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_GAME_TYPE_CHANGE_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_GAME_TYPE_CHANGE_NOT& from) { SS2C_PARTY_GAME_TYPE_CHANGE_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_GAME_TYPE_CHANGE_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_GAME_TYPE_CHANGE_NOT"; }

 protected:
  explicit SS2C_PARTY_GAME_TYPE_CHANGE_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_GAME_TYPE_CHANGE_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_GAME_TYPE_CHANGE_NOT& from);
  SS2C_PARTY_GAME_TYPE_CHANGE_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_GAME_TYPE_CHANGE_NOT&& from) noexcept
      : SS2C_PARTY_GAME_TYPE_CHANGE_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameTypeIndexFieldNumber = 1,
  };
  // uint32 gameTypeIndex = 1;
  void clear_gametypeindex() ;
  ::uint32_t gametypeindex() const;
  void set_gametypeindex(::uint32_t value);

  private:
  ::uint32_t _internal_gametypeindex() const;
  void _internal_set_gametypeindex(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_GAME_TYPE_CHANGE_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_GAME_TYPE_CHANGE_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_GAME_TYPE_CHANGE_NOT& from_msg);
    ::uint32_t gametypeindex_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_EXIT_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_EXIT_RES) */ {
 public:
  inline SS2C_PARTY_EXIT_RES() : SS2C_PARTY_EXIT_RES(nullptr) {}
  ~SS2C_PARTY_EXIT_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_EXIT_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_EXIT_RES(const SS2C_PARTY_EXIT_RES& from) : SS2C_PARTY_EXIT_RES(nullptr, from) {}
  inline SS2C_PARTY_EXIT_RES(SS2C_PARTY_EXIT_RES&& from) noexcept
      : SS2C_PARTY_EXIT_RES(nullptr, std::move(from)) {}
  inline SS2C_PARTY_EXIT_RES& operator=(const SS2C_PARTY_EXIT_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_EXIT_RES& operator=(SS2C_PARTY_EXIT_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_EXIT_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_EXIT_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_EXIT_RES*>(
        &_SS2C_PARTY_EXIT_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SS2C_PARTY_EXIT_RES& a, SS2C_PARTY_EXIT_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_EXIT_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_EXIT_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_EXIT_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_EXIT_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_EXIT_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_EXIT_RES& from) { SS2C_PARTY_EXIT_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_EXIT_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_EXIT_RES"; }

 protected:
  explicit SS2C_PARTY_EXIT_RES(::google::protobuf::Arena* arena);
  SS2C_PARTY_EXIT_RES(::google::protobuf::Arena* arena, const SS2C_PARTY_EXIT_RES& from);
  SS2C_PARTY_EXIT_RES(::google::protobuf::Arena* arena, SS2C_PARTY_EXIT_RES&& from) noexcept
      : SS2C_PARTY_EXIT_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_EXIT_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_EXIT_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_EXIT_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_CHAT_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_CHAT_RES) */ {
 public:
  inline SS2C_PARTY_CHAT_RES() : SS2C_PARTY_CHAT_RES(nullptr) {}
  ~SS2C_PARTY_CHAT_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_CHAT_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_CHAT_RES(const SS2C_PARTY_CHAT_RES& from) : SS2C_PARTY_CHAT_RES(nullptr, from) {}
  inline SS2C_PARTY_CHAT_RES(SS2C_PARTY_CHAT_RES&& from) noexcept
      : SS2C_PARTY_CHAT_RES(nullptr, std::move(from)) {}
  inline SS2C_PARTY_CHAT_RES& operator=(const SS2C_PARTY_CHAT_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_CHAT_RES& operator=(SS2C_PARTY_CHAT_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_CHAT_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_CHAT_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_CHAT_RES*>(
        &_SS2C_PARTY_CHAT_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(SS2C_PARTY_CHAT_RES& a, SS2C_PARTY_CHAT_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_CHAT_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_CHAT_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_CHAT_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_CHAT_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_CHAT_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_CHAT_RES& from) { SS2C_PARTY_CHAT_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_CHAT_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_CHAT_RES"; }

 protected:
  explicit SS2C_PARTY_CHAT_RES(::google::protobuf::Arena* arena);
  SS2C_PARTY_CHAT_RES(::google::protobuf::Arena* arena, const SS2C_PARTY_CHAT_RES& from);
  SS2C_PARTY_CHAT_RES(::google::protobuf::Arena* arena, SS2C_PARTY_CHAT_RES&& from) noexcept
      : SS2C_PARTY_CHAT_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_CHAT_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_CHAT_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_CHAT_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_CHARACTER_SKIN_LIST_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT) */ {
 public:
  inline SS2C_PARTY_CHARACTER_SKIN_LIST_NOT() : SS2C_PARTY_CHARACTER_SKIN_LIST_NOT(nullptr) {}
  ~SS2C_PARTY_CHARACTER_SKIN_LIST_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_CHARACTER_SKIN_LIST_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_CHARACTER_SKIN_LIST_NOT(const SS2C_PARTY_CHARACTER_SKIN_LIST_NOT& from) : SS2C_PARTY_CHARACTER_SKIN_LIST_NOT(nullptr, from) {}
  inline SS2C_PARTY_CHARACTER_SKIN_LIST_NOT(SS2C_PARTY_CHARACTER_SKIN_LIST_NOT&& from) noexcept
      : SS2C_PARTY_CHARACTER_SKIN_LIST_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_CHARACTER_SKIN_LIST_NOT& operator=(const SS2C_PARTY_CHARACTER_SKIN_LIST_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_CHARACTER_SKIN_LIST_NOT& operator=(SS2C_PARTY_CHARACTER_SKIN_LIST_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_CHARACTER_SKIN_LIST_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_CHARACTER_SKIN_LIST_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_CHARACTER_SKIN_LIST_NOT*>(
        &_SS2C_PARTY_CHARACTER_SKIN_LIST_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(SS2C_PARTY_CHARACTER_SKIN_LIST_NOT& a, SS2C_PARTY_CHARACTER_SKIN_LIST_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_CHARACTER_SKIN_LIST_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_CHARACTER_SKIN_LIST_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_CHARACTER_SKIN_LIST_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_CHARACTER_SKIN_LIST_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_CHARACTER_SKIN_LIST_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_CHARACTER_SKIN_LIST_NOT& from) { SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_CHARACTER_SKIN_LIST_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT"; }

 protected:
  explicit SS2C_PARTY_CHARACTER_SKIN_LIST_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_CHARACTER_SKIN_LIST_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_CHARACTER_SKIN_LIST_NOT& from);
  SS2C_PARTY_CHARACTER_SKIN_LIST_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_CHARACTER_SKIN_LIST_NOT&& from) noexcept
      : SS2C_PARTY_CHARACTER_SKIN_LIST_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCharacterSkinIdListFieldNumber = 3,
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
  };
  // repeated string characterSkinIdList = 3;
  int characterskinidlist_size() const;
  private:
  int _internal_characterskinidlist_size() const;

  public:
  void clear_characterskinidlist() ;
  const std::string& characterskinidlist(int index) const;
  std::string* mutable_characterskinidlist(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterskinidlist(int index, Arg_&& value, Args_... args);
  std::string* add_characterskinidlist();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_characterskinidlist(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& characterskinidlist() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_characterskinidlist();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_characterskinidlist() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_characterskinidlist();

  public:
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      92, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_CHARACTER_SKIN_LIST_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_CHARACTER_SKIN_LIST_NOT& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> characterskinidlist_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT) */ {
 public:
  inline SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT() : SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT(nullptr) {}
  ~SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT(const SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT& from) : SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT(nullptr, from) {}
  inline SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT(SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT&& from) noexcept
      : SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT& operator=(const SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT& operator=(SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT*>(
        &_SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT& a, SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT& from) { SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT"; }

 protected:
  explicit SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT& from);
  SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT&& from) noexcept
      : SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kOldCharacterSkinIdFieldNumber = 3,
    kNewCharacterSkinIdFieldNumber = 4,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string oldCharacterSkinId = 3;
  void clear_oldcharacterskinid() ;
  const std::string& oldcharacterskinid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_oldcharacterskinid(Arg_&& arg, Args_... args);
  std::string* mutable_oldcharacterskinid();
  PROTOBUF_NODISCARD std::string* release_oldcharacterskinid();
  void set_allocated_oldcharacterskinid(std::string* value);

  private:
  const std::string& _internal_oldcharacterskinid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_oldcharacterskinid(
      const std::string& value);
  std::string* _internal_mutable_oldcharacterskinid();

  public:
  // string newCharacterSkinId = 4;
  void clear_newcharacterskinid() ;
  const std::string& newcharacterskinid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_newcharacterskinid(Arg_&& arg, Args_... args);
  std::string* mutable_newcharacterskinid();
  PROTOBUF_NODISCARD std::string* release_newcharacterskinid();
  void set_allocated_newcharacterskinid(std::string* value);

  private:
  const std::string& _internal_newcharacterskinid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_newcharacterskinid(
      const std::string& value);
  std::string* _internal_mutable_newcharacterskinid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      111, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr oldcharacterskinid_;
    ::google::protobuf::internal::ArenaStringPtr newcharacterskinid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_ARMOR_SKIN_LIST_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT) */ {
 public:
  inline SS2C_PARTY_ARMOR_SKIN_LIST_NOT() : SS2C_PARTY_ARMOR_SKIN_LIST_NOT(nullptr) {}
  ~SS2C_PARTY_ARMOR_SKIN_LIST_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_ARMOR_SKIN_LIST_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_ARMOR_SKIN_LIST_NOT(const SS2C_PARTY_ARMOR_SKIN_LIST_NOT& from) : SS2C_PARTY_ARMOR_SKIN_LIST_NOT(nullptr, from) {}
  inline SS2C_PARTY_ARMOR_SKIN_LIST_NOT(SS2C_PARTY_ARMOR_SKIN_LIST_NOT&& from) noexcept
      : SS2C_PARTY_ARMOR_SKIN_LIST_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_ARMOR_SKIN_LIST_NOT& operator=(const SS2C_PARTY_ARMOR_SKIN_LIST_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_ARMOR_SKIN_LIST_NOT& operator=(SS2C_PARTY_ARMOR_SKIN_LIST_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_ARMOR_SKIN_LIST_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_ARMOR_SKIN_LIST_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_ARMOR_SKIN_LIST_NOT*>(
        &_SS2C_PARTY_ARMOR_SKIN_LIST_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(SS2C_PARTY_ARMOR_SKIN_LIST_NOT& a, SS2C_PARTY_ARMOR_SKIN_LIST_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_ARMOR_SKIN_LIST_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_ARMOR_SKIN_LIST_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_ARMOR_SKIN_LIST_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_ARMOR_SKIN_LIST_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_ARMOR_SKIN_LIST_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_ARMOR_SKIN_LIST_NOT& from) { SS2C_PARTY_ARMOR_SKIN_LIST_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_ARMOR_SKIN_LIST_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT"; }

 protected:
  explicit SS2C_PARTY_ARMOR_SKIN_LIST_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_ARMOR_SKIN_LIST_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_ARMOR_SKIN_LIST_NOT& from);
  SS2C_PARTY_ARMOR_SKIN_LIST_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_ARMOR_SKIN_LIST_NOT&& from) noexcept
      : SS2C_PARTY_ARMOR_SKIN_LIST_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kArmorSkinIdListFieldNumber = 3,
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
  };
  // repeated string armorSkinIdList = 3;
  int armorskinidlist_size() const;
  private:
  int _internal_armorskinidlist_size() const;

  public:
  void clear_armorskinidlist() ;
  const std::string& armorskinidlist(int index) const;
  std::string* mutable_armorskinidlist(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_armorskinidlist(int index, Arg_&& value, Args_... args);
  std::string* add_armorskinidlist();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_armorskinidlist(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& armorskinidlist() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_armorskinidlist();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_armorskinidlist() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_armorskinidlist();

  public:
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      84, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_ARMOR_SKIN_LIST_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_ARMOR_SKIN_LIST_NOT& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> armorskinidlist_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT) */ {
 public:
  inline SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT() : SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT(nullptr) {}
  ~SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT(const SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT& from) : SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT(nullptr, from) {}
  inline SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT(SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT&& from) noexcept
      : SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT& operator=(const SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT& operator=(SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT*>(
        &_SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT& a, SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT& from) { SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT"; }

 protected:
  explicit SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT& from);
  SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT&& from) noexcept
      : SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kOldItemSkinIdFieldNumber = 3,
    kNewItemSkinIdFieldNumber = 4,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string oldItemSkinId = 3;
  void clear_olditemskinid() ;
  const std::string& olditemskinid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_olditemskinid(Arg_&& arg, Args_... args);
  std::string* mutable_olditemskinid();
  PROTOBUF_NODISCARD std::string* release_olditemskinid();
  void set_allocated_olditemskinid(std::string* value);

  private:
  const std::string& _internal_olditemskinid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_olditemskinid(
      const std::string& value);
  std::string* _internal_mutable_olditemskinid();

  public:
  // string newItemSkinId = 4;
  void clear_newitemskinid() ;
  const std::string& newitemskinid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_newitemskinid(Arg_&& arg, Args_... args);
  std::string* mutable_newitemskinid();
  PROTOBUF_NODISCARD std::string* release_newitemskinid();
  void set_allocated_newitemskinid(std::string* value);

  private:
  const std::string& _internal_newitemskinid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_newitemskinid(
      const std::string& value);
  std::string* _internal_mutable_newitemskinid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      97, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr olditemskinid_;
    ::google::protobuf::internal::ArenaStringPtr newitemskinid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SC2S_PARTY_START_LOBBY_EMOTE_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_PARTY_START_LOBBY_EMOTE_REQ) */ {
 public:
  inline SC2S_PARTY_START_LOBBY_EMOTE_REQ() : SC2S_PARTY_START_LOBBY_EMOTE_REQ(nullptr) {}
  ~SC2S_PARTY_START_LOBBY_EMOTE_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_PARTY_START_LOBBY_EMOTE_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_PARTY_START_LOBBY_EMOTE_REQ(const SC2S_PARTY_START_LOBBY_EMOTE_REQ& from) : SC2S_PARTY_START_LOBBY_EMOTE_REQ(nullptr, from) {}
  inline SC2S_PARTY_START_LOBBY_EMOTE_REQ(SC2S_PARTY_START_LOBBY_EMOTE_REQ&& from) noexcept
      : SC2S_PARTY_START_LOBBY_EMOTE_REQ(nullptr, std::move(from)) {}
  inline SC2S_PARTY_START_LOBBY_EMOTE_REQ& operator=(const SC2S_PARTY_START_LOBBY_EMOTE_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_PARTY_START_LOBBY_EMOTE_REQ& operator=(SC2S_PARTY_START_LOBBY_EMOTE_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_PARTY_START_LOBBY_EMOTE_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_PARTY_START_LOBBY_EMOTE_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_PARTY_START_LOBBY_EMOTE_REQ*>(
        &_SC2S_PARTY_START_LOBBY_EMOTE_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(SC2S_PARTY_START_LOBBY_EMOTE_REQ& a, SC2S_PARTY_START_LOBBY_EMOTE_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_PARTY_START_LOBBY_EMOTE_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_PARTY_START_LOBBY_EMOTE_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_PARTY_START_LOBBY_EMOTE_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_PARTY_START_LOBBY_EMOTE_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_PARTY_START_LOBBY_EMOTE_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_PARTY_START_LOBBY_EMOTE_REQ& from) { SC2S_PARTY_START_LOBBY_EMOTE_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_PARTY_START_LOBBY_EMOTE_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_PARTY_START_LOBBY_EMOTE_REQ"; }

 protected:
  explicit SC2S_PARTY_START_LOBBY_EMOTE_REQ(::google::protobuf::Arena* arena);
  SC2S_PARTY_START_LOBBY_EMOTE_REQ(::google::protobuf::Arena* arena, const SC2S_PARTY_START_LOBBY_EMOTE_REQ& from);
  SC2S_PARTY_START_LOBBY_EMOTE_REQ(::google::protobuf::Arena* arena, SC2S_PARTY_START_LOBBY_EMOTE_REQ&& from) noexcept
      : SC2S_PARTY_START_LOBBY_EMOTE_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLobbyEmoteIdFieldNumber = 1,
  };
  // string lobbyEmoteId = 1;
  void clear_lobbyemoteid() ;
  const std::string& lobbyemoteid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lobbyemoteid(Arg_&& arg, Args_... args);
  std::string* mutable_lobbyemoteid();
  PROTOBUF_NODISCARD std::string* release_lobbyemoteid();
  void set_allocated_lobbyemoteid(std::string* value);

  private:
  const std::string& _internal_lobbyemoteid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lobbyemoteid(
      const std::string& value);
  std::string* _internal_mutable_lobbyemoteid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_PARTY_START_LOBBY_EMOTE_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      63, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_PARTY_START_LOBBY_EMOTE_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_PARTY_START_LOBBY_EMOTE_REQ& from_msg);
    ::google::protobuf::internal::ArenaStringPtr lobbyemoteid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SC2S_PARTY_READY_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_PARTY_READY_REQ) */ {
 public:
  inline SC2S_PARTY_READY_REQ() : SC2S_PARTY_READY_REQ(nullptr) {}
  ~SC2S_PARTY_READY_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_PARTY_READY_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_PARTY_READY_REQ(const SC2S_PARTY_READY_REQ& from) : SC2S_PARTY_READY_REQ(nullptr, from) {}
  inline SC2S_PARTY_READY_REQ(SC2S_PARTY_READY_REQ&& from) noexcept
      : SC2S_PARTY_READY_REQ(nullptr, std::move(from)) {}
  inline SC2S_PARTY_READY_REQ& operator=(const SC2S_PARTY_READY_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_PARTY_READY_REQ& operator=(SC2S_PARTY_READY_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_PARTY_READY_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_PARTY_READY_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_PARTY_READY_REQ*>(
        &_SC2S_PARTY_READY_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(SC2S_PARTY_READY_REQ& a, SC2S_PARTY_READY_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_PARTY_READY_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_PARTY_READY_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_PARTY_READY_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_PARTY_READY_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_PARTY_READY_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_PARTY_READY_REQ& from) { SC2S_PARTY_READY_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_PARTY_READY_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_PARTY_READY_REQ"; }

 protected:
  explicit SC2S_PARTY_READY_REQ(::google::protobuf::Arena* arena);
  SC2S_PARTY_READY_REQ(::google::protobuf::Arena* arena, const SC2S_PARTY_READY_REQ& from);
  SC2S_PARTY_READY_REQ(::google::protobuf::Arena* arena, SC2S_PARTY_READY_REQ&& from) noexcept
      : SC2S_PARTY_READY_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsReadyFieldNumber = 1,
  };
  // uint32 isReady = 1;
  void clear_isready() ;
  ::uint32_t isready() const;
  void set_isready(::uint32_t value);

  private:
  ::uint32_t _internal_isready() const;
  void _internal_set_isready(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_PARTY_READY_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_PARTY_READY_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_PARTY_READY_REQ& from_msg);
    ::uint32_t isready_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SC2S_PARTY_MEMBER_KICK_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_PARTY_MEMBER_KICK_REQ) */ {
 public:
  inline SC2S_PARTY_MEMBER_KICK_REQ() : SC2S_PARTY_MEMBER_KICK_REQ(nullptr) {}
  ~SC2S_PARTY_MEMBER_KICK_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_PARTY_MEMBER_KICK_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_PARTY_MEMBER_KICK_REQ(const SC2S_PARTY_MEMBER_KICK_REQ& from) : SC2S_PARTY_MEMBER_KICK_REQ(nullptr, from) {}
  inline SC2S_PARTY_MEMBER_KICK_REQ(SC2S_PARTY_MEMBER_KICK_REQ&& from) noexcept
      : SC2S_PARTY_MEMBER_KICK_REQ(nullptr, std::move(from)) {}
  inline SC2S_PARTY_MEMBER_KICK_REQ& operator=(const SC2S_PARTY_MEMBER_KICK_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_PARTY_MEMBER_KICK_REQ& operator=(SC2S_PARTY_MEMBER_KICK_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_PARTY_MEMBER_KICK_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_PARTY_MEMBER_KICK_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_PARTY_MEMBER_KICK_REQ*>(
        &_SC2S_PARTY_MEMBER_KICK_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(SC2S_PARTY_MEMBER_KICK_REQ& a, SC2S_PARTY_MEMBER_KICK_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_PARTY_MEMBER_KICK_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_PARTY_MEMBER_KICK_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_PARTY_MEMBER_KICK_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_PARTY_MEMBER_KICK_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_PARTY_MEMBER_KICK_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_PARTY_MEMBER_KICK_REQ& from) { SC2S_PARTY_MEMBER_KICK_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_PARTY_MEMBER_KICK_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_PARTY_MEMBER_KICK_REQ"; }

 protected:
  explicit SC2S_PARTY_MEMBER_KICK_REQ(::google::protobuf::Arena* arena);
  SC2S_PARTY_MEMBER_KICK_REQ(::google::protobuf::Arena* arena, const SC2S_PARTY_MEMBER_KICK_REQ& from);
  SC2S_PARTY_MEMBER_KICK_REQ(::google::protobuf::Arena* arena, SC2S_PARTY_MEMBER_KICK_REQ&& from) noexcept
      : SC2S_PARTY_MEMBER_KICK_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_PARTY_MEMBER_KICK_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      65, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_PARTY_MEMBER_KICK_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_PARTY_MEMBER_KICK_REQ& from_msg);
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SC2S_PARTY_INVITE_ANSWER_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_PARTY_INVITE_ANSWER_REQ) */ {
 public:
  inline SC2S_PARTY_INVITE_ANSWER_REQ() : SC2S_PARTY_INVITE_ANSWER_REQ(nullptr) {}
  ~SC2S_PARTY_INVITE_ANSWER_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_PARTY_INVITE_ANSWER_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_PARTY_INVITE_ANSWER_REQ(const SC2S_PARTY_INVITE_ANSWER_REQ& from) : SC2S_PARTY_INVITE_ANSWER_REQ(nullptr, from) {}
  inline SC2S_PARTY_INVITE_ANSWER_REQ(SC2S_PARTY_INVITE_ANSWER_REQ&& from) noexcept
      : SC2S_PARTY_INVITE_ANSWER_REQ(nullptr, std::move(from)) {}
  inline SC2S_PARTY_INVITE_ANSWER_REQ& operator=(const SC2S_PARTY_INVITE_ANSWER_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_PARTY_INVITE_ANSWER_REQ& operator=(SC2S_PARTY_INVITE_ANSWER_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_PARTY_INVITE_ANSWER_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_PARTY_INVITE_ANSWER_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_PARTY_INVITE_ANSWER_REQ*>(
        &_SC2S_PARTY_INVITE_ANSWER_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SC2S_PARTY_INVITE_ANSWER_REQ& a, SC2S_PARTY_INVITE_ANSWER_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_PARTY_INVITE_ANSWER_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_PARTY_INVITE_ANSWER_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_PARTY_INVITE_ANSWER_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_PARTY_INVITE_ANSWER_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_PARTY_INVITE_ANSWER_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_PARTY_INVITE_ANSWER_REQ& from) { SC2S_PARTY_INVITE_ANSWER_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_PARTY_INVITE_ANSWER_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_PARTY_INVITE_ANSWER_REQ"; }

 protected:
  explicit SC2S_PARTY_INVITE_ANSWER_REQ(::google::protobuf::Arena* arena);
  SC2S_PARTY_INVITE_ANSWER_REQ(::google::protobuf::Arena* arena, const SC2S_PARTY_INVITE_ANSWER_REQ& from);
  SC2S_PARTY_INVITE_ANSWER_REQ(::google::protobuf::Arena* arena, SC2S_PARTY_INVITE_ANSWER_REQ&& from) noexcept
      : SC2S_PARTY_INVITE_ANSWER_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReturnAccountIdFieldNumber = 2,
    kInviteResultFieldNumber = 1,
  };
  // string returnAccountId = 2;
  void clear_returnaccountid() ;
  const std::string& returnaccountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_returnaccountid(Arg_&& arg, Args_... args);
  std::string* mutable_returnaccountid();
  PROTOBUF_NODISCARD std::string* release_returnaccountid();
  void set_allocated_returnaccountid(std::string* value);

  private:
  const std::string& _internal_returnaccountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_returnaccountid(
      const std::string& value);
  std::string* _internal_mutable_returnaccountid();

  public:
  // uint32 inviteResult = 1;
  void clear_inviteresult() ;
  ::uint32_t inviteresult() const;
  void set_inviteresult(::uint32_t value);

  private:
  ::uint32_t _internal_inviteresult() const;
  void _internal_set_inviteresult(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_PARTY_INVITE_ANSWER_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      62, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_PARTY_INVITE_ANSWER_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_PARTY_INVITE_ANSWER_REQ& from_msg);
    ::google::protobuf::internal::ArenaStringPtr returnaccountid_;
    ::uint32_t inviteresult_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SC2S_PARTY_EXIT_REQ final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_PARTY_EXIT_REQ) */ {
 public:
  inline SC2S_PARTY_EXIT_REQ() : SC2S_PARTY_EXIT_REQ(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_PARTY_EXIT_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_PARTY_EXIT_REQ(const SC2S_PARTY_EXIT_REQ& from) : SC2S_PARTY_EXIT_REQ(nullptr, from) {}
  inline SC2S_PARTY_EXIT_REQ(SC2S_PARTY_EXIT_REQ&& from) noexcept
      : SC2S_PARTY_EXIT_REQ(nullptr, std::move(from)) {}
  inline SC2S_PARTY_EXIT_REQ& operator=(const SC2S_PARTY_EXIT_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_PARTY_EXIT_REQ& operator=(SC2S_PARTY_EXIT_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_PARTY_EXIT_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_PARTY_EXIT_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_PARTY_EXIT_REQ*>(
        &_SC2S_PARTY_EXIT_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(SC2S_PARTY_EXIT_REQ& a, SC2S_PARTY_EXIT_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_PARTY_EXIT_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_PARTY_EXIT_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_PARTY_EXIT_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SC2S_PARTY_EXIT_REQ>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SC2S_PARTY_EXIT_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SC2S_PARTY_EXIT_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_PARTY_EXIT_REQ"; }

 protected:
  explicit SC2S_PARTY_EXIT_REQ(::google::protobuf::Arena* arena);
  SC2S_PARTY_EXIT_REQ(::google::protobuf::Arena* arena, const SC2S_PARTY_EXIT_REQ& from);
  SC2S_PARTY_EXIT_REQ(::google::protobuf::Arena* arena, SC2S_PARTY_EXIT_REQ&& from) noexcept
      : SC2S_PARTY_EXIT_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_PARTY_EXIT_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_PARTY_EXIT_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_PARTY_EXIT_REQ& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_INVITE_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_INVITE_NOT) */ {
 public:
  inline SS2C_PARTY_INVITE_NOT() : SS2C_PARTY_INVITE_NOT(nullptr) {}
  ~SS2C_PARTY_INVITE_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_INVITE_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_INVITE_NOT(const SS2C_PARTY_INVITE_NOT& from) : SS2C_PARTY_INVITE_NOT(nullptr, from) {}
  inline SS2C_PARTY_INVITE_NOT(SS2C_PARTY_INVITE_NOT&& from) noexcept
      : SS2C_PARTY_INVITE_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_INVITE_NOT& operator=(const SS2C_PARTY_INVITE_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_INVITE_NOT& operator=(SS2C_PARTY_INVITE_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_INVITE_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_INVITE_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_INVITE_NOT*>(
        &_SS2C_PARTY_INVITE_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SS2C_PARTY_INVITE_NOT& a, SS2C_PARTY_INVITE_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_INVITE_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_INVITE_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_INVITE_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_INVITE_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_INVITE_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_INVITE_NOT& from) { SS2C_PARTY_INVITE_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_INVITE_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_INVITE_NOT"; }

 protected:
  explicit SS2C_PARTY_INVITE_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_INVITE_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_INVITE_NOT& from);
  SS2C_PARTY_INVITE_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_INVITE_NOT&& from) noexcept
      : SS2C_PARTY_INVITE_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInviteeAccountIdFieldNumber = 2,
    kInviteeCharacterIdFieldNumber = 3,
    kInviteeNickNameFieldNumber = 1,
  };
  // string InviteeAccountId = 2;
  void clear_inviteeaccountid() ;
  const std::string& inviteeaccountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_inviteeaccountid(Arg_&& arg, Args_... args);
  std::string* mutable_inviteeaccountid();
  PROTOBUF_NODISCARD std::string* release_inviteeaccountid();
  void set_allocated_inviteeaccountid(std::string* value);

  private:
  const std::string& _internal_inviteeaccountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_inviteeaccountid(
      const std::string& value);
  std::string* _internal_mutable_inviteeaccountid();

  public:
  // string InviteeCharacterId = 3;
  void clear_inviteecharacterid() ;
  const std::string& inviteecharacterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_inviteecharacterid(Arg_&& arg, Args_... args);
  std::string* mutable_inviteecharacterid();
  PROTOBUF_NODISCARD std::string* release_inviteecharacterid();
  void set_allocated_inviteecharacterid(std::string* value);

  private:
  const std::string& _internal_inviteecharacterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_inviteecharacterid(
      const std::string& value);
  std::string* _internal_mutable_inviteecharacterid();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME InviteeNickName = 1;
  bool has_inviteenickname() const;
  void clear_inviteenickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& inviteenickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_inviteenickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_inviteenickname();
  void set_allocated_inviteenickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_inviteenickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_inviteenickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_inviteenickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_inviteenickname();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_INVITE_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      74, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_INVITE_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_INVITE_NOT& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr inviteeaccountid_;
    ::google::protobuf::internal::ArenaStringPtr inviteecharacterid_;
    ::DC::Packet::SACCOUNT_NICKNAME* inviteenickname_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_INVITE_ANSWER_RESULT_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_INVITE_ANSWER_RESULT_NOT) */ {
 public:
  inline SS2C_PARTY_INVITE_ANSWER_RESULT_NOT() : SS2C_PARTY_INVITE_ANSWER_RESULT_NOT(nullptr) {}
  ~SS2C_PARTY_INVITE_ANSWER_RESULT_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_INVITE_ANSWER_RESULT_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_INVITE_ANSWER_RESULT_NOT(const SS2C_PARTY_INVITE_ANSWER_RESULT_NOT& from) : SS2C_PARTY_INVITE_ANSWER_RESULT_NOT(nullptr, from) {}
  inline SS2C_PARTY_INVITE_ANSWER_RESULT_NOT(SS2C_PARTY_INVITE_ANSWER_RESULT_NOT&& from) noexcept
      : SS2C_PARTY_INVITE_ANSWER_RESULT_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_INVITE_ANSWER_RESULT_NOT& operator=(const SS2C_PARTY_INVITE_ANSWER_RESULT_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_INVITE_ANSWER_RESULT_NOT& operator=(SS2C_PARTY_INVITE_ANSWER_RESULT_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_INVITE_ANSWER_RESULT_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_INVITE_ANSWER_RESULT_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_INVITE_ANSWER_RESULT_NOT*>(
        &_SS2C_PARTY_INVITE_ANSWER_RESULT_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SS2C_PARTY_INVITE_ANSWER_RESULT_NOT& a, SS2C_PARTY_INVITE_ANSWER_RESULT_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_INVITE_ANSWER_RESULT_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_INVITE_ANSWER_RESULT_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_INVITE_ANSWER_RESULT_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_INVITE_ANSWER_RESULT_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_INVITE_ANSWER_RESULT_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_INVITE_ANSWER_RESULT_NOT& from) { SS2C_PARTY_INVITE_ANSWER_RESULT_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_INVITE_ANSWER_RESULT_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_INVITE_ANSWER_RESULT_NOT"; }

 protected:
  explicit SS2C_PARTY_INVITE_ANSWER_RESULT_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_INVITE_ANSWER_RESULT_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_INVITE_ANSWER_RESULT_NOT& from);
  SS2C_PARTY_INVITE_ANSWER_RESULT_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_INVITE_ANSWER_RESULT_NOT&& from) noexcept
      : SS2C_PARTY_INVITE_ANSWER_RESULT_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNickNameFieldNumber = 1,
    kInviteResultFieldNumber = 2,
  };
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 1;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // uint32 inviteResult = 2;
  void clear_inviteresult() ;
  ::uint32_t inviteresult() const;
  void set_inviteresult(::uint32_t value);

  private:
  ::uint32_t _internal_inviteresult() const;
  void _internal_set_inviteresult(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_INVITE_ANSWER_RESULT_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_INVITE_ANSWER_RESULT_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_INVITE_ANSWER_RESULT_NOT& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    ::uint32_t inviteresult_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SC2S_PARTY_INVITE_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_PARTY_INVITE_REQ) */ {
 public:
  inline SC2S_PARTY_INVITE_REQ() : SC2S_PARTY_INVITE_REQ(nullptr) {}
  ~SC2S_PARTY_INVITE_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_PARTY_INVITE_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_PARTY_INVITE_REQ(const SC2S_PARTY_INVITE_REQ& from) : SC2S_PARTY_INVITE_REQ(nullptr, from) {}
  inline SC2S_PARTY_INVITE_REQ(SC2S_PARTY_INVITE_REQ&& from) noexcept
      : SC2S_PARTY_INVITE_REQ(nullptr, std::move(from)) {}
  inline SC2S_PARTY_INVITE_REQ& operator=(const SC2S_PARTY_INVITE_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_PARTY_INVITE_REQ& operator=(SC2S_PARTY_INVITE_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_PARTY_INVITE_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_PARTY_INVITE_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_PARTY_INVITE_REQ*>(
        &_SC2S_PARTY_INVITE_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SC2S_PARTY_INVITE_REQ& a, SC2S_PARTY_INVITE_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_PARTY_INVITE_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_PARTY_INVITE_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_PARTY_INVITE_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_PARTY_INVITE_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_PARTY_INVITE_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_PARTY_INVITE_REQ& from) { SC2S_PARTY_INVITE_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_PARTY_INVITE_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_PARTY_INVITE_REQ"; }

 protected:
  explicit SC2S_PARTY_INVITE_REQ(::google::protobuf::Arena* arena);
  SC2S_PARTY_INVITE_REQ(::google::protobuf::Arena* arena, const SC2S_PARTY_INVITE_REQ& from);
  SC2S_PARTY_INVITE_REQ(::google::protobuf::Arena* arena, SC2S_PARTY_INVITE_REQ&& from) noexcept
      : SC2S_PARTY_INVITE_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFindAccountIdFieldNumber = 2,
    kFindCharacterIdFieldNumber = 3,
    kFindNickNameFieldNumber = 1,
  };
  // string findAccountId = 2;
  void clear_findaccountid() ;
  const std::string& findaccountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_findaccountid(Arg_&& arg, Args_... args);
  std::string* mutable_findaccountid();
  PROTOBUF_NODISCARD std::string* release_findaccountid();
  void set_allocated_findaccountid(std::string* value);

  private:
  const std::string& _internal_findaccountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_findaccountid(
      const std::string& value);
  std::string* _internal_mutable_findaccountid();

  public:
  // string findCharacterId = 3;
  void clear_findcharacterid() ;
  const std::string& findcharacterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_findcharacterid(Arg_&& arg, Args_... args);
  std::string* mutable_findcharacterid();
  PROTOBUF_NODISCARD std::string* release_findcharacterid();
  void set_allocated_findcharacterid(std::string* value);

  private:
  const std::string& _internal_findcharacterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_findcharacterid(
      const std::string& value);
  std::string* _internal_mutable_findcharacterid();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME findNickName = 1;
  bool has_findnickname() const;
  void clear_findnickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& findnickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_findnickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_findnickname();
  void set_allocated_findnickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_findnickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_findnickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_findnickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_findnickname();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_PARTY_INVITE_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      68, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_PARTY_INVITE_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_PARTY_INVITE_REQ& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr findaccountid_;
    ::google::protobuf::internal::ArenaStringPtr findcharacterid_;
    ::DC::Packet::SACCOUNT_NICKNAME* findnickname_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT) */ {
 public:
  inline SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT() : SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT(nullptr) {}
  ~SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT(const SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT& from) : SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT(nullptr, from) {}
  inline SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT(SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT&& from) noexcept
      : SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT& operator=(const SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT& operator=(SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT*>(
        &_SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT& a, SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT& from) { SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT"; }

 protected:
  explicit SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT& from);
  SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT&& from) noexcept
      : SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOldItemsFieldNumber = 3,
    kNewItemsFieldNumber = 4,
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
  };
  // repeated .DC.Packet.SItem oldItems = 3;
  int olditems_size() const;
  private:
  int _internal_olditems_size() const;

  public:
  void clear_olditems() ;
  ::DC::Packet::SItem* mutable_olditems(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* mutable_olditems();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& _internal_olditems() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* _internal_mutable_olditems();
  public:
  const ::DC::Packet::SItem& olditems(int index) const;
  ::DC::Packet::SItem* add_olditems();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& olditems() const;
  // repeated .DC.Packet.SItem newItems = 4;
  int newitems_size() const;
  private:
  int _internal_newitems_size() const;

  public:
  void clear_newitems() ;
  ::DC::Packet::SItem* mutable_newitems(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* mutable_newitems();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& _internal_newitems() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* _internal_mutable_newitems();
  public:
  const ::DC::Packet::SItem& newitems(int index) const;
  ::DC::Packet::SItem* add_newitems();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& newitems() const;
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      71, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SItem > olditems_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SItem > newitems_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_MEMBER_INFO_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_MEMBER_INFO_NOT) */ {
 public:
  inline SS2C_PARTY_MEMBER_INFO_NOT() : SS2C_PARTY_MEMBER_INFO_NOT(nullptr) {}
  ~SS2C_PARTY_MEMBER_INFO_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_MEMBER_INFO_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_MEMBER_INFO_NOT(const SS2C_PARTY_MEMBER_INFO_NOT& from) : SS2C_PARTY_MEMBER_INFO_NOT(nullptr, from) {}
  inline SS2C_PARTY_MEMBER_INFO_NOT(SS2C_PARTY_MEMBER_INFO_NOT&& from) noexcept
      : SS2C_PARTY_MEMBER_INFO_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_MEMBER_INFO_NOT& operator=(const SS2C_PARTY_MEMBER_INFO_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_MEMBER_INFO_NOT& operator=(SS2C_PARTY_MEMBER_INFO_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_MEMBER_INFO_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_MEMBER_INFO_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_MEMBER_INFO_NOT*>(
        &_SS2C_PARTY_MEMBER_INFO_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SS2C_PARTY_MEMBER_INFO_NOT& a, SS2C_PARTY_MEMBER_INFO_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_MEMBER_INFO_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_MEMBER_INFO_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_MEMBER_INFO_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_MEMBER_INFO_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_MEMBER_INFO_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_MEMBER_INFO_NOT& from) { SS2C_PARTY_MEMBER_INFO_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_MEMBER_INFO_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_MEMBER_INFO_NOT"; }

 protected:
  explicit SS2C_PARTY_MEMBER_INFO_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_MEMBER_INFO_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_MEMBER_INFO_NOT& from);
  SS2C_PARTY_MEMBER_INFO_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_MEMBER_INFO_NOT&& from) noexcept
      : SS2C_PARTY_MEMBER_INFO_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayPartyUserInfoDataFieldNumber = 1,
  };
  // repeated .DC.Packet.SCHARACTER_PARTY_INFO playPartyUserInfoData = 1;
  int playpartyuserinfodata_size() const;
  private:
  int _internal_playpartyuserinfodata_size() const;

  public:
  void clear_playpartyuserinfodata() ;
  ::DC::Packet::SCHARACTER_PARTY_INFO* mutable_playpartyuserinfodata(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_PARTY_INFO>* mutable_playpartyuserinfodata();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_PARTY_INFO>& _internal_playpartyuserinfodata() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_PARTY_INFO>* _internal_mutable_playpartyuserinfodata();
  public:
  const ::DC::Packet::SCHARACTER_PARTY_INFO& playpartyuserinfodata(int index) const;
  ::DC::Packet::SCHARACTER_PARTY_INFO* add_playpartyuserinfodata();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_PARTY_INFO>& playpartyuserinfodata() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_MEMBER_INFO_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_MEMBER_INFO_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_MEMBER_INFO_NOT& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SCHARACTER_PARTY_INFO > playpartyuserinfodata_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SS2C_PARTY_CHAT_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_PARTY_CHAT_NOT) */ {
 public:
  inline SS2C_PARTY_CHAT_NOT() : SS2C_PARTY_CHAT_NOT(nullptr) {}
  ~SS2C_PARTY_CHAT_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_PARTY_CHAT_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_PARTY_CHAT_NOT(const SS2C_PARTY_CHAT_NOT& from) : SS2C_PARTY_CHAT_NOT(nullptr, from) {}
  inline SS2C_PARTY_CHAT_NOT(SS2C_PARTY_CHAT_NOT&& from) noexcept
      : SS2C_PARTY_CHAT_NOT(nullptr, std::move(from)) {}
  inline SS2C_PARTY_CHAT_NOT& operator=(const SS2C_PARTY_CHAT_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_PARTY_CHAT_NOT& operator=(SS2C_PARTY_CHAT_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_PARTY_CHAT_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_PARTY_CHAT_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_PARTY_CHAT_NOT*>(
        &_SS2C_PARTY_CHAT_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(SS2C_PARTY_CHAT_NOT& a, SS2C_PARTY_CHAT_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_PARTY_CHAT_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_PARTY_CHAT_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_PARTY_CHAT_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_PARTY_CHAT_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_PARTY_CHAT_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_PARTY_CHAT_NOT& from) { SS2C_PARTY_CHAT_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_PARTY_CHAT_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_PARTY_CHAT_NOT"; }

 protected:
  explicit SS2C_PARTY_CHAT_NOT(::google::protobuf::Arena* arena);
  SS2C_PARTY_CHAT_NOT(::google::protobuf::Arena* arena, const SS2C_PARTY_CHAT_NOT& from);
  SS2C_PARTY_CHAT_NOT(::google::protobuf::Arena* arena, SS2C_PARTY_CHAT_NOT&& from) noexcept
      : SS2C_PARTY_CHAT_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChatDataFieldNumber = 1,
    kTimeFieldNumber = 2,
  };
  // .DC.Packet.SCHATDATA chatData = 1;
  bool has_chatdata() const;
  void clear_chatdata() ;
  const ::DC::Packet::SCHATDATA& chatdata() const;
  PROTOBUF_NODISCARD ::DC::Packet::SCHATDATA* release_chatdata();
  ::DC::Packet::SCHATDATA* mutable_chatdata();
  void set_allocated_chatdata(::DC::Packet::SCHATDATA* value);
  void unsafe_arena_set_allocated_chatdata(::DC::Packet::SCHATDATA* value);
  ::DC::Packet::SCHATDATA* unsafe_arena_release_chatdata();

  private:
  const ::DC::Packet::SCHATDATA& _internal_chatdata() const;
  ::DC::Packet::SCHATDATA* _internal_mutable_chatdata();

  public:
  // uint64 time = 2;
  void clear_time() ;
  ::uint64_t time() const;
  void set_time(::uint64_t value);

  private:
  ::uint64_t _internal_time() const;
  void _internal_set_time(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_PARTY_CHAT_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_PARTY_CHAT_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_PARTY_CHAT_NOT& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::SCHATDATA* chatdata_;
    ::uint64_t time_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};
// -------------------------------------------------------------------

class SC2S_PARTY_CHAT_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_PARTY_CHAT_REQ) */ {
 public:
  inline SC2S_PARTY_CHAT_REQ() : SC2S_PARTY_CHAT_REQ(nullptr) {}
  ~SC2S_PARTY_CHAT_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_PARTY_CHAT_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_PARTY_CHAT_REQ(const SC2S_PARTY_CHAT_REQ& from) : SC2S_PARTY_CHAT_REQ(nullptr, from) {}
  inline SC2S_PARTY_CHAT_REQ(SC2S_PARTY_CHAT_REQ&& from) noexcept
      : SC2S_PARTY_CHAT_REQ(nullptr, std::move(from)) {}
  inline SC2S_PARTY_CHAT_REQ& operator=(const SC2S_PARTY_CHAT_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_PARTY_CHAT_REQ& operator=(SC2S_PARTY_CHAT_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_PARTY_CHAT_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_PARTY_CHAT_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_PARTY_CHAT_REQ*>(
        &_SC2S_PARTY_CHAT_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(SC2S_PARTY_CHAT_REQ& a, SC2S_PARTY_CHAT_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_PARTY_CHAT_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_PARTY_CHAT_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_PARTY_CHAT_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_PARTY_CHAT_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_PARTY_CHAT_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_PARTY_CHAT_REQ& from) { SC2S_PARTY_CHAT_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_PARTY_CHAT_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_PARTY_CHAT_REQ"; }

 protected:
  explicit SC2S_PARTY_CHAT_REQ(::google::protobuf::Arena* arena);
  SC2S_PARTY_CHAT_REQ(::google::protobuf::Arena* arena, const SC2S_PARTY_CHAT_REQ& from);
  SC2S_PARTY_CHAT_REQ(::google::protobuf::Arena* arena, SC2S_PARTY_CHAT_REQ&& from) noexcept
      : SC2S_PARTY_CHAT_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChatDataFieldNumber = 1,
  };
  // .DC.Packet.SCHATDATA chatData = 1;
  bool has_chatdata() const;
  void clear_chatdata() ;
  const ::DC::Packet::SCHATDATA& chatdata() const;
  PROTOBUF_NODISCARD ::DC::Packet::SCHATDATA* release_chatdata();
  ::DC::Packet::SCHATDATA* mutable_chatdata();
  void set_allocated_chatdata(::DC::Packet::SCHATDATA* value);
  void unsafe_arena_set_allocated_chatdata(::DC::Packet::SCHATDATA* value);
  ::DC::Packet::SCHATDATA* unsafe_arena_release_chatdata();

  private:
  const ::DC::Packet::SCHATDATA& _internal_chatdata() const;
  ::DC::Packet::SCHATDATA* _internal_mutable_chatdata();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_PARTY_CHAT_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_PARTY_CHAT_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_PARTY_CHAT_REQ& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::SCHATDATA* chatdata_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Party_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SC2S_PARTY_INVITE_REQ

// .DC.Packet.SACCOUNT_NICKNAME findNickName = 1;
inline bool SC2S_PARTY_INVITE_REQ::has_findnickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.findnickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SC2S_PARTY_INVITE_REQ::_internal_findnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.findnickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SC2S_PARTY_INVITE_REQ::findnickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_PARTY_INVITE_REQ.findNickName)
  return _internal_findnickname();
}
inline void SC2S_PARTY_INVITE_REQ::unsafe_arena_set_allocated_findnickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.findnickname_);
  }
  _impl_.findnickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SC2S_PARTY_INVITE_REQ.findNickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SC2S_PARTY_INVITE_REQ::release_findnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.findnickname_;
  _impl_.findnickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SC2S_PARTY_INVITE_REQ::unsafe_arena_release_findnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_PARTY_INVITE_REQ.findNickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.findnickname_;
  _impl_.findnickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SC2S_PARTY_INVITE_REQ::_internal_mutable_findnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.findnickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.findnickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.findnickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SC2S_PARTY_INVITE_REQ::mutable_findnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_findnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_PARTY_INVITE_REQ.findNickName)
  return _msg;
}
inline void SC2S_PARTY_INVITE_REQ::set_allocated_findnickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.findnickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.findnickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_PARTY_INVITE_REQ.findNickName)
}

// string findAccountId = 2;
inline void SC2S_PARTY_INVITE_REQ::clear_findaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.findaccountid_.ClearToEmpty();
}
inline const std::string& SC2S_PARTY_INVITE_REQ::findaccountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_PARTY_INVITE_REQ.findAccountId)
  return _internal_findaccountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_PARTY_INVITE_REQ::set_findaccountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.findaccountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_PARTY_INVITE_REQ.findAccountId)
}
inline std::string* SC2S_PARTY_INVITE_REQ::mutable_findaccountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_findaccountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_PARTY_INVITE_REQ.findAccountId)
  return _s;
}
inline const std::string& SC2S_PARTY_INVITE_REQ::_internal_findaccountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.findaccountid_.Get();
}
inline void SC2S_PARTY_INVITE_REQ::_internal_set_findaccountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.findaccountid_.Set(value, GetArena());
}
inline std::string* SC2S_PARTY_INVITE_REQ::_internal_mutable_findaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.findaccountid_.Mutable( GetArena());
}
inline std::string* SC2S_PARTY_INVITE_REQ::release_findaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_PARTY_INVITE_REQ.findAccountId)
  return _impl_.findaccountid_.Release();
}
inline void SC2S_PARTY_INVITE_REQ::set_allocated_findaccountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.findaccountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.findaccountid_.IsDefault()) {
          _impl_.findaccountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_PARTY_INVITE_REQ.findAccountId)
}

// string findCharacterId = 3;
inline void SC2S_PARTY_INVITE_REQ::clear_findcharacterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.findcharacterid_.ClearToEmpty();
}
inline const std::string& SC2S_PARTY_INVITE_REQ::findcharacterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_PARTY_INVITE_REQ.findCharacterId)
  return _internal_findcharacterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_PARTY_INVITE_REQ::set_findcharacterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.findcharacterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_PARTY_INVITE_REQ.findCharacterId)
}
inline std::string* SC2S_PARTY_INVITE_REQ::mutable_findcharacterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_findcharacterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_PARTY_INVITE_REQ.findCharacterId)
  return _s;
}
inline const std::string& SC2S_PARTY_INVITE_REQ::_internal_findcharacterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.findcharacterid_.Get();
}
inline void SC2S_PARTY_INVITE_REQ::_internal_set_findcharacterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.findcharacterid_.Set(value, GetArena());
}
inline std::string* SC2S_PARTY_INVITE_REQ::_internal_mutable_findcharacterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.findcharacterid_.Mutable( GetArena());
}
inline std::string* SC2S_PARTY_INVITE_REQ::release_findcharacterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_PARTY_INVITE_REQ.findCharacterId)
  return _impl_.findcharacterid_.Release();
}
inline void SC2S_PARTY_INVITE_REQ::set_allocated_findcharacterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.findcharacterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.findcharacterid_.IsDefault()) {
          _impl_.findcharacterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_PARTY_INVITE_REQ.findCharacterId)
}

// -------------------------------------------------------------------

// SS2C_PARTY_INVITE_RES

// uint32 result = 1;
inline void SS2C_PARTY_INVITE_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_PARTY_INVITE_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_INVITE_RES.result)
  return _internal_result();
}
inline void SS2C_PARTY_INVITE_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_INVITE_RES.result)
}
inline ::uint32_t SS2C_PARTY_INVITE_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_PARTY_INVITE_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SS2C_PARTY_INVITE_NOT

// .DC.Packet.SACCOUNT_NICKNAME InviteeNickName = 1;
inline bool SS2C_PARTY_INVITE_NOT::has_inviteenickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.inviteenickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SS2C_PARTY_INVITE_NOT::_internal_inviteenickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.inviteenickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SS2C_PARTY_INVITE_NOT::inviteenickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_INVITE_NOT.InviteeNickName)
  return _internal_inviteenickname();
}
inline void SS2C_PARTY_INVITE_NOT::unsafe_arena_set_allocated_inviteenickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.inviteenickname_);
  }
  _impl_.inviteenickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_PARTY_INVITE_NOT.InviteeNickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_PARTY_INVITE_NOT::release_inviteenickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.inviteenickname_;
  _impl_.inviteenickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_PARTY_INVITE_NOT::unsafe_arena_release_inviteenickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_INVITE_NOT.InviteeNickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.inviteenickname_;
  _impl_.inviteenickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_PARTY_INVITE_NOT::_internal_mutable_inviteenickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.inviteenickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.inviteenickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.inviteenickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_PARTY_INVITE_NOT::mutable_inviteenickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_inviteenickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_INVITE_NOT.InviteeNickName)
  return _msg;
}
inline void SS2C_PARTY_INVITE_NOT::set_allocated_inviteenickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.inviteenickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.inviteenickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_INVITE_NOT.InviteeNickName)
}

// string InviteeAccountId = 2;
inline void SS2C_PARTY_INVITE_NOT::clear_inviteeaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inviteeaccountid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_INVITE_NOT::inviteeaccountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_INVITE_NOT.InviteeAccountId)
  return _internal_inviteeaccountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_INVITE_NOT::set_inviteeaccountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inviteeaccountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_INVITE_NOT.InviteeAccountId)
}
inline std::string* SS2C_PARTY_INVITE_NOT::mutable_inviteeaccountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_inviteeaccountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_INVITE_NOT.InviteeAccountId)
  return _s;
}
inline const std::string& SS2C_PARTY_INVITE_NOT::_internal_inviteeaccountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inviteeaccountid_.Get();
}
inline void SS2C_PARTY_INVITE_NOT::_internal_set_inviteeaccountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inviteeaccountid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_INVITE_NOT::_internal_mutable_inviteeaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.inviteeaccountid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_INVITE_NOT::release_inviteeaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_INVITE_NOT.InviteeAccountId)
  return _impl_.inviteeaccountid_.Release();
}
inline void SS2C_PARTY_INVITE_NOT::set_allocated_inviteeaccountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inviteeaccountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.inviteeaccountid_.IsDefault()) {
          _impl_.inviteeaccountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_INVITE_NOT.InviteeAccountId)
}

// string InviteeCharacterId = 3;
inline void SS2C_PARTY_INVITE_NOT::clear_inviteecharacterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inviteecharacterid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_INVITE_NOT::inviteecharacterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_INVITE_NOT.InviteeCharacterId)
  return _internal_inviteecharacterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_INVITE_NOT::set_inviteecharacterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inviteecharacterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_INVITE_NOT.InviteeCharacterId)
}
inline std::string* SS2C_PARTY_INVITE_NOT::mutable_inviteecharacterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_inviteecharacterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_INVITE_NOT.InviteeCharacterId)
  return _s;
}
inline const std::string& SS2C_PARTY_INVITE_NOT::_internal_inviteecharacterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inviteecharacterid_.Get();
}
inline void SS2C_PARTY_INVITE_NOT::_internal_set_inviteecharacterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inviteecharacterid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_INVITE_NOT::_internal_mutable_inviteecharacterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.inviteecharacterid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_INVITE_NOT::release_inviteecharacterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_INVITE_NOT.InviteeCharacterId)
  return _impl_.inviteecharacterid_.Release();
}
inline void SS2C_PARTY_INVITE_NOT::set_allocated_inviteecharacterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inviteecharacterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.inviteecharacterid_.IsDefault()) {
          _impl_.inviteecharacterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_INVITE_NOT.InviteeCharacterId)
}

// -------------------------------------------------------------------

// SC2S_PARTY_INVITE_ANSWER_REQ

// uint32 inviteResult = 1;
inline void SC2S_PARTY_INVITE_ANSWER_REQ::clear_inviteresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inviteresult_ = 0u;
}
inline ::uint32_t SC2S_PARTY_INVITE_ANSWER_REQ::inviteresult() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_PARTY_INVITE_ANSWER_REQ.inviteResult)
  return _internal_inviteresult();
}
inline void SC2S_PARTY_INVITE_ANSWER_REQ::set_inviteresult(::uint32_t value) {
  _internal_set_inviteresult(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_PARTY_INVITE_ANSWER_REQ.inviteResult)
}
inline ::uint32_t SC2S_PARTY_INVITE_ANSWER_REQ::_internal_inviteresult() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inviteresult_;
}
inline void SC2S_PARTY_INVITE_ANSWER_REQ::_internal_set_inviteresult(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inviteresult_ = value;
}

// string returnAccountId = 2;
inline void SC2S_PARTY_INVITE_ANSWER_REQ::clear_returnaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.returnaccountid_.ClearToEmpty();
}
inline const std::string& SC2S_PARTY_INVITE_ANSWER_REQ::returnaccountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_PARTY_INVITE_ANSWER_REQ.returnAccountId)
  return _internal_returnaccountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_PARTY_INVITE_ANSWER_REQ::set_returnaccountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.returnaccountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_PARTY_INVITE_ANSWER_REQ.returnAccountId)
}
inline std::string* SC2S_PARTY_INVITE_ANSWER_REQ::mutable_returnaccountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_returnaccountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_PARTY_INVITE_ANSWER_REQ.returnAccountId)
  return _s;
}
inline const std::string& SC2S_PARTY_INVITE_ANSWER_REQ::_internal_returnaccountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.returnaccountid_.Get();
}
inline void SC2S_PARTY_INVITE_ANSWER_REQ::_internal_set_returnaccountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.returnaccountid_.Set(value, GetArena());
}
inline std::string* SC2S_PARTY_INVITE_ANSWER_REQ::_internal_mutable_returnaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.returnaccountid_.Mutable( GetArena());
}
inline std::string* SC2S_PARTY_INVITE_ANSWER_REQ::release_returnaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_PARTY_INVITE_ANSWER_REQ.returnAccountId)
  return _impl_.returnaccountid_.Release();
}
inline void SC2S_PARTY_INVITE_ANSWER_REQ::set_allocated_returnaccountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.returnaccountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.returnaccountid_.IsDefault()) {
          _impl_.returnaccountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_PARTY_INVITE_ANSWER_REQ.returnAccountId)
}

// -------------------------------------------------------------------

// SS2C_PARTY_INVITE_ANSWER_RES

// uint32 result = 1;
inline void SS2C_PARTY_INVITE_ANSWER_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_PARTY_INVITE_ANSWER_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_INVITE_ANSWER_RES.result)
  return _internal_result();
}
inline void SS2C_PARTY_INVITE_ANSWER_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_INVITE_ANSWER_RES.result)
}
inline ::uint32_t SS2C_PARTY_INVITE_ANSWER_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_PARTY_INVITE_ANSWER_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SS2C_PARTY_INVITE_ANSWER_RESULT_NOT

// .DC.Packet.SACCOUNT_NICKNAME nickName = 1;
inline bool SS2C_PARTY_INVITE_ANSWER_RESULT_NOT::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SS2C_PARTY_INVITE_ANSWER_RESULT_NOT::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SS2C_PARTY_INVITE_ANSWER_RESULT_NOT::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_INVITE_ANSWER_RESULT_NOT.nickName)
  return _internal_nickname();
}
inline void SS2C_PARTY_INVITE_ANSWER_RESULT_NOT::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_PARTY_INVITE_ANSWER_RESULT_NOT.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_PARTY_INVITE_ANSWER_RESULT_NOT::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_PARTY_INVITE_ANSWER_RESULT_NOT::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_INVITE_ANSWER_RESULT_NOT.nickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_PARTY_INVITE_ANSWER_RESULT_NOT::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_PARTY_INVITE_ANSWER_RESULT_NOT::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_INVITE_ANSWER_RESULT_NOT.nickName)
  return _msg;
}
inline void SS2C_PARTY_INVITE_ANSWER_RESULT_NOT::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_INVITE_ANSWER_RESULT_NOT.nickName)
}

// uint32 inviteResult = 2;
inline void SS2C_PARTY_INVITE_ANSWER_RESULT_NOT::clear_inviteresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inviteresult_ = 0u;
}
inline ::uint32_t SS2C_PARTY_INVITE_ANSWER_RESULT_NOT::inviteresult() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_INVITE_ANSWER_RESULT_NOT.inviteResult)
  return _internal_inviteresult();
}
inline void SS2C_PARTY_INVITE_ANSWER_RESULT_NOT::set_inviteresult(::uint32_t value) {
  _internal_set_inviteresult(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_INVITE_ANSWER_RESULT_NOT.inviteResult)
}
inline ::uint32_t SS2C_PARTY_INVITE_ANSWER_RESULT_NOT::_internal_inviteresult() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inviteresult_;
}
inline void SS2C_PARTY_INVITE_ANSWER_RESULT_NOT::_internal_set_inviteresult(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inviteresult_ = value;
}

// -------------------------------------------------------------------

// SC2S_PARTY_EXIT_REQ

// -------------------------------------------------------------------

// SS2C_PARTY_EXIT_RES

// uint32 result = 1;
inline void SS2C_PARTY_EXIT_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_PARTY_EXIT_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_EXIT_RES.result)
  return _internal_result();
}
inline void SS2C_PARTY_EXIT_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_EXIT_RES.result)
}
inline ::uint32_t SS2C_PARTY_EXIT_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_PARTY_EXIT_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SS2C_PARTY_MEMBER_INFO_NOT

// repeated .DC.Packet.SCHARACTER_PARTY_INFO playPartyUserInfoData = 1;
inline int SS2C_PARTY_MEMBER_INFO_NOT::_internal_playpartyuserinfodata_size() const {
  return _internal_playpartyuserinfodata().size();
}
inline int SS2C_PARTY_MEMBER_INFO_NOT::playpartyuserinfodata_size() const {
  return _internal_playpartyuserinfodata_size();
}
inline ::DC::Packet::SCHARACTER_PARTY_INFO* SS2C_PARTY_MEMBER_INFO_NOT::mutable_playpartyuserinfodata(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_MEMBER_INFO_NOT.playPartyUserInfoData)
  return _internal_mutable_playpartyuserinfodata()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_PARTY_INFO>* SS2C_PARTY_MEMBER_INFO_NOT::mutable_playpartyuserinfodata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_PARTY_MEMBER_INFO_NOT.playPartyUserInfoData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_playpartyuserinfodata();
}
inline const ::DC::Packet::SCHARACTER_PARTY_INFO& SS2C_PARTY_MEMBER_INFO_NOT::playpartyuserinfodata(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_MEMBER_INFO_NOT.playPartyUserInfoData)
  return _internal_playpartyuserinfodata().Get(index);
}
inline ::DC::Packet::SCHARACTER_PARTY_INFO* SS2C_PARTY_MEMBER_INFO_NOT::add_playpartyuserinfodata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SCHARACTER_PARTY_INFO* _add = _internal_mutable_playpartyuserinfodata()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_PARTY_MEMBER_INFO_NOT.playPartyUserInfoData)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_PARTY_INFO>& SS2C_PARTY_MEMBER_INFO_NOT::playpartyuserinfodata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_PARTY_MEMBER_INFO_NOT.playPartyUserInfoData)
  return _internal_playpartyuserinfodata();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_PARTY_INFO>&
SS2C_PARTY_MEMBER_INFO_NOT::_internal_playpartyuserinfodata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playpartyuserinfodata_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_PARTY_INFO>*
SS2C_PARTY_MEMBER_INFO_NOT::_internal_mutable_playpartyuserinfodata() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.playpartyuserinfodata_;
}

// -------------------------------------------------------------------

// SC2S_PARTY_READY_REQ

// uint32 isReady = 1;
inline void SC2S_PARTY_READY_REQ::clear_isready() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isready_ = 0u;
}
inline ::uint32_t SC2S_PARTY_READY_REQ::isready() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_PARTY_READY_REQ.isReady)
  return _internal_isready();
}
inline void SC2S_PARTY_READY_REQ::set_isready(::uint32_t value) {
  _internal_set_isready(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_PARTY_READY_REQ.isReady)
}
inline ::uint32_t SC2S_PARTY_READY_REQ::_internal_isready() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isready_;
}
inline void SC2S_PARTY_READY_REQ::_internal_set_isready(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isready_ = value;
}

// -------------------------------------------------------------------

// SS2C_PARTY_READY_RES

// uint32 result = 1;
inline void SS2C_PARTY_READY_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_PARTY_READY_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_READY_RES.result)
  return _internal_result();
}
inline void SS2C_PARTY_READY_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_READY_RES.result)
}
inline ::uint32_t SS2C_PARTY_READY_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_PARTY_READY_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// uint32 restrictionMS = 2;
inline void SS2C_PARTY_READY_RES::clear_restrictionms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.restrictionms_ = 0u;
}
inline ::uint32_t SS2C_PARTY_READY_RES::restrictionms() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_READY_RES.restrictionMS)
  return _internal_restrictionms();
}
inline void SS2C_PARTY_READY_RES::set_restrictionms(::uint32_t value) {
  _internal_set_restrictionms(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_READY_RES.restrictionMS)
}
inline ::uint32_t SS2C_PARTY_READY_RES::_internal_restrictionms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.restrictionms_;
}
inline void SS2C_PARTY_READY_RES::_internal_set_restrictionms(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.restrictionms_ = value;
}

// -------------------------------------------------------------------

// SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT

// string accountId = 1;
inline void SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.accountId)
}
inline std::string* SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.accountId)
  return _s;
}
inline const std::string& SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.accountId)
  return _impl_.accountid_.Release();
}
inline void SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.accountId)
}

// string characterId = 2;
inline void SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.characterId)
}
inline std::string* SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.characterId)
  return _s;
}
inline const std::string& SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.characterId)
  return _impl_.characterid_.Release();
}
inline void SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.characterId)
}

// repeated .DC.Packet.SItem oldItems = 3;
inline int SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::_internal_olditems_size() const {
  return _internal_olditems().size();
}
inline int SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::olditems_size() const {
  return _internal_olditems_size();
}
inline ::DC::Packet::SItem* SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::mutable_olditems(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.oldItems)
  return _internal_mutable_olditems()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::mutable_olditems()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.oldItems)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_olditems();
}
inline const ::DC::Packet::SItem& SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::olditems(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.oldItems)
  return _internal_olditems().Get(index);
}
inline ::DC::Packet::SItem* SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::add_olditems() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SItem* _add = _internal_mutable_olditems()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.oldItems)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::olditems() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.oldItems)
  return _internal_olditems();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>&
SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::_internal_olditems() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.olditems_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>*
SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::_internal_mutable_olditems() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.olditems_;
}

// repeated .DC.Packet.SItem newItems = 4;
inline int SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::_internal_newitems_size() const {
  return _internal_newitems().size();
}
inline int SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::newitems_size() const {
  return _internal_newitems_size();
}
inline ::DC::Packet::SItem* SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::mutable_newitems(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.newItems)
  return _internal_mutable_newitems()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::mutable_newitems()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.newItems)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_newitems();
}
inline const ::DC::Packet::SItem& SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::newitems(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.newItems)
  return _internal_newitems().Get(index);
}
inline ::DC::Packet::SItem* SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::add_newitems() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SItem* _add = _internal_mutable_newitems()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.newItems)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::newitems() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT.newItems)
  return _internal_newitems();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>&
SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::_internal_newitems() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.newitems_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>*
SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT::_internal_mutable_newitems() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.newitems_;
}

// -------------------------------------------------------------------

// SS2C_PARTY_REGION_CHANGE_NOT

// uint32 region = 1;
inline void SS2C_PARTY_REGION_CHANGE_NOT::clear_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_ = 0u;
}
inline ::uint32_t SS2C_PARTY_REGION_CHANGE_NOT::region() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_REGION_CHANGE_NOT.region)
  return _internal_region();
}
inline void SS2C_PARTY_REGION_CHANGE_NOT::set_region(::uint32_t value) {
  _internal_set_region(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_REGION_CHANGE_NOT.region)
}
inline ::uint32_t SS2C_PARTY_REGION_CHANGE_NOT::_internal_region() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.region_;
}
inline void SS2C_PARTY_REGION_CHANGE_NOT::_internal_set_region(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_ = value;
}

// -------------------------------------------------------------------

// SS2C_PARTY_LOCATION_UPDATE_NOT

// string accountId = 1;
inline void SS2C_PARTY_LOCATION_UPDATE_NOT::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_LOCATION_UPDATE_NOT::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_LOCATION_UPDATE_NOT.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_LOCATION_UPDATE_NOT::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_LOCATION_UPDATE_NOT.accountId)
}
inline std::string* SS2C_PARTY_LOCATION_UPDATE_NOT::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_LOCATION_UPDATE_NOT.accountId)
  return _s;
}
inline const std::string& SS2C_PARTY_LOCATION_UPDATE_NOT::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SS2C_PARTY_LOCATION_UPDATE_NOT::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_LOCATION_UPDATE_NOT::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_LOCATION_UPDATE_NOT::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_LOCATION_UPDATE_NOT.accountId)
  return _impl_.accountid_.Release();
}
inline void SS2C_PARTY_LOCATION_UPDATE_NOT::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_LOCATION_UPDATE_NOT.accountId)
}

// string characterId = 2;
inline void SS2C_PARTY_LOCATION_UPDATE_NOT::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_LOCATION_UPDATE_NOT::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_LOCATION_UPDATE_NOT.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_LOCATION_UPDATE_NOT::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_LOCATION_UPDATE_NOT.characterId)
}
inline std::string* SS2C_PARTY_LOCATION_UPDATE_NOT::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_LOCATION_UPDATE_NOT.characterId)
  return _s;
}
inline const std::string& SS2C_PARTY_LOCATION_UPDATE_NOT::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SS2C_PARTY_LOCATION_UPDATE_NOT::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_LOCATION_UPDATE_NOT::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_LOCATION_UPDATE_NOT::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_LOCATION_UPDATE_NOT.characterId)
  return _impl_.characterid_.Release();
}
inline void SS2C_PARTY_LOCATION_UPDATE_NOT::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_LOCATION_UPDATE_NOT.characterId)
}

// uint32 updateLocation = 3;
inline void SS2C_PARTY_LOCATION_UPDATE_NOT::clear_updatelocation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatelocation_ = 0u;
}
inline ::uint32_t SS2C_PARTY_LOCATION_UPDATE_NOT::updatelocation() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_LOCATION_UPDATE_NOT.updateLocation)
  return _internal_updatelocation();
}
inline void SS2C_PARTY_LOCATION_UPDATE_NOT::set_updatelocation(::uint32_t value) {
  _internal_set_updatelocation(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_LOCATION_UPDATE_NOT.updateLocation)
}
inline ::uint32_t SS2C_PARTY_LOCATION_UPDATE_NOT::_internal_updatelocation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatelocation_;
}
inline void SS2C_PARTY_LOCATION_UPDATE_NOT::_internal_set_updatelocation(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatelocation_ = value;
}

// -------------------------------------------------------------------

// SS2C_PARTY_CHARACTER_SKIN_LIST_NOT

// string accountId = 1;
inline void SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.accountId)
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.accountId)
  return _s;
}
inline const std::string& SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.accountId)
  return _impl_.accountid_.Release();
}
inline void SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.accountId)
}

// string characterId = 2;
inline void SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.characterId)
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.characterId)
  return _s;
}
inline const std::string& SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.characterId)
  return _impl_.characterid_.Release();
}
inline void SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.characterId)
}

// repeated string characterSkinIdList = 3;
inline int SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::_internal_characterskinidlist_size() const {
  return _internal_characterskinidlist().size();
}
inline int SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::characterskinidlist_size() const {
  return _internal_characterskinidlist_size();
}
inline void SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::clear_characterskinidlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterskinidlist_.Clear();
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::add_characterskinidlist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_characterskinidlist()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.characterSkinIdList)
  return _s;
}
inline const std::string& SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::characterskinidlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.characterSkinIdList)
  return _internal_characterskinidlist().Get(index);
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::mutable_characterskinidlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.characterSkinIdList)
  return _internal_mutable_characterskinidlist()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::set_characterskinidlist(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_characterskinidlist()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.characterSkinIdList)
}
template <typename Arg_, typename... Args_>
inline void SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::add_characterskinidlist(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_characterskinidlist(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.characterSkinIdList)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::characterskinidlist() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.characterSkinIdList)
  return _internal_characterskinidlist();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::mutable_characterskinidlist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_LIST_NOT.characterSkinIdList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_characterskinidlist();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::_internal_characterskinidlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterskinidlist_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SS2C_PARTY_CHARACTER_SKIN_LIST_NOT::_internal_mutable_characterskinidlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.characterskinidlist_;
}

// -------------------------------------------------------------------

// SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT

// string accountId = 1;
inline void SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.accountId)
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.accountId)
  return _s;
}
inline const std::string& SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.accountId)
  return _impl_.accountid_.Release();
}
inline void SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.accountId)
}

// string characterId = 2;
inline void SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.characterId)
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.characterId)
  return _s;
}
inline const std::string& SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.characterId)
  return _impl_.characterid_.Release();
}
inline void SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.characterId)
}

// string oldCharacterSkinId = 3;
inline void SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::clear_oldcharacterskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oldcharacterskinid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::oldcharacterskinid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.oldCharacterSkinId)
  return _internal_oldcharacterskinid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::set_oldcharacterskinid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oldcharacterskinid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.oldCharacterSkinId)
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::mutable_oldcharacterskinid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_oldcharacterskinid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.oldCharacterSkinId)
  return _s;
}
inline const std::string& SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::_internal_oldcharacterskinid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.oldcharacterskinid_.Get();
}
inline void SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::_internal_set_oldcharacterskinid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oldcharacterskinid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::_internal_mutable_oldcharacterskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.oldcharacterskinid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::release_oldcharacterskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.oldCharacterSkinId)
  return _impl_.oldcharacterskinid_.Release();
}
inline void SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::set_allocated_oldcharacterskinid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oldcharacterskinid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.oldcharacterskinid_.IsDefault()) {
          _impl_.oldcharacterskinid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.oldCharacterSkinId)
}

// string newCharacterSkinId = 4;
inline void SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::clear_newcharacterskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newcharacterskinid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::newcharacterskinid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.newCharacterSkinId)
  return _internal_newcharacterskinid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::set_newcharacterskinid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newcharacterskinid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.newCharacterSkinId)
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::mutable_newcharacterskinid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_newcharacterskinid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.newCharacterSkinId)
  return _s;
}
inline const std::string& SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::_internal_newcharacterskinid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.newcharacterskinid_.Get();
}
inline void SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::_internal_set_newcharacterskinid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newcharacterskinid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::_internal_mutable_newcharacterskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.newcharacterskinid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::release_newcharacterskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.newCharacterSkinId)
  return _impl_.newcharacterskinid_.Release();
}
inline void SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT::set_allocated_newcharacterskinid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newcharacterskinid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.newcharacterskinid_.IsDefault()) {
          _impl_.newcharacterskinid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT.newCharacterSkinId)
}

// -------------------------------------------------------------------

// SS2C_PARTY_ITEM_SKIN_LIST_NOT

// string accountId = 1;
inline void SS2C_PARTY_ITEM_SKIN_LIST_NOT::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_ITEM_SKIN_LIST_NOT::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_ITEM_SKIN_LIST_NOT::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.accountId)
}
inline std::string* SS2C_PARTY_ITEM_SKIN_LIST_NOT::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.accountId)
  return _s;
}
inline const std::string& SS2C_PARTY_ITEM_SKIN_LIST_NOT::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SS2C_PARTY_ITEM_SKIN_LIST_NOT::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_ITEM_SKIN_LIST_NOT::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_ITEM_SKIN_LIST_NOT::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.accountId)
  return _impl_.accountid_.Release();
}
inline void SS2C_PARTY_ITEM_SKIN_LIST_NOT::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.accountId)
}

// string characterId = 2;
inline void SS2C_PARTY_ITEM_SKIN_LIST_NOT::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_ITEM_SKIN_LIST_NOT::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_ITEM_SKIN_LIST_NOT::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.characterId)
}
inline std::string* SS2C_PARTY_ITEM_SKIN_LIST_NOT::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.characterId)
  return _s;
}
inline const std::string& SS2C_PARTY_ITEM_SKIN_LIST_NOT::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SS2C_PARTY_ITEM_SKIN_LIST_NOT::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_ITEM_SKIN_LIST_NOT::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_ITEM_SKIN_LIST_NOT::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.characterId)
  return _impl_.characterid_.Release();
}
inline void SS2C_PARTY_ITEM_SKIN_LIST_NOT::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.characterId)
}

// repeated string itemSkinIdList = 3;
inline int SS2C_PARTY_ITEM_SKIN_LIST_NOT::_internal_itemskinidlist_size() const {
  return _internal_itemskinidlist().size();
}
inline int SS2C_PARTY_ITEM_SKIN_LIST_NOT::itemskinidlist_size() const {
  return _internal_itemskinidlist_size();
}
inline void SS2C_PARTY_ITEM_SKIN_LIST_NOT::clear_itemskinidlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.itemskinidlist_.Clear();
}
inline std::string* SS2C_PARTY_ITEM_SKIN_LIST_NOT::add_itemskinidlist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_itemskinidlist()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.itemSkinIdList)
  return _s;
}
inline const std::string& SS2C_PARTY_ITEM_SKIN_LIST_NOT::itemskinidlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.itemSkinIdList)
  return _internal_itemskinidlist().Get(index);
}
inline std::string* SS2C_PARTY_ITEM_SKIN_LIST_NOT::mutable_itemskinidlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.itemSkinIdList)
  return _internal_mutable_itemskinidlist()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SS2C_PARTY_ITEM_SKIN_LIST_NOT::set_itemskinidlist(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_itemskinidlist()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.itemSkinIdList)
}
template <typename Arg_, typename... Args_>
inline void SS2C_PARTY_ITEM_SKIN_LIST_NOT::add_itemskinidlist(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_itemskinidlist(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.itemSkinIdList)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SS2C_PARTY_ITEM_SKIN_LIST_NOT::itemskinidlist() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.itemSkinIdList)
  return _internal_itemskinidlist();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SS2C_PARTY_ITEM_SKIN_LIST_NOT::mutable_itemskinidlist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_PARTY_ITEM_SKIN_LIST_NOT.itemSkinIdList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_itemskinidlist();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SS2C_PARTY_ITEM_SKIN_LIST_NOT::_internal_itemskinidlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.itemskinidlist_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SS2C_PARTY_ITEM_SKIN_LIST_NOT::_internal_mutable_itemskinidlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.itemskinidlist_;
}

// -------------------------------------------------------------------

// SS2C_PARTY_ITEM_SKIN_CHANGE_NOT

// string accountId = 1;
inline void SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.accountId)
}
inline std::string* SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.accountId)
  return _s;
}
inline const std::string& SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.accountId)
  return _impl_.accountid_.Release();
}
inline void SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.accountId)
}

// string characterId = 2;
inline void SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.characterId)
}
inline std::string* SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.characterId)
  return _s;
}
inline const std::string& SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.characterId)
  return _impl_.characterid_.Release();
}
inline void SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.characterId)
}

// string oldItemSkinId = 3;
inline void SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::clear_olditemskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.olditemskinid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::olditemskinid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.oldItemSkinId)
  return _internal_olditemskinid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::set_olditemskinid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.olditemskinid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.oldItemSkinId)
}
inline std::string* SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::mutable_olditemskinid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_olditemskinid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.oldItemSkinId)
  return _s;
}
inline const std::string& SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::_internal_olditemskinid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.olditemskinid_.Get();
}
inline void SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::_internal_set_olditemskinid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.olditemskinid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::_internal_mutable_olditemskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.olditemskinid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::release_olditemskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.oldItemSkinId)
  return _impl_.olditemskinid_.Release();
}
inline void SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::set_allocated_olditemskinid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.olditemskinid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.olditemskinid_.IsDefault()) {
          _impl_.olditemskinid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.oldItemSkinId)
}

// string newItemSkinId = 4;
inline void SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::clear_newitemskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newitemskinid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::newitemskinid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.newItemSkinId)
  return _internal_newitemskinid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::set_newitemskinid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newitemskinid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.newItemSkinId)
}
inline std::string* SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::mutable_newitemskinid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_newitemskinid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.newItemSkinId)
  return _s;
}
inline const std::string& SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::_internal_newitemskinid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.newitemskinid_.Get();
}
inline void SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::_internal_set_newitemskinid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newitemskinid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::_internal_mutable_newitemskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.newitemskinid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::release_newitemskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.newItemSkinId)
  return _impl_.newitemskinid_.Release();
}
inline void SS2C_PARTY_ITEM_SKIN_CHANGE_NOT::set_allocated_newitemskinid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newitemskinid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.newitemskinid_.IsDefault()) {
          _impl_.newitemskinid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_ITEM_SKIN_CHANGE_NOT.newItemSkinId)
}

// -------------------------------------------------------------------

// SS2C_PARTY_ARMOR_SKIN_LIST_NOT

// string accountId = 1;
inline void SS2C_PARTY_ARMOR_SKIN_LIST_NOT::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_ARMOR_SKIN_LIST_NOT::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_ARMOR_SKIN_LIST_NOT::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.accountId)
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_LIST_NOT::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.accountId)
  return _s;
}
inline const std::string& SS2C_PARTY_ARMOR_SKIN_LIST_NOT::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SS2C_PARTY_ARMOR_SKIN_LIST_NOT::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_LIST_NOT::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_LIST_NOT::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.accountId)
  return _impl_.accountid_.Release();
}
inline void SS2C_PARTY_ARMOR_SKIN_LIST_NOT::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.accountId)
}

// string characterId = 2;
inline void SS2C_PARTY_ARMOR_SKIN_LIST_NOT::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_ARMOR_SKIN_LIST_NOT::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_ARMOR_SKIN_LIST_NOT::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.characterId)
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_LIST_NOT::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.characterId)
  return _s;
}
inline const std::string& SS2C_PARTY_ARMOR_SKIN_LIST_NOT::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SS2C_PARTY_ARMOR_SKIN_LIST_NOT::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_LIST_NOT::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_LIST_NOT::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.characterId)
  return _impl_.characterid_.Release();
}
inline void SS2C_PARTY_ARMOR_SKIN_LIST_NOT::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.characterId)
}

// repeated string armorSkinIdList = 3;
inline int SS2C_PARTY_ARMOR_SKIN_LIST_NOT::_internal_armorskinidlist_size() const {
  return _internal_armorskinidlist().size();
}
inline int SS2C_PARTY_ARMOR_SKIN_LIST_NOT::armorskinidlist_size() const {
  return _internal_armorskinidlist_size();
}
inline void SS2C_PARTY_ARMOR_SKIN_LIST_NOT::clear_armorskinidlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.armorskinidlist_.Clear();
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_LIST_NOT::add_armorskinidlist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_armorskinidlist()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.armorSkinIdList)
  return _s;
}
inline const std::string& SS2C_PARTY_ARMOR_SKIN_LIST_NOT::armorskinidlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.armorSkinIdList)
  return _internal_armorskinidlist().Get(index);
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_LIST_NOT::mutable_armorskinidlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.armorSkinIdList)
  return _internal_mutable_armorskinidlist()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SS2C_PARTY_ARMOR_SKIN_LIST_NOT::set_armorskinidlist(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_armorskinidlist()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.armorSkinIdList)
}
template <typename Arg_, typename... Args_>
inline void SS2C_PARTY_ARMOR_SKIN_LIST_NOT::add_armorskinidlist(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_armorskinidlist(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.armorSkinIdList)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SS2C_PARTY_ARMOR_SKIN_LIST_NOT::armorskinidlist() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.armorSkinIdList)
  return _internal_armorskinidlist();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SS2C_PARTY_ARMOR_SKIN_LIST_NOT::mutable_armorskinidlist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_PARTY_ARMOR_SKIN_LIST_NOT.armorSkinIdList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_armorskinidlist();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SS2C_PARTY_ARMOR_SKIN_LIST_NOT::_internal_armorskinidlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.armorskinidlist_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SS2C_PARTY_ARMOR_SKIN_LIST_NOT::_internal_mutable_armorskinidlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.armorskinidlist_;
}

// -------------------------------------------------------------------

// SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT

// string accountId = 1;
inline void SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.accountId)
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.accountId)
  return _s;
}
inline const std::string& SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.accountId)
  return _impl_.accountid_.Release();
}
inline void SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.accountId)
}

// string characterId = 2;
inline void SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.characterId)
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.characterId)
  return _s;
}
inline const std::string& SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.characterId)
  return _impl_.characterid_.Release();
}
inline void SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.characterId)
}

// string oldItemSkinId = 3;
inline void SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::clear_olditemskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.olditemskinid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::olditemskinid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.oldItemSkinId)
  return _internal_olditemskinid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::set_olditemskinid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.olditemskinid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.oldItemSkinId)
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::mutable_olditemskinid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_olditemskinid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.oldItemSkinId)
  return _s;
}
inline const std::string& SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::_internal_olditemskinid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.olditemskinid_.Get();
}
inline void SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::_internal_set_olditemskinid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.olditemskinid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::_internal_mutable_olditemskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.olditemskinid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::release_olditemskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.oldItemSkinId)
  return _impl_.olditemskinid_.Release();
}
inline void SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::set_allocated_olditemskinid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.olditemskinid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.olditemskinid_.IsDefault()) {
          _impl_.olditemskinid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.oldItemSkinId)
}

// string newItemSkinId = 4;
inline void SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::clear_newitemskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newitemskinid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::newitemskinid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.newItemSkinId)
  return _internal_newitemskinid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::set_newitemskinid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newitemskinid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.newItemSkinId)
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::mutable_newitemskinid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_newitemskinid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.newItemSkinId)
  return _s;
}
inline const std::string& SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::_internal_newitemskinid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.newitemskinid_.Get();
}
inline void SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::_internal_set_newitemskinid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newitemskinid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::_internal_mutable_newitemskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.newitemskinid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::release_newitemskinid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.newItemSkinId)
  return _impl_.newitemskinid_.Release();
}
inline void SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT::set_allocated_newitemskinid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newitemskinid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.newitemskinid_.IsDefault()) {
          _impl_.newitemskinid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_ARMOR_SKIN_CHANGE_NOT.newItemSkinId)
}

// -------------------------------------------------------------------

// SS2C_PARTY_GAME_TYPE_CHANGE_NOT

// uint32 gameTypeIndex = 1;
inline void SS2C_PARTY_GAME_TYPE_CHANGE_NOT::clear_gametypeindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gametypeindex_ = 0u;
}
inline ::uint32_t SS2C_PARTY_GAME_TYPE_CHANGE_NOT::gametypeindex() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_GAME_TYPE_CHANGE_NOT.gameTypeIndex)
  return _internal_gametypeindex();
}
inline void SS2C_PARTY_GAME_TYPE_CHANGE_NOT::set_gametypeindex(::uint32_t value) {
  _internal_set_gametypeindex(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_GAME_TYPE_CHANGE_NOT.gameTypeIndex)
}
inline ::uint32_t SS2C_PARTY_GAME_TYPE_CHANGE_NOT::_internal_gametypeindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gametypeindex_;
}
inline void SS2C_PARTY_GAME_TYPE_CHANGE_NOT::_internal_set_gametypeindex(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gametypeindex_ = value;
}

// -------------------------------------------------------------------

// SC2S_PARTY_MEMBER_KICK_REQ

// string accountId = 1;
inline void SC2S_PARTY_MEMBER_KICK_REQ::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SC2S_PARTY_MEMBER_KICK_REQ::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_PARTY_MEMBER_KICK_REQ.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_PARTY_MEMBER_KICK_REQ::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_PARTY_MEMBER_KICK_REQ.accountId)
}
inline std::string* SC2S_PARTY_MEMBER_KICK_REQ::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_PARTY_MEMBER_KICK_REQ.accountId)
  return _s;
}
inline const std::string& SC2S_PARTY_MEMBER_KICK_REQ::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SC2S_PARTY_MEMBER_KICK_REQ::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SC2S_PARTY_MEMBER_KICK_REQ::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SC2S_PARTY_MEMBER_KICK_REQ::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_PARTY_MEMBER_KICK_REQ.accountId)
  return _impl_.accountid_.Release();
}
inline void SC2S_PARTY_MEMBER_KICK_REQ::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_PARTY_MEMBER_KICK_REQ.accountId)
}

// string characterId = 2;
inline void SC2S_PARTY_MEMBER_KICK_REQ::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SC2S_PARTY_MEMBER_KICK_REQ::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_PARTY_MEMBER_KICK_REQ.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_PARTY_MEMBER_KICK_REQ::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_PARTY_MEMBER_KICK_REQ.characterId)
}
inline std::string* SC2S_PARTY_MEMBER_KICK_REQ::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_PARTY_MEMBER_KICK_REQ.characterId)
  return _s;
}
inline const std::string& SC2S_PARTY_MEMBER_KICK_REQ::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SC2S_PARTY_MEMBER_KICK_REQ::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SC2S_PARTY_MEMBER_KICK_REQ::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SC2S_PARTY_MEMBER_KICK_REQ::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_PARTY_MEMBER_KICK_REQ.characterId)
  return _impl_.characterid_.Release();
}
inline void SC2S_PARTY_MEMBER_KICK_REQ::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_PARTY_MEMBER_KICK_REQ.characterId)
}

// -------------------------------------------------------------------

// SS2C_PARTY_MEMBER_KICK_RES

// uint32 result = 1;
inline void SS2C_PARTY_MEMBER_KICK_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_PARTY_MEMBER_KICK_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_MEMBER_KICK_RES.result)
  return _internal_result();
}
inline void SS2C_PARTY_MEMBER_KICK_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_MEMBER_KICK_RES.result)
}
inline ::uint32_t SS2C_PARTY_MEMBER_KICK_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_PARTY_MEMBER_KICK_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SC2S_PARTY_CHAT_REQ

// .DC.Packet.SCHATDATA chatData = 1;
inline bool SC2S_PARTY_CHAT_REQ::has_chatdata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chatdata_ != nullptr);
  return value;
}
inline const ::DC::Packet::SCHATDATA& SC2S_PARTY_CHAT_REQ::_internal_chatdata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SCHATDATA* p = _impl_.chatdata_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SCHATDATA&>(::DC::Packet::_SCHATDATA_default_instance_);
}
inline const ::DC::Packet::SCHATDATA& SC2S_PARTY_CHAT_REQ::chatdata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_PARTY_CHAT_REQ.chatData)
  return _internal_chatdata();
}
inline void SC2S_PARTY_CHAT_REQ::unsafe_arena_set_allocated_chatdata(::DC::Packet::SCHATDATA* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chatdata_);
  }
  _impl_.chatdata_ = reinterpret_cast<::DC::Packet::SCHATDATA*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SC2S_PARTY_CHAT_REQ.chatData)
}
inline ::DC::Packet::SCHATDATA* SC2S_PARTY_CHAT_REQ::release_chatdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SCHATDATA* released = _impl_.chatdata_;
  _impl_.chatdata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SCHATDATA* SC2S_PARTY_CHAT_REQ::unsafe_arena_release_chatdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_PARTY_CHAT_REQ.chatData)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SCHATDATA* temp = _impl_.chatdata_;
  _impl_.chatdata_ = nullptr;
  return temp;
}
inline ::DC::Packet::SCHATDATA* SC2S_PARTY_CHAT_REQ::_internal_mutable_chatdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chatdata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SCHATDATA>(GetArena());
    _impl_.chatdata_ = reinterpret_cast<::DC::Packet::SCHATDATA*>(p);
  }
  return _impl_.chatdata_;
}
inline ::DC::Packet::SCHATDATA* SC2S_PARTY_CHAT_REQ::mutable_chatdata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SCHATDATA* _msg = _internal_mutable_chatdata();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_PARTY_CHAT_REQ.chatData)
  return _msg;
}
inline void SC2S_PARTY_CHAT_REQ::set_allocated_chatdata(::DC::Packet::SCHATDATA* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chatdata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chatdata_ = reinterpret_cast<::DC::Packet::SCHATDATA*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_PARTY_CHAT_REQ.chatData)
}

// -------------------------------------------------------------------

// SS2C_PARTY_CHAT_RES

// uint32 result = 1;
inline void SS2C_PARTY_CHAT_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_PARTY_CHAT_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_CHAT_RES.result)
  return _internal_result();
}
inline void SS2C_PARTY_CHAT_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_CHAT_RES.result)
}
inline ::uint32_t SS2C_PARTY_CHAT_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_PARTY_CHAT_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SS2C_PARTY_CHAT_NOT

// .DC.Packet.SCHATDATA chatData = 1;
inline bool SS2C_PARTY_CHAT_NOT::has_chatdata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chatdata_ != nullptr);
  return value;
}
inline const ::DC::Packet::SCHATDATA& SS2C_PARTY_CHAT_NOT::_internal_chatdata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SCHATDATA* p = _impl_.chatdata_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SCHATDATA&>(::DC::Packet::_SCHATDATA_default_instance_);
}
inline const ::DC::Packet::SCHATDATA& SS2C_PARTY_CHAT_NOT::chatdata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_CHAT_NOT.chatData)
  return _internal_chatdata();
}
inline void SS2C_PARTY_CHAT_NOT::unsafe_arena_set_allocated_chatdata(::DC::Packet::SCHATDATA* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chatdata_);
  }
  _impl_.chatdata_ = reinterpret_cast<::DC::Packet::SCHATDATA*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_PARTY_CHAT_NOT.chatData)
}
inline ::DC::Packet::SCHATDATA* SS2C_PARTY_CHAT_NOT::release_chatdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SCHATDATA* released = _impl_.chatdata_;
  _impl_.chatdata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SCHATDATA* SS2C_PARTY_CHAT_NOT::unsafe_arena_release_chatdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_CHAT_NOT.chatData)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SCHATDATA* temp = _impl_.chatdata_;
  _impl_.chatdata_ = nullptr;
  return temp;
}
inline ::DC::Packet::SCHATDATA* SS2C_PARTY_CHAT_NOT::_internal_mutable_chatdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chatdata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SCHATDATA>(GetArena());
    _impl_.chatdata_ = reinterpret_cast<::DC::Packet::SCHATDATA*>(p);
  }
  return _impl_.chatdata_;
}
inline ::DC::Packet::SCHATDATA* SS2C_PARTY_CHAT_NOT::mutable_chatdata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SCHATDATA* _msg = _internal_mutable_chatdata();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_CHAT_NOT.chatData)
  return _msg;
}
inline void SS2C_PARTY_CHAT_NOT::set_allocated_chatdata(::DC::Packet::SCHATDATA* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chatdata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chatdata_ = reinterpret_cast<::DC::Packet::SCHATDATA*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_CHAT_NOT.chatData)
}

// uint64 time = 2;
inline void SS2C_PARTY_CHAT_NOT::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = ::uint64_t{0u};
}
inline ::uint64_t SS2C_PARTY_CHAT_NOT::time() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_CHAT_NOT.time)
  return _internal_time();
}
inline void SS2C_PARTY_CHAT_NOT::set_time(::uint64_t value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_CHAT_NOT.time)
}
inline ::uint64_t SS2C_PARTY_CHAT_NOT::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_;
}
inline void SS2C_PARTY_CHAT_NOT::_internal_set_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = value;
}

// -------------------------------------------------------------------

// SS2C_PARTY_READY_CHANGE_NOT

// string accountId = 1;
inline void SS2C_PARTY_READY_CHANGE_NOT::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_READY_CHANGE_NOT::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_READY_CHANGE_NOT.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_READY_CHANGE_NOT::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_READY_CHANGE_NOT.accountId)
}
inline std::string* SS2C_PARTY_READY_CHANGE_NOT::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_READY_CHANGE_NOT.accountId)
  return _s;
}
inline const std::string& SS2C_PARTY_READY_CHANGE_NOT::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SS2C_PARTY_READY_CHANGE_NOT::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_READY_CHANGE_NOT::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_READY_CHANGE_NOT::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_READY_CHANGE_NOT.accountId)
  return _impl_.accountid_.Release();
}
inline void SS2C_PARTY_READY_CHANGE_NOT::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_READY_CHANGE_NOT.accountId)
}

// string characterId = 2;
inline void SS2C_PARTY_READY_CHANGE_NOT::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_READY_CHANGE_NOT::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_READY_CHANGE_NOT.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_READY_CHANGE_NOT::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_READY_CHANGE_NOT.characterId)
}
inline std::string* SS2C_PARTY_READY_CHANGE_NOT::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_READY_CHANGE_NOT.characterId)
  return _s;
}
inline const std::string& SS2C_PARTY_READY_CHANGE_NOT::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SS2C_PARTY_READY_CHANGE_NOT::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_READY_CHANGE_NOT::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_READY_CHANGE_NOT::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_READY_CHANGE_NOT.characterId)
  return _impl_.characterid_.Release();
}
inline void SS2C_PARTY_READY_CHANGE_NOT::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_READY_CHANGE_NOT.characterId)
}

// uint32 isReady = 3;
inline void SS2C_PARTY_READY_CHANGE_NOT::clear_isready() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isready_ = 0u;
}
inline ::uint32_t SS2C_PARTY_READY_CHANGE_NOT::isready() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_READY_CHANGE_NOT.isReady)
  return _internal_isready();
}
inline void SS2C_PARTY_READY_CHANGE_NOT::set_isready(::uint32_t value) {
  _internal_set_isready(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_READY_CHANGE_NOT.isReady)
}
inline ::uint32_t SS2C_PARTY_READY_CHANGE_NOT::_internal_isready() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isready_;
}
inline void SS2C_PARTY_READY_CHANGE_NOT::_internal_set_isready(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isready_ = value;
}

// -------------------------------------------------------------------

// SS2C_PARTY_KICKED_OUT_NOT

// -------------------------------------------------------------------

// SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT

// string accountId = 1;
inline void SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.accountId)
}
inline std::string* SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.accountId)
  return _s;
}
inline const std::string& SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.accountId)
  return _impl_.accountid_.Release();
}
inline void SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.accountId)
}

// string characterId = 2;
inline void SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.characterId)
}
inline std::string* SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.characterId)
  return _s;
}
inline const std::string& SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.characterId)
  return _impl_.characterid_.Release();
}
inline void SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.characterId)
}

// repeated string lobbyEmoteIdList = 3;
inline int SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::_internal_lobbyemoteidlist_size() const {
  return _internal_lobbyemoteidlist().size();
}
inline int SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::lobbyemoteidlist_size() const {
  return _internal_lobbyemoteidlist_size();
}
inline void SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::clear_lobbyemoteidlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lobbyemoteidlist_.Clear();
}
inline std::string* SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::add_lobbyemoteidlist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_lobbyemoteidlist()->Add();
  // @@protoc_insertion_point(field_add_mutable:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.lobbyEmoteIdList)
  return _s;
}
inline const std::string& SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::lobbyemoteidlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.lobbyEmoteIdList)
  return _internal_lobbyemoteidlist().Get(index);
}
inline std::string* SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::mutable_lobbyemoteidlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.lobbyEmoteIdList)
  return _internal_mutable_lobbyemoteidlist()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::set_lobbyemoteidlist(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_lobbyemoteidlist()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.lobbyEmoteIdList)
}
template <typename Arg_, typename... Args_>
inline void SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::add_lobbyemoteidlist(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_lobbyemoteidlist(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.lobbyEmoteIdList)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::lobbyemoteidlist() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.lobbyEmoteIdList)
  return _internal_lobbyemoteidlist();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::mutable_lobbyemoteidlist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT.lobbyEmoteIdList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_lobbyemoteidlist();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::_internal_lobbyemoteidlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lobbyemoteidlist_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SS2C_PARTY_MEMBER_LOBBY_EMOTE_NOT::_internal_mutable_lobbyemoteidlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.lobbyemoteidlist_;
}

// -------------------------------------------------------------------

// SC2S_PARTY_START_LOBBY_EMOTE_REQ

// string lobbyEmoteId = 1;
inline void SC2S_PARTY_START_LOBBY_EMOTE_REQ::clear_lobbyemoteid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lobbyemoteid_.ClearToEmpty();
}
inline const std::string& SC2S_PARTY_START_LOBBY_EMOTE_REQ::lobbyemoteid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_PARTY_START_LOBBY_EMOTE_REQ.lobbyEmoteId)
  return _internal_lobbyemoteid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_PARTY_START_LOBBY_EMOTE_REQ::set_lobbyemoteid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lobbyemoteid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_PARTY_START_LOBBY_EMOTE_REQ.lobbyEmoteId)
}
inline std::string* SC2S_PARTY_START_LOBBY_EMOTE_REQ::mutable_lobbyemoteid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lobbyemoteid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_PARTY_START_LOBBY_EMOTE_REQ.lobbyEmoteId)
  return _s;
}
inline const std::string& SC2S_PARTY_START_LOBBY_EMOTE_REQ::_internal_lobbyemoteid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lobbyemoteid_.Get();
}
inline void SC2S_PARTY_START_LOBBY_EMOTE_REQ::_internal_set_lobbyemoteid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lobbyemoteid_.Set(value, GetArena());
}
inline std::string* SC2S_PARTY_START_LOBBY_EMOTE_REQ::_internal_mutable_lobbyemoteid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.lobbyemoteid_.Mutable( GetArena());
}
inline std::string* SC2S_PARTY_START_LOBBY_EMOTE_REQ::release_lobbyemoteid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_PARTY_START_LOBBY_EMOTE_REQ.lobbyEmoteId)
  return _impl_.lobbyemoteid_.Release();
}
inline void SC2S_PARTY_START_LOBBY_EMOTE_REQ::set_allocated_lobbyemoteid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lobbyemoteid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lobbyemoteid_.IsDefault()) {
          _impl_.lobbyemoteid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_PARTY_START_LOBBY_EMOTE_REQ.lobbyEmoteId)
}

// -------------------------------------------------------------------

// SS2C_PARTY_START_LOBBY_EMOTE_RES

// uint32 result = 1;
inline void SS2C_PARTY_START_LOBBY_EMOTE_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_PARTY_START_LOBBY_EMOTE_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_RES.result)
  return _internal_result();
}
inline void SS2C_PARTY_START_LOBBY_EMOTE_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_RES.result)
}
inline ::uint32_t SS2C_PARTY_START_LOBBY_EMOTE_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_PARTY_START_LOBBY_EMOTE_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SS2C_PARTY_START_LOBBY_EMOTE_NOT

// string accountId = 1;
inline void SS2C_PARTY_START_LOBBY_EMOTE_NOT::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_START_LOBBY_EMOTE_NOT::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_START_LOBBY_EMOTE_NOT::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT.accountId)
}
inline std::string* SS2C_PARTY_START_LOBBY_EMOTE_NOT::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT.accountId)
  return _s;
}
inline const std::string& SS2C_PARTY_START_LOBBY_EMOTE_NOT::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SS2C_PARTY_START_LOBBY_EMOTE_NOT::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_START_LOBBY_EMOTE_NOT::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_START_LOBBY_EMOTE_NOT::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT.accountId)
  return _impl_.accountid_.Release();
}
inline void SS2C_PARTY_START_LOBBY_EMOTE_NOT::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT.accountId)
}

// string characterId = 2;
inline void SS2C_PARTY_START_LOBBY_EMOTE_NOT::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_START_LOBBY_EMOTE_NOT::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_START_LOBBY_EMOTE_NOT::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT.characterId)
}
inline std::string* SS2C_PARTY_START_LOBBY_EMOTE_NOT::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT.characterId)
  return _s;
}
inline const std::string& SS2C_PARTY_START_LOBBY_EMOTE_NOT::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SS2C_PARTY_START_LOBBY_EMOTE_NOT::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_START_LOBBY_EMOTE_NOT::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_START_LOBBY_EMOTE_NOT::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT.characterId)
  return _impl_.characterid_.Release();
}
inline void SS2C_PARTY_START_LOBBY_EMOTE_NOT::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT.characterId)
}

// string lobbyEmoteId = 3;
inline void SS2C_PARTY_START_LOBBY_EMOTE_NOT::clear_lobbyemoteid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lobbyemoteid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_START_LOBBY_EMOTE_NOT::lobbyemoteid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT.lobbyEmoteId)
  return _internal_lobbyemoteid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_START_LOBBY_EMOTE_NOT::set_lobbyemoteid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lobbyemoteid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT.lobbyEmoteId)
}
inline std::string* SS2C_PARTY_START_LOBBY_EMOTE_NOT::mutable_lobbyemoteid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lobbyemoteid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT.lobbyEmoteId)
  return _s;
}
inline const std::string& SS2C_PARTY_START_LOBBY_EMOTE_NOT::_internal_lobbyemoteid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lobbyemoteid_.Get();
}
inline void SS2C_PARTY_START_LOBBY_EMOTE_NOT::_internal_set_lobbyemoteid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lobbyemoteid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_START_LOBBY_EMOTE_NOT::_internal_mutable_lobbyemoteid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.lobbyemoteid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_START_LOBBY_EMOTE_NOT::release_lobbyemoteid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT.lobbyEmoteId)
  return _impl_.lobbyemoteid_.Release();
}
inline void SS2C_PARTY_START_LOBBY_EMOTE_NOT::set_allocated_lobbyemoteid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lobbyemoteid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lobbyemoteid_.IsDefault()) {
          _impl_.lobbyemoteid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_START_LOBBY_EMOTE_NOT.lobbyEmoteId)
}

// -------------------------------------------------------------------

// SS2C_PARTY_GEAR_SCORE_CHANGE_NOT

// string accountId = 1;
inline void SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_GEAR_SCORE_CHANGE_NOT.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_GEAR_SCORE_CHANGE_NOT.accountId)
}
inline std::string* SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_GEAR_SCORE_CHANGE_NOT.accountId)
  return _s;
}
inline const std::string& SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_GEAR_SCORE_CHANGE_NOT.accountId)
  return _impl_.accountid_.Release();
}
inline void SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_GEAR_SCORE_CHANGE_NOT.accountId)
}

// string characterId = 2;
inline void SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_GEAR_SCORE_CHANGE_NOT.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_GEAR_SCORE_CHANGE_NOT.characterId)
}
inline std::string* SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_PARTY_GEAR_SCORE_CHANGE_NOT.characterId)
  return _s;
}
inline const std::string& SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_PARTY_GEAR_SCORE_CHANGE_NOT.characterId)
  return _impl_.characterid_.Release();
}
inline void SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_PARTY_GEAR_SCORE_CHANGE_NOT.characterId)
}

// uint32 gearScore = 3;
inline void SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::clear_gearscore() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gearscore_ = 0u;
}
inline ::uint32_t SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::gearscore() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_GEAR_SCORE_CHANGE_NOT.gearScore)
  return _internal_gearscore();
}
inline void SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::set_gearscore(::uint32_t value) {
  _internal_set_gearscore(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_GEAR_SCORE_CHANGE_NOT.gearScore)
}
inline ::uint32_t SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::_internal_gearscore() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gearscore_;
}
inline void SS2C_PARTY_GEAR_SCORE_CHANGE_NOT::_internal_set_gearscore(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gearscore_ = value;
}

// -------------------------------------------------------------------

// SS2C_PARTY_RANDOM_MATCHMAKING_NOT

// int32 isRandomMatchmaking = 1;
inline void SS2C_PARTY_RANDOM_MATCHMAKING_NOT::clear_israndommatchmaking() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.israndommatchmaking_ = 0;
}
inline ::int32_t SS2C_PARTY_RANDOM_MATCHMAKING_NOT::israndommatchmaking() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_PARTY_RANDOM_MATCHMAKING_NOT.isRandomMatchmaking)
  return _internal_israndommatchmaking();
}
inline void SS2C_PARTY_RANDOM_MATCHMAKING_NOT::set_israndommatchmaking(::int32_t value) {
  _internal_set_israndommatchmaking(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_PARTY_RANDOM_MATCHMAKING_NOT.isRandomMatchmaking)
}
inline ::int32_t SS2C_PARTY_RANDOM_MATCHMAKING_NOT::_internal_israndommatchmaking() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.israndommatchmaking_;
}
inline void SS2C_PARTY_RANDOM_MATCHMAKING_NOT::_internal_set_israndommatchmaking(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.israndommatchmaking_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Packet
}  // namespace DC


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::DC::Packet::PARTY_INVITE_ANSWER> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::DC::Packet::PARTY_INVITE_ANSWER>() {
  return ::DC::Packet::PARTY_INVITE_ANSWER_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Party_2eproto_2epb_2eh
