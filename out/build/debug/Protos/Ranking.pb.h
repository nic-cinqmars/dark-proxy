// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Ranking.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_Ranking_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Ranking_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "_Character.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Ranking_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Ranking_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Ranking_2eproto;
namespace DC {
namespace Packet {
class SC2S_RANKING_AP_CONFIG_REQ;
struct SC2S_RANKING_AP_CONFIG_REQDefaultTypeInternal;
extern SC2S_RANKING_AP_CONFIG_REQDefaultTypeInternal _SC2S_RANKING_AP_CONFIG_REQ_default_instance_;
class SC2S_RANKING_CHARACTER_REQ;
struct SC2S_RANKING_CHARACTER_REQDefaultTypeInternal;
extern SC2S_RANKING_CHARACTER_REQDefaultTypeInternal _SC2S_RANKING_CHARACTER_REQ_default_instance_;
class SC2S_RANKING_INFO_REQ;
struct SC2S_RANKING_INFO_REQDefaultTypeInternal;
extern SC2S_RANKING_INFO_REQDefaultTypeInternal _SC2S_RANKING_INFO_REQ_default_instance_;
class SC2S_RANKING_RANGE_REQ;
struct SC2S_RANKING_RANGE_REQDefaultTypeInternal;
extern SC2S_RANKING_RANGE_REQDefaultTypeInternal _SC2S_RANKING_RANGE_REQ_default_instance_;
class SC2S_RANKING_REWARD_GET_REQ;
struct SC2S_RANKING_REWARD_GET_REQDefaultTypeInternal;
extern SC2S_RANKING_REWARD_GET_REQDefaultTypeInternal _SC2S_RANKING_REWARD_GET_REQ_default_instance_;
class SRANKING_AP_CONFIG_RECORD;
struct SRANKING_AP_CONFIG_RECORDDefaultTypeInternal;
extern SRANKING_AP_CONFIG_RECORDDefaultTypeInternal _SRANKING_AP_CONFIG_RECORD_default_instance_;
class SRANKING_CONFIG_INFO;
struct SRANKING_CONFIG_INFODefaultTypeInternal;
extern SRANKING_CONFIG_INFODefaultTypeInternal _SRANKING_CONFIG_INFO_default_instance_;
class SRANKING_EF_CONFIG_RECORD;
struct SRANKING_EF_CONFIG_RECORDDefaultTypeInternal;
extern SRANKING_EF_CONFIG_RECORDDefaultTypeInternal _SRANKING_EF_CONFIG_RECORD_default_instance_;
class SRANKING_INFO;
struct SRANKING_INFODefaultTypeInternal;
extern SRANKING_INFODefaultTypeInternal _SRANKING_INFO_default_instance_;
class SRANKING_REWARD_INFO;
struct SRANKING_REWARD_INFODefaultTypeInternal;
extern SRANKING_REWARD_INFODefaultTypeInternal _SRANKING_REWARD_INFO_default_instance_;
class SRankRecord;
struct SRankRecordDefaultTypeInternal;
extern SRankRecordDefaultTypeInternal _SRankRecord_default_instance_;
class SS2C_RANKING_AP_CONFIG_RES;
struct SS2C_RANKING_AP_CONFIG_RESDefaultTypeInternal;
extern SS2C_RANKING_AP_CONFIG_RESDefaultTypeInternal _SS2C_RANKING_AP_CONFIG_RES_default_instance_;
class SS2C_RANKING_CHARACTER_RES;
struct SS2C_RANKING_CHARACTER_RESDefaultTypeInternal;
extern SS2C_RANKING_CHARACTER_RESDefaultTypeInternal _SS2C_RANKING_CHARACTER_RES_default_instance_;
class SS2C_RANKING_HAS_REWARD_NOT;
struct SS2C_RANKING_HAS_REWARD_NOTDefaultTypeInternal;
extern SS2C_RANKING_HAS_REWARD_NOTDefaultTypeInternal _SS2C_RANKING_HAS_REWARD_NOT_default_instance_;
class SS2C_RANKING_INFO_RES;
struct SS2C_RANKING_INFO_RESDefaultTypeInternal;
extern SS2C_RANKING_INFO_RESDefaultTypeInternal _SS2C_RANKING_INFO_RES_default_instance_;
class SS2C_RANKING_RANGE_RES;
struct SS2C_RANKING_RANGE_RESDefaultTypeInternal;
extern SS2C_RANKING_RANGE_RESDefaultTypeInternal _SS2C_RANKING_RANGE_RES_default_instance_;
class SS2C_RANKING_REWARD_GET_RES;
struct SS2C_RANKING_REWARD_GET_RESDefaultTypeInternal;
extern SS2C_RANKING_REWARD_GET_RESDefaultTypeInternal _SS2C_RANKING_REWARD_GET_RES_default_instance_;
}  // namespace Packet
}  // namespace DC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace DC {
namespace Packet {
enum SRANKING_REWARD_INFO_REWARD_STATE : int {
  SRANKING_REWARD_INFO_REWARD_STATE_REWARD_STATE_NONE = 0,
  SRANKING_REWARD_INFO_REWARD_STATE_ACTIVE = 1,
  SRANKING_REWARD_INFO_REWARD_STATE_RECEIVED = 2,
  SRANKING_REWARD_INFO_REWARD_STATE_FINISHED = 3,
  SRANKING_REWARD_INFO_REWARD_STATE_SRANKING_REWARD_INFO_REWARD_STATE_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SRANKING_REWARD_INFO_REWARD_STATE_SRANKING_REWARD_INFO_REWARD_STATE_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SRANKING_REWARD_INFO_REWARD_STATE_IsValid(int value);
extern const uint32_t SRANKING_REWARD_INFO_REWARD_STATE_internal_data_[];
constexpr SRANKING_REWARD_INFO_REWARD_STATE SRANKING_REWARD_INFO_REWARD_STATE_REWARD_STATE_MIN = static_cast<SRANKING_REWARD_INFO_REWARD_STATE>(0);
constexpr SRANKING_REWARD_INFO_REWARD_STATE SRANKING_REWARD_INFO_REWARD_STATE_REWARD_STATE_MAX = static_cast<SRANKING_REWARD_INFO_REWARD_STATE>(3);
constexpr int SRANKING_REWARD_INFO_REWARD_STATE_REWARD_STATE_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
SRANKING_REWARD_INFO_REWARD_STATE_descriptor();
template <typename T>
const std::string& SRANKING_REWARD_INFO_REWARD_STATE_Name(T value) {
  static_assert(std::is_same<T, SRANKING_REWARD_INFO_REWARD_STATE>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to REWARD_STATE_Name().");
  return SRANKING_REWARD_INFO_REWARD_STATE_Name(static_cast<SRANKING_REWARD_INFO_REWARD_STATE>(value));
}
template <>
inline const std::string& SRANKING_REWARD_INFO_REWARD_STATE_Name(SRANKING_REWARD_INFO_REWARD_STATE value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SRANKING_REWARD_INFO_REWARD_STATE_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool SRANKING_REWARD_INFO_REWARD_STATE_Parse(absl::string_view name, SRANKING_REWARD_INFO_REWARD_STATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SRANKING_REWARD_INFO_REWARD_STATE>(
      SRANKING_REWARD_INFO_REWARD_STATE_descriptor(), name, value);
}
enum SRANKING_INFO_STATE : int {
  SRANKING_INFO_STATE_NONE = 0,
  SRANKING_INFO_STATE_PRESEASON = 1,
  SRANKING_INFO_STATE_SEASON = 2,
  SRANKING_INFO_STATE_SRANKING_INFO_STATE_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SRANKING_INFO_STATE_SRANKING_INFO_STATE_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SRANKING_INFO_STATE_IsValid(int value);
extern const uint32_t SRANKING_INFO_STATE_internal_data_[];
constexpr SRANKING_INFO_STATE SRANKING_INFO_STATE_STATE_MIN = static_cast<SRANKING_INFO_STATE>(0);
constexpr SRANKING_INFO_STATE SRANKING_INFO_STATE_STATE_MAX = static_cast<SRANKING_INFO_STATE>(2);
constexpr int SRANKING_INFO_STATE_STATE_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
SRANKING_INFO_STATE_descriptor();
template <typename T>
const std::string& SRANKING_INFO_STATE_Name(T value) {
  static_assert(std::is_same<T, SRANKING_INFO_STATE>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to STATE_Name().");
  return SRANKING_INFO_STATE_Name(static_cast<SRANKING_INFO_STATE>(value));
}
template <>
inline const std::string& SRANKING_INFO_STATE_Name(SRANKING_INFO_STATE value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SRANKING_INFO_STATE_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool SRANKING_INFO_STATE_Parse(absl::string_view name, SRANKING_INFO_STATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SRANKING_INFO_STATE>(
      SRANKING_INFO_STATE_descriptor(), name, value);
}
enum RANKING_TYPE : int {
  NONE = 0,
  TreasureCollector = 1,
  KillerOutlaw = 2,
  EscapeArtist = 3,
  VeteranAdventurer = 4,
  Slayer_Lich = 5,
  Slayer_GhostKing = 6,
  Slayer_SkeletonWarlord = 7,
  Slayer_CaveTroll = 8,
  Slayer_BossAll = 9,
  RANKING_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  RANKING_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool RANKING_TYPE_IsValid(int value);
extern const uint32_t RANKING_TYPE_internal_data_[];
constexpr RANKING_TYPE RANKING_TYPE_MIN = static_cast<RANKING_TYPE>(0);
constexpr RANKING_TYPE RANKING_TYPE_MAX = static_cast<RANKING_TYPE>(9);
constexpr int RANKING_TYPE_ARRAYSIZE = 9 + 1;
const ::google::protobuf::EnumDescriptor*
RANKING_TYPE_descriptor();
template <typename T>
const std::string& RANKING_TYPE_Name(T value) {
  static_assert(std::is_same<T, RANKING_TYPE>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to RANKING_TYPE_Name().");
  return RANKING_TYPE_Name(static_cast<RANKING_TYPE>(value));
}
template <>
inline const std::string& RANKING_TYPE_Name(RANKING_TYPE value) {
  return ::google::protobuf::internal::NameOfDenseEnum<RANKING_TYPE_descriptor,
                                                 0, 9>(
      static_cast<int>(value));
}
inline bool RANKING_TYPE_Parse(absl::string_view name, RANKING_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RANKING_TYPE>(
      RANKING_TYPE_descriptor(), name, value);
}
enum CONTENT_TYPE : int {
  NONE_CONTENT = 0,
  TREASURE_COLLECTOR = 1,
  KILLER_OUTLAW = 2,
  ESCAPE_ARTIST = 3,
  VETERAN_ADVENTURER = 4,
  SLAYER = 5,
  CONTENT_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CONTENT_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CONTENT_TYPE_IsValid(int value);
extern const uint32_t CONTENT_TYPE_internal_data_[];
constexpr CONTENT_TYPE CONTENT_TYPE_MIN = static_cast<CONTENT_TYPE>(0);
constexpr CONTENT_TYPE CONTENT_TYPE_MAX = static_cast<CONTENT_TYPE>(5);
constexpr int CONTENT_TYPE_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
CONTENT_TYPE_descriptor();
template <typename T>
const std::string& CONTENT_TYPE_Name(T value) {
  static_assert(std::is_same<T, CONTENT_TYPE>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CONTENT_TYPE_Name().");
  return CONTENT_TYPE_Name(static_cast<CONTENT_TYPE>(value));
}
template <>
inline const std::string& CONTENT_TYPE_Name(CONTENT_TYPE value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CONTENT_TYPE_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool CONTENT_TYPE_Parse(absl::string_view name, CONTENT_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CONTENT_TYPE>(
      CONTENT_TYPE_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SS2C_RANKING_REWARD_GET_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_RANKING_REWARD_GET_RES) */ {
 public:
  inline SS2C_RANKING_REWARD_GET_RES() : SS2C_RANKING_REWARD_GET_RES(nullptr) {}
  ~SS2C_RANKING_REWARD_GET_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_RANKING_REWARD_GET_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_RANKING_REWARD_GET_RES(const SS2C_RANKING_REWARD_GET_RES& from) : SS2C_RANKING_REWARD_GET_RES(nullptr, from) {}
  inline SS2C_RANKING_REWARD_GET_RES(SS2C_RANKING_REWARD_GET_RES&& from) noexcept
      : SS2C_RANKING_REWARD_GET_RES(nullptr, std::move(from)) {}
  inline SS2C_RANKING_REWARD_GET_RES& operator=(const SS2C_RANKING_REWARD_GET_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_RANKING_REWARD_GET_RES& operator=(SS2C_RANKING_REWARD_GET_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_RANKING_REWARD_GET_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_RANKING_REWARD_GET_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_RANKING_REWARD_GET_RES*>(
        &_SS2C_RANKING_REWARD_GET_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(SS2C_RANKING_REWARD_GET_RES& a, SS2C_RANKING_REWARD_GET_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_RANKING_REWARD_GET_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_RANKING_REWARD_GET_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_RANKING_REWARD_GET_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_RANKING_REWARD_GET_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_RANKING_REWARD_GET_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_RANKING_REWARD_GET_RES& from) { SS2C_RANKING_REWARD_GET_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_RANKING_REWARD_GET_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_RANKING_REWARD_GET_RES"; }

 protected:
  explicit SS2C_RANKING_REWARD_GET_RES(::google::protobuf::Arena* arena);
  SS2C_RANKING_REWARD_GET_RES(::google::protobuf::Arena* arena, const SS2C_RANKING_REWARD_GET_RES& from);
  SS2C_RANKING_REWARD_GET_RES(::google::protobuf::Arena* arena, SS2C_RANKING_REWARD_GET_RES&& from) noexcept
      : SS2C_RANKING_REWARD_GET_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // int32 result = 1;
  void clear_result() ;
  ::int32_t result() const;
  void set_result(::int32_t value);

  private:
  ::int32_t _internal_result() const;
  void _internal_set_result(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_RANKING_REWARD_GET_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_RANKING_REWARD_GET_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_RANKING_REWARD_GET_RES& from_msg);
    ::int32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Ranking_2eproto;
};
// -------------------------------------------------------------------

class SS2C_RANKING_HAS_REWARD_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_RANKING_HAS_REWARD_NOT) */ {
 public:
  inline SS2C_RANKING_HAS_REWARD_NOT() : SS2C_RANKING_HAS_REWARD_NOT(nullptr) {}
  ~SS2C_RANKING_HAS_REWARD_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_RANKING_HAS_REWARD_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_RANKING_HAS_REWARD_NOT(const SS2C_RANKING_HAS_REWARD_NOT& from) : SS2C_RANKING_HAS_REWARD_NOT(nullptr, from) {}
  inline SS2C_RANKING_HAS_REWARD_NOT(SS2C_RANKING_HAS_REWARD_NOT&& from) noexcept
      : SS2C_RANKING_HAS_REWARD_NOT(nullptr, std::move(from)) {}
  inline SS2C_RANKING_HAS_REWARD_NOT& operator=(const SS2C_RANKING_HAS_REWARD_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_RANKING_HAS_REWARD_NOT& operator=(SS2C_RANKING_HAS_REWARD_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_RANKING_HAS_REWARD_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_RANKING_HAS_REWARD_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_RANKING_HAS_REWARD_NOT*>(
        &_SS2C_RANKING_HAS_REWARD_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(SS2C_RANKING_HAS_REWARD_NOT& a, SS2C_RANKING_HAS_REWARD_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_RANKING_HAS_REWARD_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_RANKING_HAS_REWARD_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_RANKING_HAS_REWARD_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_RANKING_HAS_REWARD_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_RANKING_HAS_REWARD_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_RANKING_HAS_REWARD_NOT& from) { SS2C_RANKING_HAS_REWARD_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_RANKING_HAS_REWARD_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_RANKING_HAS_REWARD_NOT"; }

 protected:
  explicit SS2C_RANKING_HAS_REWARD_NOT(::google::protobuf::Arena* arena);
  SS2C_RANKING_HAS_REWARD_NOT(::google::protobuf::Arena* arena, const SS2C_RANKING_HAS_REWARD_NOT& from);
  SS2C_RANKING_HAS_REWARD_NOT(::google::protobuf::Arena* arena, SS2C_RANKING_HAS_REWARD_NOT&& from) noexcept
      : SS2C_RANKING_HAS_REWARD_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsHasRewardFieldNumber = 1,
  };
  // int32 isHasReward = 1;
  void clear_ishasreward() ;
  ::int32_t ishasreward() const;
  void set_ishasreward(::int32_t value);

  private:
  ::int32_t _internal_ishasreward() const;
  void _internal_set_ishasreward(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_RANKING_HAS_REWARD_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_RANKING_HAS_REWARD_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_RANKING_HAS_REWARD_NOT& from_msg);
    ::int32_t ishasreward_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Ranking_2eproto;
};
// -------------------------------------------------------------------

class SRANKING_REWARD_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SRANKING_REWARD_INFO) */ {
 public:
  inline SRANKING_REWARD_INFO() : SRANKING_REWARD_INFO(nullptr) {}
  ~SRANKING_REWARD_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SRANKING_REWARD_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline SRANKING_REWARD_INFO(const SRANKING_REWARD_INFO& from) : SRANKING_REWARD_INFO(nullptr, from) {}
  inline SRANKING_REWARD_INFO(SRANKING_REWARD_INFO&& from) noexcept
      : SRANKING_REWARD_INFO(nullptr, std::move(from)) {}
  inline SRANKING_REWARD_INFO& operator=(const SRANKING_REWARD_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRANKING_REWARD_INFO& operator=(SRANKING_REWARD_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SRANKING_REWARD_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const SRANKING_REWARD_INFO* internal_default_instance() {
    return reinterpret_cast<const SRANKING_REWARD_INFO*>(
        &_SRANKING_REWARD_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SRANKING_REWARD_INFO& a, SRANKING_REWARD_INFO& b) { a.Swap(&b); }
  inline void Swap(SRANKING_REWARD_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SRANKING_REWARD_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SRANKING_REWARD_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SRANKING_REWARD_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SRANKING_REWARD_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SRANKING_REWARD_INFO& from) { SRANKING_REWARD_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SRANKING_REWARD_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SRANKING_REWARD_INFO"; }

 protected:
  explicit SRANKING_REWARD_INFO(::google::protobuf::Arena* arena);
  SRANKING_REWARD_INFO(::google::protobuf::Arena* arena, const SRANKING_REWARD_INFO& from);
  SRANKING_REWARD_INFO(::google::protobuf::Arena* arena, SRANKING_REWARD_INFO&& from) noexcept
      : SRANKING_REWARD_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using REWARD_STATE = SRANKING_REWARD_INFO_REWARD_STATE;
  static constexpr REWARD_STATE REWARD_STATE_NONE = SRANKING_REWARD_INFO_REWARD_STATE_REWARD_STATE_NONE;
  static constexpr REWARD_STATE ACTIVE = SRANKING_REWARD_INFO_REWARD_STATE_ACTIVE;
  static constexpr REWARD_STATE RECEIVED = SRANKING_REWARD_INFO_REWARD_STATE_RECEIVED;
  static constexpr REWARD_STATE FINISHED = SRANKING_REWARD_INFO_REWARD_STATE_FINISHED;
  static inline bool REWARD_STATE_IsValid(int value) {
    return SRANKING_REWARD_INFO_REWARD_STATE_IsValid(value);
  }
  static constexpr REWARD_STATE REWARD_STATE_MIN = SRANKING_REWARD_INFO_REWARD_STATE_REWARD_STATE_MIN;
  static constexpr REWARD_STATE REWARD_STATE_MAX = SRANKING_REWARD_INFO_REWARD_STATE_REWARD_STATE_MAX;
  static constexpr int REWARD_STATE_ARRAYSIZE = SRANKING_REWARD_INFO_REWARD_STATE_REWARD_STATE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* REWARD_STATE_descriptor() {
    return SRANKING_REWARD_INFO_REWARD_STATE_descriptor();
  }
  template <typename T>
  static inline const std::string& REWARD_STATE_Name(T value) {
    return SRANKING_REWARD_INFO_REWARD_STATE_Name(value);
  }
  static inline bool REWARD_STATE_Parse(absl::string_view name, REWARD_STATE* value) {
    return SRANKING_REWARD_INFO_REWARD_STATE_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kGroupIdFieldNumber = 1,
    kRewardStateFieldNumber = 2,
  };
  // string groupId = 1;
  void clear_groupid() ;
  const std::string& groupid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_groupid(Arg_&& arg, Args_... args);
  std::string* mutable_groupid();
  PROTOBUF_NODISCARD std::string* release_groupid();
  void set_allocated_groupid(std::string* value);

  private:
  const std::string& _internal_groupid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_groupid(
      const std::string& value);
  std::string* _internal_mutable_groupid();

  public:
  // int32 rewardState = 2;
  void clear_rewardstate() ;
  ::int32_t rewardstate() const;
  void set_rewardstate(::int32_t value);

  private:
  ::int32_t _internal_rewardstate() const;
  void _internal_set_rewardstate(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SRANKING_REWARD_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SRANKING_REWARD_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SRANKING_REWARD_INFO& from_msg);
    ::google::protobuf::internal::ArenaStringPtr groupid_;
    ::int32_t rewardstate_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Ranking_2eproto;
};
// -------------------------------------------------------------------

class SRANKING_EF_CONFIG_RECORD final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SRANKING_EF_CONFIG_RECORD) */ {
 public:
  inline SRANKING_EF_CONFIG_RECORD() : SRANKING_EF_CONFIG_RECORD(nullptr) {}
  ~SRANKING_EF_CONFIG_RECORD() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SRANKING_EF_CONFIG_RECORD(
      ::google::protobuf::internal::ConstantInitialized);

  inline SRANKING_EF_CONFIG_RECORD(const SRANKING_EF_CONFIG_RECORD& from) : SRANKING_EF_CONFIG_RECORD(nullptr, from) {}
  inline SRANKING_EF_CONFIG_RECORD(SRANKING_EF_CONFIG_RECORD&& from) noexcept
      : SRANKING_EF_CONFIG_RECORD(nullptr, std::move(from)) {}
  inline SRANKING_EF_CONFIG_RECORD& operator=(const SRANKING_EF_CONFIG_RECORD& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRANKING_EF_CONFIG_RECORD& operator=(SRANKING_EF_CONFIG_RECORD&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SRANKING_EF_CONFIG_RECORD& default_instance() {
    return *internal_default_instance();
  }
  static inline const SRANKING_EF_CONFIG_RECORD* internal_default_instance() {
    return reinterpret_cast<const SRANKING_EF_CONFIG_RECORD*>(
        &_SRANKING_EF_CONFIG_RECORD_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(SRANKING_EF_CONFIG_RECORD& a, SRANKING_EF_CONFIG_RECORD& b) { a.Swap(&b); }
  inline void Swap(SRANKING_EF_CONFIG_RECORD* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SRANKING_EF_CONFIG_RECORD* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SRANKING_EF_CONFIG_RECORD* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SRANKING_EF_CONFIG_RECORD>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SRANKING_EF_CONFIG_RECORD& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SRANKING_EF_CONFIG_RECORD& from) { SRANKING_EF_CONFIG_RECORD::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SRANKING_EF_CONFIG_RECORD* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SRANKING_EF_CONFIG_RECORD"; }

 protected:
  explicit SRANKING_EF_CONFIG_RECORD(::google::protobuf::Arena* arena);
  SRANKING_EF_CONFIG_RECORD(::google::protobuf::Arena* arena, const SRANKING_EF_CONFIG_RECORD& from);
  SRANKING_EF_CONFIG_RECORD(::google::protobuf::Arena* arena, SRANKING_EF_CONFIG_RECORD&& from) noexcept
      : SRANKING_EF_CONFIG_RECORD(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRankEFIdFieldNumber = 1,
    kEntranceFeeFieldNumber = 2,
  };
  // string rankEFId = 1;
  void clear_rankefid() ;
  const std::string& rankefid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rankefid(Arg_&& arg, Args_... args);
  std::string* mutable_rankefid();
  PROTOBUF_NODISCARD std::string* release_rankefid();
  void set_allocated_rankefid(std::string* value);

  private:
  const std::string& _internal_rankefid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rankefid(
      const std::string& value);
  std::string* _internal_mutable_rankefid();

  public:
  // int32 entranceFee = 2;
  void clear_entrancefee() ;
  ::int32_t entrancefee() const;
  void set_entrancefee(::int32_t value);

  private:
  ::int32_t _internal_entrancefee() const;
  void _internal_set_entrancefee(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SRANKING_EF_CONFIG_RECORD)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      52, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SRANKING_EF_CONFIG_RECORD_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SRANKING_EF_CONFIG_RECORD& from_msg);
    ::google::protobuf::internal::ArenaStringPtr rankefid_;
    ::int32_t entrancefee_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Ranking_2eproto;
};
// -------------------------------------------------------------------

class SRANKING_AP_CONFIG_RECORD final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SRANKING_AP_CONFIG_RECORD) */ {
 public:
  inline SRANKING_AP_CONFIG_RECORD() : SRANKING_AP_CONFIG_RECORD(nullptr) {}
  ~SRANKING_AP_CONFIG_RECORD() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SRANKING_AP_CONFIG_RECORD(
      ::google::protobuf::internal::ConstantInitialized);

  inline SRANKING_AP_CONFIG_RECORD(const SRANKING_AP_CONFIG_RECORD& from) : SRANKING_AP_CONFIG_RECORD(nullptr, from) {}
  inline SRANKING_AP_CONFIG_RECORD(SRANKING_AP_CONFIG_RECORD&& from) noexcept
      : SRANKING_AP_CONFIG_RECORD(nullptr, std::move(from)) {}
  inline SRANKING_AP_CONFIG_RECORD& operator=(const SRANKING_AP_CONFIG_RECORD& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRANKING_AP_CONFIG_RECORD& operator=(SRANKING_AP_CONFIG_RECORD&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SRANKING_AP_CONFIG_RECORD& default_instance() {
    return *internal_default_instance();
  }
  static inline const SRANKING_AP_CONFIG_RECORD* internal_default_instance() {
    return reinterpret_cast<const SRANKING_AP_CONFIG_RECORD*>(
        &_SRANKING_AP_CONFIG_RECORD_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(SRANKING_AP_CONFIG_RECORD& a, SRANKING_AP_CONFIG_RECORD& b) { a.Swap(&b); }
  inline void Swap(SRANKING_AP_CONFIG_RECORD* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SRANKING_AP_CONFIG_RECORD* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SRANKING_AP_CONFIG_RECORD* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SRANKING_AP_CONFIG_RECORD>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SRANKING_AP_CONFIG_RECORD& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SRANKING_AP_CONFIG_RECORD& from) { SRANKING_AP_CONFIG_RECORD::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SRANKING_AP_CONFIG_RECORD* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SRANKING_AP_CONFIG_RECORD"; }

 protected:
  explicit SRANKING_AP_CONFIG_RECORD(::google::protobuf::Arena* arena);
  SRANKING_AP_CONFIG_RECORD(::google::protobuf::Arena* arena, const SRANKING_AP_CONFIG_RECORD& from);
  SRANKING_AP_CONFIG_RECORD(::google::protobuf::Arena* arena, SRANKING_AP_CONFIG_RECORD&& from) noexcept
      : SRANKING_AP_CONFIG_RECORD(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRankAPIdFieldNumber = 1,
    kRequiredTotalAPFieldNumber = 2,
  };
  // string rankAPId = 1;
  void clear_rankapid() ;
  const std::string& rankapid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rankapid(Arg_&& arg, Args_... args);
  std::string* mutable_rankapid();
  PROTOBUF_NODISCARD std::string* release_rankapid();
  void set_allocated_rankapid(std::string* value);

  private:
  const std::string& _internal_rankapid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rankapid(
      const std::string& value);
  std::string* _internal_mutable_rankapid();

  public:
  // int32 requiredTotalAP = 2;
  void clear_requiredtotalap() ;
  ::int32_t requiredtotalap() const;
  void set_requiredtotalap(::int32_t value);

  private:
  ::int32_t _internal_requiredtotalap() const;
  void _internal_set_requiredtotalap(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SRANKING_AP_CONFIG_RECORD)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      52, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SRANKING_AP_CONFIG_RECORD_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SRANKING_AP_CONFIG_RECORD& from_msg);
    ::google::protobuf::internal::ArenaStringPtr rankapid_;
    ::int32_t requiredtotalap_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Ranking_2eproto;
};
// -------------------------------------------------------------------

class SC2S_RANKING_REWARD_GET_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_RANKING_REWARD_GET_REQ) */ {
 public:
  inline SC2S_RANKING_REWARD_GET_REQ() : SC2S_RANKING_REWARD_GET_REQ(nullptr) {}
  ~SC2S_RANKING_REWARD_GET_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_RANKING_REWARD_GET_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_RANKING_REWARD_GET_REQ(const SC2S_RANKING_REWARD_GET_REQ& from) : SC2S_RANKING_REWARD_GET_REQ(nullptr, from) {}
  inline SC2S_RANKING_REWARD_GET_REQ(SC2S_RANKING_REWARD_GET_REQ&& from) noexcept
      : SC2S_RANKING_REWARD_GET_REQ(nullptr, std::move(from)) {}
  inline SC2S_RANKING_REWARD_GET_REQ& operator=(const SC2S_RANKING_REWARD_GET_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_RANKING_REWARD_GET_REQ& operator=(SC2S_RANKING_REWARD_GET_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_RANKING_REWARD_GET_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_RANKING_REWARD_GET_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_RANKING_REWARD_GET_REQ*>(
        &_SC2S_RANKING_REWARD_GET_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SC2S_RANKING_REWARD_GET_REQ& a, SC2S_RANKING_REWARD_GET_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_RANKING_REWARD_GET_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_RANKING_REWARD_GET_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_RANKING_REWARD_GET_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_RANKING_REWARD_GET_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_RANKING_REWARD_GET_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_RANKING_REWARD_GET_REQ& from) { SC2S_RANKING_REWARD_GET_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_RANKING_REWARD_GET_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_RANKING_REWARD_GET_REQ"; }

 protected:
  explicit SC2S_RANKING_REWARD_GET_REQ(::google::protobuf::Arena* arena);
  SC2S_RANKING_REWARD_GET_REQ(::google::protobuf::Arena* arena, const SC2S_RANKING_REWARD_GET_REQ& from);
  SC2S_RANKING_REWARD_GET_REQ(::google::protobuf::Arena* arena, SC2S_RANKING_REWARD_GET_REQ&& from) noexcept
      : SC2S_RANKING_REWARD_GET_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSeasonIdFieldNumber = 1,
    kGroupIdFieldNumber = 2,
  };
  // string seasonId = 1;
  void clear_seasonid() ;
  const std::string& seasonid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_seasonid(Arg_&& arg, Args_... args);
  std::string* mutable_seasonid();
  PROTOBUF_NODISCARD std::string* release_seasonid();
  void set_allocated_seasonid(std::string* value);

  private:
  const std::string& _internal_seasonid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_seasonid(
      const std::string& value);
  std::string* _internal_mutable_seasonid();

  public:
  // string groupId = 2;
  void clear_groupid() ;
  const std::string& groupid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_groupid(Arg_&& arg, Args_... args);
  std::string* mutable_groupid();
  PROTOBUF_NODISCARD std::string* release_groupid();
  void set_allocated_groupid(std::string* value);

  private:
  const std::string& _internal_groupid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_groupid(
      const std::string& value);
  std::string* _internal_mutable_groupid();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_RANKING_REWARD_GET_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      61, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_RANKING_REWARD_GET_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_RANKING_REWARD_GET_REQ& from_msg);
    ::google::protobuf::internal::ArenaStringPtr seasonid_;
    ::google::protobuf::internal::ArenaStringPtr groupid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Ranking_2eproto;
};
// -------------------------------------------------------------------

class SC2S_RANKING_RANGE_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_RANKING_RANGE_REQ) */ {
 public:
  inline SC2S_RANKING_RANGE_REQ() : SC2S_RANKING_RANGE_REQ(nullptr) {}
  ~SC2S_RANKING_RANGE_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_RANKING_RANGE_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_RANKING_RANGE_REQ(const SC2S_RANKING_RANGE_REQ& from) : SC2S_RANKING_RANGE_REQ(nullptr, from) {}
  inline SC2S_RANKING_RANGE_REQ(SC2S_RANKING_RANGE_REQ&& from) noexcept
      : SC2S_RANKING_RANGE_REQ(nullptr, std::move(from)) {}
  inline SC2S_RANKING_RANGE_REQ& operator=(const SC2S_RANKING_RANGE_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_RANKING_RANGE_REQ& operator=(SC2S_RANKING_RANGE_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_RANKING_RANGE_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_RANKING_RANGE_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_RANKING_RANGE_REQ*>(
        &_SC2S_RANKING_RANGE_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SC2S_RANKING_RANGE_REQ& a, SC2S_RANKING_RANGE_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_RANKING_RANGE_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_RANKING_RANGE_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_RANKING_RANGE_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_RANKING_RANGE_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_RANKING_RANGE_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_RANKING_RANGE_REQ& from) { SC2S_RANKING_RANGE_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_RANKING_RANGE_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_RANKING_RANGE_REQ"; }

 protected:
  explicit SC2S_RANKING_RANGE_REQ(::google::protobuf::Arena* arena);
  SC2S_RANKING_RANGE_REQ(::google::protobuf::Arena* arena, const SC2S_RANKING_RANGE_REQ& from);
  SC2S_RANKING_RANGE_REQ(::google::protobuf::Arena* arena, SC2S_RANKING_RANGE_REQ&& from) noexcept
      : SC2S_RANKING_RANGE_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSeasonIdFieldNumber = 1,
    kSheetIdFieldNumber = 2,
    kContentIdFieldNumber = 3,
    kCharacterClassFieldNumber = 6,
    kStartIndexFieldNumber = 4,
    kEndIndexFieldNumber = 5,
  };
  // string seasonId = 1;
  void clear_seasonid() ;
  const std::string& seasonid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_seasonid(Arg_&& arg, Args_... args);
  std::string* mutable_seasonid();
  PROTOBUF_NODISCARD std::string* release_seasonid();
  void set_allocated_seasonid(std::string* value);

  private:
  const std::string& _internal_seasonid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_seasonid(
      const std::string& value);
  std::string* _internal_mutable_seasonid();

  public:
  // string sheetId = 2;
  void clear_sheetid() ;
  const std::string& sheetid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sheetid(Arg_&& arg, Args_... args);
  std::string* mutable_sheetid();
  PROTOBUF_NODISCARD std::string* release_sheetid();
  void set_allocated_sheetid(std::string* value);

  private:
  const std::string& _internal_sheetid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sheetid(
      const std::string& value);
  std::string* _internal_mutable_sheetid();

  public:
  // string contentId = 3;
  void clear_contentid() ;
  const std::string& contentid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contentid(Arg_&& arg, Args_... args);
  std::string* mutable_contentid();
  PROTOBUF_NODISCARD std::string* release_contentid();
  void set_allocated_contentid(std::string* value);

  private:
  const std::string& _internal_contentid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contentid(
      const std::string& value);
  std::string* _internal_mutable_contentid();

  public:
  // string characterClass = 6;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // uint32 startIndex = 4;
  void clear_startindex() ;
  ::uint32_t startindex() const;
  void set_startindex(::uint32_t value);

  private:
  ::uint32_t _internal_startindex() const;
  void _internal_set_startindex(::uint32_t value);

  public:
  // uint32 endIndex = 5;
  void clear_endindex() ;
  ::uint32_t endindex() const;
  void set_endindex(::uint32_t value);

  private:
  ::uint32_t _internal_endindex() const;
  void _internal_set_endindex(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_RANKING_RANGE_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      79, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_RANKING_RANGE_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_RANKING_RANGE_REQ& from_msg);
    ::google::protobuf::internal::ArenaStringPtr seasonid_;
    ::google::protobuf::internal::ArenaStringPtr sheetid_;
    ::google::protobuf::internal::ArenaStringPtr contentid_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::uint32_t startindex_;
    ::uint32_t endindex_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Ranking_2eproto;
};
// -------------------------------------------------------------------

class SC2S_RANKING_INFO_REQ final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_RANKING_INFO_REQ) */ {
 public:
  inline SC2S_RANKING_INFO_REQ() : SC2S_RANKING_INFO_REQ(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_RANKING_INFO_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_RANKING_INFO_REQ(const SC2S_RANKING_INFO_REQ& from) : SC2S_RANKING_INFO_REQ(nullptr, from) {}
  inline SC2S_RANKING_INFO_REQ(SC2S_RANKING_INFO_REQ&& from) noexcept
      : SC2S_RANKING_INFO_REQ(nullptr, std::move(from)) {}
  inline SC2S_RANKING_INFO_REQ& operator=(const SC2S_RANKING_INFO_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_RANKING_INFO_REQ& operator=(SC2S_RANKING_INFO_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_RANKING_INFO_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_RANKING_INFO_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_RANKING_INFO_REQ*>(
        &_SC2S_RANKING_INFO_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SC2S_RANKING_INFO_REQ& a, SC2S_RANKING_INFO_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_RANKING_INFO_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_RANKING_INFO_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_RANKING_INFO_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SC2S_RANKING_INFO_REQ>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SC2S_RANKING_INFO_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SC2S_RANKING_INFO_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_RANKING_INFO_REQ"; }

 protected:
  explicit SC2S_RANKING_INFO_REQ(::google::protobuf::Arena* arena);
  SC2S_RANKING_INFO_REQ(::google::protobuf::Arena* arena, const SC2S_RANKING_INFO_REQ& from);
  SC2S_RANKING_INFO_REQ(::google::protobuf::Arena* arena, SC2S_RANKING_INFO_REQ&& from) noexcept
      : SC2S_RANKING_INFO_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_RANKING_INFO_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_RANKING_INFO_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_RANKING_INFO_REQ& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Ranking_2eproto;
};
// -------------------------------------------------------------------

class SC2S_RANKING_AP_CONFIG_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_RANKING_AP_CONFIG_REQ) */ {
 public:
  inline SC2S_RANKING_AP_CONFIG_REQ() : SC2S_RANKING_AP_CONFIG_REQ(nullptr) {}
  ~SC2S_RANKING_AP_CONFIG_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_RANKING_AP_CONFIG_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_RANKING_AP_CONFIG_REQ(const SC2S_RANKING_AP_CONFIG_REQ& from) : SC2S_RANKING_AP_CONFIG_REQ(nullptr, from) {}
  inline SC2S_RANKING_AP_CONFIG_REQ(SC2S_RANKING_AP_CONFIG_REQ&& from) noexcept
      : SC2S_RANKING_AP_CONFIG_REQ(nullptr, std::move(from)) {}
  inline SC2S_RANKING_AP_CONFIG_REQ& operator=(const SC2S_RANKING_AP_CONFIG_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_RANKING_AP_CONFIG_REQ& operator=(SC2S_RANKING_AP_CONFIG_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_RANKING_AP_CONFIG_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_RANKING_AP_CONFIG_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_RANKING_AP_CONFIG_REQ*>(
        &_SC2S_RANKING_AP_CONFIG_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(SC2S_RANKING_AP_CONFIG_REQ& a, SC2S_RANKING_AP_CONFIG_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_RANKING_AP_CONFIG_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_RANKING_AP_CONFIG_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_RANKING_AP_CONFIG_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_RANKING_AP_CONFIG_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_RANKING_AP_CONFIG_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_RANKING_AP_CONFIG_REQ& from) { SC2S_RANKING_AP_CONFIG_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_RANKING_AP_CONFIG_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_RANKING_AP_CONFIG_REQ"; }

 protected:
  explicit SC2S_RANKING_AP_CONFIG_REQ(::google::protobuf::Arena* arena);
  SC2S_RANKING_AP_CONFIG_REQ(::google::protobuf::Arena* arena, const SC2S_RANKING_AP_CONFIG_REQ& from);
  SC2S_RANKING_AP_CONFIG_REQ(::google::protobuf::Arena* arena, SC2S_RANKING_AP_CONFIG_REQ&& from) noexcept
      : SC2S_RANKING_AP_CONFIG_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDungeonTagIdFieldNumber = 2,
    kGameTypeFieldNumber = 1,
  };
  // string dungeonTagId = 2;
  void clear_dungeontagid() ;
  const std::string& dungeontagid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dungeontagid(Arg_&& arg, Args_... args);
  std::string* mutable_dungeontagid();
  PROTOBUF_NODISCARD std::string* release_dungeontagid();
  void set_allocated_dungeontagid(std::string* value);

  private:
  const std::string& _internal_dungeontagid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dungeontagid(
      const std::string& value);
  std::string* _internal_mutable_dungeontagid();

  public:
  // int32 gameType = 1;
  void clear_gametype() ;
  ::int32_t gametype() const;
  void set_gametype(::int32_t value);

  private:
  ::int32_t _internal_gametype() const;
  void _internal_set_gametype(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_RANKING_AP_CONFIG_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_RANKING_AP_CONFIG_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_RANKING_AP_CONFIG_REQ& from_msg);
    ::google::protobuf::internal::ArenaStringPtr dungeontagid_;
    ::int32_t gametype_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Ranking_2eproto;
};
// -------------------------------------------------------------------

class SRankRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SRankRecord) */ {
 public:
  inline SRankRecord() : SRankRecord(nullptr) {}
  ~SRankRecord() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SRankRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline SRankRecord(const SRankRecord& from) : SRankRecord(nullptr, from) {}
  inline SRankRecord(SRankRecord&& from) noexcept
      : SRankRecord(nullptr, std::move(from)) {}
  inline SRankRecord& operator=(const SRankRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRankRecord& operator=(SRankRecord&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SRankRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const SRankRecord* internal_default_instance() {
    return reinterpret_cast<const SRankRecord*>(
        &_SRankRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SRankRecord& a, SRankRecord& b) { a.Swap(&b); }
  inline void Swap(SRankRecord* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SRankRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SRankRecord* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SRankRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SRankRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SRankRecord& from) { SRankRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SRankRecord* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SRankRecord"; }

 protected:
  explicit SRankRecord(::google::protobuf::Arena* arena);
  SRankRecord(::google::protobuf::Arena* arena, const SRankRecord& from);
  SRankRecord(::google::protobuf::Arena* arena, SRankRecord&& from) noexcept
      : SRankRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 5,
    kCharacterClassFieldNumber = 7,
    kNickNameFieldNumber = 6,
    kPageIndexFieldNumber = 1,
    kRankFieldNumber = 2,
    kScoreFieldNumber = 3,
    kPercentageFieldNumber = 4,
  };
  // string accountId = 5;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterClass = 7;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 6;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // uint32 pageIndex = 1;
  void clear_pageindex() ;
  ::uint32_t pageindex() const;
  void set_pageindex(::uint32_t value);

  private:
  ::uint32_t _internal_pageindex() const;
  void _internal_set_pageindex(::uint32_t value);

  public:
  // uint32 rank = 2;
  void clear_rank() ;
  ::uint32_t rank() const;
  void set_rank(::uint32_t value);

  private:
  ::uint32_t _internal_rank() const;
  void _internal_set_rank(::uint32_t value);

  public:
  // uint32 score = 3;
  void clear_score() ;
  ::uint32_t score() const;
  void set_score(::uint32_t value);

  private:
  ::uint32_t _internal_score() const;
  void _internal_set_score(::uint32_t value);

  public:
  // float percentage = 4;
  void clear_percentage() ;
  float percentage() const;
  void set_percentage(float value);

  private:
  float _internal_percentage() const;
  void _internal_set_percentage(float value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SRankRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      53, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SRankRecord_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SRankRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    ::uint32_t pageindex_;
    ::uint32_t rank_;
    ::uint32_t score_;
    float percentage_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Ranking_2eproto;
};
// -------------------------------------------------------------------

class SRANKING_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SRANKING_INFO) */ {
 public:
  inline SRANKING_INFO() : SRANKING_INFO(nullptr) {}
  ~SRANKING_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SRANKING_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline SRANKING_INFO(const SRANKING_INFO& from) : SRANKING_INFO(nullptr, from) {}
  inline SRANKING_INFO(SRANKING_INFO&& from) noexcept
      : SRANKING_INFO(nullptr, std::move(from)) {}
  inline SRANKING_INFO& operator=(const SRANKING_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRANKING_INFO& operator=(SRANKING_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SRANKING_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const SRANKING_INFO* internal_default_instance() {
    return reinterpret_cast<const SRANKING_INFO*>(
        &_SRANKING_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SRANKING_INFO& a, SRANKING_INFO& b) { a.Swap(&b); }
  inline void Swap(SRANKING_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SRANKING_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SRANKING_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SRANKING_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SRANKING_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SRANKING_INFO& from) { SRANKING_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SRANKING_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SRANKING_INFO"; }

 protected:
  explicit SRANKING_INFO(::google::protobuf::Arena* arena);
  SRANKING_INFO(::google::protobuf::Arena* arena, const SRANKING_INFO& from);
  SRANKING_INFO(::google::protobuf::Arena* arena, SRANKING_INFO&& from) noexcept
      : SRANKING_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using STATE = SRANKING_INFO_STATE;
  static constexpr STATE NONE = SRANKING_INFO_STATE_NONE;
  static constexpr STATE PRESEASON = SRANKING_INFO_STATE_PRESEASON;
  static constexpr STATE SEASON = SRANKING_INFO_STATE_SEASON;
  static inline bool STATE_IsValid(int value) {
    return SRANKING_INFO_STATE_IsValid(value);
  }
  static constexpr STATE STATE_MIN = SRANKING_INFO_STATE_STATE_MIN;
  static constexpr STATE STATE_MAX = SRANKING_INFO_STATE_STATE_MAX;
  static constexpr int STATE_ARRAYSIZE = SRANKING_INFO_STATE_STATE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* STATE_descriptor() {
    return SRANKING_INFO_STATE_descriptor();
  }
  template <typename T>
  static inline const std::string& STATE_Name(T value) {
    return SRANKING_INFO_STATE_Name(value);
  }
  static inline bool STATE_Parse(absl::string_view name, STATE* value) {
    return SRANKING_INFO_STATE_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kRankInfoFieldNumber = 11,
    kRewardInfosFieldNumber = 12,
    kSeasonIdFieldNumber = 2,
    kBeginDateFieldNumber = 3,
    kBeginTimeFieldNumber = 4,
    kEndDateFieldNumber = 5,
    kEndTimeFieldNumber = 6,
    kWipeDateFieldNumber = 7,
    kWipeTimeFieldNumber = 8,
    kRewardDateFieldNumber = 9,
    kRewardTimeFieldNumber = 10,
  };
  // repeated .DC.Packet.SRankUserInfo rankInfo = 11;
  int rankinfo_size() const;
  private:
  int _internal_rankinfo_size() const;

  public:
  void clear_rankinfo() ;
  ::DC::Packet::SRankUserInfo* mutable_rankinfo(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SRankUserInfo>* mutable_rankinfo();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRankUserInfo>& _internal_rankinfo() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SRankUserInfo>* _internal_mutable_rankinfo();
  public:
  const ::DC::Packet::SRankUserInfo& rankinfo(int index) const;
  ::DC::Packet::SRankUserInfo* add_rankinfo();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRankUserInfo>& rankinfo() const;
  // repeated .DC.Packet.SRANKING_REWARD_INFO rewardInfos = 12;
  int rewardinfos_size() const;
  private:
  int _internal_rewardinfos_size() const;

  public:
  void clear_rewardinfos() ;
  ::DC::Packet::SRANKING_REWARD_INFO* mutable_rewardinfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_REWARD_INFO>* mutable_rewardinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_REWARD_INFO>& _internal_rewardinfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_REWARD_INFO>* _internal_mutable_rewardinfos();
  public:
  const ::DC::Packet::SRANKING_REWARD_INFO& rewardinfos(int index) const;
  ::DC::Packet::SRANKING_REWARD_INFO* add_rewardinfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_REWARD_INFO>& rewardinfos() const;
  // string seasonId = 2;
  void clear_seasonid() ;
  const std::string& seasonid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_seasonid(Arg_&& arg, Args_... args);
  std::string* mutable_seasonid();
  PROTOBUF_NODISCARD std::string* release_seasonid();
  void set_allocated_seasonid(std::string* value);

  private:
  const std::string& _internal_seasonid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_seasonid(
      const std::string& value);
  std::string* _internal_mutable_seasonid();

  public:
  // string beginDate = 3;
  void clear_begindate() ;
  const std::string& begindate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_begindate(Arg_&& arg, Args_... args);
  std::string* mutable_begindate();
  PROTOBUF_NODISCARD std::string* release_begindate();
  void set_allocated_begindate(std::string* value);

  private:
  const std::string& _internal_begindate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_begindate(
      const std::string& value);
  std::string* _internal_mutable_begindate();

  public:
  // string beginTime = 4;
  void clear_begintime() ;
  const std::string& begintime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_begintime(Arg_&& arg, Args_... args);
  std::string* mutable_begintime();
  PROTOBUF_NODISCARD std::string* release_begintime();
  void set_allocated_begintime(std::string* value);

  private:
  const std::string& _internal_begintime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_begintime(
      const std::string& value);
  std::string* _internal_mutable_begintime();

  public:
  // string endDate = 5;
  void clear_enddate() ;
  const std::string& enddate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_enddate(Arg_&& arg, Args_... args);
  std::string* mutable_enddate();
  PROTOBUF_NODISCARD std::string* release_enddate();
  void set_allocated_enddate(std::string* value);

  private:
  const std::string& _internal_enddate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_enddate(
      const std::string& value);
  std::string* _internal_mutable_enddate();

  public:
  // string endTime = 6;
  void clear_endtime() ;
  const std::string& endtime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_endtime(Arg_&& arg, Args_... args);
  std::string* mutable_endtime();
  PROTOBUF_NODISCARD std::string* release_endtime();
  void set_allocated_endtime(std::string* value);

  private:
  const std::string& _internal_endtime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_endtime(
      const std::string& value);
  std::string* _internal_mutable_endtime();

  public:
  // string wipeDate = 7;
  void clear_wipedate() ;
  const std::string& wipedate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wipedate(Arg_&& arg, Args_... args);
  std::string* mutable_wipedate();
  PROTOBUF_NODISCARD std::string* release_wipedate();
  void set_allocated_wipedate(std::string* value);

  private:
  const std::string& _internal_wipedate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wipedate(
      const std::string& value);
  std::string* _internal_mutable_wipedate();

  public:
  // string wipeTime = 8;
  void clear_wipetime() ;
  const std::string& wipetime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wipetime(Arg_&& arg, Args_... args);
  std::string* mutable_wipetime();
  PROTOBUF_NODISCARD std::string* release_wipetime();
  void set_allocated_wipetime(std::string* value);

  private:
  const std::string& _internal_wipetime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wipetime(
      const std::string& value);
  std::string* _internal_mutable_wipetime();

  public:
  // string rewardDate = 9;
  void clear_rewarddate() ;
  const std::string& rewarddate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rewarddate(Arg_&& arg, Args_... args);
  std::string* mutable_rewarddate();
  PROTOBUF_NODISCARD std::string* release_rewarddate();
  void set_allocated_rewarddate(std::string* value);

  private:
  const std::string& _internal_rewarddate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rewarddate(
      const std::string& value);
  std::string* _internal_mutable_rewarddate();

  public:
  // string rewardTime = 10;
  void clear_rewardtime() ;
  const std::string& rewardtime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rewardtime(Arg_&& arg, Args_... args);
  std::string* mutable_rewardtime();
  PROTOBUF_NODISCARD std::string* release_rewardtime();
  void set_allocated_rewardtime(std::string* value);

  private:
  const std::string& _internal_rewardtime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rewardtime(
      const std::string& value);
  std::string* _internal_mutable_rewardtime();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SRANKING_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 2,
      116, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SRANKING_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SRANKING_INFO& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SRankUserInfo > rankinfo_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SRANKING_REWARD_INFO > rewardinfos_;
    ::google::protobuf::internal::ArenaStringPtr seasonid_;
    ::google::protobuf::internal::ArenaStringPtr begindate_;
    ::google::protobuf::internal::ArenaStringPtr begintime_;
    ::google::protobuf::internal::ArenaStringPtr enddate_;
    ::google::protobuf::internal::ArenaStringPtr endtime_;
    ::google::protobuf::internal::ArenaStringPtr wipedate_;
    ::google::protobuf::internal::ArenaStringPtr wipetime_;
    ::google::protobuf::internal::ArenaStringPtr rewarddate_;
    ::google::protobuf::internal::ArenaStringPtr rewardtime_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Ranking_2eproto;
};
// -------------------------------------------------------------------

class SRANKING_CONFIG_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SRANKING_CONFIG_INFO) */ {
 public:
  inline SRANKING_CONFIG_INFO() : SRANKING_CONFIG_INFO(nullptr) {}
  ~SRANKING_CONFIG_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SRANKING_CONFIG_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline SRANKING_CONFIG_INFO(const SRANKING_CONFIG_INFO& from) : SRANKING_CONFIG_INFO(nullptr, from) {}
  inline SRANKING_CONFIG_INFO(SRANKING_CONFIG_INFO&& from) noexcept
      : SRANKING_CONFIG_INFO(nullptr, std::move(from)) {}
  inline SRANKING_CONFIG_INFO& operator=(const SRANKING_CONFIG_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRANKING_CONFIG_INFO& operator=(SRANKING_CONFIG_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SRANKING_CONFIG_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const SRANKING_CONFIG_INFO* internal_default_instance() {
    return reinterpret_cast<const SRANKING_CONFIG_INFO*>(
        &_SRANKING_CONFIG_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(SRANKING_CONFIG_INFO& a, SRANKING_CONFIG_INFO& b) { a.Swap(&b); }
  inline void Swap(SRANKING_CONFIG_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SRANKING_CONFIG_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SRANKING_CONFIG_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SRANKING_CONFIG_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SRANKING_CONFIG_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SRANKING_CONFIG_INFO& from) { SRANKING_CONFIG_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SRANKING_CONFIG_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SRANKING_CONFIG_INFO"; }

 protected:
  explicit SRANKING_CONFIG_INFO(::google::protobuf::Arena* arena);
  SRANKING_CONFIG_INFO(::google::protobuf::Arena* arena, const SRANKING_CONFIG_INFO& from);
  SRANKING_CONFIG_INFO(::google::protobuf::Arena* arena, SRANKING_CONFIG_INFO&& from) noexcept
      : SRANKING_CONFIG_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kApRecordsFieldNumber = 3,
    kEfRecordsFieldNumber = 4,
    kDungeonIdTagFieldNumber = 2,
    kGameTypeFieldNumber = 1,
  };
  // repeated .DC.Packet.SRANKING_AP_CONFIG_RECORD apRecords = 3;
  int aprecords_size() const;
  private:
  int _internal_aprecords_size() const;

  public:
  void clear_aprecords() ;
  ::DC::Packet::SRANKING_AP_CONFIG_RECORD* mutable_aprecords(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_AP_CONFIG_RECORD>* mutable_aprecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_AP_CONFIG_RECORD>& _internal_aprecords() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_AP_CONFIG_RECORD>* _internal_mutable_aprecords();
  public:
  const ::DC::Packet::SRANKING_AP_CONFIG_RECORD& aprecords(int index) const;
  ::DC::Packet::SRANKING_AP_CONFIG_RECORD* add_aprecords();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_AP_CONFIG_RECORD>& aprecords() const;
  // repeated .DC.Packet.SRANKING_EF_CONFIG_RECORD efRecords = 4;
  int efrecords_size() const;
  private:
  int _internal_efrecords_size() const;

  public:
  void clear_efrecords() ;
  ::DC::Packet::SRANKING_EF_CONFIG_RECORD* mutable_efrecords(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_EF_CONFIG_RECORD>* mutable_efrecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_EF_CONFIG_RECORD>& _internal_efrecords() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_EF_CONFIG_RECORD>* _internal_mutable_efrecords();
  public:
  const ::DC::Packet::SRANKING_EF_CONFIG_RECORD& efrecords(int index) const;
  ::DC::Packet::SRANKING_EF_CONFIG_RECORD* add_efrecords();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_EF_CONFIG_RECORD>& efrecords() const;
  // string dungeonIdTag = 2;
  void clear_dungeonidtag() ;
  const std::string& dungeonidtag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dungeonidtag(Arg_&& arg, Args_... args);
  std::string* mutable_dungeonidtag();
  PROTOBUF_NODISCARD std::string* release_dungeonidtag();
  void set_allocated_dungeonidtag(std::string* value);

  private:
  const std::string& _internal_dungeonidtag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dungeonidtag(
      const std::string& value);
  std::string* _internal_mutable_dungeonidtag();

  public:
  // int32 gameType = 1;
  void clear_gametype() ;
  ::int32_t gametype() const;
  void set_gametype(::int32_t value);

  private:
  ::int32_t _internal_gametype() const;
  void _internal_set_gametype(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SRANKING_CONFIG_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      51, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SRANKING_CONFIG_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SRANKING_CONFIG_INFO& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SRANKING_AP_CONFIG_RECORD > aprecords_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SRANKING_EF_CONFIG_RECORD > efrecords_;
    ::google::protobuf::internal::ArenaStringPtr dungeonidtag_;
    ::int32_t gametype_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Ranking_2eproto;
};
// -------------------------------------------------------------------

class SC2S_RANKING_CHARACTER_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_RANKING_CHARACTER_REQ) */ {
 public:
  inline SC2S_RANKING_CHARACTER_REQ() : SC2S_RANKING_CHARACTER_REQ(nullptr) {}
  ~SC2S_RANKING_CHARACTER_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_RANKING_CHARACTER_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_RANKING_CHARACTER_REQ(const SC2S_RANKING_CHARACTER_REQ& from) : SC2S_RANKING_CHARACTER_REQ(nullptr, from) {}
  inline SC2S_RANKING_CHARACTER_REQ(SC2S_RANKING_CHARACTER_REQ&& from) noexcept
      : SC2S_RANKING_CHARACTER_REQ(nullptr, std::move(from)) {}
  inline SC2S_RANKING_CHARACTER_REQ& operator=(const SC2S_RANKING_CHARACTER_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_RANKING_CHARACTER_REQ& operator=(SC2S_RANKING_CHARACTER_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_RANKING_CHARACTER_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_RANKING_CHARACTER_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_RANKING_CHARACTER_REQ*>(
        &_SC2S_RANKING_CHARACTER_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SC2S_RANKING_CHARACTER_REQ& a, SC2S_RANKING_CHARACTER_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_RANKING_CHARACTER_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_RANKING_CHARACTER_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_RANKING_CHARACTER_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_RANKING_CHARACTER_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_RANKING_CHARACTER_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_RANKING_CHARACTER_REQ& from) { SC2S_RANKING_CHARACTER_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_RANKING_CHARACTER_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_RANKING_CHARACTER_REQ"; }

 protected:
  explicit SC2S_RANKING_CHARACTER_REQ(::google::protobuf::Arena* arena);
  SC2S_RANKING_CHARACTER_REQ(::google::protobuf::Arena* arena, const SC2S_RANKING_CHARACTER_REQ& from);
  SC2S_RANKING_CHARACTER_REQ(::google::protobuf::Arena* arena, SC2S_RANKING_CHARACTER_REQ&& from) noexcept
      : SC2S_RANKING_CHARACTER_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSeasonIdFieldNumber = 1,
    kSheetIdFieldNumber = 2,
    kContentIdFieldNumber = 3,
    kCharacterClassFieldNumber = 5,
    kNickNameFieldNumber = 4,
  };
  // string seasonId = 1;
  void clear_seasonid() ;
  const std::string& seasonid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_seasonid(Arg_&& arg, Args_... args);
  std::string* mutable_seasonid();
  PROTOBUF_NODISCARD std::string* release_seasonid();
  void set_allocated_seasonid(std::string* value);

  private:
  const std::string& _internal_seasonid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_seasonid(
      const std::string& value);
  std::string* _internal_mutable_seasonid();

  public:
  // string sheetId = 2;
  void clear_sheetid() ;
  const std::string& sheetid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sheetid(Arg_&& arg, Args_... args);
  std::string* mutable_sheetid();
  PROTOBUF_NODISCARD std::string* release_sheetid();
  void set_allocated_sheetid(std::string* value);

  private:
  const std::string& _internal_sheetid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sheetid(
      const std::string& value);
  std::string* _internal_mutable_sheetid();

  public:
  // string contentId = 3;
  void clear_contentid() ;
  const std::string& contentid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contentid(Arg_&& arg, Args_... args);
  std::string* mutable_contentid();
  PROTOBUF_NODISCARD std::string* release_contentid();
  void set_allocated_contentid(std::string* value);

  private:
  const std::string& _internal_contentid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contentid(
      const std::string& value);
  std::string* _internal_mutable_contentid();

  public:
  // string characterClass = 5;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 4;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_RANKING_CHARACTER_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      83, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_RANKING_CHARACTER_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_RANKING_CHARACTER_REQ& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr seasonid_;
    ::google::protobuf::internal::ArenaStringPtr sheetid_;
    ::google::protobuf::internal::ArenaStringPtr contentid_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Ranking_2eproto;
};
// -------------------------------------------------------------------

class SS2C_RANKING_RANGE_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_RANKING_RANGE_RES) */ {
 public:
  inline SS2C_RANKING_RANGE_RES() : SS2C_RANKING_RANGE_RES(nullptr) {}
  ~SS2C_RANKING_RANGE_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_RANKING_RANGE_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_RANKING_RANGE_RES(const SS2C_RANKING_RANGE_RES& from) : SS2C_RANKING_RANGE_RES(nullptr, from) {}
  inline SS2C_RANKING_RANGE_RES(SS2C_RANKING_RANGE_RES&& from) noexcept
      : SS2C_RANKING_RANGE_RES(nullptr, std::move(from)) {}
  inline SS2C_RANKING_RANGE_RES& operator=(const SS2C_RANKING_RANGE_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_RANKING_RANGE_RES& operator=(SS2C_RANKING_RANGE_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_RANKING_RANGE_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_RANKING_RANGE_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_RANKING_RANGE_RES*>(
        &_SS2C_RANKING_RANGE_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(SS2C_RANKING_RANGE_RES& a, SS2C_RANKING_RANGE_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_RANKING_RANGE_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_RANKING_RANGE_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_RANKING_RANGE_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_RANKING_RANGE_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_RANKING_RANGE_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_RANKING_RANGE_RES& from) { SS2C_RANKING_RANGE_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_RANKING_RANGE_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_RANKING_RANGE_RES"; }

 protected:
  explicit SS2C_RANKING_RANGE_RES(::google::protobuf::Arena* arena);
  SS2C_RANKING_RANGE_RES(::google::protobuf::Arena* arena, const SS2C_RANKING_RANGE_RES& from);
  SS2C_RANKING_RANGE_RES(::google::protobuf::Arena* arena, SS2C_RANKING_RANGE_RES&& from) noexcept
      : SS2C_RANKING_RANGE_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRecordsFieldNumber = 3,
    kSeasonIdFieldNumber = 2,
    kSheetIdFieldNumber = 4,
    kContentIdFieldNumber = 5,
    kCharacterClassFieldNumber = 9,
    kResultFieldNumber = 1,
    kAllRowCountFieldNumber = 6,
    kStartIndexFieldNumber = 7,
    kEndIndexFieldNumber = 8,
  };
  // repeated .DC.Packet.SRankRecord records = 3;
  int records_size() const;
  private:
  int _internal_records_size() const;

  public:
  void clear_records() ;
  ::DC::Packet::SRankRecord* mutable_records(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SRankRecord>* mutable_records();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRankRecord>& _internal_records() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SRankRecord>* _internal_mutable_records();
  public:
  const ::DC::Packet::SRankRecord& records(int index) const;
  ::DC::Packet::SRankRecord* add_records();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRankRecord>& records() const;
  // string seasonId = 2;
  void clear_seasonid() ;
  const std::string& seasonid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_seasonid(Arg_&& arg, Args_... args);
  std::string* mutable_seasonid();
  PROTOBUF_NODISCARD std::string* release_seasonid();
  void set_allocated_seasonid(std::string* value);

  private:
  const std::string& _internal_seasonid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_seasonid(
      const std::string& value);
  std::string* _internal_mutable_seasonid();

  public:
  // string sheetId = 4;
  void clear_sheetid() ;
  const std::string& sheetid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sheetid(Arg_&& arg, Args_... args);
  std::string* mutable_sheetid();
  PROTOBUF_NODISCARD std::string* release_sheetid();
  void set_allocated_sheetid(std::string* value);

  private:
  const std::string& _internal_sheetid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sheetid(
      const std::string& value);
  std::string* _internal_mutable_sheetid();

  public:
  // string contentId = 5;
  void clear_contentid() ;
  const std::string& contentid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contentid(Arg_&& arg, Args_... args);
  std::string* mutable_contentid();
  PROTOBUF_NODISCARD std::string* release_contentid();
  void set_allocated_contentid(std::string* value);

  private:
  const std::string& _internal_contentid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contentid(
      const std::string& value);
  std::string* _internal_mutable_contentid();

  public:
  // string characterClass = 9;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // uint32 allRowCount = 6;
  void clear_allrowcount() ;
  ::uint32_t allrowcount() const;
  void set_allrowcount(::uint32_t value);

  private:
  ::uint32_t _internal_allrowcount() const;
  void _internal_set_allrowcount(::uint32_t value);

  public:
  // uint32 startIndex = 7;
  void clear_startindex() ;
  ::uint32_t startindex() const;
  void set_startindex(::uint32_t value);

  private:
  ::uint32_t _internal_startindex() const;
  void _internal_set_startindex(::uint32_t value);

  public:
  // uint32 endIndex = 8;
  void clear_endindex() ;
  ::uint32_t endindex() const;
  void set_endindex(::uint32_t value);

  private:
  ::uint32_t _internal_endindex() const;
  void _internal_set_endindex(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_RANKING_RANGE_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 1,
      87, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_RANKING_RANGE_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_RANKING_RANGE_RES& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SRankRecord > records_;
    ::google::protobuf::internal::ArenaStringPtr seasonid_;
    ::google::protobuf::internal::ArenaStringPtr sheetid_;
    ::google::protobuf::internal::ArenaStringPtr contentid_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::uint32_t result_;
    ::uint32_t allrowcount_;
    ::uint32_t startindex_;
    ::uint32_t endindex_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Ranking_2eproto;
};
// -------------------------------------------------------------------

class SS2C_RANKING_INFO_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_RANKING_INFO_RES) */ {
 public:
  inline SS2C_RANKING_INFO_RES() : SS2C_RANKING_INFO_RES(nullptr) {}
  ~SS2C_RANKING_INFO_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_RANKING_INFO_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_RANKING_INFO_RES(const SS2C_RANKING_INFO_RES& from) : SS2C_RANKING_INFO_RES(nullptr, from) {}
  inline SS2C_RANKING_INFO_RES(SS2C_RANKING_INFO_RES&& from) noexcept
      : SS2C_RANKING_INFO_RES(nullptr, std::move(from)) {}
  inline SS2C_RANKING_INFO_RES& operator=(const SS2C_RANKING_INFO_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_RANKING_INFO_RES& operator=(SS2C_RANKING_INFO_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_RANKING_INFO_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_RANKING_INFO_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_RANKING_INFO_RES*>(
        &_SS2C_RANKING_INFO_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SS2C_RANKING_INFO_RES& a, SS2C_RANKING_INFO_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_RANKING_INFO_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_RANKING_INFO_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_RANKING_INFO_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_RANKING_INFO_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_RANKING_INFO_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_RANKING_INFO_RES& from) { SS2C_RANKING_INFO_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_RANKING_INFO_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_RANKING_INFO_RES"; }

 protected:
  explicit SS2C_RANKING_INFO_RES(::google::protobuf::Arena* arena);
  SS2C_RANKING_INFO_RES(::google::protobuf::Arena* arena, const SS2C_RANKING_INFO_RES& from);
  SS2C_RANKING_INFO_RES(::google::protobuf::Arena* arena, SS2C_RANKING_INFO_RES&& from) noexcept
      : SS2C_RANKING_INFO_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRankingInfosFieldNumber = 1,
    kCurrentDateFieldNumber = 2,
    kCurrentTimeFieldNumber = 3,
  };
  // repeated .DC.Packet.SRANKING_INFO rankingInfos = 1;
  int rankinginfos_size() const;
  private:
  int _internal_rankinginfos_size() const;

  public:
  void clear_rankinginfos() ;
  ::DC::Packet::SRANKING_INFO* mutable_rankinginfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_INFO>* mutable_rankinginfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_INFO>& _internal_rankinginfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_INFO>* _internal_mutable_rankinginfos();
  public:
  const ::DC::Packet::SRANKING_INFO& rankinginfos(int index) const;
  ::DC::Packet::SRANKING_INFO* add_rankinginfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_INFO>& rankinginfos() const;
  // string currentDate = 2;
  void clear_currentdate() ;
  const std::string& currentdate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_currentdate(Arg_&& arg, Args_... args);
  std::string* mutable_currentdate();
  PROTOBUF_NODISCARD std::string* release_currentdate();
  void set_allocated_currentdate(std::string* value);

  private:
  const std::string& _internal_currentdate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_currentdate(
      const std::string& value);
  std::string* _internal_mutable_currentdate();

  public:
  // string currentTime = 3;
  void clear_currenttime() ;
  const std::string& currenttime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_currenttime(Arg_&& arg, Args_... args);
  std::string* mutable_currenttime();
  PROTOBUF_NODISCARD std::string* release_currenttime();
  void set_allocated_currenttime(std::string* value);

  private:
  const std::string& _internal_currenttime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_currenttime(
      const std::string& value);
  std::string* _internal_mutable_currenttime();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_RANKING_INFO_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      62, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_RANKING_INFO_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_RANKING_INFO_RES& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SRANKING_INFO > rankinginfos_;
    ::google::protobuf::internal::ArenaStringPtr currentdate_;
    ::google::protobuf::internal::ArenaStringPtr currenttime_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Ranking_2eproto;
};
// -------------------------------------------------------------------

class SS2C_RANKING_CHARACTER_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_RANKING_CHARACTER_RES) */ {
 public:
  inline SS2C_RANKING_CHARACTER_RES() : SS2C_RANKING_CHARACTER_RES(nullptr) {}
  ~SS2C_RANKING_CHARACTER_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_RANKING_CHARACTER_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_RANKING_CHARACTER_RES(const SS2C_RANKING_CHARACTER_RES& from) : SS2C_RANKING_CHARACTER_RES(nullptr, from) {}
  inline SS2C_RANKING_CHARACTER_RES(SS2C_RANKING_CHARACTER_RES&& from) noexcept
      : SS2C_RANKING_CHARACTER_RES(nullptr, std::move(from)) {}
  inline SS2C_RANKING_CHARACTER_RES& operator=(const SS2C_RANKING_CHARACTER_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_RANKING_CHARACTER_RES& operator=(SS2C_RANKING_CHARACTER_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_RANKING_CHARACTER_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_RANKING_CHARACTER_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_RANKING_CHARACTER_RES*>(
        &_SS2C_RANKING_CHARACTER_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(SS2C_RANKING_CHARACTER_RES& a, SS2C_RANKING_CHARACTER_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_RANKING_CHARACTER_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_RANKING_CHARACTER_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_RANKING_CHARACTER_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_RANKING_CHARACTER_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_RANKING_CHARACTER_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_RANKING_CHARACTER_RES& from) { SS2C_RANKING_CHARACTER_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_RANKING_CHARACTER_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_RANKING_CHARACTER_RES"; }

 protected:
  explicit SS2C_RANKING_CHARACTER_RES(::google::protobuf::Arena* arena);
  SS2C_RANKING_CHARACTER_RES(::google::protobuf::Arena* arena, const SS2C_RANKING_CHARACTER_RES& from);
  SS2C_RANKING_CHARACTER_RES(::google::protobuf::Arena* arena, SS2C_RANKING_CHARACTER_RES&& from) noexcept
      : SS2C_RANKING_CHARACTER_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSeasonIdFieldNumber = 2,
    kSheetIdFieldNumber = 4,
    kContentIdFieldNumber = 5,
    kCharacterClassFieldNumber = 7,
    kRankRecordFieldNumber = 3,
    kResultFieldNumber = 1,
    kAllRowCountFieldNumber = 6,
    kPlayGameCountFieldNumber = 8,
    kBatchGameCountFieldNumber = 9,
  };
  // string seasonId = 2;
  void clear_seasonid() ;
  const std::string& seasonid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_seasonid(Arg_&& arg, Args_... args);
  std::string* mutable_seasonid();
  PROTOBUF_NODISCARD std::string* release_seasonid();
  void set_allocated_seasonid(std::string* value);

  private:
  const std::string& _internal_seasonid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_seasonid(
      const std::string& value);
  std::string* _internal_mutable_seasonid();

  public:
  // string sheetId = 4;
  void clear_sheetid() ;
  const std::string& sheetid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sheetid(Arg_&& arg, Args_... args);
  std::string* mutable_sheetid();
  PROTOBUF_NODISCARD std::string* release_sheetid();
  void set_allocated_sheetid(std::string* value);

  private:
  const std::string& _internal_sheetid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sheetid(
      const std::string& value);
  std::string* _internal_mutable_sheetid();

  public:
  // string contentId = 5;
  void clear_contentid() ;
  const std::string& contentid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contentid(Arg_&& arg, Args_... args);
  std::string* mutable_contentid();
  PROTOBUF_NODISCARD std::string* release_contentid();
  void set_allocated_contentid(std::string* value);

  private:
  const std::string& _internal_contentid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contentid(
      const std::string& value);
  std::string* _internal_mutable_contentid();

  public:
  // string characterClass = 7;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // .DC.Packet.SRankRecord rankRecord = 3;
  bool has_rankrecord() const;
  void clear_rankrecord() ;
  const ::DC::Packet::SRankRecord& rankrecord() const;
  PROTOBUF_NODISCARD ::DC::Packet::SRankRecord* release_rankrecord();
  ::DC::Packet::SRankRecord* mutable_rankrecord();
  void set_allocated_rankrecord(::DC::Packet::SRankRecord* value);
  void unsafe_arena_set_allocated_rankrecord(::DC::Packet::SRankRecord* value);
  ::DC::Packet::SRankRecord* unsafe_arena_release_rankrecord();

  private:
  const ::DC::Packet::SRankRecord& _internal_rankrecord() const;
  ::DC::Packet::SRankRecord* _internal_mutable_rankrecord();

  public:
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // uint32 allRowCount = 6;
  void clear_allrowcount() ;
  ::uint32_t allrowcount() const;
  void set_allrowcount(::uint32_t value);

  private:
  ::uint32_t _internal_allrowcount() const;
  void _internal_set_allrowcount(::uint32_t value);

  public:
  // uint32 playGameCount = 8;
  void clear_playgamecount() ;
  ::uint32_t playgamecount() const;
  void set_playgamecount(::uint32_t value);

  private:
  ::uint32_t _internal_playgamecount() const;
  void _internal_set_playgamecount(::uint32_t value);

  public:
  // uint32 batchGameCount = 9;
  void clear_batchgamecount() ;
  ::uint32_t batchgamecount() const;
  void set_batchgamecount(::uint32_t value);

  private:
  ::uint32_t _internal_batchgamecount() const;
  void _internal_set_batchgamecount(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_RANKING_CHARACTER_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 1,
      91, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_RANKING_CHARACTER_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_RANKING_CHARACTER_RES& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr seasonid_;
    ::google::protobuf::internal::ArenaStringPtr sheetid_;
    ::google::protobuf::internal::ArenaStringPtr contentid_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::DC::Packet::SRankRecord* rankrecord_;
    ::uint32_t result_;
    ::uint32_t allrowcount_;
    ::uint32_t playgamecount_;
    ::uint32_t batchgamecount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Ranking_2eproto;
};
// -------------------------------------------------------------------

class SS2C_RANKING_AP_CONFIG_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_RANKING_AP_CONFIG_RES) */ {
 public:
  inline SS2C_RANKING_AP_CONFIG_RES() : SS2C_RANKING_AP_CONFIG_RES(nullptr) {}
  ~SS2C_RANKING_AP_CONFIG_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_RANKING_AP_CONFIG_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_RANKING_AP_CONFIG_RES(const SS2C_RANKING_AP_CONFIG_RES& from) : SS2C_RANKING_AP_CONFIG_RES(nullptr, from) {}
  inline SS2C_RANKING_AP_CONFIG_RES(SS2C_RANKING_AP_CONFIG_RES&& from) noexcept
      : SS2C_RANKING_AP_CONFIG_RES(nullptr, std::move(from)) {}
  inline SS2C_RANKING_AP_CONFIG_RES& operator=(const SS2C_RANKING_AP_CONFIG_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_RANKING_AP_CONFIG_RES& operator=(SS2C_RANKING_AP_CONFIG_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_RANKING_AP_CONFIG_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_RANKING_AP_CONFIG_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_RANKING_AP_CONFIG_RES*>(
        &_SS2C_RANKING_AP_CONFIG_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(SS2C_RANKING_AP_CONFIG_RES& a, SS2C_RANKING_AP_CONFIG_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_RANKING_AP_CONFIG_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_RANKING_AP_CONFIG_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_RANKING_AP_CONFIG_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_RANKING_AP_CONFIG_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_RANKING_AP_CONFIG_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_RANKING_AP_CONFIG_RES& from) { SS2C_RANKING_AP_CONFIG_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_RANKING_AP_CONFIG_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_RANKING_AP_CONFIG_RES"; }

 protected:
  explicit SS2C_RANKING_AP_CONFIG_RES(::google::protobuf::Arena* arena);
  SS2C_RANKING_AP_CONFIG_RES(::google::protobuf::Arena* arena, const SS2C_RANKING_AP_CONFIG_RES& from);
  SS2C_RANKING_AP_CONFIG_RES(::google::protobuf::Arena* arena, SS2C_RANKING_AP_CONFIG_RES&& from) noexcept
      : SS2C_RANKING_AP_CONFIG_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConfigInfosFieldNumber = 1,
  };
  // repeated .DC.Packet.SRANKING_CONFIG_INFO configInfos = 1;
  int configinfos_size() const;
  private:
  int _internal_configinfos_size() const;

  public:
  void clear_configinfos() ;
  ::DC::Packet::SRANKING_CONFIG_INFO* mutable_configinfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_CONFIG_INFO>* mutable_configinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_CONFIG_INFO>& _internal_configinfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_CONFIG_INFO>* _internal_mutable_configinfos();
  public:
  const ::DC::Packet::SRANKING_CONFIG_INFO& configinfos(int index) const;
  ::DC::Packet::SRANKING_CONFIG_INFO* add_configinfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_CONFIG_INFO>& configinfos() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_RANKING_AP_CONFIG_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_RANKING_AP_CONFIG_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_RANKING_AP_CONFIG_RES& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SRANKING_CONFIG_INFO > configinfos_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Ranking_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SC2S_RANKING_INFO_REQ

// -------------------------------------------------------------------

// SRANKING_REWARD_INFO

// string groupId = 1;
inline void SRANKING_REWARD_INFO::clear_groupid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groupid_.ClearToEmpty();
}
inline const std::string& SRANKING_REWARD_INFO::groupid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_REWARD_INFO.groupId)
  return _internal_groupid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRANKING_REWARD_INFO::set_groupid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groupid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_REWARD_INFO.groupId)
}
inline std::string* SRANKING_REWARD_INFO::mutable_groupid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_groupid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_REWARD_INFO.groupId)
  return _s;
}
inline const std::string& SRANKING_REWARD_INFO::_internal_groupid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.groupid_.Get();
}
inline void SRANKING_REWARD_INFO::_internal_set_groupid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groupid_.Set(value, GetArena());
}
inline std::string* SRANKING_REWARD_INFO::_internal_mutable_groupid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.groupid_.Mutable( GetArena());
}
inline std::string* SRANKING_REWARD_INFO::release_groupid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRANKING_REWARD_INFO.groupId)
  return _impl_.groupid_.Release();
}
inline void SRANKING_REWARD_INFO::set_allocated_groupid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groupid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.groupid_.IsDefault()) {
          _impl_.groupid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRANKING_REWARD_INFO.groupId)
}

// int32 rewardState = 2;
inline void SRANKING_REWARD_INFO::clear_rewardstate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rewardstate_ = 0;
}
inline ::int32_t SRANKING_REWARD_INFO::rewardstate() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_REWARD_INFO.rewardState)
  return _internal_rewardstate();
}
inline void SRANKING_REWARD_INFO::set_rewardstate(::int32_t value) {
  _internal_set_rewardstate(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_REWARD_INFO.rewardState)
}
inline ::int32_t SRANKING_REWARD_INFO::_internal_rewardstate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rewardstate_;
}
inline void SRANKING_REWARD_INFO::_internal_set_rewardstate(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rewardstate_ = value;
}

// -------------------------------------------------------------------

// SRANKING_INFO

// string seasonId = 2;
inline void SRANKING_INFO::clear_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.ClearToEmpty();
}
inline const std::string& SRANKING_INFO::seasonid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_INFO.seasonId)
  return _internal_seasonid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRANKING_INFO::set_seasonid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_INFO.seasonId)
}
inline std::string* SRANKING_INFO::mutable_seasonid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_seasonid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_INFO.seasonId)
  return _s;
}
inline const std::string& SRANKING_INFO::_internal_seasonid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seasonid_.Get();
}
inline void SRANKING_INFO::_internal_set_seasonid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.Set(value, GetArena());
}
inline std::string* SRANKING_INFO::_internal_mutable_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.seasonid_.Mutable( GetArena());
}
inline std::string* SRANKING_INFO::release_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRANKING_INFO.seasonId)
  return _impl_.seasonid_.Release();
}
inline void SRANKING_INFO::set_allocated_seasonid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.seasonid_.IsDefault()) {
          _impl_.seasonid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRANKING_INFO.seasonId)
}

// string beginDate = 3;
inline void SRANKING_INFO::clear_begindate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begindate_.ClearToEmpty();
}
inline const std::string& SRANKING_INFO::begindate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_INFO.beginDate)
  return _internal_begindate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRANKING_INFO::set_begindate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begindate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_INFO.beginDate)
}
inline std::string* SRANKING_INFO::mutable_begindate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_begindate();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_INFO.beginDate)
  return _s;
}
inline const std::string& SRANKING_INFO::_internal_begindate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.begindate_.Get();
}
inline void SRANKING_INFO::_internal_set_begindate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begindate_.Set(value, GetArena());
}
inline std::string* SRANKING_INFO::_internal_mutable_begindate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.begindate_.Mutable( GetArena());
}
inline std::string* SRANKING_INFO::release_begindate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRANKING_INFO.beginDate)
  return _impl_.begindate_.Release();
}
inline void SRANKING_INFO::set_allocated_begindate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begindate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.begindate_.IsDefault()) {
          _impl_.begindate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRANKING_INFO.beginDate)
}

// string beginTime = 4;
inline void SRANKING_INFO::clear_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begintime_.ClearToEmpty();
}
inline const std::string& SRANKING_INFO::begintime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_INFO.beginTime)
  return _internal_begintime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRANKING_INFO::set_begintime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begintime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_INFO.beginTime)
}
inline std::string* SRANKING_INFO::mutable_begintime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_begintime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_INFO.beginTime)
  return _s;
}
inline const std::string& SRANKING_INFO::_internal_begintime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.begintime_.Get();
}
inline void SRANKING_INFO::_internal_set_begintime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begintime_.Set(value, GetArena());
}
inline std::string* SRANKING_INFO::_internal_mutable_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.begintime_.Mutable( GetArena());
}
inline std::string* SRANKING_INFO::release_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRANKING_INFO.beginTime)
  return _impl_.begintime_.Release();
}
inline void SRANKING_INFO::set_allocated_begintime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begintime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.begintime_.IsDefault()) {
          _impl_.begintime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRANKING_INFO.beginTime)
}

// string endDate = 5;
inline void SRANKING_INFO::clear_enddate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enddate_.ClearToEmpty();
}
inline const std::string& SRANKING_INFO::enddate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_INFO.endDate)
  return _internal_enddate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRANKING_INFO::set_enddate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enddate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_INFO.endDate)
}
inline std::string* SRANKING_INFO::mutable_enddate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_enddate();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_INFO.endDate)
  return _s;
}
inline const std::string& SRANKING_INFO::_internal_enddate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enddate_.Get();
}
inline void SRANKING_INFO::_internal_set_enddate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enddate_.Set(value, GetArena());
}
inline std::string* SRANKING_INFO::_internal_mutable_enddate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.enddate_.Mutable( GetArena());
}
inline std::string* SRANKING_INFO::release_enddate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRANKING_INFO.endDate)
  return _impl_.enddate_.Release();
}
inline void SRANKING_INFO::set_allocated_enddate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enddate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.enddate_.IsDefault()) {
          _impl_.enddate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRANKING_INFO.endDate)
}

// string endTime = 6;
inline void SRANKING_INFO::clear_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endtime_.ClearToEmpty();
}
inline const std::string& SRANKING_INFO::endtime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_INFO.endTime)
  return _internal_endtime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRANKING_INFO::set_endtime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endtime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_INFO.endTime)
}
inline std::string* SRANKING_INFO::mutable_endtime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_endtime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_INFO.endTime)
  return _s;
}
inline const std::string& SRANKING_INFO::_internal_endtime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.endtime_.Get();
}
inline void SRANKING_INFO::_internal_set_endtime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endtime_.Set(value, GetArena());
}
inline std::string* SRANKING_INFO::_internal_mutable_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.endtime_.Mutable( GetArena());
}
inline std::string* SRANKING_INFO::release_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRANKING_INFO.endTime)
  return _impl_.endtime_.Release();
}
inline void SRANKING_INFO::set_allocated_endtime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endtime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.endtime_.IsDefault()) {
          _impl_.endtime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRANKING_INFO.endTime)
}

// string wipeDate = 7;
inline void SRANKING_INFO::clear_wipedate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wipedate_.ClearToEmpty();
}
inline const std::string& SRANKING_INFO::wipedate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_INFO.wipeDate)
  return _internal_wipedate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRANKING_INFO::set_wipedate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wipedate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_INFO.wipeDate)
}
inline std::string* SRANKING_INFO::mutable_wipedate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wipedate();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_INFO.wipeDate)
  return _s;
}
inline const std::string& SRANKING_INFO::_internal_wipedate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wipedate_.Get();
}
inline void SRANKING_INFO::_internal_set_wipedate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wipedate_.Set(value, GetArena());
}
inline std::string* SRANKING_INFO::_internal_mutable_wipedate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wipedate_.Mutable( GetArena());
}
inline std::string* SRANKING_INFO::release_wipedate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRANKING_INFO.wipeDate)
  return _impl_.wipedate_.Release();
}
inline void SRANKING_INFO::set_allocated_wipedate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wipedate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wipedate_.IsDefault()) {
          _impl_.wipedate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRANKING_INFO.wipeDate)
}

// string wipeTime = 8;
inline void SRANKING_INFO::clear_wipetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wipetime_.ClearToEmpty();
}
inline const std::string& SRANKING_INFO::wipetime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_INFO.wipeTime)
  return _internal_wipetime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRANKING_INFO::set_wipetime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wipetime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_INFO.wipeTime)
}
inline std::string* SRANKING_INFO::mutable_wipetime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wipetime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_INFO.wipeTime)
  return _s;
}
inline const std::string& SRANKING_INFO::_internal_wipetime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wipetime_.Get();
}
inline void SRANKING_INFO::_internal_set_wipetime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wipetime_.Set(value, GetArena());
}
inline std::string* SRANKING_INFO::_internal_mutable_wipetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wipetime_.Mutable( GetArena());
}
inline std::string* SRANKING_INFO::release_wipetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRANKING_INFO.wipeTime)
  return _impl_.wipetime_.Release();
}
inline void SRANKING_INFO::set_allocated_wipetime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wipetime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wipetime_.IsDefault()) {
          _impl_.wipetime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRANKING_INFO.wipeTime)
}

// string rewardDate = 9;
inline void SRANKING_INFO::clear_rewarddate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rewarddate_.ClearToEmpty();
}
inline const std::string& SRANKING_INFO::rewarddate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_INFO.rewardDate)
  return _internal_rewarddate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRANKING_INFO::set_rewarddate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rewarddate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_INFO.rewardDate)
}
inline std::string* SRANKING_INFO::mutable_rewarddate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rewarddate();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_INFO.rewardDate)
  return _s;
}
inline const std::string& SRANKING_INFO::_internal_rewarddate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rewarddate_.Get();
}
inline void SRANKING_INFO::_internal_set_rewarddate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rewarddate_.Set(value, GetArena());
}
inline std::string* SRANKING_INFO::_internal_mutable_rewarddate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rewarddate_.Mutable( GetArena());
}
inline std::string* SRANKING_INFO::release_rewarddate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRANKING_INFO.rewardDate)
  return _impl_.rewarddate_.Release();
}
inline void SRANKING_INFO::set_allocated_rewarddate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rewarddate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rewarddate_.IsDefault()) {
          _impl_.rewarddate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRANKING_INFO.rewardDate)
}

// string rewardTime = 10;
inline void SRANKING_INFO::clear_rewardtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rewardtime_.ClearToEmpty();
}
inline const std::string& SRANKING_INFO::rewardtime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_INFO.rewardTime)
  return _internal_rewardtime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRANKING_INFO::set_rewardtime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rewardtime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_INFO.rewardTime)
}
inline std::string* SRANKING_INFO::mutable_rewardtime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rewardtime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_INFO.rewardTime)
  return _s;
}
inline const std::string& SRANKING_INFO::_internal_rewardtime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rewardtime_.Get();
}
inline void SRANKING_INFO::_internal_set_rewardtime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rewardtime_.Set(value, GetArena());
}
inline std::string* SRANKING_INFO::_internal_mutable_rewardtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rewardtime_.Mutable( GetArena());
}
inline std::string* SRANKING_INFO::release_rewardtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRANKING_INFO.rewardTime)
  return _impl_.rewardtime_.Release();
}
inline void SRANKING_INFO::set_allocated_rewardtime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rewardtime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rewardtime_.IsDefault()) {
          _impl_.rewardtime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRANKING_INFO.rewardTime)
}

// repeated .DC.Packet.SRankUserInfo rankInfo = 11;
inline int SRANKING_INFO::_internal_rankinfo_size() const {
  return _internal_rankinfo().size();
}
inline int SRANKING_INFO::rankinfo_size() const {
  return _internal_rankinfo_size();
}
inline ::DC::Packet::SRankUserInfo* SRANKING_INFO::mutable_rankinfo(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_INFO.rankInfo)
  return _internal_mutable_rankinfo()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SRankUserInfo>* SRANKING_INFO::mutable_rankinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SRANKING_INFO.rankInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rankinfo();
}
inline const ::DC::Packet::SRankUserInfo& SRANKING_INFO::rankinfo(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_INFO.rankInfo)
  return _internal_rankinfo().Get(index);
}
inline ::DC::Packet::SRankUserInfo* SRANKING_INFO::add_rankinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SRankUserInfo* _add = _internal_mutable_rankinfo()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SRANKING_INFO.rankInfo)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRankUserInfo>& SRANKING_INFO::rankinfo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SRANKING_INFO.rankInfo)
  return _internal_rankinfo();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRankUserInfo>&
SRANKING_INFO::_internal_rankinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rankinfo_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SRankUserInfo>*
SRANKING_INFO::_internal_mutable_rankinfo() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rankinfo_;
}

// repeated .DC.Packet.SRANKING_REWARD_INFO rewardInfos = 12;
inline int SRANKING_INFO::_internal_rewardinfos_size() const {
  return _internal_rewardinfos().size();
}
inline int SRANKING_INFO::rewardinfos_size() const {
  return _internal_rewardinfos_size();
}
inline void SRANKING_INFO::clear_rewardinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rewardinfos_.Clear();
}
inline ::DC::Packet::SRANKING_REWARD_INFO* SRANKING_INFO::mutable_rewardinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_INFO.rewardInfos)
  return _internal_mutable_rewardinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_REWARD_INFO>* SRANKING_INFO::mutable_rewardinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SRANKING_INFO.rewardInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rewardinfos();
}
inline const ::DC::Packet::SRANKING_REWARD_INFO& SRANKING_INFO::rewardinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_INFO.rewardInfos)
  return _internal_rewardinfos().Get(index);
}
inline ::DC::Packet::SRANKING_REWARD_INFO* SRANKING_INFO::add_rewardinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SRANKING_REWARD_INFO* _add = _internal_mutable_rewardinfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SRANKING_INFO.rewardInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_REWARD_INFO>& SRANKING_INFO::rewardinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SRANKING_INFO.rewardInfos)
  return _internal_rewardinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_REWARD_INFO>&
SRANKING_INFO::_internal_rewardinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rewardinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_REWARD_INFO>*
SRANKING_INFO::_internal_mutable_rewardinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rewardinfos_;
}

// -------------------------------------------------------------------

// SS2C_RANKING_INFO_RES

// repeated .DC.Packet.SRANKING_INFO rankingInfos = 1;
inline int SS2C_RANKING_INFO_RES::_internal_rankinginfos_size() const {
  return _internal_rankinginfos().size();
}
inline int SS2C_RANKING_INFO_RES::rankinginfos_size() const {
  return _internal_rankinginfos_size();
}
inline void SS2C_RANKING_INFO_RES::clear_rankinginfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankinginfos_.Clear();
}
inline ::DC::Packet::SRANKING_INFO* SS2C_RANKING_INFO_RES::mutable_rankinginfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_RANKING_INFO_RES.rankingInfos)
  return _internal_mutable_rankinginfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_INFO>* SS2C_RANKING_INFO_RES::mutable_rankinginfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_RANKING_INFO_RES.rankingInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rankinginfos();
}
inline const ::DC::Packet::SRANKING_INFO& SS2C_RANKING_INFO_RES::rankinginfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_INFO_RES.rankingInfos)
  return _internal_rankinginfos().Get(index);
}
inline ::DC::Packet::SRANKING_INFO* SS2C_RANKING_INFO_RES::add_rankinginfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SRANKING_INFO* _add = _internal_mutable_rankinginfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_RANKING_INFO_RES.rankingInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_INFO>& SS2C_RANKING_INFO_RES::rankinginfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_RANKING_INFO_RES.rankingInfos)
  return _internal_rankinginfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_INFO>&
SS2C_RANKING_INFO_RES::_internal_rankinginfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rankinginfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_INFO>*
SS2C_RANKING_INFO_RES::_internal_mutable_rankinginfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rankinginfos_;
}

// string currentDate = 2;
inline void SS2C_RANKING_INFO_RES::clear_currentdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentdate_.ClearToEmpty();
}
inline const std::string& SS2C_RANKING_INFO_RES::currentdate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_INFO_RES.currentDate)
  return _internal_currentdate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_RANKING_INFO_RES::set_currentdate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentdate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_INFO_RES.currentDate)
}
inline std::string* SS2C_RANKING_INFO_RES::mutable_currentdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_currentdate();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_RANKING_INFO_RES.currentDate)
  return _s;
}
inline const std::string& SS2C_RANKING_INFO_RES::_internal_currentdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currentdate_.Get();
}
inline void SS2C_RANKING_INFO_RES::_internal_set_currentdate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentdate_.Set(value, GetArena());
}
inline std::string* SS2C_RANKING_INFO_RES::_internal_mutable_currentdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.currentdate_.Mutable( GetArena());
}
inline std::string* SS2C_RANKING_INFO_RES::release_currentdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_RANKING_INFO_RES.currentDate)
  return _impl_.currentdate_.Release();
}
inline void SS2C_RANKING_INFO_RES::set_allocated_currentdate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentdate_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.currentdate_.IsDefault()) {
          _impl_.currentdate_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_RANKING_INFO_RES.currentDate)
}

// string currentTime = 3;
inline void SS2C_RANKING_INFO_RES::clear_currenttime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currenttime_.ClearToEmpty();
}
inline const std::string& SS2C_RANKING_INFO_RES::currenttime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_INFO_RES.currentTime)
  return _internal_currenttime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_RANKING_INFO_RES::set_currenttime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currenttime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_INFO_RES.currentTime)
}
inline std::string* SS2C_RANKING_INFO_RES::mutable_currenttime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_currenttime();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_RANKING_INFO_RES.currentTime)
  return _s;
}
inline const std::string& SS2C_RANKING_INFO_RES::_internal_currenttime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currenttime_.Get();
}
inline void SS2C_RANKING_INFO_RES::_internal_set_currenttime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currenttime_.Set(value, GetArena());
}
inline std::string* SS2C_RANKING_INFO_RES::_internal_mutable_currenttime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.currenttime_.Mutable( GetArena());
}
inline std::string* SS2C_RANKING_INFO_RES::release_currenttime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_RANKING_INFO_RES.currentTime)
  return _impl_.currenttime_.Release();
}
inline void SS2C_RANKING_INFO_RES::set_allocated_currenttime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currenttime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.currenttime_.IsDefault()) {
          _impl_.currenttime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_RANKING_INFO_RES.currentTime)
}

// -------------------------------------------------------------------

// SRankRecord

// uint32 pageIndex = 1;
inline void SRankRecord::clear_pageindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pageindex_ = 0u;
}
inline ::uint32_t SRankRecord::pageindex() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SRankRecord.pageIndex)
  return _internal_pageindex();
}
inline void SRankRecord::set_pageindex(::uint32_t value) {
  _internal_set_pageindex(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SRankRecord.pageIndex)
}
inline ::uint32_t SRankRecord::_internal_pageindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pageindex_;
}
inline void SRankRecord::_internal_set_pageindex(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pageindex_ = value;
}

// uint32 rank = 2;
inline void SRankRecord::clear_rank() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rank_ = 0u;
}
inline ::uint32_t SRankRecord::rank() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SRankRecord.rank)
  return _internal_rank();
}
inline void SRankRecord::set_rank(::uint32_t value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SRankRecord.rank)
}
inline ::uint32_t SRankRecord::_internal_rank() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rank_;
}
inline void SRankRecord::_internal_set_rank(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rank_ = value;
}

// uint32 score = 3;
inline void SRankRecord::clear_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.score_ = 0u;
}
inline ::uint32_t SRankRecord::score() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SRankRecord.score)
  return _internal_score();
}
inline void SRankRecord::set_score(::uint32_t value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SRankRecord.score)
}
inline ::uint32_t SRankRecord::_internal_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.score_;
}
inline void SRankRecord::_internal_set_score(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.score_ = value;
}

// float percentage = 4;
inline void SRankRecord::clear_percentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.percentage_ = 0;
}
inline float SRankRecord::percentage() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SRankRecord.percentage)
  return _internal_percentage();
}
inline void SRankRecord::set_percentage(float value) {
  _internal_set_percentage(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SRankRecord.percentage)
}
inline float SRankRecord::_internal_percentage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.percentage_;
}
inline void SRankRecord::_internal_set_percentage(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.percentage_ = value;
}

// string accountId = 5;
inline void SRankRecord::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SRankRecord::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRankRecord.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRankRecord::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRankRecord.accountId)
}
inline std::string* SRankRecord::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRankRecord.accountId)
  return _s;
}
inline const std::string& SRankRecord::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SRankRecord::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SRankRecord::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SRankRecord::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRankRecord.accountId)
  return _impl_.accountid_.Release();
}
inline void SRankRecord::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRankRecord.accountId)
}

// .DC.Packet.SACCOUNT_NICKNAME nickName = 6;
inline bool SRankRecord::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SRankRecord::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SRankRecord::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRankRecord.nickName)
  return _internal_nickname();
}
inline void SRankRecord::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SRankRecord.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SRankRecord::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SRankRecord::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRankRecord.nickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SRankRecord::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SRankRecord::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRankRecord.nickName)
  return _msg;
}
inline void SRankRecord::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRankRecord.nickName)
}

// string characterClass = 7;
inline void SRankRecord::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& SRankRecord::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRankRecord.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRankRecord::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRankRecord.characterClass)
}
inline std::string* SRankRecord::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRankRecord.characterClass)
  return _s;
}
inline const std::string& SRankRecord::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void SRankRecord::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* SRankRecord::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* SRankRecord::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRankRecord.characterClass)
  return _impl_.characterclass_.Release();
}
inline void SRankRecord::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRankRecord.characterClass)
}

// -------------------------------------------------------------------

// SC2S_RANKING_RANGE_REQ

// string seasonId = 1;
inline void SC2S_RANKING_RANGE_REQ::clear_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.ClearToEmpty();
}
inline const std::string& SC2S_RANKING_RANGE_REQ::seasonid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_RANKING_RANGE_REQ.seasonId)
  return _internal_seasonid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_RANKING_RANGE_REQ::set_seasonid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_RANKING_RANGE_REQ.seasonId)
}
inline std::string* SC2S_RANKING_RANGE_REQ::mutable_seasonid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_seasonid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_RANKING_RANGE_REQ.seasonId)
  return _s;
}
inline const std::string& SC2S_RANKING_RANGE_REQ::_internal_seasonid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seasonid_.Get();
}
inline void SC2S_RANKING_RANGE_REQ::_internal_set_seasonid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.Set(value, GetArena());
}
inline std::string* SC2S_RANKING_RANGE_REQ::_internal_mutable_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.seasonid_.Mutable( GetArena());
}
inline std::string* SC2S_RANKING_RANGE_REQ::release_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_RANKING_RANGE_REQ.seasonId)
  return _impl_.seasonid_.Release();
}
inline void SC2S_RANKING_RANGE_REQ::set_allocated_seasonid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.seasonid_.IsDefault()) {
          _impl_.seasonid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_RANKING_RANGE_REQ.seasonId)
}

// string sheetId = 2;
inline void SC2S_RANKING_RANGE_REQ::clear_sheetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheetid_.ClearToEmpty();
}
inline const std::string& SC2S_RANKING_RANGE_REQ::sheetid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_RANKING_RANGE_REQ.sheetId)
  return _internal_sheetid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_RANKING_RANGE_REQ::set_sheetid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheetid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_RANKING_RANGE_REQ.sheetId)
}
inline std::string* SC2S_RANKING_RANGE_REQ::mutable_sheetid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sheetid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_RANKING_RANGE_REQ.sheetId)
  return _s;
}
inline const std::string& SC2S_RANKING_RANGE_REQ::_internal_sheetid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sheetid_.Get();
}
inline void SC2S_RANKING_RANGE_REQ::_internal_set_sheetid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheetid_.Set(value, GetArena());
}
inline std::string* SC2S_RANKING_RANGE_REQ::_internal_mutable_sheetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sheetid_.Mutable( GetArena());
}
inline std::string* SC2S_RANKING_RANGE_REQ::release_sheetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_RANKING_RANGE_REQ.sheetId)
  return _impl_.sheetid_.Release();
}
inline void SC2S_RANKING_RANGE_REQ::set_allocated_sheetid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheetid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sheetid_.IsDefault()) {
          _impl_.sheetid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_RANKING_RANGE_REQ.sheetId)
}

// string contentId = 3;
inline void SC2S_RANKING_RANGE_REQ::clear_contentid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.ClearToEmpty();
}
inline const std::string& SC2S_RANKING_RANGE_REQ::contentid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_RANKING_RANGE_REQ.contentId)
  return _internal_contentid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_RANKING_RANGE_REQ::set_contentid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_RANKING_RANGE_REQ.contentId)
}
inline std::string* SC2S_RANKING_RANGE_REQ::mutable_contentid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contentid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_RANKING_RANGE_REQ.contentId)
  return _s;
}
inline const std::string& SC2S_RANKING_RANGE_REQ::_internal_contentid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contentid_.Get();
}
inline void SC2S_RANKING_RANGE_REQ::_internal_set_contentid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.Set(value, GetArena());
}
inline std::string* SC2S_RANKING_RANGE_REQ::_internal_mutable_contentid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contentid_.Mutable( GetArena());
}
inline std::string* SC2S_RANKING_RANGE_REQ::release_contentid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_RANKING_RANGE_REQ.contentId)
  return _impl_.contentid_.Release();
}
inline void SC2S_RANKING_RANGE_REQ::set_allocated_contentid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contentid_.IsDefault()) {
          _impl_.contentid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_RANKING_RANGE_REQ.contentId)
}

// uint32 startIndex = 4;
inline void SC2S_RANKING_RANGE_REQ::clear_startindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startindex_ = 0u;
}
inline ::uint32_t SC2S_RANKING_RANGE_REQ::startindex() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_RANKING_RANGE_REQ.startIndex)
  return _internal_startindex();
}
inline void SC2S_RANKING_RANGE_REQ::set_startindex(::uint32_t value) {
  _internal_set_startindex(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_RANKING_RANGE_REQ.startIndex)
}
inline ::uint32_t SC2S_RANKING_RANGE_REQ::_internal_startindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.startindex_;
}
inline void SC2S_RANKING_RANGE_REQ::_internal_set_startindex(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startindex_ = value;
}

// uint32 endIndex = 5;
inline void SC2S_RANKING_RANGE_REQ::clear_endindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endindex_ = 0u;
}
inline ::uint32_t SC2S_RANKING_RANGE_REQ::endindex() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_RANKING_RANGE_REQ.endIndex)
  return _internal_endindex();
}
inline void SC2S_RANKING_RANGE_REQ::set_endindex(::uint32_t value) {
  _internal_set_endindex(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_RANKING_RANGE_REQ.endIndex)
}
inline ::uint32_t SC2S_RANKING_RANGE_REQ::_internal_endindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.endindex_;
}
inline void SC2S_RANKING_RANGE_REQ::_internal_set_endindex(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endindex_ = value;
}

// string characterClass = 6;
inline void SC2S_RANKING_RANGE_REQ::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& SC2S_RANKING_RANGE_REQ::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_RANKING_RANGE_REQ.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_RANKING_RANGE_REQ::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_RANKING_RANGE_REQ.characterClass)
}
inline std::string* SC2S_RANKING_RANGE_REQ::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_RANKING_RANGE_REQ.characterClass)
  return _s;
}
inline const std::string& SC2S_RANKING_RANGE_REQ::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void SC2S_RANKING_RANGE_REQ::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* SC2S_RANKING_RANGE_REQ::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* SC2S_RANKING_RANGE_REQ::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_RANKING_RANGE_REQ.characterClass)
  return _impl_.characterclass_.Release();
}
inline void SC2S_RANKING_RANGE_REQ::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_RANKING_RANGE_REQ.characterClass)
}

// -------------------------------------------------------------------

// SS2C_RANKING_RANGE_RES

// uint32 result = 1;
inline void SS2C_RANKING_RANGE_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_RANKING_RANGE_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_RANGE_RES.result)
  return _internal_result();
}
inline void SS2C_RANKING_RANGE_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_RANGE_RES.result)
}
inline ::uint32_t SS2C_RANKING_RANGE_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_RANKING_RANGE_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// string seasonId = 2;
inline void SS2C_RANKING_RANGE_RES::clear_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.ClearToEmpty();
}
inline const std::string& SS2C_RANKING_RANGE_RES::seasonid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_RANGE_RES.seasonId)
  return _internal_seasonid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_RANKING_RANGE_RES::set_seasonid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_RANGE_RES.seasonId)
}
inline std::string* SS2C_RANKING_RANGE_RES::mutable_seasonid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_seasonid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_RANKING_RANGE_RES.seasonId)
  return _s;
}
inline const std::string& SS2C_RANKING_RANGE_RES::_internal_seasonid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seasonid_.Get();
}
inline void SS2C_RANKING_RANGE_RES::_internal_set_seasonid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.Set(value, GetArena());
}
inline std::string* SS2C_RANKING_RANGE_RES::_internal_mutable_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.seasonid_.Mutable( GetArena());
}
inline std::string* SS2C_RANKING_RANGE_RES::release_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_RANKING_RANGE_RES.seasonId)
  return _impl_.seasonid_.Release();
}
inline void SS2C_RANKING_RANGE_RES::set_allocated_seasonid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.seasonid_.IsDefault()) {
          _impl_.seasonid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_RANKING_RANGE_RES.seasonId)
}

// repeated .DC.Packet.SRankRecord records = 3;
inline int SS2C_RANKING_RANGE_RES::_internal_records_size() const {
  return _internal_records().size();
}
inline int SS2C_RANKING_RANGE_RES::records_size() const {
  return _internal_records_size();
}
inline void SS2C_RANKING_RANGE_RES::clear_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.records_.Clear();
}
inline ::DC::Packet::SRankRecord* SS2C_RANKING_RANGE_RES::mutable_records(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_RANKING_RANGE_RES.records)
  return _internal_mutable_records()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SRankRecord>* SS2C_RANKING_RANGE_RES::mutable_records()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_RANKING_RANGE_RES.records)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_records();
}
inline const ::DC::Packet::SRankRecord& SS2C_RANKING_RANGE_RES::records(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_RANGE_RES.records)
  return _internal_records().Get(index);
}
inline ::DC::Packet::SRankRecord* SS2C_RANKING_RANGE_RES::add_records() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SRankRecord* _add = _internal_mutable_records()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_RANKING_RANGE_RES.records)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRankRecord>& SS2C_RANKING_RANGE_RES::records() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_RANKING_RANGE_RES.records)
  return _internal_records();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRankRecord>&
SS2C_RANKING_RANGE_RES::_internal_records() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.records_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SRankRecord>*
SS2C_RANKING_RANGE_RES::_internal_mutable_records() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.records_;
}

// string sheetId = 4;
inline void SS2C_RANKING_RANGE_RES::clear_sheetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheetid_.ClearToEmpty();
}
inline const std::string& SS2C_RANKING_RANGE_RES::sheetid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_RANGE_RES.sheetId)
  return _internal_sheetid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_RANKING_RANGE_RES::set_sheetid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheetid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_RANGE_RES.sheetId)
}
inline std::string* SS2C_RANKING_RANGE_RES::mutable_sheetid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sheetid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_RANKING_RANGE_RES.sheetId)
  return _s;
}
inline const std::string& SS2C_RANKING_RANGE_RES::_internal_sheetid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sheetid_.Get();
}
inline void SS2C_RANKING_RANGE_RES::_internal_set_sheetid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheetid_.Set(value, GetArena());
}
inline std::string* SS2C_RANKING_RANGE_RES::_internal_mutable_sheetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sheetid_.Mutable( GetArena());
}
inline std::string* SS2C_RANKING_RANGE_RES::release_sheetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_RANKING_RANGE_RES.sheetId)
  return _impl_.sheetid_.Release();
}
inline void SS2C_RANKING_RANGE_RES::set_allocated_sheetid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheetid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sheetid_.IsDefault()) {
          _impl_.sheetid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_RANKING_RANGE_RES.sheetId)
}

// string contentId = 5;
inline void SS2C_RANKING_RANGE_RES::clear_contentid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.ClearToEmpty();
}
inline const std::string& SS2C_RANKING_RANGE_RES::contentid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_RANGE_RES.contentId)
  return _internal_contentid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_RANKING_RANGE_RES::set_contentid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_RANGE_RES.contentId)
}
inline std::string* SS2C_RANKING_RANGE_RES::mutable_contentid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contentid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_RANKING_RANGE_RES.contentId)
  return _s;
}
inline const std::string& SS2C_RANKING_RANGE_RES::_internal_contentid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contentid_.Get();
}
inline void SS2C_RANKING_RANGE_RES::_internal_set_contentid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.Set(value, GetArena());
}
inline std::string* SS2C_RANKING_RANGE_RES::_internal_mutable_contentid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contentid_.Mutable( GetArena());
}
inline std::string* SS2C_RANKING_RANGE_RES::release_contentid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_RANKING_RANGE_RES.contentId)
  return _impl_.contentid_.Release();
}
inline void SS2C_RANKING_RANGE_RES::set_allocated_contentid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contentid_.IsDefault()) {
          _impl_.contentid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_RANKING_RANGE_RES.contentId)
}

// uint32 allRowCount = 6;
inline void SS2C_RANKING_RANGE_RES::clear_allrowcount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allrowcount_ = 0u;
}
inline ::uint32_t SS2C_RANKING_RANGE_RES::allrowcount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_RANGE_RES.allRowCount)
  return _internal_allrowcount();
}
inline void SS2C_RANKING_RANGE_RES::set_allrowcount(::uint32_t value) {
  _internal_set_allrowcount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_RANGE_RES.allRowCount)
}
inline ::uint32_t SS2C_RANKING_RANGE_RES::_internal_allrowcount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allrowcount_;
}
inline void SS2C_RANKING_RANGE_RES::_internal_set_allrowcount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allrowcount_ = value;
}

// uint32 startIndex = 7;
inline void SS2C_RANKING_RANGE_RES::clear_startindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startindex_ = 0u;
}
inline ::uint32_t SS2C_RANKING_RANGE_RES::startindex() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_RANGE_RES.startIndex)
  return _internal_startindex();
}
inline void SS2C_RANKING_RANGE_RES::set_startindex(::uint32_t value) {
  _internal_set_startindex(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_RANGE_RES.startIndex)
}
inline ::uint32_t SS2C_RANKING_RANGE_RES::_internal_startindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.startindex_;
}
inline void SS2C_RANKING_RANGE_RES::_internal_set_startindex(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startindex_ = value;
}

// uint32 endIndex = 8;
inline void SS2C_RANKING_RANGE_RES::clear_endindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endindex_ = 0u;
}
inline ::uint32_t SS2C_RANKING_RANGE_RES::endindex() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_RANGE_RES.endIndex)
  return _internal_endindex();
}
inline void SS2C_RANKING_RANGE_RES::set_endindex(::uint32_t value) {
  _internal_set_endindex(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_RANGE_RES.endIndex)
}
inline ::uint32_t SS2C_RANKING_RANGE_RES::_internal_endindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.endindex_;
}
inline void SS2C_RANKING_RANGE_RES::_internal_set_endindex(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endindex_ = value;
}

// string characterClass = 9;
inline void SS2C_RANKING_RANGE_RES::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& SS2C_RANKING_RANGE_RES::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_RANGE_RES.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_RANKING_RANGE_RES::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_RANGE_RES.characterClass)
}
inline std::string* SS2C_RANKING_RANGE_RES::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_RANKING_RANGE_RES.characterClass)
  return _s;
}
inline const std::string& SS2C_RANKING_RANGE_RES::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void SS2C_RANKING_RANGE_RES::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* SS2C_RANKING_RANGE_RES::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* SS2C_RANKING_RANGE_RES::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_RANKING_RANGE_RES.characterClass)
  return _impl_.characterclass_.Release();
}
inline void SS2C_RANKING_RANGE_RES::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_RANKING_RANGE_RES.characterClass)
}

// -------------------------------------------------------------------

// SC2S_RANKING_CHARACTER_REQ

// string seasonId = 1;
inline void SC2S_RANKING_CHARACTER_REQ::clear_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.ClearToEmpty();
}
inline const std::string& SC2S_RANKING_CHARACTER_REQ::seasonid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_RANKING_CHARACTER_REQ.seasonId)
  return _internal_seasonid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_RANKING_CHARACTER_REQ::set_seasonid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_RANKING_CHARACTER_REQ.seasonId)
}
inline std::string* SC2S_RANKING_CHARACTER_REQ::mutable_seasonid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_seasonid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_RANKING_CHARACTER_REQ.seasonId)
  return _s;
}
inline const std::string& SC2S_RANKING_CHARACTER_REQ::_internal_seasonid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seasonid_.Get();
}
inline void SC2S_RANKING_CHARACTER_REQ::_internal_set_seasonid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.Set(value, GetArena());
}
inline std::string* SC2S_RANKING_CHARACTER_REQ::_internal_mutable_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.seasonid_.Mutable( GetArena());
}
inline std::string* SC2S_RANKING_CHARACTER_REQ::release_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_RANKING_CHARACTER_REQ.seasonId)
  return _impl_.seasonid_.Release();
}
inline void SC2S_RANKING_CHARACTER_REQ::set_allocated_seasonid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.seasonid_.IsDefault()) {
          _impl_.seasonid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_RANKING_CHARACTER_REQ.seasonId)
}

// string sheetId = 2;
inline void SC2S_RANKING_CHARACTER_REQ::clear_sheetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheetid_.ClearToEmpty();
}
inline const std::string& SC2S_RANKING_CHARACTER_REQ::sheetid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_RANKING_CHARACTER_REQ.sheetId)
  return _internal_sheetid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_RANKING_CHARACTER_REQ::set_sheetid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheetid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_RANKING_CHARACTER_REQ.sheetId)
}
inline std::string* SC2S_RANKING_CHARACTER_REQ::mutable_sheetid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sheetid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_RANKING_CHARACTER_REQ.sheetId)
  return _s;
}
inline const std::string& SC2S_RANKING_CHARACTER_REQ::_internal_sheetid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sheetid_.Get();
}
inline void SC2S_RANKING_CHARACTER_REQ::_internal_set_sheetid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheetid_.Set(value, GetArena());
}
inline std::string* SC2S_RANKING_CHARACTER_REQ::_internal_mutable_sheetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sheetid_.Mutable( GetArena());
}
inline std::string* SC2S_RANKING_CHARACTER_REQ::release_sheetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_RANKING_CHARACTER_REQ.sheetId)
  return _impl_.sheetid_.Release();
}
inline void SC2S_RANKING_CHARACTER_REQ::set_allocated_sheetid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheetid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sheetid_.IsDefault()) {
          _impl_.sheetid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_RANKING_CHARACTER_REQ.sheetId)
}

// string contentId = 3;
inline void SC2S_RANKING_CHARACTER_REQ::clear_contentid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.ClearToEmpty();
}
inline const std::string& SC2S_RANKING_CHARACTER_REQ::contentid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_RANKING_CHARACTER_REQ.contentId)
  return _internal_contentid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_RANKING_CHARACTER_REQ::set_contentid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_RANKING_CHARACTER_REQ.contentId)
}
inline std::string* SC2S_RANKING_CHARACTER_REQ::mutable_contentid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contentid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_RANKING_CHARACTER_REQ.contentId)
  return _s;
}
inline const std::string& SC2S_RANKING_CHARACTER_REQ::_internal_contentid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contentid_.Get();
}
inline void SC2S_RANKING_CHARACTER_REQ::_internal_set_contentid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.Set(value, GetArena());
}
inline std::string* SC2S_RANKING_CHARACTER_REQ::_internal_mutable_contentid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contentid_.Mutable( GetArena());
}
inline std::string* SC2S_RANKING_CHARACTER_REQ::release_contentid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_RANKING_CHARACTER_REQ.contentId)
  return _impl_.contentid_.Release();
}
inline void SC2S_RANKING_CHARACTER_REQ::set_allocated_contentid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contentid_.IsDefault()) {
          _impl_.contentid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_RANKING_CHARACTER_REQ.contentId)
}

// .DC.Packet.SACCOUNT_NICKNAME nickName = 4;
inline bool SC2S_RANKING_CHARACTER_REQ::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SC2S_RANKING_CHARACTER_REQ::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SC2S_RANKING_CHARACTER_REQ::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_RANKING_CHARACTER_REQ.nickName)
  return _internal_nickname();
}
inline void SC2S_RANKING_CHARACTER_REQ::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SC2S_RANKING_CHARACTER_REQ.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SC2S_RANKING_CHARACTER_REQ::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SC2S_RANKING_CHARACTER_REQ::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_RANKING_CHARACTER_REQ.nickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SC2S_RANKING_CHARACTER_REQ::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SC2S_RANKING_CHARACTER_REQ::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_RANKING_CHARACTER_REQ.nickName)
  return _msg;
}
inline void SC2S_RANKING_CHARACTER_REQ::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_RANKING_CHARACTER_REQ.nickName)
}

// string characterClass = 5;
inline void SC2S_RANKING_CHARACTER_REQ::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& SC2S_RANKING_CHARACTER_REQ::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_RANKING_CHARACTER_REQ.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_RANKING_CHARACTER_REQ::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_RANKING_CHARACTER_REQ.characterClass)
}
inline std::string* SC2S_RANKING_CHARACTER_REQ::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_RANKING_CHARACTER_REQ.characterClass)
  return _s;
}
inline const std::string& SC2S_RANKING_CHARACTER_REQ::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void SC2S_RANKING_CHARACTER_REQ::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* SC2S_RANKING_CHARACTER_REQ::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* SC2S_RANKING_CHARACTER_REQ::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_RANKING_CHARACTER_REQ.characterClass)
  return _impl_.characterclass_.Release();
}
inline void SC2S_RANKING_CHARACTER_REQ::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_RANKING_CHARACTER_REQ.characterClass)
}

// -------------------------------------------------------------------

// SC2S_RANKING_REWARD_GET_REQ

// string seasonId = 1;
inline void SC2S_RANKING_REWARD_GET_REQ::clear_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.ClearToEmpty();
}
inline const std::string& SC2S_RANKING_REWARD_GET_REQ::seasonid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_RANKING_REWARD_GET_REQ.seasonId)
  return _internal_seasonid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_RANKING_REWARD_GET_REQ::set_seasonid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_RANKING_REWARD_GET_REQ.seasonId)
}
inline std::string* SC2S_RANKING_REWARD_GET_REQ::mutable_seasonid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_seasonid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_RANKING_REWARD_GET_REQ.seasonId)
  return _s;
}
inline const std::string& SC2S_RANKING_REWARD_GET_REQ::_internal_seasonid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seasonid_.Get();
}
inline void SC2S_RANKING_REWARD_GET_REQ::_internal_set_seasonid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.Set(value, GetArena());
}
inline std::string* SC2S_RANKING_REWARD_GET_REQ::_internal_mutable_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.seasonid_.Mutable( GetArena());
}
inline std::string* SC2S_RANKING_REWARD_GET_REQ::release_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_RANKING_REWARD_GET_REQ.seasonId)
  return _impl_.seasonid_.Release();
}
inline void SC2S_RANKING_REWARD_GET_REQ::set_allocated_seasonid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.seasonid_.IsDefault()) {
          _impl_.seasonid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_RANKING_REWARD_GET_REQ.seasonId)
}

// string groupId = 2;
inline void SC2S_RANKING_REWARD_GET_REQ::clear_groupid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groupid_.ClearToEmpty();
}
inline const std::string& SC2S_RANKING_REWARD_GET_REQ::groupid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_RANKING_REWARD_GET_REQ.groupId)
  return _internal_groupid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_RANKING_REWARD_GET_REQ::set_groupid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groupid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_RANKING_REWARD_GET_REQ.groupId)
}
inline std::string* SC2S_RANKING_REWARD_GET_REQ::mutable_groupid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_groupid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_RANKING_REWARD_GET_REQ.groupId)
  return _s;
}
inline const std::string& SC2S_RANKING_REWARD_GET_REQ::_internal_groupid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.groupid_.Get();
}
inline void SC2S_RANKING_REWARD_GET_REQ::_internal_set_groupid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groupid_.Set(value, GetArena());
}
inline std::string* SC2S_RANKING_REWARD_GET_REQ::_internal_mutable_groupid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.groupid_.Mutable( GetArena());
}
inline std::string* SC2S_RANKING_REWARD_GET_REQ::release_groupid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_RANKING_REWARD_GET_REQ.groupId)
  return _impl_.groupid_.Release();
}
inline void SC2S_RANKING_REWARD_GET_REQ::set_allocated_groupid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groupid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.groupid_.IsDefault()) {
          _impl_.groupid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_RANKING_REWARD_GET_REQ.groupId)
}

// -------------------------------------------------------------------

// SS2C_RANKING_REWARD_GET_RES

// int32 result = 1;
inline void SS2C_RANKING_REWARD_GET_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0;
}
inline ::int32_t SS2C_RANKING_REWARD_GET_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_REWARD_GET_RES.result)
  return _internal_result();
}
inline void SS2C_RANKING_REWARD_GET_RES::set_result(::int32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_REWARD_GET_RES.result)
}
inline ::int32_t SS2C_RANKING_REWARD_GET_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_RANKING_REWARD_GET_RES::_internal_set_result(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SS2C_RANKING_CHARACTER_RES

// uint32 result = 1;
inline void SS2C_RANKING_CHARACTER_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_RANKING_CHARACTER_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_CHARACTER_RES.result)
  return _internal_result();
}
inline void SS2C_RANKING_CHARACTER_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_CHARACTER_RES.result)
}
inline ::uint32_t SS2C_RANKING_CHARACTER_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_RANKING_CHARACTER_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// string seasonId = 2;
inline void SS2C_RANKING_CHARACTER_RES::clear_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.ClearToEmpty();
}
inline const std::string& SS2C_RANKING_CHARACTER_RES::seasonid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_CHARACTER_RES.seasonId)
  return _internal_seasonid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_RANKING_CHARACTER_RES::set_seasonid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_CHARACTER_RES.seasonId)
}
inline std::string* SS2C_RANKING_CHARACTER_RES::mutable_seasonid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_seasonid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_RANKING_CHARACTER_RES.seasonId)
  return _s;
}
inline const std::string& SS2C_RANKING_CHARACTER_RES::_internal_seasonid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seasonid_.Get();
}
inline void SS2C_RANKING_CHARACTER_RES::_internal_set_seasonid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.Set(value, GetArena());
}
inline std::string* SS2C_RANKING_CHARACTER_RES::_internal_mutable_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.seasonid_.Mutable( GetArena());
}
inline std::string* SS2C_RANKING_CHARACTER_RES::release_seasonid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_RANKING_CHARACTER_RES.seasonId)
  return _impl_.seasonid_.Release();
}
inline void SS2C_RANKING_CHARACTER_RES::set_allocated_seasonid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seasonid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.seasonid_.IsDefault()) {
          _impl_.seasonid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_RANKING_CHARACTER_RES.seasonId)
}

// .DC.Packet.SRankRecord rankRecord = 3;
inline bool SS2C_RANKING_CHARACTER_RES::has_rankrecord() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rankrecord_ != nullptr);
  return value;
}
inline void SS2C_RANKING_CHARACTER_RES::clear_rankrecord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rankrecord_ != nullptr) _impl_.rankrecord_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::SRankRecord& SS2C_RANKING_CHARACTER_RES::_internal_rankrecord() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SRankRecord* p = _impl_.rankrecord_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SRankRecord&>(::DC::Packet::_SRankRecord_default_instance_);
}
inline const ::DC::Packet::SRankRecord& SS2C_RANKING_CHARACTER_RES::rankrecord() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_CHARACTER_RES.rankRecord)
  return _internal_rankrecord();
}
inline void SS2C_RANKING_CHARACTER_RES::unsafe_arena_set_allocated_rankrecord(::DC::Packet::SRankRecord* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rankrecord_);
  }
  _impl_.rankrecord_ = reinterpret_cast<::DC::Packet::SRankRecord*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_RANKING_CHARACTER_RES.rankRecord)
}
inline ::DC::Packet::SRankRecord* SS2C_RANKING_CHARACTER_RES::release_rankrecord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SRankRecord* released = _impl_.rankrecord_;
  _impl_.rankrecord_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SRankRecord* SS2C_RANKING_CHARACTER_RES::unsafe_arena_release_rankrecord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_RANKING_CHARACTER_RES.rankRecord)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SRankRecord* temp = _impl_.rankrecord_;
  _impl_.rankrecord_ = nullptr;
  return temp;
}
inline ::DC::Packet::SRankRecord* SS2C_RANKING_CHARACTER_RES::_internal_mutable_rankrecord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rankrecord_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SRankRecord>(GetArena());
    _impl_.rankrecord_ = reinterpret_cast<::DC::Packet::SRankRecord*>(p);
  }
  return _impl_.rankrecord_;
}
inline ::DC::Packet::SRankRecord* SS2C_RANKING_CHARACTER_RES::mutable_rankrecord() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SRankRecord* _msg = _internal_mutable_rankrecord();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_RANKING_CHARACTER_RES.rankRecord)
  return _msg;
}
inline void SS2C_RANKING_CHARACTER_RES::set_allocated_rankrecord(::DC::Packet::SRankRecord* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.rankrecord_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.rankrecord_ = reinterpret_cast<::DC::Packet::SRankRecord*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_RANKING_CHARACTER_RES.rankRecord)
}

// string sheetId = 4;
inline void SS2C_RANKING_CHARACTER_RES::clear_sheetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheetid_.ClearToEmpty();
}
inline const std::string& SS2C_RANKING_CHARACTER_RES::sheetid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_CHARACTER_RES.sheetId)
  return _internal_sheetid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_RANKING_CHARACTER_RES::set_sheetid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheetid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_CHARACTER_RES.sheetId)
}
inline std::string* SS2C_RANKING_CHARACTER_RES::mutable_sheetid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sheetid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_RANKING_CHARACTER_RES.sheetId)
  return _s;
}
inline const std::string& SS2C_RANKING_CHARACTER_RES::_internal_sheetid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sheetid_.Get();
}
inline void SS2C_RANKING_CHARACTER_RES::_internal_set_sheetid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheetid_.Set(value, GetArena());
}
inline std::string* SS2C_RANKING_CHARACTER_RES::_internal_mutable_sheetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sheetid_.Mutable( GetArena());
}
inline std::string* SS2C_RANKING_CHARACTER_RES::release_sheetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_RANKING_CHARACTER_RES.sheetId)
  return _impl_.sheetid_.Release();
}
inline void SS2C_RANKING_CHARACTER_RES::set_allocated_sheetid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheetid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sheetid_.IsDefault()) {
          _impl_.sheetid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_RANKING_CHARACTER_RES.sheetId)
}

// string contentId = 5;
inline void SS2C_RANKING_CHARACTER_RES::clear_contentid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.ClearToEmpty();
}
inline const std::string& SS2C_RANKING_CHARACTER_RES::contentid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_CHARACTER_RES.contentId)
  return _internal_contentid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_RANKING_CHARACTER_RES::set_contentid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_CHARACTER_RES.contentId)
}
inline std::string* SS2C_RANKING_CHARACTER_RES::mutable_contentid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contentid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_RANKING_CHARACTER_RES.contentId)
  return _s;
}
inline const std::string& SS2C_RANKING_CHARACTER_RES::_internal_contentid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contentid_.Get();
}
inline void SS2C_RANKING_CHARACTER_RES::_internal_set_contentid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.Set(value, GetArena());
}
inline std::string* SS2C_RANKING_CHARACTER_RES::_internal_mutable_contentid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contentid_.Mutable( GetArena());
}
inline std::string* SS2C_RANKING_CHARACTER_RES::release_contentid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_RANKING_CHARACTER_RES.contentId)
  return _impl_.contentid_.Release();
}
inline void SS2C_RANKING_CHARACTER_RES::set_allocated_contentid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contentid_.IsDefault()) {
          _impl_.contentid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_RANKING_CHARACTER_RES.contentId)
}

// uint32 allRowCount = 6;
inline void SS2C_RANKING_CHARACTER_RES::clear_allrowcount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allrowcount_ = 0u;
}
inline ::uint32_t SS2C_RANKING_CHARACTER_RES::allrowcount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_CHARACTER_RES.allRowCount)
  return _internal_allrowcount();
}
inline void SS2C_RANKING_CHARACTER_RES::set_allrowcount(::uint32_t value) {
  _internal_set_allrowcount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_CHARACTER_RES.allRowCount)
}
inline ::uint32_t SS2C_RANKING_CHARACTER_RES::_internal_allrowcount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allrowcount_;
}
inline void SS2C_RANKING_CHARACTER_RES::_internal_set_allrowcount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allrowcount_ = value;
}

// string characterClass = 7;
inline void SS2C_RANKING_CHARACTER_RES::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& SS2C_RANKING_CHARACTER_RES::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_CHARACTER_RES.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_RANKING_CHARACTER_RES::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_CHARACTER_RES.characterClass)
}
inline std::string* SS2C_RANKING_CHARACTER_RES::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_RANKING_CHARACTER_RES.characterClass)
  return _s;
}
inline const std::string& SS2C_RANKING_CHARACTER_RES::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void SS2C_RANKING_CHARACTER_RES::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* SS2C_RANKING_CHARACTER_RES::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* SS2C_RANKING_CHARACTER_RES::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_RANKING_CHARACTER_RES.characterClass)
  return _impl_.characterclass_.Release();
}
inline void SS2C_RANKING_CHARACTER_RES::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_RANKING_CHARACTER_RES.characterClass)
}

// uint32 playGameCount = 8;
inline void SS2C_RANKING_CHARACTER_RES::clear_playgamecount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playgamecount_ = 0u;
}
inline ::uint32_t SS2C_RANKING_CHARACTER_RES::playgamecount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_CHARACTER_RES.playGameCount)
  return _internal_playgamecount();
}
inline void SS2C_RANKING_CHARACTER_RES::set_playgamecount(::uint32_t value) {
  _internal_set_playgamecount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_CHARACTER_RES.playGameCount)
}
inline ::uint32_t SS2C_RANKING_CHARACTER_RES::_internal_playgamecount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playgamecount_;
}
inline void SS2C_RANKING_CHARACTER_RES::_internal_set_playgamecount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playgamecount_ = value;
}

// uint32 batchGameCount = 9;
inline void SS2C_RANKING_CHARACTER_RES::clear_batchgamecount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.batchgamecount_ = 0u;
}
inline ::uint32_t SS2C_RANKING_CHARACTER_RES::batchgamecount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_CHARACTER_RES.batchGameCount)
  return _internal_batchgamecount();
}
inline void SS2C_RANKING_CHARACTER_RES::set_batchgamecount(::uint32_t value) {
  _internal_set_batchgamecount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_CHARACTER_RES.batchGameCount)
}
inline ::uint32_t SS2C_RANKING_CHARACTER_RES::_internal_batchgamecount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.batchgamecount_;
}
inline void SS2C_RANKING_CHARACTER_RES::_internal_set_batchgamecount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.batchgamecount_ = value;
}

// -------------------------------------------------------------------

// SC2S_RANKING_AP_CONFIG_REQ

// int32 gameType = 1;
inline void SC2S_RANKING_AP_CONFIG_REQ::clear_gametype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gametype_ = 0;
}
inline ::int32_t SC2S_RANKING_AP_CONFIG_REQ::gametype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_RANKING_AP_CONFIG_REQ.gameType)
  return _internal_gametype();
}
inline void SC2S_RANKING_AP_CONFIG_REQ::set_gametype(::int32_t value) {
  _internal_set_gametype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_RANKING_AP_CONFIG_REQ.gameType)
}
inline ::int32_t SC2S_RANKING_AP_CONFIG_REQ::_internal_gametype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gametype_;
}
inline void SC2S_RANKING_AP_CONFIG_REQ::_internal_set_gametype(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gametype_ = value;
}

// string dungeonTagId = 2;
inline void SC2S_RANKING_AP_CONFIG_REQ::clear_dungeontagid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeontagid_.ClearToEmpty();
}
inline const std::string& SC2S_RANKING_AP_CONFIG_REQ::dungeontagid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_RANKING_AP_CONFIG_REQ.dungeonTagId)
  return _internal_dungeontagid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_RANKING_AP_CONFIG_REQ::set_dungeontagid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeontagid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_RANKING_AP_CONFIG_REQ.dungeonTagId)
}
inline std::string* SC2S_RANKING_AP_CONFIG_REQ::mutable_dungeontagid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dungeontagid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_RANKING_AP_CONFIG_REQ.dungeonTagId)
  return _s;
}
inline const std::string& SC2S_RANKING_AP_CONFIG_REQ::_internal_dungeontagid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dungeontagid_.Get();
}
inline void SC2S_RANKING_AP_CONFIG_REQ::_internal_set_dungeontagid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeontagid_.Set(value, GetArena());
}
inline std::string* SC2S_RANKING_AP_CONFIG_REQ::_internal_mutable_dungeontagid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dungeontagid_.Mutable( GetArena());
}
inline std::string* SC2S_RANKING_AP_CONFIG_REQ::release_dungeontagid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_RANKING_AP_CONFIG_REQ.dungeonTagId)
  return _impl_.dungeontagid_.Release();
}
inline void SC2S_RANKING_AP_CONFIG_REQ::set_allocated_dungeontagid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeontagid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dungeontagid_.IsDefault()) {
          _impl_.dungeontagid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_RANKING_AP_CONFIG_REQ.dungeonTagId)
}

// -------------------------------------------------------------------

// SRANKING_AP_CONFIG_RECORD

// string rankAPId = 1;
inline void SRANKING_AP_CONFIG_RECORD::clear_rankapid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankapid_.ClearToEmpty();
}
inline const std::string& SRANKING_AP_CONFIG_RECORD::rankapid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_AP_CONFIG_RECORD.rankAPId)
  return _internal_rankapid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRANKING_AP_CONFIG_RECORD::set_rankapid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankapid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_AP_CONFIG_RECORD.rankAPId)
}
inline std::string* SRANKING_AP_CONFIG_RECORD::mutable_rankapid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rankapid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_AP_CONFIG_RECORD.rankAPId)
  return _s;
}
inline const std::string& SRANKING_AP_CONFIG_RECORD::_internal_rankapid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rankapid_.Get();
}
inline void SRANKING_AP_CONFIG_RECORD::_internal_set_rankapid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankapid_.Set(value, GetArena());
}
inline std::string* SRANKING_AP_CONFIG_RECORD::_internal_mutable_rankapid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rankapid_.Mutable( GetArena());
}
inline std::string* SRANKING_AP_CONFIG_RECORD::release_rankapid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRANKING_AP_CONFIG_RECORD.rankAPId)
  return _impl_.rankapid_.Release();
}
inline void SRANKING_AP_CONFIG_RECORD::set_allocated_rankapid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankapid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rankapid_.IsDefault()) {
          _impl_.rankapid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRANKING_AP_CONFIG_RECORD.rankAPId)
}

// int32 requiredTotalAP = 2;
inline void SRANKING_AP_CONFIG_RECORD::clear_requiredtotalap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requiredtotalap_ = 0;
}
inline ::int32_t SRANKING_AP_CONFIG_RECORD::requiredtotalap() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_AP_CONFIG_RECORD.requiredTotalAP)
  return _internal_requiredtotalap();
}
inline void SRANKING_AP_CONFIG_RECORD::set_requiredtotalap(::int32_t value) {
  _internal_set_requiredtotalap(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_AP_CONFIG_RECORD.requiredTotalAP)
}
inline ::int32_t SRANKING_AP_CONFIG_RECORD::_internal_requiredtotalap() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requiredtotalap_;
}
inline void SRANKING_AP_CONFIG_RECORD::_internal_set_requiredtotalap(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requiredtotalap_ = value;
}

// -------------------------------------------------------------------

// SRANKING_EF_CONFIG_RECORD

// string rankEFId = 1;
inline void SRANKING_EF_CONFIG_RECORD::clear_rankefid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankefid_.ClearToEmpty();
}
inline const std::string& SRANKING_EF_CONFIG_RECORD::rankefid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_EF_CONFIG_RECORD.rankEFId)
  return _internal_rankefid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRANKING_EF_CONFIG_RECORD::set_rankefid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankefid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_EF_CONFIG_RECORD.rankEFId)
}
inline std::string* SRANKING_EF_CONFIG_RECORD::mutable_rankefid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rankefid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_EF_CONFIG_RECORD.rankEFId)
  return _s;
}
inline const std::string& SRANKING_EF_CONFIG_RECORD::_internal_rankefid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rankefid_.Get();
}
inline void SRANKING_EF_CONFIG_RECORD::_internal_set_rankefid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankefid_.Set(value, GetArena());
}
inline std::string* SRANKING_EF_CONFIG_RECORD::_internal_mutable_rankefid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rankefid_.Mutable( GetArena());
}
inline std::string* SRANKING_EF_CONFIG_RECORD::release_rankefid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRANKING_EF_CONFIG_RECORD.rankEFId)
  return _impl_.rankefid_.Release();
}
inline void SRANKING_EF_CONFIG_RECORD::set_allocated_rankefid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankefid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rankefid_.IsDefault()) {
          _impl_.rankefid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRANKING_EF_CONFIG_RECORD.rankEFId)
}

// int32 entranceFee = 2;
inline void SRANKING_EF_CONFIG_RECORD::clear_entrancefee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entrancefee_ = 0;
}
inline ::int32_t SRANKING_EF_CONFIG_RECORD::entrancefee() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_EF_CONFIG_RECORD.entranceFee)
  return _internal_entrancefee();
}
inline void SRANKING_EF_CONFIG_RECORD::set_entrancefee(::int32_t value) {
  _internal_set_entrancefee(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_EF_CONFIG_RECORD.entranceFee)
}
inline ::int32_t SRANKING_EF_CONFIG_RECORD::_internal_entrancefee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entrancefee_;
}
inline void SRANKING_EF_CONFIG_RECORD::_internal_set_entrancefee(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entrancefee_ = value;
}

// -------------------------------------------------------------------

// SRANKING_CONFIG_INFO

// int32 gameType = 1;
inline void SRANKING_CONFIG_INFO::clear_gametype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gametype_ = 0;
}
inline ::int32_t SRANKING_CONFIG_INFO::gametype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_CONFIG_INFO.gameType)
  return _internal_gametype();
}
inline void SRANKING_CONFIG_INFO::set_gametype(::int32_t value) {
  _internal_set_gametype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_CONFIG_INFO.gameType)
}
inline ::int32_t SRANKING_CONFIG_INFO::_internal_gametype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gametype_;
}
inline void SRANKING_CONFIG_INFO::_internal_set_gametype(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gametype_ = value;
}

// string dungeonIdTag = 2;
inline void SRANKING_CONFIG_INFO::clear_dungeonidtag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonidtag_.ClearToEmpty();
}
inline const std::string& SRANKING_CONFIG_INFO::dungeonidtag() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_CONFIG_INFO.dungeonIdTag)
  return _internal_dungeonidtag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRANKING_CONFIG_INFO::set_dungeonidtag(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonidtag_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRANKING_CONFIG_INFO.dungeonIdTag)
}
inline std::string* SRANKING_CONFIG_INFO::mutable_dungeonidtag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dungeonidtag();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_CONFIG_INFO.dungeonIdTag)
  return _s;
}
inline const std::string& SRANKING_CONFIG_INFO::_internal_dungeonidtag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dungeonidtag_.Get();
}
inline void SRANKING_CONFIG_INFO::_internal_set_dungeonidtag(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonidtag_.Set(value, GetArena());
}
inline std::string* SRANKING_CONFIG_INFO::_internal_mutable_dungeonidtag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dungeonidtag_.Mutable( GetArena());
}
inline std::string* SRANKING_CONFIG_INFO::release_dungeonidtag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRANKING_CONFIG_INFO.dungeonIdTag)
  return _impl_.dungeonidtag_.Release();
}
inline void SRANKING_CONFIG_INFO::set_allocated_dungeonidtag(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungeonidtag_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dungeonidtag_.IsDefault()) {
          _impl_.dungeonidtag_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRANKING_CONFIG_INFO.dungeonIdTag)
}

// repeated .DC.Packet.SRANKING_AP_CONFIG_RECORD apRecords = 3;
inline int SRANKING_CONFIG_INFO::_internal_aprecords_size() const {
  return _internal_aprecords().size();
}
inline int SRANKING_CONFIG_INFO::aprecords_size() const {
  return _internal_aprecords_size();
}
inline void SRANKING_CONFIG_INFO::clear_aprecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aprecords_.Clear();
}
inline ::DC::Packet::SRANKING_AP_CONFIG_RECORD* SRANKING_CONFIG_INFO::mutable_aprecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_CONFIG_INFO.apRecords)
  return _internal_mutable_aprecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_AP_CONFIG_RECORD>* SRANKING_CONFIG_INFO::mutable_aprecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SRANKING_CONFIG_INFO.apRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_aprecords();
}
inline const ::DC::Packet::SRANKING_AP_CONFIG_RECORD& SRANKING_CONFIG_INFO::aprecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_CONFIG_INFO.apRecords)
  return _internal_aprecords().Get(index);
}
inline ::DC::Packet::SRANKING_AP_CONFIG_RECORD* SRANKING_CONFIG_INFO::add_aprecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SRANKING_AP_CONFIG_RECORD* _add = _internal_mutable_aprecords()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SRANKING_CONFIG_INFO.apRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_AP_CONFIG_RECORD>& SRANKING_CONFIG_INFO::aprecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SRANKING_CONFIG_INFO.apRecords)
  return _internal_aprecords();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_AP_CONFIG_RECORD>&
SRANKING_CONFIG_INFO::_internal_aprecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.aprecords_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_AP_CONFIG_RECORD>*
SRANKING_CONFIG_INFO::_internal_mutable_aprecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.aprecords_;
}

// repeated .DC.Packet.SRANKING_EF_CONFIG_RECORD efRecords = 4;
inline int SRANKING_CONFIG_INFO::_internal_efrecords_size() const {
  return _internal_efrecords().size();
}
inline int SRANKING_CONFIG_INFO::efrecords_size() const {
  return _internal_efrecords_size();
}
inline void SRANKING_CONFIG_INFO::clear_efrecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.efrecords_.Clear();
}
inline ::DC::Packet::SRANKING_EF_CONFIG_RECORD* SRANKING_CONFIG_INFO::mutable_efrecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRANKING_CONFIG_INFO.efRecords)
  return _internal_mutable_efrecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_EF_CONFIG_RECORD>* SRANKING_CONFIG_INFO::mutable_efrecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SRANKING_CONFIG_INFO.efRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_efrecords();
}
inline const ::DC::Packet::SRANKING_EF_CONFIG_RECORD& SRANKING_CONFIG_INFO::efrecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRANKING_CONFIG_INFO.efRecords)
  return _internal_efrecords().Get(index);
}
inline ::DC::Packet::SRANKING_EF_CONFIG_RECORD* SRANKING_CONFIG_INFO::add_efrecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SRANKING_EF_CONFIG_RECORD* _add = _internal_mutable_efrecords()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SRANKING_CONFIG_INFO.efRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_EF_CONFIG_RECORD>& SRANKING_CONFIG_INFO::efrecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SRANKING_CONFIG_INFO.efRecords)
  return _internal_efrecords();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_EF_CONFIG_RECORD>&
SRANKING_CONFIG_INFO::_internal_efrecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.efrecords_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_EF_CONFIG_RECORD>*
SRANKING_CONFIG_INFO::_internal_mutable_efrecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.efrecords_;
}

// -------------------------------------------------------------------

// SS2C_RANKING_AP_CONFIG_RES

// repeated .DC.Packet.SRANKING_CONFIG_INFO configInfos = 1;
inline int SS2C_RANKING_AP_CONFIG_RES::_internal_configinfos_size() const {
  return _internal_configinfos().size();
}
inline int SS2C_RANKING_AP_CONFIG_RES::configinfos_size() const {
  return _internal_configinfos_size();
}
inline void SS2C_RANKING_AP_CONFIG_RES::clear_configinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.configinfos_.Clear();
}
inline ::DC::Packet::SRANKING_CONFIG_INFO* SS2C_RANKING_AP_CONFIG_RES::mutable_configinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_RANKING_AP_CONFIG_RES.configInfos)
  return _internal_mutable_configinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_CONFIG_INFO>* SS2C_RANKING_AP_CONFIG_RES::mutable_configinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_RANKING_AP_CONFIG_RES.configInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_configinfos();
}
inline const ::DC::Packet::SRANKING_CONFIG_INFO& SS2C_RANKING_AP_CONFIG_RES::configinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_AP_CONFIG_RES.configInfos)
  return _internal_configinfos().Get(index);
}
inline ::DC::Packet::SRANKING_CONFIG_INFO* SS2C_RANKING_AP_CONFIG_RES::add_configinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SRANKING_CONFIG_INFO* _add = _internal_mutable_configinfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_RANKING_AP_CONFIG_RES.configInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_CONFIG_INFO>& SS2C_RANKING_AP_CONFIG_RES::configinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_RANKING_AP_CONFIG_RES.configInfos)
  return _internal_configinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_CONFIG_INFO>&
SS2C_RANKING_AP_CONFIG_RES::_internal_configinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.configinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SRANKING_CONFIG_INFO>*
SS2C_RANKING_AP_CONFIG_RES::_internal_mutable_configinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.configinfos_;
}

// -------------------------------------------------------------------

// SS2C_RANKING_HAS_REWARD_NOT

// int32 isHasReward = 1;
inline void SS2C_RANKING_HAS_REWARD_NOT::clear_ishasreward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ishasreward_ = 0;
}
inline ::int32_t SS2C_RANKING_HAS_REWARD_NOT::ishasreward() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RANKING_HAS_REWARD_NOT.isHasReward)
  return _internal_ishasreward();
}
inline void SS2C_RANKING_HAS_REWARD_NOT::set_ishasreward(::int32_t value) {
  _internal_set_ishasreward(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RANKING_HAS_REWARD_NOT.isHasReward)
}
inline ::int32_t SS2C_RANKING_HAS_REWARD_NOT::_internal_ishasreward() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ishasreward_;
}
inline void SS2C_RANKING_HAS_REWARD_NOT::_internal_set_ishasreward(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ishasreward_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Packet
}  // namespace DC


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::DC::Packet::SRANKING_REWARD_INFO_REWARD_STATE> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::DC::Packet::SRANKING_REWARD_INFO_REWARD_STATE>() {
  return ::DC::Packet::SRANKING_REWARD_INFO_REWARD_STATE_descriptor();
}
template <>
struct is_proto_enum<::DC::Packet::SRANKING_INFO_STATE> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::DC::Packet::SRANKING_INFO_STATE>() {
  return ::DC::Packet::SRANKING_INFO_STATE_descriptor();
}
template <>
struct is_proto_enum<::DC::Packet::RANKING_TYPE> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::DC::Packet::RANKING_TYPE>() {
  return ::DC::Packet::RANKING_TYPE_descriptor();
}
template <>
struct is_proto_enum<::DC::Packet::CONTENT_TYPE> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::DC::Packet::CONTENT_TYPE>() {
  return ::DC::Packet::CONTENT_TYPE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Ranking_2eproto_2epb_2eh
