// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Trade.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_Trade_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Trade_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "_Item.pb.h"
#include "_Character.pb.h"
#include "_Chat.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Trade_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Trade_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Trade_2eproto;
namespace DC {
namespace Packet {
class SC2S_TRADE_ANSWER_REQ;
struct SC2S_TRADE_ANSWER_REQDefaultTypeInternal;
extern SC2S_TRADE_ANSWER_REQDefaultTypeInternal _SC2S_TRADE_ANSWER_REQ_default_instance_;
class SC2S_TRADE_CHANNEL_CHAT_REQ;
struct SC2S_TRADE_CHANNEL_CHAT_REQDefaultTypeInternal;
extern SC2S_TRADE_CHANNEL_CHAT_REQDefaultTypeInternal _SC2S_TRADE_CHANNEL_CHAT_REQ_default_instance_;
class SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ;
struct SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQDefaultTypeInternal;
extern SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQDefaultTypeInternal _SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ_default_instance_;
class SC2S_TRADE_CHANNEL_EXIT_REQ;
struct SC2S_TRADE_CHANNEL_EXIT_REQDefaultTypeInternal;
extern SC2S_TRADE_CHANNEL_EXIT_REQDefaultTypeInternal _SC2S_TRADE_CHANNEL_EXIT_REQ_default_instance_;
class SC2S_TRADE_CHANNEL_LIST_REQ;
struct SC2S_TRADE_CHANNEL_LIST_REQDefaultTypeInternal;
extern SC2S_TRADE_CHANNEL_LIST_REQDefaultTypeInternal _SC2S_TRADE_CHANNEL_LIST_REQ_default_instance_;
class SC2S_TRADE_CHANNEL_SELECT_REQ;
struct SC2S_TRADE_CHANNEL_SELECT_REQDefaultTypeInternal;
extern SC2S_TRADE_CHANNEL_SELECT_REQDefaultTypeInternal _SC2S_TRADE_CHANNEL_SELECT_REQ_default_instance_;
class SC2S_TRADE_CHANNEL_USER_LIST_REQ;
struct SC2S_TRADE_CHANNEL_USER_LIST_REQDefaultTypeInternal;
extern SC2S_TRADE_CHANNEL_USER_LIST_REQDefaultTypeInternal _SC2S_TRADE_CHANNEL_USER_LIST_REQ_default_instance_;
class SC2S_TRADE_MEMBERSHIP_REQ;
struct SC2S_TRADE_MEMBERSHIP_REQDefaultTypeInternal;
extern SC2S_TRADE_MEMBERSHIP_REQDefaultTypeInternal _SC2S_TRADE_MEMBERSHIP_REQ_default_instance_;
class SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ;
struct SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQDefaultTypeInternal;
extern SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQDefaultTypeInternal _SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ_default_instance_;
class SC2S_TRADE_REQUEST_REQ;
struct SC2S_TRADE_REQUEST_REQDefaultTypeInternal;
extern SC2S_TRADE_REQUEST_REQDefaultTypeInternal _SC2S_TRADE_REQUEST_REQ_default_instance_;
class SC2S_TRADING_CHAT_REQ;
struct SC2S_TRADING_CHAT_REQDefaultTypeInternal;
extern SC2S_TRADING_CHAT_REQDefaultTypeInternal _SC2S_TRADING_CHAT_REQ_default_instance_;
class SC2S_TRADING_CLOSE_REQ;
struct SC2S_TRADING_CLOSE_REQDefaultTypeInternal;
extern SC2S_TRADING_CLOSE_REQDefaultTypeInternal _SC2S_TRADING_CLOSE_REQ_default_instance_;
class SC2S_TRADING_CONFIRM_CANCEL_REQ;
struct SC2S_TRADING_CONFIRM_CANCEL_REQDefaultTypeInternal;
extern SC2S_TRADING_CONFIRM_CANCEL_REQDefaultTypeInternal _SC2S_TRADING_CONFIRM_CANCEL_REQ_default_instance_;
class SC2S_TRADING_CONFIRM_READY_REQ;
struct SC2S_TRADING_CONFIRM_READY_REQDefaultTypeInternal;
extern SC2S_TRADING_CONFIRM_READY_REQDefaultTypeInternal _SC2S_TRADING_CONFIRM_READY_REQ_default_instance_;
class SC2S_TRADING_ITEM_UPDATE_REQ;
struct SC2S_TRADING_ITEM_UPDATE_REQDefaultTypeInternal;
extern SC2S_TRADING_ITEM_UPDATE_REQDefaultTypeInternal _SC2S_TRADING_ITEM_UPDATE_REQ_default_instance_;
class SC2S_TRADING_READY_REQ;
struct SC2S_TRADING_READY_REQDefaultTypeInternal;
extern SC2S_TRADING_READY_REQDefaultTypeInternal _SC2S_TRADING_READY_REQ_default_instance_;
class SS2C_TRADE_ANSWER_REFUSAL_NOT;
struct SS2C_TRADE_ANSWER_REFUSAL_NOTDefaultTypeInternal;
extern SS2C_TRADE_ANSWER_REFUSAL_NOTDefaultTypeInternal _SS2C_TRADE_ANSWER_REFUSAL_NOT_default_instance_;
class SS2C_TRADE_ANSWER_RES;
struct SS2C_TRADE_ANSWER_RESDefaultTypeInternal;
extern SS2C_TRADE_ANSWER_RESDefaultTypeInternal _SS2C_TRADE_ANSWER_RES_default_instance_;
class SS2C_TRADE_CHANNEL_CHAT_RES;
struct SS2C_TRADE_CHANNEL_CHAT_RESDefaultTypeInternal;
extern SS2C_TRADE_CHANNEL_CHAT_RESDefaultTypeInternal _SS2C_TRADE_CHANNEL_CHAT_RES_default_instance_;
class SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES;
struct SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RESDefaultTypeInternal;
extern SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RESDefaultTypeInternal _SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES_default_instance_;
class SS2C_TRADE_CHANNEL_EXIT_RES;
struct SS2C_TRADE_CHANNEL_EXIT_RESDefaultTypeInternal;
extern SS2C_TRADE_CHANNEL_EXIT_RESDefaultTypeInternal _SS2C_TRADE_CHANNEL_EXIT_RES_default_instance_;
class SS2C_TRADE_CHANNEL_LIST_RES;
struct SS2C_TRADE_CHANNEL_LIST_RESDefaultTypeInternal;
extern SS2C_TRADE_CHANNEL_LIST_RESDefaultTypeInternal _SS2C_TRADE_CHANNEL_LIST_RES_default_instance_;
class SS2C_TRADE_CHANNEL_SELECT_RES;
struct SS2C_TRADE_CHANNEL_SELECT_RESDefaultTypeInternal;
extern SS2C_TRADE_CHANNEL_SELECT_RESDefaultTypeInternal _SS2C_TRADE_CHANNEL_SELECT_RES_default_instance_;
class SS2C_TRADE_CHANNEL_USER_LIST_RES;
struct SS2C_TRADE_CHANNEL_USER_LIST_RESDefaultTypeInternal;
extern SS2C_TRADE_CHANNEL_USER_LIST_RESDefaultTypeInternal _SS2C_TRADE_CHANNEL_USER_LIST_RES_default_instance_;
class SS2C_TRADE_CHANNEL_USER_UPDATE_NOT;
struct SS2C_TRADE_CHANNEL_USER_UPDATE_NOTDefaultTypeInternal;
extern SS2C_TRADE_CHANNEL_USER_UPDATE_NOTDefaultTypeInternal _SS2C_TRADE_CHANNEL_USER_UPDATE_NOT_default_instance_;
class SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES;
struct SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RESDefaultTypeInternal;
extern SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RESDefaultTypeInternal _SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES_default_instance_;
class SS2C_TRADE_MEMBERSHIP_RES;
struct SS2C_TRADE_MEMBERSHIP_RESDefaultTypeInternal;
extern SS2C_TRADE_MEMBERSHIP_RESDefaultTypeInternal _SS2C_TRADE_MEMBERSHIP_RES_default_instance_;
class SS2C_TRADE_REQUEST_NOT;
struct SS2C_TRADE_REQUEST_NOTDefaultTypeInternal;
extern SS2C_TRADE_REQUEST_NOTDefaultTypeInternal _SS2C_TRADE_REQUEST_NOT_default_instance_;
class SS2C_TRADE_REQUEST_RES;
struct SS2C_TRADE_REQUEST_RESDefaultTypeInternal;
extern SS2C_TRADE_REQUEST_RESDefaultTypeInternal _SS2C_TRADE_REQUEST_RES_default_instance_;
class SS2C_TRADING_BEGIN_NOT;
struct SS2C_TRADING_BEGIN_NOTDefaultTypeInternal;
extern SS2C_TRADING_BEGIN_NOTDefaultTypeInternal _SS2C_TRADING_BEGIN_NOT_default_instance_;
class SS2C_TRADING_CHAT_RES;
struct SS2C_TRADING_CHAT_RESDefaultTypeInternal;
extern SS2C_TRADING_CHAT_RESDefaultTypeInternal _SS2C_TRADING_CHAT_RES_default_instance_;
class SS2C_TRADING_CLOSE_RES;
struct SS2C_TRADING_CLOSE_RESDefaultTypeInternal;
extern SS2C_TRADING_CLOSE_RESDefaultTypeInternal _SS2C_TRADING_CLOSE_RES_default_instance_;
class SS2C_TRADING_CONFIRM_CANCEL_RES;
struct SS2C_TRADING_CONFIRM_CANCEL_RESDefaultTypeInternal;
extern SS2C_TRADING_CONFIRM_CANCEL_RESDefaultTypeInternal _SS2C_TRADING_CONFIRM_CANCEL_RES_default_instance_;
class SS2C_TRADING_CONFIRM_NOT;
struct SS2C_TRADING_CONFIRM_NOTDefaultTypeInternal;
extern SS2C_TRADING_CONFIRM_NOTDefaultTypeInternal _SS2C_TRADING_CONFIRM_NOT_default_instance_;
class SS2C_TRADING_CONFIRM_READY_NOT;
struct SS2C_TRADING_CONFIRM_READY_NOTDefaultTypeInternal;
extern SS2C_TRADING_CONFIRM_READY_NOTDefaultTypeInternal _SS2C_TRADING_CONFIRM_READY_NOT_default_instance_;
class SS2C_TRADING_CONFIRM_READY_RES;
struct SS2C_TRADING_CONFIRM_READY_RESDefaultTypeInternal;
extern SS2C_TRADING_CONFIRM_READY_RESDefaultTypeInternal _SS2C_TRADING_CONFIRM_READY_RES_default_instance_;
class SS2C_TRADING_ITEM_UPDATE_RES;
struct SS2C_TRADING_ITEM_UPDATE_RESDefaultTypeInternal;
extern SS2C_TRADING_ITEM_UPDATE_RESDefaultTypeInternal _SS2C_TRADING_ITEM_UPDATE_RES_default_instance_;
class SS2C_TRADING_READY_NOT;
struct SS2C_TRADING_READY_NOTDefaultTypeInternal;
extern SS2C_TRADING_READY_NOTDefaultTypeInternal _SS2C_TRADING_READY_NOT_default_instance_;
class SS2C_TRADING_READY_RES;
struct SS2C_TRADING_READY_RESDefaultTypeInternal;
extern SS2C_TRADING_READY_RESDefaultTypeInternal _SS2C_TRADING_READY_RES_default_instance_;
class SS2C_TRADING_RESULT_NOT;
struct SS2C_TRADING_RESULT_NOTDefaultTypeInternal;
extern SS2C_TRADING_RESULT_NOTDefaultTypeInternal _SS2C_TRADING_RESULT_NOT_default_instance_;
class STRADE_CHANNEL;
struct STRADE_CHANNELDefaultTypeInternal;
extern STRADE_CHANNELDefaultTypeInternal _STRADE_CHANNEL_default_instance_;
class STRADE_CHANNEL_USER_UPDATE_INFO;
struct STRADE_CHANNEL_USER_UPDATE_INFODefaultTypeInternal;
extern STRADE_CHANNEL_USER_UPDATE_INFODefaultTypeInternal _STRADE_CHANNEL_USER_UPDATE_INFO_default_instance_;
class STRADE_CHAT_C2S;
struct STRADE_CHAT_C2SDefaultTypeInternal;
extern STRADE_CHAT_C2SDefaultTypeInternal _STRADE_CHAT_C2S_default_instance_;
class STRADE_CHAT_S2C;
struct STRADE_CHAT_S2CDefaultTypeInternal;
extern STRADE_CHAT_S2CDefaultTypeInternal _STRADE_CHAT_S2C_default_instance_;
class STRADE_MEMBERSHIP_REQUIREMENT;
struct STRADE_MEMBERSHIP_REQUIREMENTDefaultTypeInternal;
extern STRADE_MEMBERSHIP_REQUIREMENTDefaultTypeInternal _STRADE_MEMBERSHIP_REQUIREMENT_default_instance_;
class STRADING_CONFIRM_ITEM;
struct STRADING_CONFIRM_ITEMDefaultTypeInternal;
extern STRADING_CONFIRM_ITEMDefaultTypeInternal _STRADING_CONFIRM_ITEM_default_instance_;
class STRADING_USER_INFO;
struct STRADING_USER_INFODefaultTypeInternal;
extern STRADING_USER_INFODefaultTypeInternal _STRADING_USER_INFO_default_instance_;
}  // namespace Packet
}  // namespace DC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace DC {
namespace Packet {

// ===================================================================


// -------------------------------------------------------------------

class STRADE_MEMBERSHIP_REQUIREMENT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.STRADE_MEMBERSHIP_REQUIREMENT) */ {
 public:
  inline STRADE_MEMBERSHIP_REQUIREMENT() : STRADE_MEMBERSHIP_REQUIREMENT(nullptr) {}
  ~STRADE_MEMBERSHIP_REQUIREMENT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR STRADE_MEMBERSHIP_REQUIREMENT(
      ::google::protobuf::internal::ConstantInitialized);

  inline STRADE_MEMBERSHIP_REQUIREMENT(const STRADE_MEMBERSHIP_REQUIREMENT& from) : STRADE_MEMBERSHIP_REQUIREMENT(nullptr, from) {}
  inline STRADE_MEMBERSHIP_REQUIREMENT(STRADE_MEMBERSHIP_REQUIREMENT&& from) noexcept
      : STRADE_MEMBERSHIP_REQUIREMENT(nullptr, std::move(from)) {}
  inline STRADE_MEMBERSHIP_REQUIREMENT& operator=(const STRADE_MEMBERSHIP_REQUIREMENT& from) {
    CopyFrom(from);
    return *this;
  }
  inline STRADE_MEMBERSHIP_REQUIREMENT& operator=(STRADE_MEMBERSHIP_REQUIREMENT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const STRADE_MEMBERSHIP_REQUIREMENT& default_instance() {
    return *internal_default_instance();
  }
  static inline const STRADE_MEMBERSHIP_REQUIREMENT* internal_default_instance() {
    return reinterpret_cast<const STRADE_MEMBERSHIP_REQUIREMENT*>(
        &_STRADE_MEMBERSHIP_REQUIREMENT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(STRADE_MEMBERSHIP_REQUIREMENT& a, STRADE_MEMBERSHIP_REQUIREMENT& b) { a.Swap(&b); }
  inline void Swap(STRADE_MEMBERSHIP_REQUIREMENT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(STRADE_MEMBERSHIP_REQUIREMENT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  STRADE_MEMBERSHIP_REQUIREMENT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<STRADE_MEMBERSHIP_REQUIREMENT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const STRADE_MEMBERSHIP_REQUIREMENT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const STRADE_MEMBERSHIP_REQUIREMENT& from) { STRADE_MEMBERSHIP_REQUIREMENT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(STRADE_MEMBERSHIP_REQUIREMENT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.STRADE_MEMBERSHIP_REQUIREMENT"; }

 protected:
  explicit STRADE_MEMBERSHIP_REQUIREMENT(::google::protobuf::Arena* arena);
  STRADE_MEMBERSHIP_REQUIREMENT(::google::protobuf::Arena* arena, const STRADE_MEMBERSHIP_REQUIREMENT& from);
  STRADE_MEMBERSHIP_REQUIREMENT(::google::protobuf::Arena* arena, STRADE_MEMBERSHIP_REQUIREMENT&& from) noexcept
      : STRADE_MEMBERSHIP_REQUIREMENT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMemberShipTypeFieldNumber = 1,
    kMemberShipValueFieldNumber = 2,
  };
  // uint32 memberShipType = 1;
  void clear_membershiptype() ;
  ::uint32_t membershiptype() const;
  void set_membershiptype(::uint32_t value);

  private:
  ::uint32_t _internal_membershiptype() const;
  void _internal_set_membershiptype(::uint32_t value);

  public:
  // uint32 memberShipValue = 2;
  void clear_membershipvalue() ;
  ::uint32_t membershipvalue() const;
  void set_membershipvalue(::uint32_t value);

  private:
  ::uint32_t _internal_membershipvalue() const;
  void _internal_set_membershipvalue(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.STRADE_MEMBERSHIP_REQUIREMENT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_STRADE_MEMBERSHIP_REQUIREMENT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const STRADE_MEMBERSHIP_REQUIREMENT& from_msg);
    ::uint32_t membershiptype_;
    ::uint32_t membershipvalue_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class STRADE_CHANNEL final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.STRADE_CHANNEL) */ {
 public:
  inline STRADE_CHANNEL() : STRADE_CHANNEL(nullptr) {}
  ~STRADE_CHANNEL() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR STRADE_CHANNEL(
      ::google::protobuf::internal::ConstantInitialized);

  inline STRADE_CHANNEL(const STRADE_CHANNEL& from) : STRADE_CHANNEL(nullptr, from) {}
  inline STRADE_CHANNEL(STRADE_CHANNEL&& from) noexcept
      : STRADE_CHANNEL(nullptr, std::move(from)) {}
  inline STRADE_CHANNEL& operator=(const STRADE_CHANNEL& from) {
    CopyFrom(from);
    return *this;
  }
  inline STRADE_CHANNEL& operator=(STRADE_CHANNEL&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const STRADE_CHANNEL& default_instance() {
    return *internal_default_instance();
  }
  static inline const STRADE_CHANNEL* internal_default_instance() {
    return reinterpret_cast<const STRADE_CHANNEL*>(
        &_STRADE_CHANNEL_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(STRADE_CHANNEL& a, STRADE_CHANNEL& b) { a.Swap(&b); }
  inline void Swap(STRADE_CHANNEL* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(STRADE_CHANNEL* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  STRADE_CHANNEL* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<STRADE_CHANNEL>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const STRADE_CHANNEL& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const STRADE_CHANNEL& from) { STRADE_CHANNEL::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(STRADE_CHANNEL* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.STRADE_CHANNEL"; }

 protected:
  explicit STRADE_CHANNEL(::google::protobuf::Arena* arena);
  STRADE_CHANNEL(::google::protobuf::Arena* arena, const STRADE_CHANNEL& from);
  STRADE_CHANNEL(::google::protobuf::Arena* arena, STRADE_CHANNEL&& from) noexcept
      : STRADE_CHANNEL(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelNameFieldNumber = 2,
    kIndexFieldNumber = 1,
    kMemberCountFieldNumber = 3,
    kRoomTypeFieldNumber = 4,
    kGroupIndexFieldNumber = 5,
  };
  // string channelName = 2;
  void clear_channelname() ;
  const std::string& channelname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channelname(Arg_&& arg, Args_... args);
  std::string* mutable_channelname();
  PROTOBUF_NODISCARD std::string* release_channelname();
  void set_allocated_channelname(std::string* value);

  private:
  const std::string& _internal_channelname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_channelname(
      const std::string& value);
  std::string* _internal_mutable_channelname();

  public:
  // uint32 index = 1;
  void clear_index() ;
  ::uint32_t index() const;
  void set_index(::uint32_t value);

  private:
  ::uint32_t _internal_index() const;
  void _internal_set_index(::uint32_t value);

  public:
  // uint32 memberCount = 3;
  void clear_membercount() ;
  ::uint32_t membercount() const;
  void set_membercount(::uint32_t value);

  private:
  ::uint32_t _internal_membercount() const;
  void _internal_set_membercount(::uint32_t value);

  public:
  // uint32 roomType = 4;
  void clear_roomtype() ;
  ::uint32_t roomtype() const;
  void set_roomtype(::uint32_t value);

  private:
  ::uint32_t _internal_roomtype() const;
  void _internal_set_roomtype(::uint32_t value);

  public:
  // uint32 groupIndex = 5;
  void clear_groupindex() ;
  ::uint32_t groupindex() const;
  void set_groupindex(::uint32_t value);

  private:
  ::uint32_t _internal_groupindex() const;
  void _internal_set_groupindex(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.STRADE_CHANNEL)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_STRADE_CHANNEL_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const STRADE_CHANNEL& from_msg);
    ::google::protobuf::internal::ArenaStringPtr channelname_;
    ::uint32_t index_;
    ::uint32_t membercount_;
    ::uint32_t roomtype_;
    ::uint32_t groupindex_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADING_RESULT_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADING_RESULT_NOT) */ {
 public:
  inline SS2C_TRADING_RESULT_NOT() : SS2C_TRADING_RESULT_NOT(nullptr) {}
  ~SS2C_TRADING_RESULT_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADING_RESULT_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADING_RESULT_NOT(const SS2C_TRADING_RESULT_NOT& from) : SS2C_TRADING_RESULT_NOT(nullptr, from) {}
  inline SS2C_TRADING_RESULT_NOT(SS2C_TRADING_RESULT_NOT&& from) noexcept
      : SS2C_TRADING_RESULT_NOT(nullptr, std::move(from)) {}
  inline SS2C_TRADING_RESULT_NOT& operator=(const SS2C_TRADING_RESULT_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADING_RESULT_NOT& operator=(SS2C_TRADING_RESULT_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADING_RESULT_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADING_RESULT_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADING_RESULT_NOT*>(
        &_SS2C_TRADING_RESULT_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(SS2C_TRADING_RESULT_NOT& a, SS2C_TRADING_RESULT_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADING_RESULT_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADING_RESULT_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADING_RESULT_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADING_RESULT_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADING_RESULT_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADING_RESULT_NOT& from) { SS2C_TRADING_RESULT_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADING_RESULT_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADING_RESULT_NOT"; }

 protected:
  explicit SS2C_TRADING_RESULT_NOT(::google::protobuf::Arena* arena);
  SS2C_TRADING_RESULT_NOT(::google::protobuf::Arena* arena, const SS2C_TRADING_RESULT_NOT& from);
  SS2C_TRADING_RESULT_NOT(::google::protobuf::Arena* arena, SS2C_TRADING_RESULT_NOT&& from) noexcept
      : SS2C_TRADING_RESULT_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADING_RESULT_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADING_RESULT_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADING_RESULT_NOT& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADING_READY_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADING_READY_RES) */ {
 public:
  inline SS2C_TRADING_READY_RES() : SS2C_TRADING_READY_RES(nullptr) {}
  ~SS2C_TRADING_READY_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADING_READY_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADING_READY_RES(const SS2C_TRADING_READY_RES& from) : SS2C_TRADING_READY_RES(nullptr, from) {}
  inline SS2C_TRADING_READY_RES(SS2C_TRADING_READY_RES&& from) noexcept
      : SS2C_TRADING_READY_RES(nullptr, std::move(from)) {}
  inline SS2C_TRADING_READY_RES& operator=(const SS2C_TRADING_READY_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADING_READY_RES& operator=(SS2C_TRADING_READY_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADING_READY_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADING_READY_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADING_READY_RES*>(
        &_SS2C_TRADING_READY_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(SS2C_TRADING_READY_RES& a, SS2C_TRADING_READY_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADING_READY_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADING_READY_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADING_READY_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADING_READY_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADING_READY_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADING_READY_RES& from) { SS2C_TRADING_READY_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADING_READY_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADING_READY_RES"; }

 protected:
  explicit SS2C_TRADING_READY_RES(::google::protobuf::Arena* arena);
  SS2C_TRADING_READY_RES(::google::protobuf::Arena* arena, const SS2C_TRADING_READY_RES& from);
  SS2C_TRADING_READY_RES(::google::protobuf::Arena* arena, SS2C_TRADING_READY_RES&& from) noexcept
      : SS2C_TRADING_READY_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADING_READY_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADING_READY_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADING_READY_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADING_CONFIRM_READY_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADING_CONFIRM_READY_RES) */ {
 public:
  inline SS2C_TRADING_CONFIRM_READY_RES() : SS2C_TRADING_CONFIRM_READY_RES(nullptr) {}
  ~SS2C_TRADING_CONFIRM_READY_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADING_CONFIRM_READY_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADING_CONFIRM_READY_RES(const SS2C_TRADING_CONFIRM_READY_RES& from) : SS2C_TRADING_CONFIRM_READY_RES(nullptr, from) {}
  inline SS2C_TRADING_CONFIRM_READY_RES(SS2C_TRADING_CONFIRM_READY_RES&& from) noexcept
      : SS2C_TRADING_CONFIRM_READY_RES(nullptr, std::move(from)) {}
  inline SS2C_TRADING_CONFIRM_READY_RES& operator=(const SS2C_TRADING_CONFIRM_READY_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADING_CONFIRM_READY_RES& operator=(SS2C_TRADING_CONFIRM_READY_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADING_CONFIRM_READY_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADING_CONFIRM_READY_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADING_CONFIRM_READY_RES*>(
        &_SS2C_TRADING_CONFIRM_READY_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(SS2C_TRADING_CONFIRM_READY_RES& a, SS2C_TRADING_CONFIRM_READY_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADING_CONFIRM_READY_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADING_CONFIRM_READY_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADING_CONFIRM_READY_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADING_CONFIRM_READY_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADING_CONFIRM_READY_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADING_CONFIRM_READY_RES& from) { SS2C_TRADING_CONFIRM_READY_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADING_CONFIRM_READY_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADING_CONFIRM_READY_RES"; }

 protected:
  explicit SS2C_TRADING_CONFIRM_READY_RES(::google::protobuf::Arena* arena);
  SS2C_TRADING_CONFIRM_READY_RES(::google::protobuf::Arena* arena, const SS2C_TRADING_CONFIRM_READY_RES& from);
  SS2C_TRADING_CONFIRM_READY_RES(::google::protobuf::Arena* arena, SS2C_TRADING_CONFIRM_READY_RES&& from) noexcept
      : SS2C_TRADING_CONFIRM_READY_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADING_CONFIRM_READY_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADING_CONFIRM_READY_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADING_CONFIRM_READY_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADING_CONFIRM_CANCEL_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADING_CONFIRM_CANCEL_RES) */ {
 public:
  inline SS2C_TRADING_CONFIRM_CANCEL_RES() : SS2C_TRADING_CONFIRM_CANCEL_RES(nullptr) {}
  ~SS2C_TRADING_CONFIRM_CANCEL_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADING_CONFIRM_CANCEL_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADING_CONFIRM_CANCEL_RES(const SS2C_TRADING_CONFIRM_CANCEL_RES& from) : SS2C_TRADING_CONFIRM_CANCEL_RES(nullptr, from) {}
  inline SS2C_TRADING_CONFIRM_CANCEL_RES(SS2C_TRADING_CONFIRM_CANCEL_RES&& from) noexcept
      : SS2C_TRADING_CONFIRM_CANCEL_RES(nullptr, std::move(from)) {}
  inline SS2C_TRADING_CONFIRM_CANCEL_RES& operator=(const SS2C_TRADING_CONFIRM_CANCEL_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADING_CONFIRM_CANCEL_RES& operator=(SS2C_TRADING_CONFIRM_CANCEL_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADING_CONFIRM_CANCEL_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADING_CONFIRM_CANCEL_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADING_CONFIRM_CANCEL_RES*>(
        &_SS2C_TRADING_CONFIRM_CANCEL_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(SS2C_TRADING_CONFIRM_CANCEL_RES& a, SS2C_TRADING_CONFIRM_CANCEL_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADING_CONFIRM_CANCEL_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADING_CONFIRM_CANCEL_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADING_CONFIRM_CANCEL_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADING_CONFIRM_CANCEL_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADING_CONFIRM_CANCEL_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADING_CONFIRM_CANCEL_RES& from) { SS2C_TRADING_CONFIRM_CANCEL_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADING_CONFIRM_CANCEL_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADING_CONFIRM_CANCEL_RES"; }

 protected:
  explicit SS2C_TRADING_CONFIRM_CANCEL_RES(::google::protobuf::Arena* arena);
  SS2C_TRADING_CONFIRM_CANCEL_RES(::google::protobuf::Arena* arena, const SS2C_TRADING_CONFIRM_CANCEL_RES& from);
  SS2C_TRADING_CONFIRM_CANCEL_RES(::google::protobuf::Arena* arena, SS2C_TRADING_CONFIRM_CANCEL_RES&& from) noexcept
      : SS2C_TRADING_CONFIRM_CANCEL_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADING_CONFIRM_CANCEL_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADING_CONFIRM_CANCEL_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADING_CONFIRM_CANCEL_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADING_CLOSE_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADING_CLOSE_RES) */ {
 public:
  inline SS2C_TRADING_CLOSE_RES() : SS2C_TRADING_CLOSE_RES(nullptr) {}
  ~SS2C_TRADING_CLOSE_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADING_CLOSE_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADING_CLOSE_RES(const SS2C_TRADING_CLOSE_RES& from) : SS2C_TRADING_CLOSE_RES(nullptr, from) {}
  inline SS2C_TRADING_CLOSE_RES(SS2C_TRADING_CLOSE_RES&& from) noexcept
      : SS2C_TRADING_CLOSE_RES(nullptr, std::move(from)) {}
  inline SS2C_TRADING_CLOSE_RES& operator=(const SS2C_TRADING_CLOSE_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADING_CLOSE_RES& operator=(SS2C_TRADING_CLOSE_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADING_CLOSE_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADING_CLOSE_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADING_CLOSE_RES*>(
        &_SS2C_TRADING_CLOSE_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(SS2C_TRADING_CLOSE_RES& a, SS2C_TRADING_CLOSE_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADING_CLOSE_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADING_CLOSE_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADING_CLOSE_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADING_CLOSE_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADING_CLOSE_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADING_CLOSE_RES& from) { SS2C_TRADING_CLOSE_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADING_CLOSE_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADING_CLOSE_RES"; }

 protected:
  explicit SS2C_TRADING_CLOSE_RES(::google::protobuf::Arena* arena);
  SS2C_TRADING_CLOSE_RES(::google::protobuf::Arena* arena, const SS2C_TRADING_CLOSE_RES& from);
  SS2C_TRADING_CLOSE_RES(::google::protobuf::Arena* arena, SS2C_TRADING_CLOSE_RES&& from) noexcept
      : SS2C_TRADING_CLOSE_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADING_CLOSE_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADING_CLOSE_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADING_CLOSE_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADE_MEMBERSHIP_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADE_MEMBERSHIP_RES) */ {
 public:
  inline SS2C_TRADE_MEMBERSHIP_RES() : SS2C_TRADE_MEMBERSHIP_RES(nullptr) {}
  ~SS2C_TRADE_MEMBERSHIP_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADE_MEMBERSHIP_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADE_MEMBERSHIP_RES(const SS2C_TRADE_MEMBERSHIP_RES& from) : SS2C_TRADE_MEMBERSHIP_RES(nullptr, from) {}
  inline SS2C_TRADE_MEMBERSHIP_RES(SS2C_TRADE_MEMBERSHIP_RES&& from) noexcept
      : SS2C_TRADE_MEMBERSHIP_RES(nullptr, std::move(from)) {}
  inline SS2C_TRADE_MEMBERSHIP_RES& operator=(const SS2C_TRADE_MEMBERSHIP_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADE_MEMBERSHIP_RES& operator=(SS2C_TRADE_MEMBERSHIP_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADE_MEMBERSHIP_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADE_MEMBERSHIP_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADE_MEMBERSHIP_RES*>(
        &_SS2C_TRADE_MEMBERSHIP_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(SS2C_TRADE_MEMBERSHIP_RES& a, SS2C_TRADE_MEMBERSHIP_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADE_MEMBERSHIP_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADE_MEMBERSHIP_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADE_MEMBERSHIP_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADE_MEMBERSHIP_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADE_MEMBERSHIP_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADE_MEMBERSHIP_RES& from) { SS2C_TRADE_MEMBERSHIP_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADE_MEMBERSHIP_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADE_MEMBERSHIP_RES"; }

 protected:
  explicit SS2C_TRADE_MEMBERSHIP_RES(::google::protobuf::Arena* arena);
  SS2C_TRADE_MEMBERSHIP_RES(::google::protobuf::Arena* arena, const SS2C_TRADE_MEMBERSHIP_RES& from);
  SS2C_TRADE_MEMBERSHIP_RES(::google::protobuf::Arena* arena, SS2C_TRADE_MEMBERSHIP_RES&& from) noexcept
      : SS2C_TRADE_MEMBERSHIP_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADE_MEMBERSHIP_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADE_MEMBERSHIP_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADE_MEMBERSHIP_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADE_CHANNEL_SELECT_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADE_CHANNEL_SELECT_RES) */ {
 public:
  inline SS2C_TRADE_CHANNEL_SELECT_RES() : SS2C_TRADE_CHANNEL_SELECT_RES(nullptr) {}
  ~SS2C_TRADE_CHANNEL_SELECT_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADE_CHANNEL_SELECT_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADE_CHANNEL_SELECT_RES(const SS2C_TRADE_CHANNEL_SELECT_RES& from) : SS2C_TRADE_CHANNEL_SELECT_RES(nullptr, from) {}
  inline SS2C_TRADE_CHANNEL_SELECT_RES(SS2C_TRADE_CHANNEL_SELECT_RES&& from) noexcept
      : SS2C_TRADE_CHANNEL_SELECT_RES(nullptr, std::move(from)) {}
  inline SS2C_TRADE_CHANNEL_SELECT_RES& operator=(const SS2C_TRADE_CHANNEL_SELECT_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADE_CHANNEL_SELECT_RES& operator=(SS2C_TRADE_CHANNEL_SELECT_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADE_CHANNEL_SELECT_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADE_CHANNEL_SELECT_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADE_CHANNEL_SELECT_RES*>(
        &_SS2C_TRADE_CHANNEL_SELECT_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(SS2C_TRADE_CHANNEL_SELECT_RES& a, SS2C_TRADE_CHANNEL_SELECT_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADE_CHANNEL_SELECT_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADE_CHANNEL_SELECT_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADE_CHANNEL_SELECT_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADE_CHANNEL_SELECT_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADE_CHANNEL_SELECT_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADE_CHANNEL_SELECT_RES& from) { SS2C_TRADE_CHANNEL_SELECT_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADE_CHANNEL_SELECT_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADE_CHANNEL_SELECT_RES"; }

 protected:
  explicit SS2C_TRADE_CHANNEL_SELECT_RES(::google::protobuf::Arena* arena);
  SS2C_TRADE_CHANNEL_SELECT_RES(::google::protobuf::Arena* arena, const SS2C_TRADE_CHANNEL_SELECT_RES& from);
  SS2C_TRADE_CHANNEL_SELECT_RES(::google::protobuf::Arena* arena, SS2C_TRADE_CHANNEL_SELECT_RES&& from) noexcept
      : SS2C_TRADE_CHANNEL_SELECT_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADE_CHANNEL_SELECT_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADE_CHANNEL_SELECT_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADE_CHANNEL_SELECT_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADE_CHANNEL_EXIT_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADE_CHANNEL_EXIT_RES) */ {
 public:
  inline SS2C_TRADE_CHANNEL_EXIT_RES() : SS2C_TRADE_CHANNEL_EXIT_RES(nullptr) {}
  ~SS2C_TRADE_CHANNEL_EXIT_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADE_CHANNEL_EXIT_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADE_CHANNEL_EXIT_RES(const SS2C_TRADE_CHANNEL_EXIT_RES& from) : SS2C_TRADE_CHANNEL_EXIT_RES(nullptr, from) {}
  inline SS2C_TRADE_CHANNEL_EXIT_RES(SS2C_TRADE_CHANNEL_EXIT_RES&& from) noexcept
      : SS2C_TRADE_CHANNEL_EXIT_RES(nullptr, std::move(from)) {}
  inline SS2C_TRADE_CHANNEL_EXIT_RES& operator=(const SS2C_TRADE_CHANNEL_EXIT_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADE_CHANNEL_EXIT_RES& operator=(SS2C_TRADE_CHANNEL_EXIT_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADE_CHANNEL_EXIT_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADE_CHANNEL_EXIT_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADE_CHANNEL_EXIT_RES*>(
        &_SS2C_TRADE_CHANNEL_EXIT_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(SS2C_TRADE_CHANNEL_EXIT_RES& a, SS2C_TRADE_CHANNEL_EXIT_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADE_CHANNEL_EXIT_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADE_CHANNEL_EXIT_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADE_CHANNEL_EXIT_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADE_CHANNEL_EXIT_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADE_CHANNEL_EXIT_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADE_CHANNEL_EXIT_RES& from) { SS2C_TRADE_CHANNEL_EXIT_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADE_CHANNEL_EXIT_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADE_CHANNEL_EXIT_RES"; }

 protected:
  explicit SS2C_TRADE_CHANNEL_EXIT_RES(::google::protobuf::Arena* arena);
  SS2C_TRADE_CHANNEL_EXIT_RES(::google::protobuf::Arena* arena, const SS2C_TRADE_CHANNEL_EXIT_RES& from);
  SS2C_TRADE_CHANNEL_EXIT_RES(::google::protobuf::Arena* arena, SS2C_TRADE_CHANNEL_EXIT_RES&& from) noexcept
      : SS2C_TRADE_CHANNEL_EXIT_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADE_CHANNEL_EXIT_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADE_CHANNEL_EXIT_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADE_CHANNEL_EXIT_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADE_ANSWER_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADE_ANSWER_RES) */ {
 public:
  inline SS2C_TRADE_ANSWER_RES() : SS2C_TRADE_ANSWER_RES(nullptr) {}
  ~SS2C_TRADE_ANSWER_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADE_ANSWER_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADE_ANSWER_RES(const SS2C_TRADE_ANSWER_RES& from) : SS2C_TRADE_ANSWER_RES(nullptr, from) {}
  inline SS2C_TRADE_ANSWER_RES(SS2C_TRADE_ANSWER_RES&& from) noexcept
      : SS2C_TRADE_ANSWER_RES(nullptr, std::move(from)) {}
  inline SS2C_TRADE_ANSWER_RES& operator=(const SS2C_TRADE_ANSWER_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADE_ANSWER_RES& operator=(SS2C_TRADE_ANSWER_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADE_ANSWER_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADE_ANSWER_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADE_ANSWER_RES*>(
        &_SS2C_TRADE_ANSWER_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(SS2C_TRADE_ANSWER_RES& a, SS2C_TRADE_ANSWER_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADE_ANSWER_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADE_ANSWER_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADE_ANSWER_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADE_ANSWER_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADE_ANSWER_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADE_ANSWER_RES& from) { SS2C_TRADE_ANSWER_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADE_ANSWER_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADE_ANSWER_RES"; }

 protected:
  explicit SS2C_TRADE_ANSWER_RES(::google::protobuf::Arena* arena);
  SS2C_TRADE_ANSWER_RES(::google::protobuf::Arena* arena, const SS2C_TRADE_ANSWER_RES& from);
  SS2C_TRADE_ANSWER_RES(::google::protobuf::Arena* arena, SS2C_TRADE_ANSWER_RES&& from) noexcept
      : SS2C_TRADE_ANSWER_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADE_ANSWER_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADE_ANSWER_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADE_ANSWER_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SC2S_TRADING_READY_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_TRADING_READY_REQ) */ {
 public:
  inline SC2S_TRADING_READY_REQ() : SC2S_TRADING_READY_REQ(nullptr) {}
  ~SC2S_TRADING_READY_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_TRADING_READY_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_TRADING_READY_REQ(const SC2S_TRADING_READY_REQ& from) : SC2S_TRADING_READY_REQ(nullptr, from) {}
  inline SC2S_TRADING_READY_REQ(SC2S_TRADING_READY_REQ&& from) noexcept
      : SC2S_TRADING_READY_REQ(nullptr, std::move(from)) {}
  inline SC2S_TRADING_READY_REQ& operator=(const SC2S_TRADING_READY_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_TRADING_READY_REQ& operator=(SC2S_TRADING_READY_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_TRADING_READY_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_TRADING_READY_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_TRADING_READY_REQ*>(
        &_SC2S_TRADING_READY_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(SC2S_TRADING_READY_REQ& a, SC2S_TRADING_READY_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_TRADING_READY_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_TRADING_READY_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_TRADING_READY_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_TRADING_READY_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_TRADING_READY_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_TRADING_READY_REQ& from) { SC2S_TRADING_READY_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_TRADING_READY_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_TRADING_READY_REQ"; }

 protected:
  explicit SC2S_TRADING_READY_REQ(::google::protobuf::Arena* arena);
  SC2S_TRADING_READY_REQ(::google::protobuf::Arena* arena, const SC2S_TRADING_READY_REQ& from);
  SC2S_TRADING_READY_REQ(::google::protobuf::Arena* arena, SC2S_TRADING_READY_REQ&& from) noexcept
      : SC2S_TRADING_READY_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsReadyFieldNumber = 1,
  };
  // uint32 isReady = 1;
  void clear_isready() ;
  ::uint32_t isready() const;
  void set_isready(::uint32_t value);

  private:
  ::uint32_t _internal_isready() const;
  void _internal_set_isready(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_TRADING_READY_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_TRADING_READY_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_TRADING_READY_REQ& from_msg);
    ::uint32_t isready_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SC2S_TRADING_ITEM_UPDATE_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_TRADING_ITEM_UPDATE_REQ) */ {
 public:
  inline SC2S_TRADING_ITEM_UPDATE_REQ() : SC2S_TRADING_ITEM_UPDATE_REQ(nullptr) {}
  ~SC2S_TRADING_ITEM_UPDATE_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_TRADING_ITEM_UPDATE_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_TRADING_ITEM_UPDATE_REQ(const SC2S_TRADING_ITEM_UPDATE_REQ& from) : SC2S_TRADING_ITEM_UPDATE_REQ(nullptr, from) {}
  inline SC2S_TRADING_ITEM_UPDATE_REQ(SC2S_TRADING_ITEM_UPDATE_REQ&& from) noexcept
      : SC2S_TRADING_ITEM_UPDATE_REQ(nullptr, std::move(from)) {}
  inline SC2S_TRADING_ITEM_UPDATE_REQ& operator=(const SC2S_TRADING_ITEM_UPDATE_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_TRADING_ITEM_UPDATE_REQ& operator=(SC2S_TRADING_ITEM_UPDATE_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_TRADING_ITEM_UPDATE_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_TRADING_ITEM_UPDATE_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_TRADING_ITEM_UPDATE_REQ*>(
        &_SC2S_TRADING_ITEM_UPDATE_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(SC2S_TRADING_ITEM_UPDATE_REQ& a, SC2S_TRADING_ITEM_UPDATE_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_TRADING_ITEM_UPDATE_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_TRADING_ITEM_UPDATE_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_TRADING_ITEM_UPDATE_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_TRADING_ITEM_UPDATE_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_TRADING_ITEM_UPDATE_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_TRADING_ITEM_UPDATE_REQ& from) { SC2S_TRADING_ITEM_UPDATE_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_TRADING_ITEM_UPDATE_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_TRADING_ITEM_UPDATE_REQ"; }

 protected:
  explicit SC2S_TRADING_ITEM_UPDATE_REQ(::google::protobuf::Arena* arena);
  SC2S_TRADING_ITEM_UPDATE_REQ(::google::protobuf::Arena* arena, const SC2S_TRADING_ITEM_UPDATE_REQ& from);
  SC2S_TRADING_ITEM_UPDATE_REQ(::google::protobuf::Arena* arena, SC2S_TRADING_ITEM_UPDATE_REQ&& from) noexcept
      : SC2S_TRADING_ITEM_UPDATE_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUniqueIdFieldNumber = 2,
    kUpdateFlagFieldNumber = 1,
    kSlotIdFieldNumber = 3,
  };
  // uint64 uniqueId = 2;
  void clear_uniqueid() ;
  ::uint64_t uniqueid() const;
  void set_uniqueid(::uint64_t value);

  private:
  ::uint64_t _internal_uniqueid() const;
  void _internal_set_uniqueid(::uint64_t value);

  public:
  // uint32 updateFlag = 1;
  void clear_updateflag() ;
  ::uint32_t updateflag() const;
  void set_updateflag(::uint32_t value);

  private:
  ::uint32_t _internal_updateflag() const;
  void _internal_set_updateflag(::uint32_t value);

  public:
  // uint32 slotId = 3;
  void clear_slotid() ;
  ::uint32_t slotid() const;
  void set_slotid(::uint32_t value);

  private:
  ::uint32_t _internal_slotid() const;
  void _internal_set_slotid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_TRADING_ITEM_UPDATE_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_TRADING_ITEM_UPDATE_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_TRADING_ITEM_UPDATE_REQ& from_msg);
    ::uint64_t uniqueid_;
    ::uint32_t updateflag_;
    ::uint32_t slotid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SC2S_TRADING_CONFIRM_READY_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_TRADING_CONFIRM_READY_REQ) */ {
 public:
  inline SC2S_TRADING_CONFIRM_READY_REQ() : SC2S_TRADING_CONFIRM_READY_REQ(nullptr) {}
  ~SC2S_TRADING_CONFIRM_READY_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_TRADING_CONFIRM_READY_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_TRADING_CONFIRM_READY_REQ(const SC2S_TRADING_CONFIRM_READY_REQ& from) : SC2S_TRADING_CONFIRM_READY_REQ(nullptr, from) {}
  inline SC2S_TRADING_CONFIRM_READY_REQ(SC2S_TRADING_CONFIRM_READY_REQ&& from) noexcept
      : SC2S_TRADING_CONFIRM_READY_REQ(nullptr, std::move(from)) {}
  inline SC2S_TRADING_CONFIRM_READY_REQ& operator=(const SC2S_TRADING_CONFIRM_READY_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_TRADING_CONFIRM_READY_REQ& operator=(SC2S_TRADING_CONFIRM_READY_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_TRADING_CONFIRM_READY_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_TRADING_CONFIRM_READY_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_TRADING_CONFIRM_READY_REQ*>(
        &_SC2S_TRADING_CONFIRM_READY_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(SC2S_TRADING_CONFIRM_READY_REQ& a, SC2S_TRADING_CONFIRM_READY_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_TRADING_CONFIRM_READY_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_TRADING_CONFIRM_READY_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_TRADING_CONFIRM_READY_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_TRADING_CONFIRM_READY_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_TRADING_CONFIRM_READY_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_TRADING_CONFIRM_READY_REQ& from) { SC2S_TRADING_CONFIRM_READY_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_TRADING_CONFIRM_READY_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_TRADING_CONFIRM_READY_REQ"; }

 protected:
  explicit SC2S_TRADING_CONFIRM_READY_REQ(::google::protobuf::Arena* arena);
  SC2S_TRADING_CONFIRM_READY_REQ(::google::protobuf::Arena* arena, const SC2S_TRADING_CONFIRM_READY_REQ& from);
  SC2S_TRADING_CONFIRM_READY_REQ(::google::protobuf::Arena* arena, SC2S_TRADING_CONFIRM_READY_REQ&& from) noexcept
      : SC2S_TRADING_CONFIRM_READY_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsReadyFieldNumber = 1,
  };
  // uint32 isReady = 1;
  void clear_isready() ;
  ::uint32_t isready() const;
  void set_isready(::uint32_t value);

  private:
  ::uint32_t _internal_isready() const;
  void _internal_set_isready(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_TRADING_CONFIRM_READY_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_TRADING_CONFIRM_READY_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_TRADING_CONFIRM_READY_REQ& from_msg);
    ::uint32_t isready_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SC2S_TRADING_CONFIRM_CANCEL_REQ final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_TRADING_CONFIRM_CANCEL_REQ) */ {
 public:
  inline SC2S_TRADING_CONFIRM_CANCEL_REQ() : SC2S_TRADING_CONFIRM_CANCEL_REQ(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_TRADING_CONFIRM_CANCEL_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_TRADING_CONFIRM_CANCEL_REQ(const SC2S_TRADING_CONFIRM_CANCEL_REQ& from) : SC2S_TRADING_CONFIRM_CANCEL_REQ(nullptr, from) {}
  inline SC2S_TRADING_CONFIRM_CANCEL_REQ(SC2S_TRADING_CONFIRM_CANCEL_REQ&& from) noexcept
      : SC2S_TRADING_CONFIRM_CANCEL_REQ(nullptr, std::move(from)) {}
  inline SC2S_TRADING_CONFIRM_CANCEL_REQ& operator=(const SC2S_TRADING_CONFIRM_CANCEL_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_TRADING_CONFIRM_CANCEL_REQ& operator=(SC2S_TRADING_CONFIRM_CANCEL_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_TRADING_CONFIRM_CANCEL_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_TRADING_CONFIRM_CANCEL_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_TRADING_CONFIRM_CANCEL_REQ*>(
        &_SC2S_TRADING_CONFIRM_CANCEL_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(SC2S_TRADING_CONFIRM_CANCEL_REQ& a, SC2S_TRADING_CONFIRM_CANCEL_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_TRADING_CONFIRM_CANCEL_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_TRADING_CONFIRM_CANCEL_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_TRADING_CONFIRM_CANCEL_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SC2S_TRADING_CONFIRM_CANCEL_REQ>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SC2S_TRADING_CONFIRM_CANCEL_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SC2S_TRADING_CONFIRM_CANCEL_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_TRADING_CONFIRM_CANCEL_REQ"; }

 protected:
  explicit SC2S_TRADING_CONFIRM_CANCEL_REQ(::google::protobuf::Arena* arena);
  SC2S_TRADING_CONFIRM_CANCEL_REQ(::google::protobuf::Arena* arena, const SC2S_TRADING_CONFIRM_CANCEL_REQ& from);
  SC2S_TRADING_CONFIRM_CANCEL_REQ(::google::protobuf::Arena* arena, SC2S_TRADING_CONFIRM_CANCEL_REQ&& from) noexcept
      : SC2S_TRADING_CONFIRM_CANCEL_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_TRADING_CONFIRM_CANCEL_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_TRADING_CONFIRM_CANCEL_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_TRADING_CONFIRM_CANCEL_REQ& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SC2S_TRADING_CLOSE_REQ final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_TRADING_CLOSE_REQ) */ {
 public:
  inline SC2S_TRADING_CLOSE_REQ() : SC2S_TRADING_CLOSE_REQ(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_TRADING_CLOSE_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_TRADING_CLOSE_REQ(const SC2S_TRADING_CLOSE_REQ& from) : SC2S_TRADING_CLOSE_REQ(nullptr, from) {}
  inline SC2S_TRADING_CLOSE_REQ(SC2S_TRADING_CLOSE_REQ&& from) noexcept
      : SC2S_TRADING_CLOSE_REQ(nullptr, std::move(from)) {}
  inline SC2S_TRADING_CLOSE_REQ& operator=(const SC2S_TRADING_CLOSE_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_TRADING_CLOSE_REQ& operator=(SC2S_TRADING_CLOSE_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_TRADING_CLOSE_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_TRADING_CLOSE_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_TRADING_CLOSE_REQ*>(
        &_SC2S_TRADING_CLOSE_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(SC2S_TRADING_CLOSE_REQ& a, SC2S_TRADING_CLOSE_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_TRADING_CLOSE_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_TRADING_CLOSE_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_TRADING_CLOSE_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SC2S_TRADING_CLOSE_REQ>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SC2S_TRADING_CLOSE_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SC2S_TRADING_CLOSE_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_TRADING_CLOSE_REQ"; }

 protected:
  explicit SC2S_TRADING_CLOSE_REQ(::google::protobuf::Arena* arena);
  SC2S_TRADING_CLOSE_REQ(::google::protobuf::Arena* arena, const SC2S_TRADING_CLOSE_REQ& from);
  SC2S_TRADING_CLOSE_REQ(::google::protobuf::Arena* arena, SC2S_TRADING_CLOSE_REQ&& from) noexcept
      : SC2S_TRADING_CLOSE_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_TRADING_CLOSE_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_TRADING_CLOSE_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_TRADING_CLOSE_REQ& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ) */ {
 public:
  inline SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ() : SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ(const SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ& from) : SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ(nullptr, from) {}
  inline SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ(SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ&& from) noexcept
      : SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ(nullptr, std::move(from)) {}
  inline SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ& operator=(const SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ& operator=(SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ*>(
        &_SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ& a, SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ"; }

 protected:
  explicit SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ(::google::protobuf::Arena* arena);
  SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ(::google::protobuf::Arena* arena, const SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ& from);
  SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ(::google::protobuf::Arena* arena, SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ&& from) noexcept
      : SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SC2S_TRADE_MEMBERSHIP_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_TRADE_MEMBERSHIP_REQ) */ {
 public:
  inline SC2S_TRADE_MEMBERSHIP_REQ() : SC2S_TRADE_MEMBERSHIP_REQ(nullptr) {}
  ~SC2S_TRADE_MEMBERSHIP_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_TRADE_MEMBERSHIP_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_TRADE_MEMBERSHIP_REQ(const SC2S_TRADE_MEMBERSHIP_REQ& from) : SC2S_TRADE_MEMBERSHIP_REQ(nullptr, from) {}
  inline SC2S_TRADE_MEMBERSHIP_REQ(SC2S_TRADE_MEMBERSHIP_REQ&& from) noexcept
      : SC2S_TRADE_MEMBERSHIP_REQ(nullptr, std::move(from)) {}
  inline SC2S_TRADE_MEMBERSHIP_REQ& operator=(const SC2S_TRADE_MEMBERSHIP_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_TRADE_MEMBERSHIP_REQ& operator=(SC2S_TRADE_MEMBERSHIP_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_TRADE_MEMBERSHIP_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_TRADE_MEMBERSHIP_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_TRADE_MEMBERSHIP_REQ*>(
        &_SC2S_TRADE_MEMBERSHIP_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(SC2S_TRADE_MEMBERSHIP_REQ& a, SC2S_TRADE_MEMBERSHIP_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_TRADE_MEMBERSHIP_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_TRADE_MEMBERSHIP_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_TRADE_MEMBERSHIP_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_TRADE_MEMBERSHIP_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_TRADE_MEMBERSHIP_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_TRADE_MEMBERSHIP_REQ& from) { SC2S_TRADE_MEMBERSHIP_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_TRADE_MEMBERSHIP_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_TRADE_MEMBERSHIP_REQ"; }

 protected:
  explicit SC2S_TRADE_MEMBERSHIP_REQ(::google::protobuf::Arena* arena);
  SC2S_TRADE_MEMBERSHIP_REQ(::google::protobuf::Arena* arena, const SC2S_TRADE_MEMBERSHIP_REQ& from);
  SC2S_TRADE_MEMBERSHIP_REQ(::google::protobuf::Arena* arena, SC2S_TRADE_MEMBERSHIP_REQ&& from) noexcept
      : SC2S_TRADE_MEMBERSHIP_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBecomeTraderFlagFieldNumber = 1,
  };
  // uint32 becomeTraderFlag = 1;
  void clear_becometraderflag() ;
  ::uint32_t becometraderflag() const;
  void set_becometraderflag(::uint32_t value);

  private:
  ::uint32_t _internal_becometraderflag() const;
  void _internal_set_becometraderflag(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_TRADE_MEMBERSHIP_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_TRADE_MEMBERSHIP_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_TRADE_MEMBERSHIP_REQ& from_msg);
    ::uint32_t becometraderflag_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SC2S_TRADE_CHANNEL_USER_LIST_REQ final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_TRADE_CHANNEL_USER_LIST_REQ) */ {
 public:
  inline SC2S_TRADE_CHANNEL_USER_LIST_REQ() : SC2S_TRADE_CHANNEL_USER_LIST_REQ(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_TRADE_CHANNEL_USER_LIST_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_TRADE_CHANNEL_USER_LIST_REQ(const SC2S_TRADE_CHANNEL_USER_LIST_REQ& from) : SC2S_TRADE_CHANNEL_USER_LIST_REQ(nullptr, from) {}
  inline SC2S_TRADE_CHANNEL_USER_LIST_REQ(SC2S_TRADE_CHANNEL_USER_LIST_REQ&& from) noexcept
      : SC2S_TRADE_CHANNEL_USER_LIST_REQ(nullptr, std::move(from)) {}
  inline SC2S_TRADE_CHANNEL_USER_LIST_REQ& operator=(const SC2S_TRADE_CHANNEL_USER_LIST_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_TRADE_CHANNEL_USER_LIST_REQ& operator=(SC2S_TRADE_CHANNEL_USER_LIST_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_TRADE_CHANNEL_USER_LIST_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_TRADE_CHANNEL_USER_LIST_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_TRADE_CHANNEL_USER_LIST_REQ*>(
        &_SC2S_TRADE_CHANNEL_USER_LIST_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(SC2S_TRADE_CHANNEL_USER_LIST_REQ& a, SC2S_TRADE_CHANNEL_USER_LIST_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_TRADE_CHANNEL_USER_LIST_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_TRADE_CHANNEL_USER_LIST_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_TRADE_CHANNEL_USER_LIST_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SC2S_TRADE_CHANNEL_USER_LIST_REQ>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SC2S_TRADE_CHANNEL_USER_LIST_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SC2S_TRADE_CHANNEL_USER_LIST_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_TRADE_CHANNEL_USER_LIST_REQ"; }

 protected:
  explicit SC2S_TRADE_CHANNEL_USER_LIST_REQ(::google::protobuf::Arena* arena);
  SC2S_TRADE_CHANNEL_USER_LIST_REQ(::google::protobuf::Arena* arena, const SC2S_TRADE_CHANNEL_USER_LIST_REQ& from);
  SC2S_TRADE_CHANNEL_USER_LIST_REQ(::google::protobuf::Arena* arena, SC2S_TRADE_CHANNEL_USER_LIST_REQ&& from) noexcept
      : SC2S_TRADE_CHANNEL_USER_LIST_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_TRADE_CHANNEL_USER_LIST_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_TRADE_CHANNEL_USER_LIST_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_TRADE_CHANNEL_USER_LIST_REQ& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SC2S_TRADE_CHANNEL_SELECT_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_TRADE_CHANNEL_SELECT_REQ) */ {
 public:
  inline SC2S_TRADE_CHANNEL_SELECT_REQ() : SC2S_TRADE_CHANNEL_SELECT_REQ(nullptr) {}
  ~SC2S_TRADE_CHANNEL_SELECT_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_TRADE_CHANNEL_SELECT_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_TRADE_CHANNEL_SELECT_REQ(const SC2S_TRADE_CHANNEL_SELECT_REQ& from) : SC2S_TRADE_CHANNEL_SELECT_REQ(nullptr, from) {}
  inline SC2S_TRADE_CHANNEL_SELECT_REQ(SC2S_TRADE_CHANNEL_SELECT_REQ&& from) noexcept
      : SC2S_TRADE_CHANNEL_SELECT_REQ(nullptr, std::move(from)) {}
  inline SC2S_TRADE_CHANNEL_SELECT_REQ& operator=(const SC2S_TRADE_CHANNEL_SELECT_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_TRADE_CHANNEL_SELECT_REQ& operator=(SC2S_TRADE_CHANNEL_SELECT_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_TRADE_CHANNEL_SELECT_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_TRADE_CHANNEL_SELECT_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_TRADE_CHANNEL_SELECT_REQ*>(
        &_SC2S_TRADE_CHANNEL_SELECT_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(SC2S_TRADE_CHANNEL_SELECT_REQ& a, SC2S_TRADE_CHANNEL_SELECT_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_TRADE_CHANNEL_SELECT_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_TRADE_CHANNEL_SELECT_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_TRADE_CHANNEL_SELECT_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_TRADE_CHANNEL_SELECT_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_TRADE_CHANNEL_SELECT_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_TRADE_CHANNEL_SELECT_REQ& from) { SC2S_TRADE_CHANNEL_SELECT_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_TRADE_CHANNEL_SELECT_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_TRADE_CHANNEL_SELECT_REQ"; }

 protected:
  explicit SC2S_TRADE_CHANNEL_SELECT_REQ(::google::protobuf::Arena* arena);
  SC2S_TRADE_CHANNEL_SELECT_REQ(::google::protobuf::Arena* arena, const SC2S_TRADE_CHANNEL_SELECT_REQ& from);
  SC2S_TRADE_CHANNEL_SELECT_REQ(::google::protobuf::Arena* arena, SC2S_TRADE_CHANNEL_SELECT_REQ&& from) noexcept
      : SC2S_TRADE_CHANNEL_SELECT_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIndexFieldNumber = 1,
  };
  // uint32 index = 1;
  void clear_index() ;
  ::uint32_t index() const;
  void set_index(::uint32_t value);

  private:
  ::uint32_t _internal_index() const;
  void _internal_set_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_TRADE_CHANNEL_SELECT_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_TRADE_CHANNEL_SELECT_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_TRADE_CHANNEL_SELECT_REQ& from_msg);
    ::uint32_t index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SC2S_TRADE_CHANNEL_LIST_REQ final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_TRADE_CHANNEL_LIST_REQ) */ {
 public:
  inline SC2S_TRADE_CHANNEL_LIST_REQ() : SC2S_TRADE_CHANNEL_LIST_REQ(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_TRADE_CHANNEL_LIST_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_TRADE_CHANNEL_LIST_REQ(const SC2S_TRADE_CHANNEL_LIST_REQ& from) : SC2S_TRADE_CHANNEL_LIST_REQ(nullptr, from) {}
  inline SC2S_TRADE_CHANNEL_LIST_REQ(SC2S_TRADE_CHANNEL_LIST_REQ&& from) noexcept
      : SC2S_TRADE_CHANNEL_LIST_REQ(nullptr, std::move(from)) {}
  inline SC2S_TRADE_CHANNEL_LIST_REQ& operator=(const SC2S_TRADE_CHANNEL_LIST_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_TRADE_CHANNEL_LIST_REQ& operator=(SC2S_TRADE_CHANNEL_LIST_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_TRADE_CHANNEL_LIST_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_TRADE_CHANNEL_LIST_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_TRADE_CHANNEL_LIST_REQ*>(
        &_SC2S_TRADE_CHANNEL_LIST_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SC2S_TRADE_CHANNEL_LIST_REQ& a, SC2S_TRADE_CHANNEL_LIST_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_TRADE_CHANNEL_LIST_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_TRADE_CHANNEL_LIST_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_TRADE_CHANNEL_LIST_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SC2S_TRADE_CHANNEL_LIST_REQ>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SC2S_TRADE_CHANNEL_LIST_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SC2S_TRADE_CHANNEL_LIST_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_TRADE_CHANNEL_LIST_REQ"; }

 protected:
  explicit SC2S_TRADE_CHANNEL_LIST_REQ(::google::protobuf::Arena* arena);
  SC2S_TRADE_CHANNEL_LIST_REQ(::google::protobuf::Arena* arena, const SC2S_TRADE_CHANNEL_LIST_REQ& from);
  SC2S_TRADE_CHANNEL_LIST_REQ(::google::protobuf::Arena* arena, SC2S_TRADE_CHANNEL_LIST_REQ&& from) noexcept
      : SC2S_TRADE_CHANNEL_LIST_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_TRADE_CHANNEL_LIST_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_TRADE_CHANNEL_LIST_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_TRADE_CHANNEL_LIST_REQ& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SC2S_TRADE_CHANNEL_EXIT_REQ final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_TRADE_CHANNEL_EXIT_REQ) */ {
 public:
  inline SC2S_TRADE_CHANNEL_EXIT_REQ() : SC2S_TRADE_CHANNEL_EXIT_REQ(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_TRADE_CHANNEL_EXIT_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_TRADE_CHANNEL_EXIT_REQ(const SC2S_TRADE_CHANNEL_EXIT_REQ& from) : SC2S_TRADE_CHANNEL_EXIT_REQ(nullptr, from) {}
  inline SC2S_TRADE_CHANNEL_EXIT_REQ(SC2S_TRADE_CHANNEL_EXIT_REQ&& from) noexcept
      : SC2S_TRADE_CHANNEL_EXIT_REQ(nullptr, std::move(from)) {}
  inline SC2S_TRADE_CHANNEL_EXIT_REQ& operator=(const SC2S_TRADE_CHANNEL_EXIT_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_TRADE_CHANNEL_EXIT_REQ& operator=(SC2S_TRADE_CHANNEL_EXIT_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_TRADE_CHANNEL_EXIT_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_TRADE_CHANNEL_EXIT_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_TRADE_CHANNEL_EXIT_REQ*>(
        &_SC2S_TRADE_CHANNEL_EXIT_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(SC2S_TRADE_CHANNEL_EXIT_REQ& a, SC2S_TRADE_CHANNEL_EXIT_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_TRADE_CHANNEL_EXIT_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_TRADE_CHANNEL_EXIT_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_TRADE_CHANNEL_EXIT_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SC2S_TRADE_CHANNEL_EXIT_REQ>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SC2S_TRADE_CHANNEL_EXIT_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SC2S_TRADE_CHANNEL_EXIT_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_TRADE_CHANNEL_EXIT_REQ"; }

 protected:
  explicit SC2S_TRADE_CHANNEL_EXIT_REQ(::google::protobuf::Arena* arena);
  SC2S_TRADE_CHANNEL_EXIT_REQ(::google::protobuf::Arena* arena, const SC2S_TRADE_CHANNEL_EXIT_REQ& from);
  SC2S_TRADE_CHANNEL_EXIT_REQ(::google::protobuf::Arena* arena, SC2S_TRADE_CHANNEL_EXIT_REQ&& from) noexcept
      : SC2S_TRADE_CHANNEL_EXIT_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_TRADE_CHANNEL_EXIT_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_TRADE_CHANNEL_EXIT_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_TRADE_CHANNEL_EXIT_REQ& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ) */ {
 public:
  inline SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ() : SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ(nullptr) {}
  ~SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ(const SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ& from) : SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ(nullptr, from) {}
  inline SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ(SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ&& from) noexcept
      : SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ(nullptr, std::move(from)) {}
  inline SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ& operator=(const SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ& operator=(SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ*>(
        &_SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ& a, SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ& from) { SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ"; }

 protected:
  explicit SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ(::google::protobuf::Arena* arena);
  SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ(::google::protobuf::Arena* arena, const SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ& from);
  SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ(::google::protobuf::Arena* arena, SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ&& from) noexcept
      : SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBeginIndexFieldNumber = 1,
  };
  // uint32 beginIndex = 1;
  void clear_beginindex() ;
  ::uint32_t beginindex() const;
  void set_beginindex(::uint32_t value);

  private:
  ::uint32_t _internal_beginindex() const;
  void _internal_set_beginindex(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ& from_msg);
    ::uint32_t beginindex_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class STRADING_USER_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.STRADING_USER_INFO) */ {
 public:
  inline STRADING_USER_INFO() : STRADING_USER_INFO(nullptr) {}
  ~STRADING_USER_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR STRADING_USER_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline STRADING_USER_INFO(const STRADING_USER_INFO& from) : STRADING_USER_INFO(nullptr, from) {}
  inline STRADING_USER_INFO(STRADING_USER_INFO&& from) noexcept
      : STRADING_USER_INFO(nullptr, std::move(from)) {}
  inline STRADING_USER_INFO& operator=(const STRADING_USER_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline STRADING_USER_INFO& operator=(STRADING_USER_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const STRADING_USER_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const STRADING_USER_INFO* internal_default_instance() {
    return reinterpret_cast<const STRADING_USER_INFO*>(
        &_STRADING_USER_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(STRADING_USER_INFO& a, STRADING_USER_INFO& b) { a.Swap(&b); }
  inline void Swap(STRADING_USER_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(STRADING_USER_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  STRADING_USER_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<STRADING_USER_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const STRADING_USER_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const STRADING_USER_INFO& from) { STRADING_USER_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(STRADING_USER_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.STRADING_USER_INFO"; }

 protected:
  explicit STRADING_USER_INFO(::google::protobuf::Arena* arena);
  STRADING_USER_INFO(::google::protobuf::Arena* arena, const STRADING_USER_INFO& from);
  STRADING_USER_INFO(::google::protobuf::Arena* arena, STRADING_USER_INFO&& from) noexcept
      : STRADING_USER_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 2,
    kNickNameFieldNumber = 1,
  };
  // string accountId = 2;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 1;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.STRADING_USER_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_STRADING_USER_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const STRADING_USER_INFO& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADE_REQUEST_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADE_REQUEST_RES) */ {
 public:
  inline SS2C_TRADE_REQUEST_RES() : SS2C_TRADE_REQUEST_RES(nullptr) {}
  ~SS2C_TRADE_REQUEST_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADE_REQUEST_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADE_REQUEST_RES(const SS2C_TRADE_REQUEST_RES& from) : SS2C_TRADE_REQUEST_RES(nullptr, from) {}
  inline SS2C_TRADE_REQUEST_RES(SS2C_TRADE_REQUEST_RES&& from) noexcept
      : SS2C_TRADE_REQUEST_RES(nullptr, std::move(from)) {}
  inline SS2C_TRADE_REQUEST_RES& operator=(const SS2C_TRADE_REQUEST_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADE_REQUEST_RES& operator=(SS2C_TRADE_REQUEST_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADE_REQUEST_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADE_REQUEST_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADE_REQUEST_RES*>(
        &_SS2C_TRADE_REQUEST_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(SS2C_TRADE_REQUEST_RES& a, SS2C_TRADE_REQUEST_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADE_REQUEST_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADE_REQUEST_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADE_REQUEST_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADE_REQUEST_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADE_REQUEST_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADE_REQUEST_RES& from) { SS2C_TRADE_REQUEST_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADE_REQUEST_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADE_REQUEST_RES"; }

 protected:
  explicit SS2C_TRADE_REQUEST_RES(::google::protobuf::Arena* arena);
  SS2C_TRADE_REQUEST_RES(::google::protobuf::Arena* arena, const SS2C_TRADE_REQUEST_RES& from);
  SS2C_TRADE_REQUEST_RES(::google::protobuf::Arena* arena, SS2C_TRADE_REQUEST_RES&& from) noexcept
      : SS2C_TRADE_REQUEST_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestNickNameFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // .DC.Packet.SACCOUNT_NICKNAME requestNickName = 2;
  bool has_requestnickname() const;
  void clear_requestnickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& requestnickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_requestnickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_requestnickname();
  void set_allocated_requestnickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_requestnickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_requestnickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_requestnickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_requestnickname();

  public:
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADE_REQUEST_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADE_REQUEST_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADE_REQUEST_RES& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::SACCOUNT_NICKNAME* requestnickname_;
    ::uint32_t result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADE_REQUEST_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADE_REQUEST_NOT) */ {
 public:
  inline SS2C_TRADE_REQUEST_NOT() : SS2C_TRADE_REQUEST_NOT(nullptr) {}
  ~SS2C_TRADE_REQUEST_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADE_REQUEST_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADE_REQUEST_NOT(const SS2C_TRADE_REQUEST_NOT& from) : SS2C_TRADE_REQUEST_NOT(nullptr, from) {}
  inline SS2C_TRADE_REQUEST_NOT(SS2C_TRADE_REQUEST_NOT&& from) noexcept
      : SS2C_TRADE_REQUEST_NOT(nullptr, std::move(from)) {}
  inline SS2C_TRADE_REQUEST_NOT& operator=(const SS2C_TRADE_REQUEST_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADE_REQUEST_NOT& operator=(SS2C_TRADE_REQUEST_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADE_REQUEST_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADE_REQUEST_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADE_REQUEST_NOT*>(
        &_SS2C_TRADE_REQUEST_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(SS2C_TRADE_REQUEST_NOT& a, SS2C_TRADE_REQUEST_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADE_REQUEST_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADE_REQUEST_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADE_REQUEST_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADE_REQUEST_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADE_REQUEST_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADE_REQUEST_NOT& from) { SS2C_TRADE_REQUEST_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADE_REQUEST_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADE_REQUEST_NOT"; }

 protected:
  explicit SS2C_TRADE_REQUEST_NOT(::google::protobuf::Arena* arena);
  SS2C_TRADE_REQUEST_NOT(::google::protobuf::Arena* arena, const SS2C_TRADE_REQUEST_NOT& from);
  SS2C_TRADE_REQUEST_NOT(::google::protobuf::Arena* arena, SS2C_TRADE_REQUEST_NOT&& from) noexcept
      : SS2C_TRADE_REQUEST_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kNickNameFieldNumber = 2,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 2;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADE_REQUEST_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADE_REQUEST_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADE_REQUEST_NOT& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES) */ {
 public:
  inline SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES() : SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES(nullptr) {}
  ~SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES(const SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES& from) : SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES(nullptr, from) {}
  inline SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES(SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES&& from) noexcept
      : SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES(nullptr, std::move(from)) {}
  inline SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES& operator=(const SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES& operator=(SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES*>(
        &_SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES& a, SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES& from) { SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES"; }

 protected:
  explicit SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES(::google::protobuf::Arena* arena);
  SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES(::google::protobuf::Arena* arena, const SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES& from);
  SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES(::google::protobuf::Arena* arena, SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES&& from) noexcept
      : SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequirementsFieldNumber = 1,
  };
  // repeated .DC.Packet.STRADE_MEMBERSHIP_REQUIREMENT requirements = 1;
  int requirements_size() const;
  private:
  int _internal_requirements_size() const;

  public:
  void clear_requirements() ;
  ::DC::Packet::STRADE_MEMBERSHIP_REQUIREMENT* mutable_requirements(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_MEMBERSHIP_REQUIREMENT>* mutable_requirements();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_MEMBERSHIP_REQUIREMENT>& _internal_requirements() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_MEMBERSHIP_REQUIREMENT>* _internal_mutable_requirements();
  public:
  const ::DC::Packet::STRADE_MEMBERSHIP_REQUIREMENT& requirements(int index) const;
  ::DC::Packet::STRADE_MEMBERSHIP_REQUIREMENT* add_requirements();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_MEMBERSHIP_REQUIREMENT>& requirements() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::STRADE_MEMBERSHIP_REQUIREMENT > requirements_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADE_CHANNEL_LIST_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADE_CHANNEL_LIST_RES) */ {
 public:
  inline SS2C_TRADE_CHANNEL_LIST_RES() : SS2C_TRADE_CHANNEL_LIST_RES(nullptr) {}
  ~SS2C_TRADE_CHANNEL_LIST_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADE_CHANNEL_LIST_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADE_CHANNEL_LIST_RES(const SS2C_TRADE_CHANNEL_LIST_RES& from) : SS2C_TRADE_CHANNEL_LIST_RES(nullptr, from) {}
  inline SS2C_TRADE_CHANNEL_LIST_RES(SS2C_TRADE_CHANNEL_LIST_RES&& from) noexcept
      : SS2C_TRADE_CHANNEL_LIST_RES(nullptr, std::move(from)) {}
  inline SS2C_TRADE_CHANNEL_LIST_RES& operator=(const SS2C_TRADE_CHANNEL_LIST_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADE_CHANNEL_LIST_RES& operator=(SS2C_TRADE_CHANNEL_LIST_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADE_CHANNEL_LIST_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADE_CHANNEL_LIST_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADE_CHANNEL_LIST_RES*>(
        &_SS2C_TRADE_CHANNEL_LIST_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SS2C_TRADE_CHANNEL_LIST_RES& a, SS2C_TRADE_CHANNEL_LIST_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADE_CHANNEL_LIST_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADE_CHANNEL_LIST_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADE_CHANNEL_LIST_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADE_CHANNEL_LIST_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADE_CHANNEL_LIST_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADE_CHANNEL_LIST_RES& from) { SS2C_TRADE_CHANNEL_LIST_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADE_CHANNEL_LIST_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADE_CHANNEL_LIST_RES"; }

 protected:
  explicit SS2C_TRADE_CHANNEL_LIST_RES(::google::protobuf::Arena* arena);
  SS2C_TRADE_CHANNEL_LIST_RES(::google::protobuf::Arena* arena, const SS2C_TRADE_CHANNEL_LIST_RES& from);
  SS2C_TRADE_CHANNEL_LIST_RES(::google::protobuf::Arena* arena, SS2C_TRADE_CHANNEL_LIST_RES&& from) noexcept
      : SS2C_TRADE_CHANNEL_LIST_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelsFieldNumber = 2,
    kIsTraderFieldNumber = 1,
  };
  // repeated .DC.Packet.STRADE_CHANNEL channels = 2;
  int channels_size() const;
  private:
  int _internal_channels_size() const;

  public:
  void clear_channels() ;
  ::DC::Packet::STRADE_CHANNEL* mutable_channels(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHANNEL>* mutable_channels();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHANNEL>& _internal_channels() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHANNEL>* _internal_mutable_channels();
  public:
  const ::DC::Packet::STRADE_CHANNEL& channels(int index) const;
  ::DC::Packet::STRADE_CHANNEL* add_channels();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHANNEL>& channels() const;
  // uint32 isTrader = 1;
  void clear_istrader() ;
  ::uint32_t istrader() const;
  void set_istrader(::uint32_t value);

  private:
  ::uint32_t _internal_istrader() const;
  void _internal_set_istrader(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADE_CHANNEL_LIST_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADE_CHANNEL_LIST_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADE_CHANNEL_LIST_RES& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::STRADE_CHANNEL > channels_;
    ::uint32_t istrader_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADE_ANSWER_REFUSAL_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADE_ANSWER_REFUSAL_NOT) */ {
 public:
  inline SS2C_TRADE_ANSWER_REFUSAL_NOT() : SS2C_TRADE_ANSWER_REFUSAL_NOT(nullptr) {}
  ~SS2C_TRADE_ANSWER_REFUSAL_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADE_ANSWER_REFUSAL_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADE_ANSWER_REFUSAL_NOT(const SS2C_TRADE_ANSWER_REFUSAL_NOT& from) : SS2C_TRADE_ANSWER_REFUSAL_NOT(nullptr, from) {}
  inline SS2C_TRADE_ANSWER_REFUSAL_NOT(SS2C_TRADE_ANSWER_REFUSAL_NOT&& from) noexcept
      : SS2C_TRADE_ANSWER_REFUSAL_NOT(nullptr, std::move(from)) {}
  inline SS2C_TRADE_ANSWER_REFUSAL_NOT& operator=(const SS2C_TRADE_ANSWER_REFUSAL_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADE_ANSWER_REFUSAL_NOT& operator=(SS2C_TRADE_ANSWER_REFUSAL_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADE_ANSWER_REFUSAL_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADE_ANSWER_REFUSAL_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADE_ANSWER_REFUSAL_NOT*>(
        &_SS2C_TRADE_ANSWER_REFUSAL_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(SS2C_TRADE_ANSWER_REFUSAL_NOT& a, SS2C_TRADE_ANSWER_REFUSAL_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADE_ANSWER_REFUSAL_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADE_ANSWER_REFUSAL_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADE_ANSWER_REFUSAL_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADE_ANSWER_REFUSAL_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADE_ANSWER_REFUSAL_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADE_ANSWER_REFUSAL_NOT& from) { SS2C_TRADE_ANSWER_REFUSAL_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADE_ANSWER_REFUSAL_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADE_ANSWER_REFUSAL_NOT"; }

 protected:
  explicit SS2C_TRADE_ANSWER_REFUSAL_NOT(::google::protobuf::Arena* arena);
  SS2C_TRADE_ANSWER_REFUSAL_NOT(::google::protobuf::Arena* arena, const SS2C_TRADE_ANSWER_REFUSAL_NOT& from);
  SS2C_TRADE_ANSWER_REFUSAL_NOT(::google::protobuf::Arena* arena, SS2C_TRADE_ANSWER_REFUSAL_NOT&& from) noexcept
      : SS2C_TRADE_ANSWER_REFUSAL_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kNickNameFieldNumber = 2,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 2;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADE_ANSWER_REFUSAL_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      57, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADE_ANSWER_REFUSAL_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADE_ANSWER_REFUSAL_NOT& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SC2S_TRADE_REQUEST_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_TRADE_REQUEST_REQ) */ {
 public:
  inline SC2S_TRADE_REQUEST_REQ() : SC2S_TRADE_REQUEST_REQ(nullptr) {}
  ~SC2S_TRADE_REQUEST_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_TRADE_REQUEST_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_TRADE_REQUEST_REQ(const SC2S_TRADE_REQUEST_REQ& from) : SC2S_TRADE_REQUEST_REQ(nullptr, from) {}
  inline SC2S_TRADE_REQUEST_REQ(SC2S_TRADE_REQUEST_REQ&& from) noexcept
      : SC2S_TRADE_REQUEST_REQ(nullptr, std::move(from)) {}
  inline SC2S_TRADE_REQUEST_REQ& operator=(const SC2S_TRADE_REQUEST_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_TRADE_REQUEST_REQ& operator=(SC2S_TRADE_REQUEST_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_TRADE_REQUEST_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_TRADE_REQUEST_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_TRADE_REQUEST_REQ*>(
        &_SC2S_TRADE_REQUEST_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(SC2S_TRADE_REQUEST_REQ& a, SC2S_TRADE_REQUEST_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_TRADE_REQUEST_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_TRADE_REQUEST_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_TRADE_REQUEST_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_TRADE_REQUEST_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_TRADE_REQUEST_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_TRADE_REQUEST_REQ& from) { SC2S_TRADE_REQUEST_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_TRADE_REQUEST_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_TRADE_REQUEST_REQ"; }

 protected:
  explicit SC2S_TRADE_REQUEST_REQ(::google::protobuf::Arena* arena);
  SC2S_TRADE_REQUEST_REQ(::google::protobuf::Arena* arena, const SC2S_TRADE_REQUEST_REQ& from);
  SC2S_TRADE_REQUEST_REQ(::google::protobuf::Arena* arena, SC2S_TRADE_REQUEST_REQ&& from) noexcept
      : SC2S_TRADE_REQUEST_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 3,
    kNickNameFieldNumber = 2,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 3;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 2;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_TRADE_REQUEST_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      61, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_TRADE_REQUEST_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_TRADE_REQUEST_REQ& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SC2S_TRADE_ANSWER_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_TRADE_ANSWER_REQ) */ {
 public:
  inline SC2S_TRADE_ANSWER_REQ() : SC2S_TRADE_ANSWER_REQ(nullptr) {}
  ~SC2S_TRADE_ANSWER_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_TRADE_ANSWER_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_TRADE_ANSWER_REQ(const SC2S_TRADE_ANSWER_REQ& from) : SC2S_TRADE_ANSWER_REQ(nullptr, from) {}
  inline SC2S_TRADE_ANSWER_REQ(SC2S_TRADE_ANSWER_REQ&& from) noexcept
      : SC2S_TRADE_ANSWER_REQ(nullptr, std::move(from)) {}
  inline SC2S_TRADE_ANSWER_REQ& operator=(const SC2S_TRADE_ANSWER_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_TRADE_ANSWER_REQ& operator=(SC2S_TRADE_ANSWER_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_TRADE_ANSWER_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_TRADE_ANSWER_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_TRADE_ANSWER_REQ*>(
        &_SC2S_TRADE_ANSWER_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(SC2S_TRADE_ANSWER_REQ& a, SC2S_TRADE_ANSWER_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_TRADE_ANSWER_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_TRADE_ANSWER_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_TRADE_ANSWER_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_TRADE_ANSWER_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_TRADE_ANSWER_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_TRADE_ANSWER_REQ& from) { SC2S_TRADE_ANSWER_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_TRADE_ANSWER_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_TRADE_ANSWER_REQ"; }

 protected:
  explicit SC2S_TRADE_ANSWER_REQ(::google::protobuf::Arena* arena);
  SC2S_TRADE_ANSWER_REQ(::google::protobuf::Arena* arena, const SC2S_TRADE_ANSWER_REQ& from);
  SC2S_TRADE_ANSWER_REQ(::google::protobuf::Arena* arena, SC2S_TRADE_ANSWER_REQ&& from) noexcept
      : SC2S_TRADE_ANSWER_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kNickNameFieldNumber = 2,
    kSelectFlagFieldNumber = 3,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 2;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // uint32 selectFlag = 3;
  void clear_selectflag() ;
  ::uint32_t selectflag() const;
  void set_selectflag(::uint32_t value);

  private:
  ::uint32_t _internal_selectflag() const;
  void _internal_set_selectflag(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_TRADE_ANSWER_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      49, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_TRADE_ANSWER_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_TRADE_ANSWER_REQ& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    ::uint32_t selectflag_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class STRADING_CONFIRM_ITEM final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.STRADING_CONFIRM_ITEM) */ {
 public:
  inline STRADING_CONFIRM_ITEM() : STRADING_CONFIRM_ITEM(nullptr) {}
  ~STRADING_CONFIRM_ITEM() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR STRADING_CONFIRM_ITEM(
      ::google::protobuf::internal::ConstantInitialized);

  inline STRADING_CONFIRM_ITEM(const STRADING_CONFIRM_ITEM& from) : STRADING_CONFIRM_ITEM(nullptr, from) {}
  inline STRADING_CONFIRM_ITEM(STRADING_CONFIRM_ITEM&& from) noexcept
      : STRADING_CONFIRM_ITEM(nullptr, std::move(from)) {}
  inline STRADING_CONFIRM_ITEM& operator=(const STRADING_CONFIRM_ITEM& from) {
    CopyFrom(from);
    return *this;
  }
  inline STRADING_CONFIRM_ITEM& operator=(STRADING_CONFIRM_ITEM&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const STRADING_CONFIRM_ITEM& default_instance() {
    return *internal_default_instance();
  }
  static inline const STRADING_CONFIRM_ITEM* internal_default_instance() {
    return reinterpret_cast<const STRADING_CONFIRM_ITEM*>(
        &_STRADING_CONFIRM_ITEM_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(STRADING_CONFIRM_ITEM& a, STRADING_CONFIRM_ITEM& b) { a.Swap(&b); }
  inline void Swap(STRADING_CONFIRM_ITEM* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(STRADING_CONFIRM_ITEM* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  STRADING_CONFIRM_ITEM* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<STRADING_CONFIRM_ITEM>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const STRADING_CONFIRM_ITEM& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const STRADING_CONFIRM_ITEM& from) { STRADING_CONFIRM_ITEM::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(STRADING_CONFIRM_ITEM* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.STRADING_CONFIRM_ITEM"; }

 protected:
  explicit STRADING_CONFIRM_ITEM(::google::protobuf::Arena* arena);
  STRADING_CONFIRM_ITEM(::google::protobuf::Arena* arena, const STRADING_CONFIRM_ITEM& from);
  STRADING_CONFIRM_ITEM(::google::protobuf::Arena* arena, STRADING_CONFIRM_ITEM&& from) noexcept
      : STRADING_CONFIRM_ITEM(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 2,
    kInfoFieldNumber = 1,
  };
  // repeated .DC.Packet.SItem items = 2;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::DC::Packet::SItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* _internal_mutable_items();
  public:
  const ::DC::Packet::SItem& items(int index) const;
  ::DC::Packet::SItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& items() const;
  // .DC.Packet.STRADING_USER_INFO info = 1;
  bool has_info() const;
  void clear_info() ;
  const ::DC::Packet::STRADING_USER_INFO& info() const;
  PROTOBUF_NODISCARD ::DC::Packet::STRADING_USER_INFO* release_info();
  ::DC::Packet::STRADING_USER_INFO* mutable_info();
  void set_allocated_info(::DC::Packet::STRADING_USER_INFO* value);
  void unsafe_arena_set_allocated_info(::DC::Packet::STRADING_USER_INFO* value);
  ::DC::Packet::STRADING_USER_INFO* unsafe_arena_release_info();

  private:
  const ::DC::Packet::STRADING_USER_INFO& _internal_info() const;
  ::DC::Packet::STRADING_USER_INFO* _internal_mutable_info();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.STRADING_CONFIRM_ITEM)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_STRADING_CONFIRM_ITEM_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const STRADING_CONFIRM_ITEM& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SItem > items_;
    ::DC::Packet::STRADING_USER_INFO* info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class STRADE_CHANNEL_USER_UPDATE_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.STRADE_CHANNEL_USER_UPDATE_INFO) */ {
 public:
  inline STRADE_CHANNEL_USER_UPDATE_INFO() : STRADE_CHANNEL_USER_UPDATE_INFO(nullptr) {}
  ~STRADE_CHANNEL_USER_UPDATE_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR STRADE_CHANNEL_USER_UPDATE_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline STRADE_CHANNEL_USER_UPDATE_INFO(const STRADE_CHANNEL_USER_UPDATE_INFO& from) : STRADE_CHANNEL_USER_UPDATE_INFO(nullptr, from) {}
  inline STRADE_CHANNEL_USER_UPDATE_INFO(STRADE_CHANNEL_USER_UPDATE_INFO&& from) noexcept
      : STRADE_CHANNEL_USER_UPDATE_INFO(nullptr, std::move(from)) {}
  inline STRADE_CHANNEL_USER_UPDATE_INFO& operator=(const STRADE_CHANNEL_USER_UPDATE_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline STRADE_CHANNEL_USER_UPDATE_INFO& operator=(STRADE_CHANNEL_USER_UPDATE_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const STRADE_CHANNEL_USER_UPDATE_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const STRADE_CHANNEL_USER_UPDATE_INFO* internal_default_instance() {
    return reinterpret_cast<const STRADE_CHANNEL_USER_UPDATE_INFO*>(
        &_STRADE_CHANNEL_USER_UPDATE_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(STRADE_CHANNEL_USER_UPDATE_INFO& a, STRADE_CHANNEL_USER_UPDATE_INFO& b) { a.Swap(&b); }
  inline void Swap(STRADE_CHANNEL_USER_UPDATE_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(STRADE_CHANNEL_USER_UPDATE_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  STRADE_CHANNEL_USER_UPDATE_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<STRADE_CHANNEL_USER_UPDATE_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const STRADE_CHANNEL_USER_UPDATE_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const STRADE_CHANNEL_USER_UPDATE_INFO& from) { STRADE_CHANNEL_USER_UPDATE_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(STRADE_CHANNEL_USER_UPDATE_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.STRADE_CHANNEL_USER_UPDATE_INFO"; }

 protected:
  explicit STRADE_CHANNEL_USER_UPDATE_INFO(::google::protobuf::Arena* arena);
  STRADE_CHANNEL_USER_UPDATE_INFO(::google::protobuf::Arena* arena, const STRADE_CHANNEL_USER_UPDATE_INFO& from);
  STRADE_CHANNEL_USER_UPDATE_INFO(::google::protobuf::Arena* arena, STRADE_CHANNEL_USER_UPDATE_INFO&& from) noexcept
      : STRADE_CHANNEL_USER_UPDATE_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTraderFieldNumber = 2,
    kUpdateFlagFieldNumber = 1,
  };
  // .DC.Packet.SCHARACTER_TRADE_INFO trader = 2;
  bool has_trader() const;
  void clear_trader() ;
  const ::DC::Packet::SCHARACTER_TRADE_INFO& trader() const;
  PROTOBUF_NODISCARD ::DC::Packet::SCHARACTER_TRADE_INFO* release_trader();
  ::DC::Packet::SCHARACTER_TRADE_INFO* mutable_trader();
  void set_allocated_trader(::DC::Packet::SCHARACTER_TRADE_INFO* value);
  void unsafe_arena_set_allocated_trader(::DC::Packet::SCHARACTER_TRADE_INFO* value);
  ::DC::Packet::SCHARACTER_TRADE_INFO* unsafe_arena_release_trader();

  private:
  const ::DC::Packet::SCHARACTER_TRADE_INFO& _internal_trader() const;
  ::DC::Packet::SCHARACTER_TRADE_INFO* _internal_mutable_trader();

  public:
  // uint32 updateFlag = 1;
  void clear_updateflag() ;
  ::uint32_t updateflag() const;
  void set_updateflag(::uint32_t value);

  private:
  ::uint32_t _internal_updateflag() const;
  void _internal_set_updateflag(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.STRADE_CHANNEL_USER_UPDATE_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_STRADE_CHANNEL_USER_UPDATE_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const STRADE_CHANNEL_USER_UPDATE_INFO& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::SCHARACTER_TRADE_INFO* trader_;
    ::uint32_t updateflag_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADING_READY_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADING_READY_NOT) */ {
 public:
  inline SS2C_TRADING_READY_NOT() : SS2C_TRADING_READY_NOT(nullptr) {}
  ~SS2C_TRADING_READY_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADING_READY_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADING_READY_NOT(const SS2C_TRADING_READY_NOT& from) : SS2C_TRADING_READY_NOT(nullptr, from) {}
  inline SS2C_TRADING_READY_NOT(SS2C_TRADING_READY_NOT&& from) noexcept
      : SS2C_TRADING_READY_NOT(nullptr, std::move(from)) {}
  inline SS2C_TRADING_READY_NOT& operator=(const SS2C_TRADING_READY_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADING_READY_NOT& operator=(SS2C_TRADING_READY_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADING_READY_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADING_READY_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADING_READY_NOT*>(
        &_SS2C_TRADING_READY_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(SS2C_TRADING_READY_NOT& a, SS2C_TRADING_READY_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADING_READY_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADING_READY_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADING_READY_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADING_READY_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADING_READY_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADING_READY_NOT& from) { SS2C_TRADING_READY_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADING_READY_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADING_READY_NOT"; }

 protected:
  explicit SS2C_TRADING_READY_NOT(::google::protobuf::Arena* arena);
  SS2C_TRADING_READY_NOT(::google::protobuf::Arena* arena, const SS2C_TRADING_READY_NOT& from);
  SS2C_TRADING_READY_NOT(::google::protobuf::Arena* arena, SS2C_TRADING_READY_NOT&& from) noexcept
      : SS2C_TRADING_READY_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReadyUserInfoFieldNumber = 1,
    kIsReadyFieldNumber = 2,
  };
  // .DC.Packet.STRADING_USER_INFO readyUserInfo = 1;
  bool has_readyuserinfo() const;
  void clear_readyuserinfo() ;
  const ::DC::Packet::STRADING_USER_INFO& readyuserinfo() const;
  PROTOBUF_NODISCARD ::DC::Packet::STRADING_USER_INFO* release_readyuserinfo();
  ::DC::Packet::STRADING_USER_INFO* mutable_readyuserinfo();
  void set_allocated_readyuserinfo(::DC::Packet::STRADING_USER_INFO* value);
  void unsafe_arena_set_allocated_readyuserinfo(::DC::Packet::STRADING_USER_INFO* value);
  ::DC::Packet::STRADING_USER_INFO* unsafe_arena_release_readyuserinfo();

  private:
  const ::DC::Packet::STRADING_USER_INFO& _internal_readyuserinfo() const;
  ::DC::Packet::STRADING_USER_INFO* _internal_mutable_readyuserinfo();

  public:
  // uint32 isReady = 2;
  void clear_isready() ;
  ::uint32_t isready() const;
  void set_isready(::uint32_t value);

  private:
  ::uint32_t _internal_isready() const;
  void _internal_set_isready(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADING_READY_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADING_READY_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADING_READY_NOT& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::STRADING_USER_INFO* readyuserinfo_;
    ::uint32_t isready_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADING_ITEM_UPDATE_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES) */ {
 public:
  inline SS2C_TRADING_ITEM_UPDATE_RES() : SS2C_TRADING_ITEM_UPDATE_RES(nullptr) {}
  ~SS2C_TRADING_ITEM_UPDATE_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADING_ITEM_UPDATE_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADING_ITEM_UPDATE_RES(const SS2C_TRADING_ITEM_UPDATE_RES& from) : SS2C_TRADING_ITEM_UPDATE_RES(nullptr, from) {}
  inline SS2C_TRADING_ITEM_UPDATE_RES(SS2C_TRADING_ITEM_UPDATE_RES&& from) noexcept
      : SS2C_TRADING_ITEM_UPDATE_RES(nullptr, std::move(from)) {}
  inline SS2C_TRADING_ITEM_UPDATE_RES& operator=(const SS2C_TRADING_ITEM_UPDATE_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADING_ITEM_UPDATE_RES& operator=(SS2C_TRADING_ITEM_UPDATE_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADING_ITEM_UPDATE_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADING_ITEM_UPDATE_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADING_ITEM_UPDATE_RES*>(
        &_SS2C_TRADING_ITEM_UPDATE_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(SS2C_TRADING_ITEM_UPDATE_RES& a, SS2C_TRADING_ITEM_UPDATE_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADING_ITEM_UPDATE_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADING_ITEM_UPDATE_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADING_ITEM_UPDATE_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADING_ITEM_UPDATE_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADING_ITEM_UPDATE_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADING_ITEM_UPDATE_RES& from) { SS2C_TRADING_ITEM_UPDATE_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADING_ITEM_UPDATE_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES"; }

 protected:
  explicit SS2C_TRADING_ITEM_UPDATE_RES(::google::protobuf::Arena* arena);
  SS2C_TRADING_ITEM_UPDATE_RES(::google::protobuf::Arena* arena, const SS2C_TRADING_ITEM_UPDATE_RES& from);
  SS2C_TRADING_ITEM_UPDATE_RES(::google::protobuf::Arena* arena, SS2C_TRADING_ITEM_UPDATE_RES&& from) noexcept
      : SS2C_TRADING_ITEM_UPDATE_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpdateUserInfoFieldNumber = 2,
    kUpdateItemFieldNumber = 4,
    kResultFieldNumber = 1,
    kUpdateFlagFieldNumber = 3,
  };
  // .DC.Packet.STRADING_USER_INFO updateUserInfo = 2;
  bool has_updateuserinfo() const;
  void clear_updateuserinfo() ;
  const ::DC::Packet::STRADING_USER_INFO& updateuserinfo() const;
  PROTOBUF_NODISCARD ::DC::Packet::STRADING_USER_INFO* release_updateuserinfo();
  ::DC::Packet::STRADING_USER_INFO* mutable_updateuserinfo();
  void set_allocated_updateuserinfo(::DC::Packet::STRADING_USER_INFO* value);
  void unsafe_arena_set_allocated_updateuserinfo(::DC::Packet::STRADING_USER_INFO* value);
  ::DC::Packet::STRADING_USER_INFO* unsafe_arena_release_updateuserinfo();

  private:
  const ::DC::Packet::STRADING_USER_INFO& _internal_updateuserinfo() const;
  ::DC::Packet::STRADING_USER_INFO* _internal_mutable_updateuserinfo();

  public:
  // .DC.Packet.SItem updateItem = 4;
  bool has_updateitem() const;
  void clear_updateitem() ;
  const ::DC::Packet::SItem& updateitem() const;
  PROTOBUF_NODISCARD ::DC::Packet::SItem* release_updateitem();
  ::DC::Packet::SItem* mutable_updateitem();
  void set_allocated_updateitem(::DC::Packet::SItem* value);
  void unsafe_arena_set_allocated_updateitem(::DC::Packet::SItem* value);
  ::DC::Packet::SItem* unsafe_arena_release_updateitem();

  private:
  const ::DC::Packet::SItem& _internal_updateitem() const;
  ::DC::Packet::SItem* _internal_mutable_updateitem();

  public:
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // uint32 updateFlag = 3;
  void clear_updateflag() ;
  ::uint32_t updateflag() const;
  void set_updateflag(::uint32_t value);

  private:
  ::uint32_t _internal_updateflag() const;
  void _internal_set_updateflag(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADING_ITEM_UPDATE_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADING_ITEM_UPDATE_RES& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::STRADING_USER_INFO* updateuserinfo_;
    ::DC::Packet::SItem* updateitem_;
    ::uint32_t result_;
    ::uint32_t updateflag_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADING_CONFIRM_READY_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADING_CONFIRM_READY_NOT) */ {
 public:
  inline SS2C_TRADING_CONFIRM_READY_NOT() : SS2C_TRADING_CONFIRM_READY_NOT(nullptr) {}
  ~SS2C_TRADING_CONFIRM_READY_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADING_CONFIRM_READY_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADING_CONFIRM_READY_NOT(const SS2C_TRADING_CONFIRM_READY_NOT& from) : SS2C_TRADING_CONFIRM_READY_NOT(nullptr, from) {}
  inline SS2C_TRADING_CONFIRM_READY_NOT(SS2C_TRADING_CONFIRM_READY_NOT&& from) noexcept
      : SS2C_TRADING_CONFIRM_READY_NOT(nullptr, std::move(from)) {}
  inline SS2C_TRADING_CONFIRM_READY_NOT& operator=(const SS2C_TRADING_CONFIRM_READY_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADING_CONFIRM_READY_NOT& operator=(SS2C_TRADING_CONFIRM_READY_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADING_CONFIRM_READY_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADING_CONFIRM_READY_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADING_CONFIRM_READY_NOT*>(
        &_SS2C_TRADING_CONFIRM_READY_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(SS2C_TRADING_CONFIRM_READY_NOT& a, SS2C_TRADING_CONFIRM_READY_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADING_CONFIRM_READY_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADING_CONFIRM_READY_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADING_CONFIRM_READY_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADING_CONFIRM_READY_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADING_CONFIRM_READY_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADING_CONFIRM_READY_NOT& from) { SS2C_TRADING_CONFIRM_READY_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADING_CONFIRM_READY_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADING_CONFIRM_READY_NOT"; }

 protected:
  explicit SS2C_TRADING_CONFIRM_READY_NOT(::google::protobuf::Arena* arena);
  SS2C_TRADING_CONFIRM_READY_NOT(::google::protobuf::Arena* arena, const SS2C_TRADING_CONFIRM_READY_NOT& from);
  SS2C_TRADING_CONFIRM_READY_NOT(::google::protobuf::Arena* arena, SS2C_TRADING_CONFIRM_READY_NOT&& from) noexcept
      : SS2C_TRADING_CONFIRM_READY_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReadyUserInfoFieldNumber = 1,
    kIsReadyFieldNumber = 2,
  };
  // .DC.Packet.STRADING_USER_INFO readyUserInfo = 1;
  bool has_readyuserinfo() const;
  void clear_readyuserinfo() ;
  const ::DC::Packet::STRADING_USER_INFO& readyuserinfo() const;
  PROTOBUF_NODISCARD ::DC::Packet::STRADING_USER_INFO* release_readyuserinfo();
  ::DC::Packet::STRADING_USER_INFO* mutable_readyuserinfo();
  void set_allocated_readyuserinfo(::DC::Packet::STRADING_USER_INFO* value);
  void unsafe_arena_set_allocated_readyuserinfo(::DC::Packet::STRADING_USER_INFO* value);
  ::DC::Packet::STRADING_USER_INFO* unsafe_arena_release_readyuserinfo();

  private:
  const ::DC::Packet::STRADING_USER_INFO& _internal_readyuserinfo() const;
  ::DC::Packet::STRADING_USER_INFO* _internal_mutable_readyuserinfo();

  public:
  // uint32 isReady = 2;
  void clear_isready() ;
  ::uint32_t isready() const;
  void set_isready(::uint32_t value);

  private:
  ::uint32_t _internal_isready() const;
  void _internal_set_isready(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADING_CONFIRM_READY_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADING_CONFIRM_READY_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADING_CONFIRM_READY_NOT& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::STRADING_USER_INFO* readyuserinfo_;
    ::uint32_t isready_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADING_BEGIN_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADING_BEGIN_NOT) */ {
 public:
  inline SS2C_TRADING_BEGIN_NOT() : SS2C_TRADING_BEGIN_NOT(nullptr) {}
  ~SS2C_TRADING_BEGIN_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADING_BEGIN_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADING_BEGIN_NOT(const SS2C_TRADING_BEGIN_NOT& from) : SS2C_TRADING_BEGIN_NOT(nullptr, from) {}
  inline SS2C_TRADING_BEGIN_NOT(SS2C_TRADING_BEGIN_NOT&& from) noexcept
      : SS2C_TRADING_BEGIN_NOT(nullptr, std::move(from)) {}
  inline SS2C_TRADING_BEGIN_NOT& operator=(const SS2C_TRADING_BEGIN_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADING_BEGIN_NOT& operator=(SS2C_TRADING_BEGIN_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADING_BEGIN_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADING_BEGIN_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADING_BEGIN_NOT*>(
        &_SS2C_TRADING_BEGIN_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(SS2C_TRADING_BEGIN_NOT& a, SS2C_TRADING_BEGIN_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADING_BEGIN_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADING_BEGIN_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADING_BEGIN_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADING_BEGIN_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADING_BEGIN_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADING_BEGIN_NOT& from) { SS2C_TRADING_BEGIN_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADING_BEGIN_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADING_BEGIN_NOT"; }

 protected:
  explicit SS2C_TRADING_BEGIN_NOT(::google::protobuf::Arena* arena);
  SS2C_TRADING_BEGIN_NOT(::google::protobuf::Arena* arena, const SS2C_TRADING_BEGIN_NOT& from);
  SS2C_TRADING_BEGIN_NOT(::google::protobuf::Arena* arena, SS2C_TRADING_BEGIN_NOT&& from) noexcept
      : SS2C_TRADING_BEGIN_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetFieldNumber = 1,
    kMineFieldNumber = 2,
    kTradeFeeFieldNumber = 4,
    kMoveResetTimeSecFieldNumber = 5,
  };
  // .DC.Packet.STRADING_USER_INFO target = 1;
  bool has_target() const;
  void clear_target() ;
  const ::DC::Packet::STRADING_USER_INFO& target() const;
  PROTOBUF_NODISCARD ::DC::Packet::STRADING_USER_INFO* release_target();
  ::DC::Packet::STRADING_USER_INFO* mutable_target();
  void set_allocated_target(::DC::Packet::STRADING_USER_INFO* value);
  void unsafe_arena_set_allocated_target(::DC::Packet::STRADING_USER_INFO* value);
  ::DC::Packet::STRADING_USER_INFO* unsafe_arena_release_target();

  private:
  const ::DC::Packet::STRADING_USER_INFO& _internal_target() const;
  ::DC::Packet::STRADING_USER_INFO* _internal_mutable_target();

  public:
  // .DC.Packet.STRADING_USER_INFO mine = 2;
  bool has_mine() const;
  void clear_mine() ;
  const ::DC::Packet::STRADING_USER_INFO& mine() const;
  PROTOBUF_NODISCARD ::DC::Packet::STRADING_USER_INFO* release_mine();
  ::DC::Packet::STRADING_USER_INFO* mutable_mine();
  void set_allocated_mine(::DC::Packet::STRADING_USER_INFO* value);
  void unsafe_arena_set_allocated_mine(::DC::Packet::STRADING_USER_INFO* value);
  ::DC::Packet::STRADING_USER_INFO* unsafe_arena_release_mine();

  private:
  const ::DC::Packet::STRADING_USER_INFO& _internal_mine() const;
  ::DC::Packet::STRADING_USER_INFO* _internal_mutable_mine();

  public:
  // uint32 tradeFee = 4;
  void clear_tradefee() ;
  ::uint32_t tradefee() const;
  void set_tradefee(::uint32_t value);

  private:
  ::uint32_t _internal_tradefee() const;
  void _internal_set_tradefee(::uint32_t value);

  public:
  // uint32 moveResetTimeSec = 5;
  void clear_moveresettimesec() ;
  ::uint32_t moveresettimesec() const;
  void set_moveresettimesec(::uint32_t value);

  private:
  ::uint32_t _internal_moveresettimesec() const;
  void _internal_set_moveresettimesec(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADING_BEGIN_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADING_BEGIN_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADING_BEGIN_NOT& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::STRADING_USER_INFO* target_;
    ::DC::Packet::STRADING_USER_INFO* mine_;
    ::uint32_t tradefee_;
    ::uint32_t moveresettimesec_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADE_CHANNEL_USER_LIST_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADE_CHANNEL_USER_LIST_RES) */ {
 public:
  inline SS2C_TRADE_CHANNEL_USER_LIST_RES() : SS2C_TRADE_CHANNEL_USER_LIST_RES(nullptr) {}
  ~SS2C_TRADE_CHANNEL_USER_LIST_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADE_CHANNEL_USER_LIST_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADE_CHANNEL_USER_LIST_RES(const SS2C_TRADE_CHANNEL_USER_LIST_RES& from) : SS2C_TRADE_CHANNEL_USER_LIST_RES(nullptr, from) {}
  inline SS2C_TRADE_CHANNEL_USER_LIST_RES(SS2C_TRADE_CHANNEL_USER_LIST_RES&& from) noexcept
      : SS2C_TRADE_CHANNEL_USER_LIST_RES(nullptr, std::move(from)) {}
  inline SS2C_TRADE_CHANNEL_USER_LIST_RES& operator=(const SS2C_TRADE_CHANNEL_USER_LIST_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADE_CHANNEL_USER_LIST_RES& operator=(SS2C_TRADE_CHANNEL_USER_LIST_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADE_CHANNEL_USER_LIST_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADE_CHANNEL_USER_LIST_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADE_CHANNEL_USER_LIST_RES*>(
        &_SS2C_TRADE_CHANNEL_USER_LIST_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(SS2C_TRADE_CHANNEL_USER_LIST_RES& a, SS2C_TRADE_CHANNEL_USER_LIST_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADE_CHANNEL_USER_LIST_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADE_CHANNEL_USER_LIST_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADE_CHANNEL_USER_LIST_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADE_CHANNEL_USER_LIST_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADE_CHANNEL_USER_LIST_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADE_CHANNEL_USER_LIST_RES& from) { SS2C_TRADE_CHANNEL_USER_LIST_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADE_CHANNEL_USER_LIST_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADE_CHANNEL_USER_LIST_RES"; }

 protected:
  explicit SS2C_TRADE_CHANNEL_USER_LIST_RES(::google::protobuf::Arena* arena);
  SS2C_TRADE_CHANNEL_USER_LIST_RES(::google::protobuf::Arena* arena, const SS2C_TRADE_CHANNEL_USER_LIST_RES& from);
  SS2C_TRADE_CHANNEL_USER_LIST_RES(::google::protobuf::Arena* arena, SS2C_TRADE_CHANNEL_USER_LIST_RES&& from) noexcept
      : SS2C_TRADE_CHANNEL_USER_LIST_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTradersFieldNumber = 2,
    kLoopFlagFieldNumber = 1,
  };
  // repeated .DC.Packet.SCHARACTER_TRADE_INFO traders = 2;
  int traders_size() const;
  private:
  int _internal_traders_size() const;

  public:
  void clear_traders() ;
  ::DC::Packet::SCHARACTER_TRADE_INFO* mutable_traders(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_TRADE_INFO>* mutable_traders();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_TRADE_INFO>& _internal_traders() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_TRADE_INFO>* _internal_mutable_traders();
  public:
  const ::DC::Packet::SCHARACTER_TRADE_INFO& traders(int index) const;
  ::DC::Packet::SCHARACTER_TRADE_INFO* add_traders();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_TRADE_INFO>& traders() const;
  // uint32 loopFlag = 1;
  void clear_loopflag() ;
  ::uint32_t loopflag() const;
  void set_loopflag(::uint32_t value);

  private:
  ::uint32_t _internal_loopflag() const;
  void _internal_set_loopflag(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADE_CHANNEL_USER_LIST_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADE_CHANNEL_USER_LIST_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADE_CHANNEL_USER_LIST_RES& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SCHARACTER_TRADE_INFO > traders_;
    ::uint32_t loopflag_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADING_CONFIRM_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADING_CONFIRM_NOT) */ {
 public:
  inline SS2C_TRADING_CONFIRM_NOT() : SS2C_TRADING_CONFIRM_NOT(nullptr) {}
  ~SS2C_TRADING_CONFIRM_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADING_CONFIRM_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADING_CONFIRM_NOT(const SS2C_TRADING_CONFIRM_NOT& from) : SS2C_TRADING_CONFIRM_NOT(nullptr, from) {}
  inline SS2C_TRADING_CONFIRM_NOT(SS2C_TRADING_CONFIRM_NOT&& from) noexcept
      : SS2C_TRADING_CONFIRM_NOT(nullptr, std::move(from)) {}
  inline SS2C_TRADING_CONFIRM_NOT& operator=(const SS2C_TRADING_CONFIRM_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADING_CONFIRM_NOT& operator=(SS2C_TRADING_CONFIRM_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADING_CONFIRM_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADING_CONFIRM_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADING_CONFIRM_NOT*>(
        &_SS2C_TRADING_CONFIRM_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(SS2C_TRADING_CONFIRM_NOT& a, SS2C_TRADING_CONFIRM_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADING_CONFIRM_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADING_CONFIRM_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADING_CONFIRM_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADING_CONFIRM_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADING_CONFIRM_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADING_CONFIRM_NOT& from) { SS2C_TRADING_CONFIRM_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADING_CONFIRM_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADING_CONFIRM_NOT"; }

 protected:
  explicit SS2C_TRADING_CONFIRM_NOT(::google::protobuf::Arena* arena);
  SS2C_TRADING_CONFIRM_NOT(::google::protobuf::Arena* arena, const SS2C_TRADING_CONFIRM_NOT& from);
  SS2C_TRADING_CONFIRM_NOT(::google::protobuf::Arena* arena, SS2C_TRADING_CONFIRM_NOT&& from) noexcept
      : SS2C_TRADING_CONFIRM_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetFieldNumber = 1,
    kMineFieldNumber = 2,
  };
  // .DC.Packet.STRADING_CONFIRM_ITEM target = 1;
  bool has_target() const;
  void clear_target() ;
  const ::DC::Packet::STRADING_CONFIRM_ITEM& target() const;
  PROTOBUF_NODISCARD ::DC::Packet::STRADING_CONFIRM_ITEM* release_target();
  ::DC::Packet::STRADING_CONFIRM_ITEM* mutable_target();
  void set_allocated_target(::DC::Packet::STRADING_CONFIRM_ITEM* value);
  void unsafe_arena_set_allocated_target(::DC::Packet::STRADING_CONFIRM_ITEM* value);
  ::DC::Packet::STRADING_CONFIRM_ITEM* unsafe_arena_release_target();

  private:
  const ::DC::Packet::STRADING_CONFIRM_ITEM& _internal_target() const;
  ::DC::Packet::STRADING_CONFIRM_ITEM* _internal_mutable_target();

  public:
  // .DC.Packet.STRADING_CONFIRM_ITEM mine = 2;
  bool has_mine() const;
  void clear_mine() ;
  const ::DC::Packet::STRADING_CONFIRM_ITEM& mine() const;
  PROTOBUF_NODISCARD ::DC::Packet::STRADING_CONFIRM_ITEM* release_mine();
  ::DC::Packet::STRADING_CONFIRM_ITEM* mutable_mine();
  void set_allocated_mine(::DC::Packet::STRADING_CONFIRM_ITEM* value);
  void unsafe_arena_set_allocated_mine(::DC::Packet::STRADING_CONFIRM_ITEM* value);
  ::DC::Packet::STRADING_CONFIRM_ITEM* unsafe_arena_release_mine();

  private:
  const ::DC::Packet::STRADING_CONFIRM_ITEM& _internal_mine() const;
  ::DC::Packet::STRADING_CONFIRM_ITEM* _internal_mutable_mine();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADING_CONFIRM_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADING_CONFIRM_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADING_CONFIRM_NOT& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::STRADING_CONFIRM_ITEM* target_;
    ::DC::Packet::STRADING_CONFIRM_ITEM* mine_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADE_CHANNEL_USER_UPDATE_NOT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADE_CHANNEL_USER_UPDATE_NOT) */ {
 public:
  inline SS2C_TRADE_CHANNEL_USER_UPDATE_NOT() : SS2C_TRADE_CHANNEL_USER_UPDATE_NOT(nullptr) {}
  ~SS2C_TRADE_CHANNEL_USER_UPDATE_NOT() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADE_CHANNEL_USER_UPDATE_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADE_CHANNEL_USER_UPDATE_NOT(const SS2C_TRADE_CHANNEL_USER_UPDATE_NOT& from) : SS2C_TRADE_CHANNEL_USER_UPDATE_NOT(nullptr, from) {}
  inline SS2C_TRADE_CHANNEL_USER_UPDATE_NOT(SS2C_TRADE_CHANNEL_USER_UPDATE_NOT&& from) noexcept
      : SS2C_TRADE_CHANNEL_USER_UPDATE_NOT(nullptr, std::move(from)) {}
  inline SS2C_TRADE_CHANNEL_USER_UPDATE_NOT& operator=(const SS2C_TRADE_CHANNEL_USER_UPDATE_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADE_CHANNEL_USER_UPDATE_NOT& operator=(SS2C_TRADE_CHANNEL_USER_UPDATE_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADE_CHANNEL_USER_UPDATE_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADE_CHANNEL_USER_UPDATE_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADE_CHANNEL_USER_UPDATE_NOT*>(
        &_SS2C_TRADE_CHANNEL_USER_UPDATE_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(SS2C_TRADE_CHANNEL_USER_UPDATE_NOT& a, SS2C_TRADE_CHANNEL_USER_UPDATE_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADE_CHANNEL_USER_UPDATE_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADE_CHANNEL_USER_UPDATE_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADE_CHANNEL_USER_UPDATE_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADE_CHANNEL_USER_UPDATE_NOT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADE_CHANNEL_USER_UPDATE_NOT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADE_CHANNEL_USER_UPDATE_NOT& from) { SS2C_TRADE_CHANNEL_USER_UPDATE_NOT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADE_CHANNEL_USER_UPDATE_NOT* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADE_CHANNEL_USER_UPDATE_NOT"; }

 protected:
  explicit SS2C_TRADE_CHANNEL_USER_UPDATE_NOT(::google::protobuf::Arena* arena);
  SS2C_TRADE_CHANNEL_USER_UPDATE_NOT(::google::protobuf::Arena* arena, const SS2C_TRADE_CHANNEL_USER_UPDATE_NOT& from);
  SS2C_TRADE_CHANNEL_USER_UPDATE_NOT(::google::protobuf::Arena* arena, SS2C_TRADE_CHANNEL_USER_UPDATE_NOT&& from) noexcept
      : SS2C_TRADE_CHANNEL_USER_UPDATE_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpdatesFieldNumber = 1,
  };
  // repeated .DC.Packet.STRADE_CHANNEL_USER_UPDATE_INFO updates = 1;
  int updates_size() const;
  private:
  int _internal_updates_size() const;

  public:
  void clear_updates() ;
  ::DC::Packet::STRADE_CHANNEL_USER_UPDATE_INFO* mutable_updates(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHANNEL_USER_UPDATE_INFO>* mutable_updates();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHANNEL_USER_UPDATE_INFO>& _internal_updates() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHANNEL_USER_UPDATE_INFO>* _internal_mutable_updates();
  public:
  const ::DC::Packet::STRADE_CHANNEL_USER_UPDATE_INFO& updates(int index) const;
  ::DC::Packet::STRADE_CHANNEL_USER_UPDATE_INFO* add_updates();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHANNEL_USER_UPDATE_INFO>& updates() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADE_CHANNEL_USER_UPDATE_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADE_CHANNEL_USER_UPDATE_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADE_CHANNEL_USER_UPDATE_NOT& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::STRADE_CHANNEL_USER_UPDATE_INFO > updates_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class STRADE_CHAT_S2C final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.STRADE_CHAT_S2C) */ {
 public:
  inline STRADE_CHAT_S2C() : STRADE_CHAT_S2C(nullptr) {}
  ~STRADE_CHAT_S2C() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR STRADE_CHAT_S2C(
      ::google::protobuf::internal::ConstantInitialized);

  inline STRADE_CHAT_S2C(const STRADE_CHAT_S2C& from) : STRADE_CHAT_S2C(nullptr, from) {}
  inline STRADE_CHAT_S2C(STRADE_CHAT_S2C&& from) noexcept
      : STRADE_CHAT_S2C(nullptr, std::move(from)) {}
  inline STRADE_CHAT_S2C& operator=(const STRADE_CHAT_S2C& from) {
    CopyFrom(from);
    return *this;
  }
  inline STRADE_CHAT_S2C& operator=(STRADE_CHAT_S2C&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const STRADE_CHAT_S2C& default_instance() {
    return *internal_default_instance();
  }
  static inline const STRADE_CHAT_S2C* internal_default_instance() {
    return reinterpret_cast<const STRADE_CHAT_S2C*>(
        &_STRADE_CHAT_S2C_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(STRADE_CHAT_S2C& a, STRADE_CHAT_S2C& b) { a.Swap(&b); }
  inline void Swap(STRADE_CHAT_S2C* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(STRADE_CHAT_S2C* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  STRADE_CHAT_S2C* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<STRADE_CHAT_S2C>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const STRADE_CHAT_S2C& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const STRADE_CHAT_S2C& from) { STRADE_CHAT_S2C::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(STRADE_CHAT_S2C* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.STRADE_CHAT_S2C"; }

 protected:
  explicit STRADE_CHAT_S2C(::google::protobuf::Arena* arena);
  STRADE_CHAT_S2C(::google::protobuf::Arena* arena, const STRADE_CHAT_S2C& from);
  STRADE_CHAT_S2C(::google::protobuf::Arena* arena, STRADE_CHAT_S2C&& from) noexcept
      : STRADE_CHAT_S2C(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChatDataFieldNumber = 4,
    kIndexFieldNumber = 1,
    kTimeFieldNumber = 3,
    kChatTypeFieldNumber = 2,
  };
  // .DC.Packet.SCHATDATA chatData = 4;
  bool has_chatdata() const;
  void clear_chatdata() ;
  const ::DC::Packet::SCHATDATA& chatdata() const;
  PROTOBUF_NODISCARD ::DC::Packet::SCHATDATA* release_chatdata();
  ::DC::Packet::SCHATDATA* mutable_chatdata();
  void set_allocated_chatdata(::DC::Packet::SCHATDATA* value);
  void unsafe_arena_set_allocated_chatdata(::DC::Packet::SCHATDATA* value);
  ::DC::Packet::SCHATDATA* unsafe_arena_release_chatdata();

  private:
  const ::DC::Packet::SCHATDATA& _internal_chatdata() const;
  ::DC::Packet::SCHATDATA* _internal_mutable_chatdata();

  public:
  // uint64 index = 1;
  void clear_index() ;
  ::uint64_t index() const;
  void set_index(::uint64_t value);

  private:
  ::uint64_t _internal_index() const;
  void _internal_set_index(::uint64_t value);

  public:
  // uint64 time = 3;
  void clear_time() ;
  ::uint64_t time() const;
  void set_time(::uint64_t value);

  private:
  ::uint64_t _internal_time() const;
  void _internal_set_time(::uint64_t value);

  public:
  // uint32 chatType = 2;
  void clear_chattype() ;
  ::uint32_t chattype() const;
  void set_chattype(::uint32_t value);

  private:
  ::uint32_t _internal_chattype() const;
  void _internal_set_chattype(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.STRADE_CHAT_S2C)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_STRADE_CHAT_S2C_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const STRADE_CHAT_S2C& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::SCHATDATA* chatdata_;
    ::uint64_t index_;
    ::uint64_t time_;
    ::uint32_t chattype_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class STRADE_CHAT_C2S final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.STRADE_CHAT_C2S) */ {
 public:
  inline STRADE_CHAT_C2S() : STRADE_CHAT_C2S(nullptr) {}
  ~STRADE_CHAT_C2S() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR STRADE_CHAT_C2S(
      ::google::protobuf::internal::ConstantInitialized);

  inline STRADE_CHAT_C2S(const STRADE_CHAT_C2S& from) : STRADE_CHAT_C2S(nullptr, from) {}
  inline STRADE_CHAT_C2S(STRADE_CHAT_C2S&& from) noexcept
      : STRADE_CHAT_C2S(nullptr, std::move(from)) {}
  inline STRADE_CHAT_C2S& operator=(const STRADE_CHAT_C2S& from) {
    CopyFrom(from);
    return *this;
  }
  inline STRADE_CHAT_C2S& operator=(STRADE_CHAT_C2S&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const STRADE_CHAT_C2S& default_instance() {
    return *internal_default_instance();
  }
  static inline const STRADE_CHAT_C2S* internal_default_instance() {
    return reinterpret_cast<const STRADE_CHAT_C2S*>(
        &_STRADE_CHAT_C2S_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(STRADE_CHAT_C2S& a, STRADE_CHAT_C2S& b) { a.Swap(&b); }
  inline void Swap(STRADE_CHAT_C2S* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(STRADE_CHAT_C2S* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  STRADE_CHAT_C2S* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<STRADE_CHAT_C2S>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const STRADE_CHAT_C2S& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const STRADE_CHAT_C2S& from) { STRADE_CHAT_C2S::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(STRADE_CHAT_C2S* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.STRADE_CHAT_C2S"; }

 protected:
  explicit STRADE_CHAT_C2S(::google::protobuf::Arena* arena);
  STRADE_CHAT_C2S(::google::protobuf::Arena* arena, const STRADE_CHAT_C2S& from);
  STRADE_CHAT_C2S(::google::protobuf::Arena* arena, STRADE_CHAT_C2S&& from) noexcept
      : STRADE_CHAT_C2S(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetAccountIdFieldNumber = 2,
    kTargetCharacterIdFieldNumber = 3,
    kChatDataFieldNumber = 4,
    kChatTypeFieldNumber = 1,
  };
  // string targetAccountId = 2;
  void clear_targetaccountid() ;
  const std::string& targetaccountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_targetaccountid(Arg_&& arg, Args_... args);
  std::string* mutable_targetaccountid();
  PROTOBUF_NODISCARD std::string* release_targetaccountid();
  void set_allocated_targetaccountid(std::string* value);

  private:
  const std::string& _internal_targetaccountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_targetaccountid(
      const std::string& value);
  std::string* _internal_mutable_targetaccountid();

  public:
  // string targetCharacterId = 3;
  void clear_targetcharacterid() ;
  const std::string& targetcharacterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_targetcharacterid(Arg_&& arg, Args_... args);
  std::string* mutable_targetcharacterid();
  PROTOBUF_NODISCARD std::string* release_targetcharacterid();
  void set_allocated_targetcharacterid(std::string* value);

  private:
  const std::string& _internal_targetcharacterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_targetcharacterid(
      const std::string& value);
  std::string* _internal_mutable_targetcharacterid();

  public:
  // .DC.Packet.SCHATDATA chatData = 4;
  bool has_chatdata() const;
  void clear_chatdata() ;
  const ::DC::Packet::SCHATDATA& chatdata() const;
  PROTOBUF_NODISCARD ::DC::Packet::SCHATDATA* release_chatdata();
  ::DC::Packet::SCHATDATA* mutable_chatdata();
  void set_allocated_chatdata(::DC::Packet::SCHATDATA* value);
  void unsafe_arena_set_allocated_chatdata(::DC::Packet::SCHATDATA* value);
  ::DC::Packet::SCHATDATA* unsafe_arena_release_chatdata();

  private:
  const ::DC::Packet::SCHATDATA& _internal_chatdata() const;
  ::DC::Packet::SCHATDATA* _internal_mutable_chatdata();

  public:
  // uint32 chatType = 1;
  void clear_chattype() ;
  ::uint32_t chattype() const;
  void set_chattype(::uint32_t value);

  private:
  ::uint32_t _internal_chattype() const;
  void _internal_set_chattype(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.STRADE_CHAT_C2S)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      66, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_STRADE_CHAT_C2S_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const STRADE_CHAT_C2S& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr targetaccountid_;
    ::google::protobuf::internal::ArenaStringPtr targetcharacterid_;
    ::DC::Packet::SCHATDATA* chatdata_;
    ::uint32_t chattype_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADING_CHAT_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADING_CHAT_RES) */ {
 public:
  inline SS2C_TRADING_CHAT_RES() : SS2C_TRADING_CHAT_RES(nullptr) {}
  ~SS2C_TRADING_CHAT_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADING_CHAT_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADING_CHAT_RES(const SS2C_TRADING_CHAT_RES& from) : SS2C_TRADING_CHAT_RES(nullptr, from) {}
  inline SS2C_TRADING_CHAT_RES(SS2C_TRADING_CHAT_RES&& from) noexcept
      : SS2C_TRADING_CHAT_RES(nullptr, std::move(from)) {}
  inline SS2C_TRADING_CHAT_RES& operator=(const SS2C_TRADING_CHAT_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADING_CHAT_RES& operator=(SS2C_TRADING_CHAT_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADING_CHAT_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADING_CHAT_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADING_CHAT_RES*>(
        &_SS2C_TRADING_CHAT_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(SS2C_TRADING_CHAT_RES& a, SS2C_TRADING_CHAT_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADING_CHAT_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADING_CHAT_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADING_CHAT_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADING_CHAT_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADING_CHAT_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADING_CHAT_RES& from) { SS2C_TRADING_CHAT_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADING_CHAT_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADING_CHAT_RES"; }

 protected:
  explicit SS2C_TRADING_CHAT_RES(::google::protobuf::Arena* arena);
  SS2C_TRADING_CHAT_RES(::google::protobuf::Arena* arena, const SS2C_TRADING_CHAT_RES& from);
  SS2C_TRADING_CHAT_RES(::google::protobuf::Arena* arena, SS2C_TRADING_CHAT_RES&& from) noexcept
      : SS2C_TRADING_CHAT_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChatFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // .DC.Packet.STRADE_CHAT_S2C chat = 2;
  bool has_chat() const;
  void clear_chat() ;
  const ::DC::Packet::STRADE_CHAT_S2C& chat() const;
  PROTOBUF_NODISCARD ::DC::Packet::STRADE_CHAT_S2C* release_chat();
  ::DC::Packet::STRADE_CHAT_S2C* mutable_chat();
  void set_allocated_chat(::DC::Packet::STRADE_CHAT_S2C* value);
  void unsafe_arena_set_allocated_chat(::DC::Packet::STRADE_CHAT_S2C* value);
  ::DC::Packet::STRADE_CHAT_S2C* unsafe_arena_release_chat();

  private:
  const ::DC::Packet::STRADE_CHAT_S2C& _internal_chat() const;
  ::DC::Packet::STRADE_CHAT_S2C* _internal_mutable_chat();

  public:
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADING_CHAT_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADING_CHAT_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADING_CHAT_RES& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::STRADE_CHAT_S2C* chat_;
    ::uint32_t result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES) */ {
 public:
  inline SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES() : SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES(nullptr) {}
  ~SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES(const SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES& from) : SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES(nullptr, from) {}
  inline SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES(SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES&& from) noexcept
      : SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES(nullptr, std::move(from)) {}
  inline SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES& operator=(const SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES& operator=(SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES*>(
        &_SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES& a, SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES& from) { SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES"; }

 protected:
  explicit SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES(::google::protobuf::Arena* arena);
  SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES(::google::protobuf::Arena* arena, const SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES& from);
  SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES(::google::protobuf::Arena* arena, SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES&& from) noexcept
      : SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChatsFieldNumber = 1,
  };
  // repeated .DC.Packet.STRADE_CHAT_S2C chats = 1;
  int chats_size() const;
  private:
  int _internal_chats_size() const;

  public:
  void clear_chats() ;
  ::DC::Packet::STRADE_CHAT_S2C* mutable_chats(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHAT_S2C>* mutable_chats();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHAT_S2C>& _internal_chats() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHAT_S2C>* _internal_mutable_chats();
  public:
  const ::DC::Packet::STRADE_CHAT_S2C& chats(int index) const;
  ::DC::Packet::STRADE_CHAT_S2C* add_chats();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHAT_S2C>& chats() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::STRADE_CHAT_S2C > chats_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SS2C_TRADE_CHANNEL_CHAT_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_TRADE_CHANNEL_CHAT_RES) */ {
 public:
  inline SS2C_TRADE_CHANNEL_CHAT_RES() : SS2C_TRADE_CHANNEL_CHAT_RES(nullptr) {}
  ~SS2C_TRADE_CHANNEL_CHAT_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_TRADE_CHANNEL_CHAT_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_TRADE_CHANNEL_CHAT_RES(const SS2C_TRADE_CHANNEL_CHAT_RES& from) : SS2C_TRADE_CHANNEL_CHAT_RES(nullptr, from) {}
  inline SS2C_TRADE_CHANNEL_CHAT_RES(SS2C_TRADE_CHANNEL_CHAT_RES&& from) noexcept
      : SS2C_TRADE_CHANNEL_CHAT_RES(nullptr, std::move(from)) {}
  inline SS2C_TRADE_CHANNEL_CHAT_RES& operator=(const SS2C_TRADE_CHANNEL_CHAT_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_TRADE_CHANNEL_CHAT_RES& operator=(SS2C_TRADE_CHANNEL_CHAT_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_TRADE_CHANNEL_CHAT_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_TRADE_CHANNEL_CHAT_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_TRADE_CHANNEL_CHAT_RES*>(
        &_SS2C_TRADE_CHANNEL_CHAT_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(SS2C_TRADE_CHANNEL_CHAT_RES& a, SS2C_TRADE_CHANNEL_CHAT_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_TRADE_CHANNEL_CHAT_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_TRADE_CHANNEL_CHAT_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_TRADE_CHANNEL_CHAT_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_TRADE_CHANNEL_CHAT_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_TRADE_CHANNEL_CHAT_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_TRADE_CHANNEL_CHAT_RES& from) { SS2C_TRADE_CHANNEL_CHAT_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_TRADE_CHANNEL_CHAT_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_TRADE_CHANNEL_CHAT_RES"; }

 protected:
  explicit SS2C_TRADE_CHANNEL_CHAT_RES(::google::protobuf::Arena* arena);
  SS2C_TRADE_CHANNEL_CHAT_RES(::google::protobuf::Arena* arena, const SS2C_TRADE_CHANNEL_CHAT_RES& from);
  SS2C_TRADE_CHANNEL_CHAT_RES(::google::protobuf::Arena* arena, SS2C_TRADE_CHANNEL_CHAT_RES&& from) noexcept
      : SS2C_TRADE_CHANNEL_CHAT_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChatsFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated .DC.Packet.STRADE_CHAT_S2C chats = 2;
  int chats_size() const;
  private:
  int _internal_chats_size() const;

  public:
  void clear_chats() ;
  ::DC::Packet::STRADE_CHAT_S2C* mutable_chats(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHAT_S2C>* mutable_chats();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHAT_S2C>& _internal_chats() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHAT_S2C>* _internal_mutable_chats();
  public:
  const ::DC::Packet::STRADE_CHAT_S2C& chats(int index) const;
  ::DC::Packet::STRADE_CHAT_S2C* add_chats();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHAT_S2C>& chats() const;
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_TRADE_CHANNEL_CHAT_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_TRADE_CHANNEL_CHAT_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_TRADE_CHANNEL_CHAT_RES& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::STRADE_CHAT_S2C > chats_;
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SC2S_TRADING_CHAT_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_TRADING_CHAT_REQ) */ {
 public:
  inline SC2S_TRADING_CHAT_REQ() : SC2S_TRADING_CHAT_REQ(nullptr) {}
  ~SC2S_TRADING_CHAT_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_TRADING_CHAT_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_TRADING_CHAT_REQ(const SC2S_TRADING_CHAT_REQ& from) : SC2S_TRADING_CHAT_REQ(nullptr, from) {}
  inline SC2S_TRADING_CHAT_REQ(SC2S_TRADING_CHAT_REQ&& from) noexcept
      : SC2S_TRADING_CHAT_REQ(nullptr, std::move(from)) {}
  inline SC2S_TRADING_CHAT_REQ& operator=(const SC2S_TRADING_CHAT_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_TRADING_CHAT_REQ& operator=(SC2S_TRADING_CHAT_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_TRADING_CHAT_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_TRADING_CHAT_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_TRADING_CHAT_REQ*>(
        &_SC2S_TRADING_CHAT_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(SC2S_TRADING_CHAT_REQ& a, SC2S_TRADING_CHAT_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_TRADING_CHAT_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_TRADING_CHAT_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_TRADING_CHAT_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_TRADING_CHAT_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_TRADING_CHAT_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_TRADING_CHAT_REQ& from) { SC2S_TRADING_CHAT_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_TRADING_CHAT_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_TRADING_CHAT_REQ"; }

 protected:
  explicit SC2S_TRADING_CHAT_REQ(::google::protobuf::Arena* arena);
  SC2S_TRADING_CHAT_REQ(::google::protobuf::Arena* arena, const SC2S_TRADING_CHAT_REQ& from);
  SC2S_TRADING_CHAT_REQ(::google::protobuf::Arena* arena, SC2S_TRADING_CHAT_REQ&& from) noexcept
      : SC2S_TRADING_CHAT_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChatFieldNumber = 1,
  };
  // .DC.Packet.STRADE_CHAT_C2S chat = 1;
  bool has_chat() const;
  void clear_chat() ;
  const ::DC::Packet::STRADE_CHAT_C2S& chat() const;
  PROTOBUF_NODISCARD ::DC::Packet::STRADE_CHAT_C2S* release_chat();
  ::DC::Packet::STRADE_CHAT_C2S* mutable_chat();
  void set_allocated_chat(::DC::Packet::STRADE_CHAT_C2S* value);
  void unsafe_arena_set_allocated_chat(::DC::Packet::STRADE_CHAT_C2S* value);
  ::DC::Packet::STRADE_CHAT_C2S* unsafe_arena_release_chat();

  private:
  const ::DC::Packet::STRADE_CHAT_C2S& _internal_chat() const;
  ::DC::Packet::STRADE_CHAT_C2S* _internal_mutable_chat();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_TRADING_CHAT_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_TRADING_CHAT_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_TRADING_CHAT_REQ& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::STRADE_CHAT_C2S* chat_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};
// -------------------------------------------------------------------

class SC2S_TRADE_CHANNEL_CHAT_REQ final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_TRADE_CHANNEL_CHAT_REQ) */ {
 public:
  inline SC2S_TRADE_CHANNEL_CHAT_REQ() : SC2S_TRADE_CHANNEL_CHAT_REQ(nullptr) {}
  ~SC2S_TRADE_CHANNEL_CHAT_REQ() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_TRADE_CHANNEL_CHAT_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_TRADE_CHANNEL_CHAT_REQ(const SC2S_TRADE_CHANNEL_CHAT_REQ& from) : SC2S_TRADE_CHANNEL_CHAT_REQ(nullptr, from) {}
  inline SC2S_TRADE_CHANNEL_CHAT_REQ(SC2S_TRADE_CHANNEL_CHAT_REQ&& from) noexcept
      : SC2S_TRADE_CHANNEL_CHAT_REQ(nullptr, std::move(from)) {}
  inline SC2S_TRADE_CHANNEL_CHAT_REQ& operator=(const SC2S_TRADE_CHANNEL_CHAT_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_TRADE_CHANNEL_CHAT_REQ& operator=(SC2S_TRADE_CHANNEL_CHAT_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_TRADE_CHANNEL_CHAT_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_TRADE_CHANNEL_CHAT_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_TRADE_CHANNEL_CHAT_REQ*>(
        &_SC2S_TRADE_CHANNEL_CHAT_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(SC2S_TRADE_CHANNEL_CHAT_REQ& a, SC2S_TRADE_CHANNEL_CHAT_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_TRADE_CHANNEL_CHAT_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_TRADE_CHANNEL_CHAT_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_TRADE_CHANNEL_CHAT_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SC2S_TRADE_CHANNEL_CHAT_REQ>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC2S_TRADE_CHANNEL_CHAT_REQ& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SC2S_TRADE_CHANNEL_CHAT_REQ& from) { SC2S_TRADE_CHANNEL_CHAT_REQ::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC2S_TRADE_CHANNEL_CHAT_REQ* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_TRADE_CHANNEL_CHAT_REQ"; }

 protected:
  explicit SC2S_TRADE_CHANNEL_CHAT_REQ(::google::protobuf::Arena* arena);
  SC2S_TRADE_CHANNEL_CHAT_REQ(::google::protobuf::Arena* arena, const SC2S_TRADE_CHANNEL_CHAT_REQ& from);
  SC2S_TRADE_CHANNEL_CHAT_REQ(::google::protobuf::Arena* arena, SC2S_TRADE_CHANNEL_CHAT_REQ&& from) noexcept
      : SC2S_TRADE_CHANNEL_CHAT_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChatFieldNumber = 1,
  };
  // .DC.Packet.STRADE_CHAT_C2S chat = 1;
  bool has_chat() const;
  void clear_chat() ;
  const ::DC::Packet::STRADE_CHAT_C2S& chat() const;
  PROTOBUF_NODISCARD ::DC::Packet::STRADE_CHAT_C2S* release_chat();
  ::DC::Packet::STRADE_CHAT_C2S* mutable_chat();
  void set_allocated_chat(::DC::Packet::STRADE_CHAT_C2S* value);
  void unsafe_arena_set_allocated_chat(::DC::Packet::STRADE_CHAT_C2S* value);
  ::DC::Packet::STRADE_CHAT_C2S* unsafe_arena_release_chat();

  private:
  const ::DC::Packet::STRADE_CHAT_C2S& _internal_chat() const;
  ::DC::Packet::STRADE_CHAT_C2S* _internal_mutable_chat();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_TRADE_CHANNEL_CHAT_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_TRADE_CHANNEL_CHAT_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_TRADE_CHANNEL_CHAT_REQ& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::STRADE_CHAT_C2S* chat_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Trade_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// STRADE_CHANNEL

// uint32 index = 1;
inline void STRADE_CHANNEL::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0u;
}
inline ::uint32_t STRADE_CHANNEL::index() const {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_CHANNEL.index)
  return _internal_index();
}
inline void STRADE_CHANNEL::set_index(::uint32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:DC.Packet.STRADE_CHANNEL.index)
}
inline ::uint32_t STRADE_CHANNEL::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void STRADE_CHANNEL::_internal_set_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// string channelName = 2;
inline void STRADE_CHANNEL::clear_channelname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channelname_.ClearToEmpty();
}
inline const std::string& STRADE_CHANNEL::channelname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_CHANNEL.channelName)
  return _internal_channelname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void STRADE_CHANNEL::set_channelname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channelname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.STRADE_CHANNEL.channelName)
}
inline std::string* STRADE_CHANNEL::mutable_channelname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_channelname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.STRADE_CHANNEL.channelName)
  return _s;
}
inline const std::string& STRADE_CHANNEL::_internal_channelname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channelname_.Get();
}
inline void STRADE_CHANNEL::_internal_set_channelname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channelname_.Set(value, GetArena());
}
inline std::string* STRADE_CHANNEL::_internal_mutable_channelname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.channelname_.Mutable( GetArena());
}
inline std::string* STRADE_CHANNEL::release_channelname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.STRADE_CHANNEL.channelName)
  return _impl_.channelname_.Release();
}
inline void STRADE_CHANNEL::set_allocated_channelname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channelname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.channelname_.IsDefault()) {
          _impl_.channelname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.STRADE_CHANNEL.channelName)
}

// uint32 memberCount = 3;
inline void STRADE_CHANNEL::clear_membercount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.membercount_ = 0u;
}
inline ::uint32_t STRADE_CHANNEL::membercount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_CHANNEL.memberCount)
  return _internal_membercount();
}
inline void STRADE_CHANNEL::set_membercount(::uint32_t value) {
  _internal_set_membercount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.STRADE_CHANNEL.memberCount)
}
inline ::uint32_t STRADE_CHANNEL::_internal_membercount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.membercount_;
}
inline void STRADE_CHANNEL::_internal_set_membercount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.membercount_ = value;
}

// uint32 roomType = 4;
inline void STRADE_CHANNEL::clear_roomtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roomtype_ = 0u;
}
inline ::uint32_t STRADE_CHANNEL::roomtype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_CHANNEL.roomType)
  return _internal_roomtype();
}
inline void STRADE_CHANNEL::set_roomtype(::uint32_t value) {
  _internal_set_roomtype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.STRADE_CHANNEL.roomType)
}
inline ::uint32_t STRADE_CHANNEL::_internal_roomtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.roomtype_;
}
inline void STRADE_CHANNEL::_internal_set_roomtype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roomtype_ = value;
}

// uint32 groupIndex = 5;
inline void STRADE_CHANNEL::clear_groupindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groupindex_ = 0u;
}
inline ::uint32_t STRADE_CHANNEL::groupindex() const {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_CHANNEL.groupIndex)
  return _internal_groupindex();
}
inline void STRADE_CHANNEL::set_groupindex(::uint32_t value) {
  _internal_set_groupindex(value);
  // @@protoc_insertion_point(field_set:DC.Packet.STRADE_CHANNEL.groupIndex)
}
inline ::uint32_t STRADE_CHANNEL::_internal_groupindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.groupindex_;
}
inline void STRADE_CHANNEL::_internal_set_groupindex(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groupindex_ = value;
}

// -------------------------------------------------------------------

// STRADE_CHAT_C2S

// uint32 chatType = 1;
inline void STRADE_CHAT_C2S::clear_chattype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chattype_ = 0u;
}
inline ::uint32_t STRADE_CHAT_C2S::chattype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_CHAT_C2S.chatType)
  return _internal_chattype();
}
inline void STRADE_CHAT_C2S::set_chattype(::uint32_t value) {
  _internal_set_chattype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.STRADE_CHAT_C2S.chatType)
}
inline ::uint32_t STRADE_CHAT_C2S::_internal_chattype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chattype_;
}
inline void STRADE_CHAT_C2S::_internal_set_chattype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chattype_ = value;
}

// string targetAccountId = 2;
inline void STRADE_CHAT_C2S::clear_targetaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetaccountid_.ClearToEmpty();
}
inline const std::string& STRADE_CHAT_C2S::targetaccountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_CHAT_C2S.targetAccountId)
  return _internal_targetaccountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void STRADE_CHAT_C2S::set_targetaccountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetaccountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.STRADE_CHAT_C2S.targetAccountId)
}
inline std::string* STRADE_CHAT_C2S::mutable_targetaccountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_targetaccountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.STRADE_CHAT_C2S.targetAccountId)
  return _s;
}
inline const std::string& STRADE_CHAT_C2S::_internal_targetaccountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targetaccountid_.Get();
}
inline void STRADE_CHAT_C2S::_internal_set_targetaccountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetaccountid_.Set(value, GetArena());
}
inline std::string* STRADE_CHAT_C2S::_internal_mutable_targetaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.targetaccountid_.Mutable( GetArena());
}
inline std::string* STRADE_CHAT_C2S::release_targetaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.STRADE_CHAT_C2S.targetAccountId)
  return _impl_.targetaccountid_.Release();
}
inline void STRADE_CHAT_C2S::set_allocated_targetaccountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetaccountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.targetaccountid_.IsDefault()) {
          _impl_.targetaccountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.STRADE_CHAT_C2S.targetAccountId)
}

// string targetCharacterId = 3;
inline void STRADE_CHAT_C2S::clear_targetcharacterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetcharacterid_.ClearToEmpty();
}
inline const std::string& STRADE_CHAT_C2S::targetcharacterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_CHAT_C2S.targetCharacterId)
  return _internal_targetcharacterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void STRADE_CHAT_C2S::set_targetcharacterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetcharacterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.STRADE_CHAT_C2S.targetCharacterId)
}
inline std::string* STRADE_CHAT_C2S::mutable_targetcharacterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_targetcharacterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.STRADE_CHAT_C2S.targetCharacterId)
  return _s;
}
inline const std::string& STRADE_CHAT_C2S::_internal_targetcharacterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targetcharacterid_.Get();
}
inline void STRADE_CHAT_C2S::_internal_set_targetcharacterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetcharacterid_.Set(value, GetArena());
}
inline std::string* STRADE_CHAT_C2S::_internal_mutable_targetcharacterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.targetcharacterid_.Mutable( GetArena());
}
inline std::string* STRADE_CHAT_C2S::release_targetcharacterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.STRADE_CHAT_C2S.targetCharacterId)
  return _impl_.targetcharacterid_.Release();
}
inline void STRADE_CHAT_C2S::set_allocated_targetcharacterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetcharacterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.targetcharacterid_.IsDefault()) {
          _impl_.targetcharacterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.STRADE_CHAT_C2S.targetCharacterId)
}

// .DC.Packet.SCHATDATA chatData = 4;
inline bool STRADE_CHAT_C2S::has_chatdata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chatdata_ != nullptr);
  return value;
}
inline const ::DC::Packet::SCHATDATA& STRADE_CHAT_C2S::_internal_chatdata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SCHATDATA* p = _impl_.chatdata_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SCHATDATA&>(::DC::Packet::_SCHATDATA_default_instance_);
}
inline const ::DC::Packet::SCHATDATA& STRADE_CHAT_C2S::chatdata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_CHAT_C2S.chatData)
  return _internal_chatdata();
}
inline void STRADE_CHAT_C2S::unsafe_arena_set_allocated_chatdata(::DC::Packet::SCHATDATA* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chatdata_);
  }
  _impl_.chatdata_ = reinterpret_cast<::DC::Packet::SCHATDATA*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.STRADE_CHAT_C2S.chatData)
}
inline ::DC::Packet::SCHATDATA* STRADE_CHAT_C2S::release_chatdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SCHATDATA* released = _impl_.chatdata_;
  _impl_.chatdata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SCHATDATA* STRADE_CHAT_C2S::unsafe_arena_release_chatdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.STRADE_CHAT_C2S.chatData)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SCHATDATA* temp = _impl_.chatdata_;
  _impl_.chatdata_ = nullptr;
  return temp;
}
inline ::DC::Packet::SCHATDATA* STRADE_CHAT_C2S::_internal_mutable_chatdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chatdata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SCHATDATA>(GetArena());
    _impl_.chatdata_ = reinterpret_cast<::DC::Packet::SCHATDATA*>(p);
  }
  return _impl_.chatdata_;
}
inline ::DC::Packet::SCHATDATA* STRADE_CHAT_C2S::mutable_chatdata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SCHATDATA* _msg = _internal_mutable_chatdata();
  // @@protoc_insertion_point(field_mutable:DC.Packet.STRADE_CHAT_C2S.chatData)
  return _msg;
}
inline void STRADE_CHAT_C2S::set_allocated_chatdata(::DC::Packet::SCHATDATA* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chatdata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chatdata_ = reinterpret_cast<::DC::Packet::SCHATDATA*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.STRADE_CHAT_C2S.chatData)
}

// -------------------------------------------------------------------

// STRADE_CHAT_S2C

// uint64 index = 1;
inline void STRADE_CHAT_S2C::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = ::uint64_t{0u};
}
inline ::uint64_t STRADE_CHAT_S2C::index() const {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_CHAT_S2C.index)
  return _internal_index();
}
inline void STRADE_CHAT_S2C::set_index(::uint64_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:DC.Packet.STRADE_CHAT_S2C.index)
}
inline ::uint64_t STRADE_CHAT_S2C::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void STRADE_CHAT_S2C::_internal_set_index(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// uint32 chatType = 2;
inline void STRADE_CHAT_S2C::clear_chattype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chattype_ = 0u;
}
inline ::uint32_t STRADE_CHAT_S2C::chattype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_CHAT_S2C.chatType)
  return _internal_chattype();
}
inline void STRADE_CHAT_S2C::set_chattype(::uint32_t value) {
  _internal_set_chattype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.STRADE_CHAT_S2C.chatType)
}
inline ::uint32_t STRADE_CHAT_S2C::_internal_chattype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chattype_;
}
inline void STRADE_CHAT_S2C::_internal_set_chattype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chattype_ = value;
}

// uint64 time = 3;
inline void STRADE_CHAT_S2C::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = ::uint64_t{0u};
}
inline ::uint64_t STRADE_CHAT_S2C::time() const {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_CHAT_S2C.time)
  return _internal_time();
}
inline void STRADE_CHAT_S2C::set_time(::uint64_t value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:DC.Packet.STRADE_CHAT_S2C.time)
}
inline ::uint64_t STRADE_CHAT_S2C::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_;
}
inline void STRADE_CHAT_S2C::_internal_set_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = value;
}

// .DC.Packet.SCHATDATA chatData = 4;
inline bool STRADE_CHAT_S2C::has_chatdata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chatdata_ != nullptr);
  return value;
}
inline const ::DC::Packet::SCHATDATA& STRADE_CHAT_S2C::_internal_chatdata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SCHATDATA* p = _impl_.chatdata_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SCHATDATA&>(::DC::Packet::_SCHATDATA_default_instance_);
}
inline const ::DC::Packet::SCHATDATA& STRADE_CHAT_S2C::chatdata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_CHAT_S2C.chatData)
  return _internal_chatdata();
}
inline void STRADE_CHAT_S2C::unsafe_arena_set_allocated_chatdata(::DC::Packet::SCHATDATA* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chatdata_);
  }
  _impl_.chatdata_ = reinterpret_cast<::DC::Packet::SCHATDATA*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.STRADE_CHAT_S2C.chatData)
}
inline ::DC::Packet::SCHATDATA* STRADE_CHAT_S2C::release_chatdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SCHATDATA* released = _impl_.chatdata_;
  _impl_.chatdata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SCHATDATA* STRADE_CHAT_S2C::unsafe_arena_release_chatdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.STRADE_CHAT_S2C.chatData)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SCHATDATA* temp = _impl_.chatdata_;
  _impl_.chatdata_ = nullptr;
  return temp;
}
inline ::DC::Packet::SCHATDATA* STRADE_CHAT_S2C::_internal_mutable_chatdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chatdata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SCHATDATA>(GetArena());
    _impl_.chatdata_ = reinterpret_cast<::DC::Packet::SCHATDATA*>(p);
  }
  return _impl_.chatdata_;
}
inline ::DC::Packet::SCHATDATA* STRADE_CHAT_S2C::mutable_chatdata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SCHATDATA* _msg = _internal_mutable_chatdata();
  // @@protoc_insertion_point(field_mutable:DC.Packet.STRADE_CHAT_S2C.chatData)
  return _msg;
}
inline void STRADE_CHAT_S2C::set_allocated_chatdata(::DC::Packet::SCHATDATA* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chatdata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chatdata_ = reinterpret_cast<::DC::Packet::SCHATDATA*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.STRADE_CHAT_S2C.chatData)
}

// -------------------------------------------------------------------

// STRADE_MEMBERSHIP_REQUIREMENT

// uint32 memberShipType = 1;
inline void STRADE_MEMBERSHIP_REQUIREMENT::clear_membershiptype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.membershiptype_ = 0u;
}
inline ::uint32_t STRADE_MEMBERSHIP_REQUIREMENT::membershiptype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_MEMBERSHIP_REQUIREMENT.memberShipType)
  return _internal_membershiptype();
}
inline void STRADE_MEMBERSHIP_REQUIREMENT::set_membershiptype(::uint32_t value) {
  _internal_set_membershiptype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.STRADE_MEMBERSHIP_REQUIREMENT.memberShipType)
}
inline ::uint32_t STRADE_MEMBERSHIP_REQUIREMENT::_internal_membershiptype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.membershiptype_;
}
inline void STRADE_MEMBERSHIP_REQUIREMENT::_internal_set_membershiptype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.membershiptype_ = value;
}

// uint32 memberShipValue = 2;
inline void STRADE_MEMBERSHIP_REQUIREMENT::clear_membershipvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.membershipvalue_ = 0u;
}
inline ::uint32_t STRADE_MEMBERSHIP_REQUIREMENT::membershipvalue() const {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_MEMBERSHIP_REQUIREMENT.memberShipValue)
  return _internal_membershipvalue();
}
inline void STRADE_MEMBERSHIP_REQUIREMENT::set_membershipvalue(::uint32_t value) {
  _internal_set_membershipvalue(value);
  // @@protoc_insertion_point(field_set:DC.Packet.STRADE_MEMBERSHIP_REQUIREMENT.memberShipValue)
}
inline ::uint32_t STRADE_MEMBERSHIP_REQUIREMENT::_internal_membershipvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.membershipvalue_;
}
inline void STRADE_MEMBERSHIP_REQUIREMENT::_internal_set_membershipvalue(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.membershipvalue_ = value;
}

// -------------------------------------------------------------------

// STRADING_USER_INFO

// .DC.Packet.SACCOUNT_NICKNAME nickName = 1;
inline bool STRADING_USER_INFO::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& STRADING_USER_INFO::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& STRADING_USER_INFO::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADING_USER_INFO.nickName)
  return _internal_nickname();
}
inline void STRADING_USER_INFO::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.STRADING_USER_INFO.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* STRADING_USER_INFO::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* STRADING_USER_INFO::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.STRADING_USER_INFO.nickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* STRADING_USER_INFO::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* STRADING_USER_INFO::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.STRADING_USER_INFO.nickName)
  return _msg;
}
inline void STRADING_USER_INFO::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.STRADING_USER_INFO.nickName)
}

// string accountId = 2;
inline void STRADING_USER_INFO::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& STRADING_USER_INFO::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADING_USER_INFO.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void STRADING_USER_INFO::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.STRADING_USER_INFO.accountId)
}
inline std::string* STRADING_USER_INFO::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.STRADING_USER_INFO.accountId)
  return _s;
}
inline const std::string& STRADING_USER_INFO::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void STRADING_USER_INFO::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* STRADING_USER_INFO::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* STRADING_USER_INFO::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.STRADING_USER_INFO.accountId)
  return _impl_.accountid_.Release();
}
inline void STRADING_USER_INFO::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.STRADING_USER_INFO.accountId)
}

// -------------------------------------------------------------------

// STRADING_CONFIRM_ITEM

// .DC.Packet.STRADING_USER_INFO info = 1;
inline bool STRADING_CONFIRM_ITEM::has_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.info_ != nullptr);
  return value;
}
inline void STRADING_CONFIRM_ITEM::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ != nullptr) _impl_.info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::STRADING_USER_INFO& STRADING_CONFIRM_ITEM::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::STRADING_USER_INFO* p = _impl_.info_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::STRADING_USER_INFO&>(::DC::Packet::_STRADING_USER_INFO_default_instance_);
}
inline const ::DC::Packet::STRADING_USER_INFO& STRADING_CONFIRM_ITEM::info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADING_CONFIRM_ITEM.info)
  return _internal_info();
}
inline void STRADING_CONFIRM_ITEM::unsafe_arena_set_allocated_info(::DC::Packet::STRADING_USER_INFO* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.info_);
  }
  _impl_.info_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.STRADING_CONFIRM_ITEM.info)
}
inline ::DC::Packet::STRADING_USER_INFO* STRADING_CONFIRM_ITEM::release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADING_USER_INFO* released = _impl_.info_;
  _impl_.info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::STRADING_USER_INFO* STRADING_CONFIRM_ITEM::unsafe_arena_release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.STRADING_CONFIRM_ITEM.info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADING_USER_INFO* temp = _impl_.info_;
  _impl_.info_ = nullptr;
  return temp;
}
inline ::DC::Packet::STRADING_USER_INFO* STRADING_CONFIRM_ITEM::_internal_mutable_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::STRADING_USER_INFO>(GetArena());
    _impl_.info_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(p);
  }
  return _impl_.info_;
}
inline ::DC::Packet::STRADING_USER_INFO* STRADING_CONFIRM_ITEM::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::STRADING_USER_INFO* _msg = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:DC.Packet.STRADING_CONFIRM_ITEM.info)
  return _msg;
}
inline void STRADING_CONFIRM_ITEM::set_allocated_info(::DC::Packet::STRADING_USER_INFO* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.info_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.STRADING_CONFIRM_ITEM.info)
}

// repeated .DC.Packet.SItem items = 2;
inline int STRADING_CONFIRM_ITEM::_internal_items_size() const {
  return _internal_items().size();
}
inline int STRADING_CONFIRM_ITEM::items_size() const {
  return _internal_items_size();
}
inline ::DC::Packet::SItem* STRADING_CONFIRM_ITEM::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.STRADING_CONFIRM_ITEM.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* STRADING_CONFIRM_ITEM::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.STRADING_CONFIRM_ITEM.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::DC::Packet::SItem& STRADING_CONFIRM_ITEM::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADING_CONFIRM_ITEM.items)
  return _internal_items().Get(index);
}
inline ::DC::Packet::SItem* STRADING_CONFIRM_ITEM::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.STRADING_CONFIRM_ITEM.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& STRADING_CONFIRM_ITEM::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.STRADING_CONFIRM_ITEM.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>&
STRADING_CONFIRM_ITEM::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>*
STRADING_CONFIRM_ITEM::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// STRADE_CHANNEL_USER_UPDATE_INFO

// uint32 updateFlag = 1;
inline void STRADE_CHANNEL_USER_UPDATE_INFO::clear_updateflag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updateflag_ = 0u;
}
inline ::uint32_t STRADE_CHANNEL_USER_UPDATE_INFO::updateflag() const {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_CHANNEL_USER_UPDATE_INFO.updateFlag)
  return _internal_updateflag();
}
inline void STRADE_CHANNEL_USER_UPDATE_INFO::set_updateflag(::uint32_t value) {
  _internal_set_updateflag(value);
  // @@protoc_insertion_point(field_set:DC.Packet.STRADE_CHANNEL_USER_UPDATE_INFO.updateFlag)
}
inline ::uint32_t STRADE_CHANNEL_USER_UPDATE_INFO::_internal_updateflag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updateflag_;
}
inline void STRADE_CHANNEL_USER_UPDATE_INFO::_internal_set_updateflag(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updateflag_ = value;
}

// .DC.Packet.SCHARACTER_TRADE_INFO trader = 2;
inline bool STRADE_CHANNEL_USER_UPDATE_INFO::has_trader() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.trader_ != nullptr);
  return value;
}
inline const ::DC::Packet::SCHARACTER_TRADE_INFO& STRADE_CHANNEL_USER_UPDATE_INFO::_internal_trader() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SCHARACTER_TRADE_INFO* p = _impl_.trader_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SCHARACTER_TRADE_INFO&>(::DC::Packet::_SCHARACTER_TRADE_INFO_default_instance_);
}
inline const ::DC::Packet::SCHARACTER_TRADE_INFO& STRADE_CHANNEL_USER_UPDATE_INFO::trader() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.STRADE_CHANNEL_USER_UPDATE_INFO.trader)
  return _internal_trader();
}
inline void STRADE_CHANNEL_USER_UPDATE_INFO::unsafe_arena_set_allocated_trader(::DC::Packet::SCHARACTER_TRADE_INFO* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.trader_);
  }
  _impl_.trader_ = reinterpret_cast<::DC::Packet::SCHARACTER_TRADE_INFO*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.STRADE_CHANNEL_USER_UPDATE_INFO.trader)
}
inline ::DC::Packet::SCHARACTER_TRADE_INFO* STRADE_CHANNEL_USER_UPDATE_INFO::release_trader() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SCHARACTER_TRADE_INFO* released = _impl_.trader_;
  _impl_.trader_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SCHARACTER_TRADE_INFO* STRADE_CHANNEL_USER_UPDATE_INFO::unsafe_arena_release_trader() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.STRADE_CHANNEL_USER_UPDATE_INFO.trader)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SCHARACTER_TRADE_INFO* temp = _impl_.trader_;
  _impl_.trader_ = nullptr;
  return temp;
}
inline ::DC::Packet::SCHARACTER_TRADE_INFO* STRADE_CHANNEL_USER_UPDATE_INFO::_internal_mutable_trader() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.trader_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SCHARACTER_TRADE_INFO>(GetArena());
    _impl_.trader_ = reinterpret_cast<::DC::Packet::SCHARACTER_TRADE_INFO*>(p);
  }
  return _impl_.trader_;
}
inline ::DC::Packet::SCHARACTER_TRADE_INFO* STRADE_CHANNEL_USER_UPDATE_INFO::mutable_trader() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SCHARACTER_TRADE_INFO* _msg = _internal_mutable_trader();
  // @@protoc_insertion_point(field_mutable:DC.Packet.STRADE_CHANNEL_USER_UPDATE_INFO.trader)
  return _msg;
}
inline void STRADE_CHANNEL_USER_UPDATE_INFO::set_allocated_trader(::DC::Packet::SCHARACTER_TRADE_INFO* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.trader_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.trader_ = reinterpret_cast<::DC::Packet::SCHARACTER_TRADE_INFO*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.STRADE_CHANNEL_USER_UPDATE_INFO.trader)
}

// -------------------------------------------------------------------

// SC2S_TRADE_CHANNEL_LIST_REQ

// -------------------------------------------------------------------

// SS2C_TRADE_CHANNEL_LIST_RES

// uint32 isTrader = 1;
inline void SS2C_TRADE_CHANNEL_LIST_RES::clear_istrader() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.istrader_ = 0u;
}
inline ::uint32_t SS2C_TRADE_CHANNEL_LIST_RES::istrader() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_CHANNEL_LIST_RES.isTrader)
  return _internal_istrader();
}
inline void SS2C_TRADE_CHANNEL_LIST_RES::set_istrader(::uint32_t value) {
  _internal_set_istrader(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADE_CHANNEL_LIST_RES.isTrader)
}
inline ::uint32_t SS2C_TRADE_CHANNEL_LIST_RES::_internal_istrader() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.istrader_;
}
inline void SS2C_TRADE_CHANNEL_LIST_RES::_internal_set_istrader(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.istrader_ = value;
}

// repeated .DC.Packet.STRADE_CHANNEL channels = 2;
inline int SS2C_TRADE_CHANNEL_LIST_RES::_internal_channels_size() const {
  return _internal_channels().size();
}
inline int SS2C_TRADE_CHANNEL_LIST_RES::channels_size() const {
  return _internal_channels_size();
}
inline void SS2C_TRADE_CHANNEL_LIST_RES::clear_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channels_.Clear();
}
inline ::DC::Packet::STRADE_CHANNEL* SS2C_TRADE_CHANNEL_LIST_RES::mutable_channels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADE_CHANNEL_LIST_RES.channels)
  return _internal_mutable_channels()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHANNEL>* SS2C_TRADE_CHANNEL_LIST_RES::mutable_channels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_TRADE_CHANNEL_LIST_RES.channels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_channels();
}
inline const ::DC::Packet::STRADE_CHANNEL& SS2C_TRADE_CHANNEL_LIST_RES::channels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_CHANNEL_LIST_RES.channels)
  return _internal_channels().Get(index);
}
inline ::DC::Packet::STRADE_CHANNEL* SS2C_TRADE_CHANNEL_LIST_RES::add_channels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::STRADE_CHANNEL* _add = _internal_mutable_channels()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_TRADE_CHANNEL_LIST_RES.channels)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHANNEL>& SS2C_TRADE_CHANNEL_LIST_RES::channels() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_TRADE_CHANNEL_LIST_RES.channels)
  return _internal_channels();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHANNEL>&
SS2C_TRADE_CHANNEL_LIST_RES::_internal_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channels_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHANNEL>*
SS2C_TRADE_CHANNEL_LIST_RES::_internal_mutable_channels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.channels_;
}

// -------------------------------------------------------------------

// SC2S_TRADE_CHANNEL_SELECT_REQ

// uint32 index = 1;
inline void SC2S_TRADE_CHANNEL_SELECT_REQ::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0u;
}
inline ::uint32_t SC2S_TRADE_CHANNEL_SELECT_REQ::index() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_TRADE_CHANNEL_SELECT_REQ.index)
  return _internal_index();
}
inline void SC2S_TRADE_CHANNEL_SELECT_REQ::set_index(::uint32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_TRADE_CHANNEL_SELECT_REQ.index)
}
inline ::uint32_t SC2S_TRADE_CHANNEL_SELECT_REQ::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void SC2S_TRADE_CHANNEL_SELECT_REQ::_internal_set_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// -------------------------------------------------------------------

// SS2C_TRADE_CHANNEL_SELECT_RES

// uint32 result = 1;
inline void SS2C_TRADE_CHANNEL_SELECT_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_TRADE_CHANNEL_SELECT_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_CHANNEL_SELECT_RES.result)
  return _internal_result();
}
inline void SS2C_TRADE_CHANNEL_SELECT_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADE_CHANNEL_SELECT_RES.result)
}
inline ::uint32_t SS2C_TRADE_CHANNEL_SELECT_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_TRADE_CHANNEL_SELECT_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SC2S_TRADE_CHANNEL_EXIT_REQ

// -------------------------------------------------------------------

// SS2C_TRADE_CHANNEL_EXIT_RES

// uint32 result = 1;
inline void SS2C_TRADE_CHANNEL_EXIT_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_TRADE_CHANNEL_EXIT_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_CHANNEL_EXIT_RES.result)
  return _internal_result();
}
inline void SS2C_TRADE_CHANNEL_EXIT_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADE_CHANNEL_EXIT_RES.result)
}
inline ::uint32_t SS2C_TRADE_CHANNEL_EXIT_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_TRADE_CHANNEL_EXIT_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SC2S_TRADE_CHANNEL_USER_LIST_REQ

// -------------------------------------------------------------------

// SS2C_TRADE_CHANNEL_USER_LIST_RES

// uint32 loopFlag = 1;
inline void SS2C_TRADE_CHANNEL_USER_LIST_RES::clear_loopflag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.loopflag_ = 0u;
}
inline ::uint32_t SS2C_TRADE_CHANNEL_USER_LIST_RES::loopflag() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_CHANNEL_USER_LIST_RES.loopFlag)
  return _internal_loopflag();
}
inline void SS2C_TRADE_CHANNEL_USER_LIST_RES::set_loopflag(::uint32_t value) {
  _internal_set_loopflag(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADE_CHANNEL_USER_LIST_RES.loopFlag)
}
inline ::uint32_t SS2C_TRADE_CHANNEL_USER_LIST_RES::_internal_loopflag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.loopflag_;
}
inline void SS2C_TRADE_CHANNEL_USER_LIST_RES::_internal_set_loopflag(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.loopflag_ = value;
}

// repeated .DC.Packet.SCHARACTER_TRADE_INFO traders = 2;
inline int SS2C_TRADE_CHANNEL_USER_LIST_RES::_internal_traders_size() const {
  return _internal_traders().size();
}
inline int SS2C_TRADE_CHANNEL_USER_LIST_RES::traders_size() const {
  return _internal_traders_size();
}
inline ::DC::Packet::SCHARACTER_TRADE_INFO* SS2C_TRADE_CHANNEL_USER_LIST_RES::mutable_traders(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADE_CHANNEL_USER_LIST_RES.traders)
  return _internal_mutable_traders()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_TRADE_INFO>* SS2C_TRADE_CHANNEL_USER_LIST_RES::mutable_traders()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_TRADE_CHANNEL_USER_LIST_RES.traders)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_traders();
}
inline const ::DC::Packet::SCHARACTER_TRADE_INFO& SS2C_TRADE_CHANNEL_USER_LIST_RES::traders(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_CHANNEL_USER_LIST_RES.traders)
  return _internal_traders().Get(index);
}
inline ::DC::Packet::SCHARACTER_TRADE_INFO* SS2C_TRADE_CHANNEL_USER_LIST_RES::add_traders() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SCHARACTER_TRADE_INFO* _add = _internal_mutable_traders()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_TRADE_CHANNEL_USER_LIST_RES.traders)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_TRADE_INFO>& SS2C_TRADE_CHANNEL_USER_LIST_RES::traders() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_TRADE_CHANNEL_USER_LIST_RES.traders)
  return _internal_traders();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_TRADE_INFO>&
SS2C_TRADE_CHANNEL_USER_LIST_RES::_internal_traders() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.traders_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHARACTER_TRADE_INFO>*
SS2C_TRADE_CHANNEL_USER_LIST_RES::_internal_mutable_traders() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.traders_;
}

// -------------------------------------------------------------------

// SS2C_TRADE_CHANNEL_USER_UPDATE_NOT

// repeated .DC.Packet.STRADE_CHANNEL_USER_UPDATE_INFO updates = 1;
inline int SS2C_TRADE_CHANNEL_USER_UPDATE_NOT::_internal_updates_size() const {
  return _internal_updates().size();
}
inline int SS2C_TRADE_CHANNEL_USER_UPDATE_NOT::updates_size() const {
  return _internal_updates_size();
}
inline void SS2C_TRADE_CHANNEL_USER_UPDATE_NOT::clear_updates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updates_.Clear();
}
inline ::DC::Packet::STRADE_CHANNEL_USER_UPDATE_INFO* SS2C_TRADE_CHANNEL_USER_UPDATE_NOT::mutable_updates(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADE_CHANNEL_USER_UPDATE_NOT.updates)
  return _internal_mutable_updates()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHANNEL_USER_UPDATE_INFO>* SS2C_TRADE_CHANNEL_USER_UPDATE_NOT::mutable_updates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_TRADE_CHANNEL_USER_UPDATE_NOT.updates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_updates();
}
inline const ::DC::Packet::STRADE_CHANNEL_USER_UPDATE_INFO& SS2C_TRADE_CHANNEL_USER_UPDATE_NOT::updates(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_CHANNEL_USER_UPDATE_NOT.updates)
  return _internal_updates().Get(index);
}
inline ::DC::Packet::STRADE_CHANNEL_USER_UPDATE_INFO* SS2C_TRADE_CHANNEL_USER_UPDATE_NOT::add_updates() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::STRADE_CHANNEL_USER_UPDATE_INFO* _add = _internal_mutable_updates()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_TRADE_CHANNEL_USER_UPDATE_NOT.updates)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHANNEL_USER_UPDATE_INFO>& SS2C_TRADE_CHANNEL_USER_UPDATE_NOT::updates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_TRADE_CHANNEL_USER_UPDATE_NOT.updates)
  return _internal_updates();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHANNEL_USER_UPDATE_INFO>&
SS2C_TRADE_CHANNEL_USER_UPDATE_NOT::_internal_updates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updates_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHANNEL_USER_UPDATE_INFO>*
SS2C_TRADE_CHANNEL_USER_UPDATE_NOT::_internal_mutable_updates() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.updates_;
}

// -------------------------------------------------------------------

// SC2S_TRADE_CHANNEL_CHAT_REQ

// .DC.Packet.STRADE_CHAT_C2S chat = 1;
inline bool SC2S_TRADE_CHANNEL_CHAT_REQ::has_chat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chat_ != nullptr);
  return value;
}
inline void SC2S_TRADE_CHANNEL_CHAT_REQ::clear_chat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chat_ != nullptr) _impl_.chat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::STRADE_CHAT_C2S& SC2S_TRADE_CHANNEL_CHAT_REQ::_internal_chat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::STRADE_CHAT_C2S* p = _impl_.chat_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::STRADE_CHAT_C2S&>(::DC::Packet::_STRADE_CHAT_C2S_default_instance_);
}
inline const ::DC::Packet::STRADE_CHAT_C2S& SC2S_TRADE_CHANNEL_CHAT_REQ::chat() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_TRADE_CHANNEL_CHAT_REQ.chat)
  return _internal_chat();
}
inline void SC2S_TRADE_CHANNEL_CHAT_REQ::unsafe_arena_set_allocated_chat(::DC::Packet::STRADE_CHAT_C2S* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chat_);
  }
  _impl_.chat_ = reinterpret_cast<::DC::Packet::STRADE_CHAT_C2S*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SC2S_TRADE_CHANNEL_CHAT_REQ.chat)
}
inline ::DC::Packet::STRADE_CHAT_C2S* SC2S_TRADE_CHANNEL_CHAT_REQ::release_chat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADE_CHAT_C2S* released = _impl_.chat_;
  _impl_.chat_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::STRADE_CHAT_C2S* SC2S_TRADE_CHANNEL_CHAT_REQ::unsafe_arena_release_chat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_TRADE_CHANNEL_CHAT_REQ.chat)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADE_CHAT_C2S* temp = _impl_.chat_;
  _impl_.chat_ = nullptr;
  return temp;
}
inline ::DC::Packet::STRADE_CHAT_C2S* SC2S_TRADE_CHANNEL_CHAT_REQ::_internal_mutable_chat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chat_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::STRADE_CHAT_C2S>(GetArena());
    _impl_.chat_ = reinterpret_cast<::DC::Packet::STRADE_CHAT_C2S*>(p);
  }
  return _impl_.chat_;
}
inline ::DC::Packet::STRADE_CHAT_C2S* SC2S_TRADE_CHANNEL_CHAT_REQ::mutable_chat() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::STRADE_CHAT_C2S* _msg = _internal_mutable_chat();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_TRADE_CHANNEL_CHAT_REQ.chat)
  return _msg;
}
inline void SC2S_TRADE_CHANNEL_CHAT_REQ::set_allocated_chat(::DC::Packet::STRADE_CHAT_C2S* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.chat_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chat_ = reinterpret_cast<::DC::Packet::STRADE_CHAT_C2S*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_TRADE_CHANNEL_CHAT_REQ.chat)
}

// -------------------------------------------------------------------

// SS2C_TRADE_CHANNEL_CHAT_RES

// uint32 result = 1;
inline void SS2C_TRADE_CHANNEL_CHAT_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_TRADE_CHANNEL_CHAT_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_CHANNEL_CHAT_RES.result)
  return _internal_result();
}
inline void SS2C_TRADE_CHANNEL_CHAT_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADE_CHANNEL_CHAT_RES.result)
}
inline ::uint32_t SS2C_TRADE_CHANNEL_CHAT_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_TRADE_CHANNEL_CHAT_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// repeated .DC.Packet.STRADE_CHAT_S2C chats = 2;
inline int SS2C_TRADE_CHANNEL_CHAT_RES::_internal_chats_size() const {
  return _internal_chats().size();
}
inline int SS2C_TRADE_CHANNEL_CHAT_RES::chats_size() const {
  return _internal_chats_size();
}
inline void SS2C_TRADE_CHANNEL_CHAT_RES::clear_chats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chats_.Clear();
}
inline ::DC::Packet::STRADE_CHAT_S2C* SS2C_TRADE_CHANNEL_CHAT_RES::mutable_chats(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADE_CHANNEL_CHAT_RES.chats)
  return _internal_mutable_chats()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHAT_S2C>* SS2C_TRADE_CHANNEL_CHAT_RES::mutable_chats()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_TRADE_CHANNEL_CHAT_RES.chats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_chats();
}
inline const ::DC::Packet::STRADE_CHAT_S2C& SS2C_TRADE_CHANNEL_CHAT_RES::chats(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_CHANNEL_CHAT_RES.chats)
  return _internal_chats().Get(index);
}
inline ::DC::Packet::STRADE_CHAT_S2C* SS2C_TRADE_CHANNEL_CHAT_RES::add_chats() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::STRADE_CHAT_S2C* _add = _internal_mutable_chats()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_TRADE_CHANNEL_CHAT_RES.chats)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHAT_S2C>& SS2C_TRADE_CHANNEL_CHAT_RES::chats() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_TRADE_CHANNEL_CHAT_RES.chats)
  return _internal_chats();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHAT_S2C>&
SS2C_TRADE_CHANNEL_CHAT_RES::_internal_chats() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chats_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHAT_S2C>*
SS2C_TRADE_CHANNEL_CHAT_RES::_internal_mutable_chats() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.chats_;
}

// -------------------------------------------------------------------

// SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ

// uint32 beginIndex = 1;
inline void SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ::clear_beginindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.beginindex_ = 0u;
}
inline ::uint32_t SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ::beginindex() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ.beginIndex)
  return _internal_beginindex();
}
inline void SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ::set_beginindex(::uint32_t value) {
  _internal_set_beginindex(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ.beginIndex)
}
inline ::uint32_t SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ::_internal_beginindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.beginindex_;
}
inline void SC2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ::_internal_set_beginindex(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.beginindex_ = value;
}

// -------------------------------------------------------------------

// SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES

// repeated .DC.Packet.STRADE_CHAT_S2C chats = 1;
inline int SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES::_internal_chats_size() const {
  return _internal_chats().size();
}
inline int SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES::chats_size() const {
  return _internal_chats_size();
}
inline void SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES::clear_chats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chats_.Clear();
}
inline ::DC::Packet::STRADE_CHAT_S2C* SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES::mutable_chats(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES.chats)
  return _internal_mutable_chats()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHAT_S2C>* SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES::mutable_chats()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES.chats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_chats();
}
inline const ::DC::Packet::STRADE_CHAT_S2C& SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES::chats(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES.chats)
  return _internal_chats().Get(index);
}
inline ::DC::Packet::STRADE_CHAT_S2C* SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES::add_chats() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::STRADE_CHAT_S2C* _add = _internal_mutable_chats()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES.chats)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHAT_S2C>& SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES::chats() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES.chats)
  return _internal_chats();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHAT_S2C>&
SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES::_internal_chats() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chats_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_CHAT_S2C>*
SS2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES::_internal_mutable_chats() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.chats_;
}

// -------------------------------------------------------------------

// SC2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ

// -------------------------------------------------------------------

// SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES

// repeated .DC.Packet.STRADE_MEMBERSHIP_REQUIREMENT requirements = 1;
inline int SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES::_internal_requirements_size() const {
  return _internal_requirements().size();
}
inline int SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES::requirements_size() const {
  return _internal_requirements_size();
}
inline void SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES::clear_requirements() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requirements_.Clear();
}
inline ::DC::Packet::STRADE_MEMBERSHIP_REQUIREMENT* SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES::mutable_requirements(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES.requirements)
  return _internal_mutable_requirements()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_MEMBERSHIP_REQUIREMENT>* SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES::mutable_requirements()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES.requirements)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_requirements();
}
inline const ::DC::Packet::STRADE_MEMBERSHIP_REQUIREMENT& SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES::requirements(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES.requirements)
  return _internal_requirements().Get(index);
}
inline ::DC::Packet::STRADE_MEMBERSHIP_REQUIREMENT* SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES::add_requirements() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::STRADE_MEMBERSHIP_REQUIREMENT* _add = _internal_mutable_requirements()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES.requirements)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_MEMBERSHIP_REQUIREMENT>& SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES::requirements() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES.requirements)
  return _internal_requirements();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_MEMBERSHIP_REQUIREMENT>&
SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES::_internal_requirements() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requirements_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::STRADE_MEMBERSHIP_REQUIREMENT>*
SS2C_TRADE_MEMBERSHIP_REQUIREMENT_RES::_internal_mutable_requirements() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.requirements_;
}

// -------------------------------------------------------------------

// SC2S_TRADE_MEMBERSHIP_REQ

// uint32 becomeTraderFlag = 1;
inline void SC2S_TRADE_MEMBERSHIP_REQ::clear_becometraderflag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.becometraderflag_ = 0u;
}
inline ::uint32_t SC2S_TRADE_MEMBERSHIP_REQ::becometraderflag() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_TRADE_MEMBERSHIP_REQ.becomeTraderFlag)
  return _internal_becometraderflag();
}
inline void SC2S_TRADE_MEMBERSHIP_REQ::set_becometraderflag(::uint32_t value) {
  _internal_set_becometraderflag(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_TRADE_MEMBERSHIP_REQ.becomeTraderFlag)
}
inline ::uint32_t SC2S_TRADE_MEMBERSHIP_REQ::_internal_becometraderflag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.becometraderflag_;
}
inline void SC2S_TRADE_MEMBERSHIP_REQ::_internal_set_becometraderflag(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.becometraderflag_ = value;
}

// -------------------------------------------------------------------

// SS2C_TRADE_MEMBERSHIP_RES

// uint32 result = 1;
inline void SS2C_TRADE_MEMBERSHIP_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_TRADE_MEMBERSHIP_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_MEMBERSHIP_RES.result)
  return _internal_result();
}
inline void SS2C_TRADE_MEMBERSHIP_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADE_MEMBERSHIP_RES.result)
}
inline ::uint32_t SS2C_TRADE_MEMBERSHIP_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_TRADE_MEMBERSHIP_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SC2S_TRADE_REQUEST_REQ

// string accountId = 1;
inline void SC2S_TRADE_REQUEST_REQ::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SC2S_TRADE_REQUEST_REQ::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_TRADE_REQUEST_REQ.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_TRADE_REQUEST_REQ::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_TRADE_REQUEST_REQ.accountId)
}
inline std::string* SC2S_TRADE_REQUEST_REQ::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_TRADE_REQUEST_REQ.accountId)
  return _s;
}
inline const std::string& SC2S_TRADE_REQUEST_REQ::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SC2S_TRADE_REQUEST_REQ::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SC2S_TRADE_REQUEST_REQ::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SC2S_TRADE_REQUEST_REQ::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_TRADE_REQUEST_REQ.accountId)
  return _impl_.accountid_.Release();
}
inline void SC2S_TRADE_REQUEST_REQ::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_TRADE_REQUEST_REQ.accountId)
}

// .DC.Packet.SACCOUNT_NICKNAME nickName = 2;
inline bool SC2S_TRADE_REQUEST_REQ::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SC2S_TRADE_REQUEST_REQ::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SC2S_TRADE_REQUEST_REQ::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_TRADE_REQUEST_REQ.nickName)
  return _internal_nickname();
}
inline void SC2S_TRADE_REQUEST_REQ::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SC2S_TRADE_REQUEST_REQ.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SC2S_TRADE_REQUEST_REQ::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SC2S_TRADE_REQUEST_REQ::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_TRADE_REQUEST_REQ.nickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SC2S_TRADE_REQUEST_REQ::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SC2S_TRADE_REQUEST_REQ::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_TRADE_REQUEST_REQ.nickName)
  return _msg;
}
inline void SC2S_TRADE_REQUEST_REQ::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_TRADE_REQUEST_REQ.nickName)
}

// string characterId = 3;
inline void SC2S_TRADE_REQUEST_REQ::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SC2S_TRADE_REQUEST_REQ::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_TRADE_REQUEST_REQ.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_TRADE_REQUEST_REQ::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_TRADE_REQUEST_REQ.characterId)
}
inline std::string* SC2S_TRADE_REQUEST_REQ::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_TRADE_REQUEST_REQ.characterId)
  return _s;
}
inline const std::string& SC2S_TRADE_REQUEST_REQ::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SC2S_TRADE_REQUEST_REQ::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SC2S_TRADE_REQUEST_REQ::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SC2S_TRADE_REQUEST_REQ::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_TRADE_REQUEST_REQ.characterId)
  return _impl_.characterid_.Release();
}
inline void SC2S_TRADE_REQUEST_REQ::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_TRADE_REQUEST_REQ.characterId)
}

// -------------------------------------------------------------------

// SS2C_TRADE_REQUEST_RES

// uint32 result = 1;
inline void SS2C_TRADE_REQUEST_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_TRADE_REQUEST_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_REQUEST_RES.result)
  return _internal_result();
}
inline void SS2C_TRADE_REQUEST_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADE_REQUEST_RES.result)
}
inline ::uint32_t SS2C_TRADE_REQUEST_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_TRADE_REQUEST_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// .DC.Packet.SACCOUNT_NICKNAME requestNickName = 2;
inline bool SS2C_TRADE_REQUEST_RES::has_requestnickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.requestnickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SS2C_TRADE_REQUEST_RES::_internal_requestnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.requestnickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SS2C_TRADE_REQUEST_RES::requestnickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_REQUEST_RES.requestNickName)
  return _internal_requestnickname();
}
inline void SS2C_TRADE_REQUEST_RES::unsafe_arena_set_allocated_requestnickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.requestnickname_);
  }
  _impl_.requestnickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_TRADE_REQUEST_RES.requestNickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_TRADE_REQUEST_RES::release_requestnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.requestnickname_;
  _impl_.requestnickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_TRADE_REQUEST_RES::unsafe_arena_release_requestnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_TRADE_REQUEST_RES.requestNickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.requestnickname_;
  _impl_.requestnickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_TRADE_REQUEST_RES::_internal_mutable_requestnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.requestnickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.requestnickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.requestnickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_TRADE_REQUEST_RES::mutable_requestnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_requestnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADE_REQUEST_RES.requestNickName)
  return _msg;
}
inline void SS2C_TRADE_REQUEST_RES::set_allocated_requestnickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.requestnickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.requestnickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_TRADE_REQUEST_RES.requestNickName)
}

// -------------------------------------------------------------------

// SS2C_TRADE_REQUEST_NOT

// string accountId = 1;
inline void SS2C_TRADE_REQUEST_NOT::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SS2C_TRADE_REQUEST_NOT::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_REQUEST_NOT.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_TRADE_REQUEST_NOT::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADE_REQUEST_NOT.accountId)
}
inline std::string* SS2C_TRADE_REQUEST_NOT::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADE_REQUEST_NOT.accountId)
  return _s;
}
inline const std::string& SS2C_TRADE_REQUEST_NOT::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SS2C_TRADE_REQUEST_NOT::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SS2C_TRADE_REQUEST_NOT::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SS2C_TRADE_REQUEST_NOT::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_TRADE_REQUEST_NOT.accountId)
  return _impl_.accountid_.Release();
}
inline void SS2C_TRADE_REQUEST_NOT::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_TRADE_REQUEST_NOT.accountId)
}

// .DC.Packet.SACCOUNT_NICKNAME nickName = 2;
inline bool SS2C_TRADE_REQUEST_NOT::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SS2C_TRADE_REQUEST_NOT::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SS2C_TRADE_REQUEST_NOT::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_REQUEST_NOT.nickName)
  return _internal_nickname();
}
inline void SS2C_TRADE_REQUEST_NOT::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_TRADE_REQUEST_NOT.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_TRADE_REQUEST_NOT::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_TRADE_REQUEST_NOT::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_TRADE_REQUEST_NOT.nickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_TRADE_REQUEST_NOT::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_TRADE_REQUEST_NOT::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADE_REQUEST_NOT.nickName)
  return _msg;
}
inline void SS2C_TRADE_REQUEST_NOT::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_TRADE_REQUEST_NOT.nickName)
}

// -------------------------------------------------------------------

// SC2S_TRADE_ANSWER_REQ

// string accountId = 1;
inline void SC2S_TRADE_ANSWER_REQ::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SC2S_TRADE_ANSWER_REQ::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_TRADE_ANSWER_REQ.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SC2S_TRADE_ANSWER_REQ::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_TRADE_ANSWER_REQ.accountId)
}
inline std::string* SC2S_TRADE_ANSWER_REQ::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_TRADE_ANSWER_REQ.accountId)
  return _s;
}
inline const std::string& SC2S_TRADE_ANSWER_REQ::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SC2S_TRADE_ANSWER_REQ::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SC2S_TRADE_ANSWER_REQ::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SC2S_TRADE_ANSWER_REQ::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_TRADE_ANSWER_REQ.accountId)
  return _impl_.accountid_.Release();
}
inline void SC2S_TRADE_ANSWER_REQ::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_TRADE_ANSWER_REQ.accountId)
}

// .DC.Packet.SACCOUNT_NICKNAME nickName = 2;
inline bool SC2S_TRADE_ANSWER_REQ::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SC2S_TRADE_ANSWER_REQ::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SC2S_TRADE_ANSWER_REQ::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_TRADE_ANSWER_REQ.nickName)
  return _internal_nickname();
}
inline void SC2S_TRADE_ANSWER_REQ::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SC2S_TRADE_ANSWER_REQ.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SC2S_TRADE_ANSWER_REQ::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SC2S_TRADE_ANSWER_REQ::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_TRADE_ANSWER_REQ.nickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SC2S_TRADE_ANSWER_REQ::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SC2S_TRADE_ANSWER_REQ::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_TRADE_ANSWER_REQ.nickName)
  return _msg;
}
inline void SC2S_TRADE_ANSWER_REQ::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_TRADE_ANSWER_REQ.nickName)
}

// uint32 selectFlag = 3;
inline void SC2S_TRADE_ANSWER_REQ::clear_selectflag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.selectflag_ = 0u;
}
inline ::uint32_t SC2S_TRADE_ANSWER_REQ::selectflag() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_TRADE_ANSWER_REQ.selectFlag)
  return _internal_selectflag();
}
inline void SC2S_TRADE_ANSWER_REQ::set_selectflag(::uint32_t value) {
  _internal_set_selectflag(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_TRADE_ANSWER_REQ.selectFlag)
}
inline ::uint32_t SC2S_TRADE_ANSWER_REQ::_internal_selectflag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.selectflag_;
}
inline void SC2S_TRADE_ANSWER_REQ::_internal_set_selectflag(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.selectflag_ = value;
}

// -------------------------------------------------------------------

// SS2C_TRADE_ANSWER_RES

// uint32 result = 1;
inline void SS2C_TRADE_ANSWER_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_TRADE_ANSWER_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_ANSWER_RES.result)
  return _internal_result();
}
inline void SS2C_TRADE_ANSWER_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADE_ANSWER_RES.result)
}
inline ::uint32_t SS2C_TRADE_ANSWER_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_TRADE_ANSWER_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SS2C_TRADE_ANSWER_REFUSAL_NOT

// string accountId = 1;
inline void SS2C_TRADE_ANSWER_REFUSAL_NOT::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SS2C_TRADE_ANSWER_REFUSAL_NOT::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_ANSWER_REFUSAL_NOT.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_TRADE_ANSWER_REFUSAL_NOT::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADE_ANSWER_REFUSAL_NOT.accountId)
}
inline std::string* SS2C_TRADE_ANSWER_REFUSAL_NOT::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADE_ANSWER_REFUSAL_NOT.accountId)
  return _s;
}
inline const std::string& SS2C_TRADE_ANSWER_REFUSAL_NOT::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SS2C_TRADE_ANSWER_REFUSAL_NOT::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SS2C_TRADE_ANSWER_REFUSAL_NOT::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SS2C_TRADE_ANSWER_REFUSAL_NOT::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_TRADE_ANSWER_REFUSAL_NOT.accountId)
  return _impl_.accountid_.Release();
}
inline void SS2C_TRADE_ANSWER_REFUSAL_NOT::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_TRADE_ANSWER_REFUSAL_NOT.accountId)
}

// .DC.Packet.SACCOUNT_NICKNAME nickName = 2;
inline bool SS2C_TRADE_ANSWER_REFUSAL_NOT::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SS2C_TRADE_ANSWER_REFUSAL_NOT::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SS2C_TRADE_ANSWER_REFUSAL_NOT::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADE_ANSWER_REFUSAL_NOT.nickName)
  return _internal_nickname();
}
inline void SS2C_TRADE_ANSWER_REFUSAL_NOT::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_TRADE_ANSWER_REFUSAL_NOT.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_TRADE_ANSWER_REFUSAL_NOT::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_TRADE_ANSWER_REFUSAL_NOT::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_TRADE_ANSWER_REFUSAL_NOT.nickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_TRADE_ANSWER_REFUSAL_NOT::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SS2C_TRADE_ANSWER_REFUSAL_NOT::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADE_ANSWER_REFUSAL_NOT.nickName)
  return _msg;
}
inline void SS2C_TRADE_ANSWER_REFUSAL_NOT::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_TRADE_ANSWER_REFUSAL_NOT.nickName)
}

// -------------------------------------------------------------------

// SS2C_TRADING_BEGIN_NOT

// .DC.Packet.STRADING_USER_INFO target = 1;
inline bool SS2C_TRADING_BEGIN_NOT::has_target() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.target_ != nullptr);
  return value;
}
inline void SS2C_TRADING_BEGIN_NOT::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_ != nullptr) _impl_.target_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::STRADING_USER_INFO& SS2C_TRADING_BEGIN_NOT::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::STRADING_USER_INFO* p = _impl_.target_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::STRADING_USER_INFO&>(::DC::Packet::_STRADING_USER_INFO_default_instance_);
}
inline const ::DC::Packet::STRADING_USER_INFO& SS2C_TRADING_BEGIN_NOT::target() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_BEGIN_NOT.target)
  return _internal_target();
}
inline void SS2C_TRADING_BEGIN_NOT::unsafe_arena_set_allocated_target(::DC::Packet::STRADING_USER_INFO* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_);
  }
  _impl_.target_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_TRADING_BEGIN_NOT.target)
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_BEGIN_NOT::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADING_USER_INFO* released = _impl_.target_;
  _impl_.target_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_BEGIN_NOT::unsafe_arena_release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_TRADING_BEGIN_NOT.target)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADING_USER_INFO* temp = _impl_.target_;
  _impl_.target_ = nullptr;
  return temp;
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_BEGIN_NOT::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::STRADING_USER_INFO>(GetArena());
    _impl_.target_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(p);
  }
  return _impl_.target_;
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_BEGIN_NOT::mutable_target() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::STRADING_USER_INFO* _msg = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADING_BEGIN_NOT.target)
  return _msg;
}
inline void SS2C_TRADING_BEGIN_NOT::set_allocated_target(::DC::Packet::STRADING_USER_INFO* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.target_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.target_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_TRADING_BEGIN_NOT.target)
}

// .DC.Packet.STRADING_USER_INFO mine = 2;
inline bool SS2C_TRADING_BEGIN_NOT::has_mine() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mine_ != nullptr);
  return value;
}
inline void SS2C_TRADING_BEGIN_NOT::clear_mine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mine_ != nullptr) _impl_.mine_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::DC::Packet::STRADING_USER_INFO& SS2C_TRADING_BEGIN_NOT::_internal_mine() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::STRADING_USER_INFO* p = _impl_.mine_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::STRADING_USER_INFO&>(::DC::Packet::_STRADING_USER_INFO_default_instance_);
}
inline const ::DC::Packet::STRADING_USER_INFO& SS2C_TRADING_BEGIN_NOT::mine() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_BEGIN_NOT.mine)
  return _internal_mine();
}
inline void SS2C_TRADING_BEGIN_NOT::unsafe_arena_set_allocated_mine(::DC::Packet::STRADING_USER_INFO* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mine_);
  }
  _impl_.mine_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_TRADING_BEGIN_NOT.mine)
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_BEGIN_NOT::release_mine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DC::Packet::STRADING_USER_INFO* released = _impl_.mine_;
  _impl_.mine_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_BEGIN_NOT::unsafe_arena_release_mine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_TRADING_BEGIN_NOT.mine)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DC::Packet::STRADING_USER_INFO* temp = _impl_.mine_;
  _impl_.mine_ = nullptr;
  return temp;
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_BEGIN_NOT::_internal_mutable_mine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mine_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::STRADING_USER_INFO>(GetArena());
    _impl_.mine_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(p);
  }
  return _impl_.mine_;
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_BEGIN_NOT::mutable_mine() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::DC::Packet::STRADING_USER_INFO* _msg = _internal_mutable_mine();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADING_BEGIN_NOT.mine)
  return _msg;
}
inline void SS2C_TRADING_BEGIN_NOT::set_allocated_mine(::DC::Packet::STRADING_USER_INFO* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.mine_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.mine_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_TRADING_BEGIN_NOT.mine)
}

// uint32 tradeFee = 4;
inline void SS2C_TRADING_BEGIN_NOT::clear_tradefee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tradefee_ = 0u;
}
inline ::uint32_t SS2C_TRADING_BEGIN_NOT::tradefee() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_BEGIN_NOT.tradeFee)
  return _internal_tradefee();
}
inline void SS2C_TRADING_BEGIN_NOT::set_tradefee(::uint32_t value) {
  _internal_set_tradefee(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADING_BEGIN_NOT.tradeFee)
}
inline ::uint32_t SS2C_TRADING_BEGIN_NOT::_internal_tradefee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tradefee_;
}
inline void SS2C_TRADING_BEGIN_NOT::_internal_set_tradefee(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tradefee_ = value;
}

// uint32 moveResetTimeSec = 5;
inline void SS2C_TRADING_BEGIN_NOT::clear_moveresettimesec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.moveresettimesec_ = 0u;
}
inline ::uint32_t SS2C_TRADING_BEGIN_NOT::moveresettimesec() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_BEGIN_NOT.moveResetTimeSec)
  return _internal_moveresettimesec();
}
inline void SS2C_TRADING_BEGIN_NOT::set_moveresettimesec(::uint32_t value) {
  _internal_set_moveresettimesec(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADING_BEGIN_NOT.moveResetTimeSec)
}
inline ::uint32_t SS2C_TRADING_BEGIN_NOT::_internal_moveresettimesec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.moveresettimesec_;
}
inline void SS2C_TRADING_BEGIN_NOT::_internal_set_moveresettimesec(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.moveresettimesec_ = value;
}

// -------------------------------------------------------------------

// SC2S_TRADING_CLOSE_REQ

// -------------------------------------------------------------------

// SS2C_TRADING_CLOSE_RES

// uint32 result = 1;
inline void SS2C_TRADING_CLOSE_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_TRADING_CLOSE_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_CLOSE_RES.result)
  return _internal_result();
}
inline void SS2C_TRADING_CLOSE_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADING_CLOSE_RES.result)
}
inline ::uint32_t SS2C_TRADING_CLOSE_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_TRADING_CLOSE_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SC2S_TRADING_CHAT_REQ

// .DC.Packet.STRADE_CHAT_C2S chat = 1;
inline bool SC2S_TRADING_CHAT_REQ::has_chat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chat_ != nullptr);
  return value;
}
inline void SC2S_TRADING_CHAT_REQ::clear_chat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chat_ != nullptr) _impl_.chat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::STRADE_CHAT_C2S& SC2S_TRADING_CHAT_REQ::_internal_chat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::STRADE_CHAT_C2S* p = _impl_.chat_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::STRADE_CHAT_C2S&>(::DC::Packet::_STRADE_CHAT_C2S_default_instance_);
}
inline const ::DC::Packet::STRADE_CHAT_C2S& SC2S_TRADING_CHAT_REQ::chat() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_TRADING_CHAT_REQ.chat)
  return _internal_chat();
}
inline void SC2S_TRADING_CHAT_REQ::unsafe_arena_set_allocated_chat(::DC::Packet::STRADE_CHAT_C2S* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chat_);
  }
  _impl_.chat_ = reinterpret_cast<::DC::Packet::STRADE_CHAT_C2S*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SC2S_TRADING_CHAT_REQ.chat)
}
inline ::DC::Packet::STRADE_CHAT_C2S* SC2S_TRADING_CHAT_REQ::release_chat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADE_CHAT_C2S* released = _impl_.chat_;
  _impl_.chat_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::STRADE_CHAT_C2S* SC2S_TRADING_CHAT_REQ::unsafe_arena_release_chat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SC2S_TRADING_CHAT_REQ.chat)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADE_CHAT_C2S* temp = _impl_.chat_;
  _impl_.chat_ = nullptr;
  return temp;
}
inline ::DC::Packet::STRADE_CHAT_C2S* SC2S_TRADING_CHAT_REQ::_internal_mutable_chat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chat_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::STRADE_CHAT_C2S>(GetArena());
    _impl_.chat_ = reinterpret_cast<::DC::Packet::STRADE_CHAT_C2S*>(p);
  }
  return _impl_.chat_;
}
inline ::DC::Packet::STRADE_CHAT_C2S* SC2S_TRADING_CHAT_REQ::mutable_chat() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::STRADE_CHAT_C2S* _msg = _internal_mutable_chat();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SC2S_TRADING_CHAT_REQ.chat)
  return _msg;
}
inline void SC2S_TRADING_CHAT_REQ::set_allocated_chat(::DC::Packet::STRADE_CHAT_C2S* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.chat_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chat_ = reinterpret_cast<::DC::Packet::STRADE_CHAT_C2S*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SC2S_TRADING_CHAT_REQ.chat)
}

// -------------------------------------------------------------------

// SS2C_TRADING_CHAT_RES

// uint32 result = 1;
inline void SS2C_TRADING_CHAT_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_TRADING_CHAT_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_CHAT_RES.result)
  return _internal_result();
}
inline void SS2C_TRADING_CHAT_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADING_CHAT_RES.result)
}
inline ::uint32_t SS2C_TRADING_CHAT_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_TRADING_CHAT_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// .DC.Packet.STRADE_CHAT_S2C chat = 2;
inline bool SS2C_TRADING_CHAT_RES::has_chat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chat_ != nullptr);
  return value;
}
inline void SS2C_TRADING_CHAT_RES::clear_chat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chat_ != nullptr) _impl_.chat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::STRADE_CHAT_S2C& SS2C_TRADING_CHAT_RES::_internal_chat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::STRADE_CHAT_S2C* p = _impl_.chat_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::STRADE_CHAT_S2C&>(::DC::Packet::_STRADE_CHAT_S2C_default_instance_);
}
inline const ::DC::Packet::STRADE_CHAT_S2C& SS2C_TRADING_CHAT_RES::chat() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_CHAT_RES.chat)
  return _internal_chat();
}
inline void SS2C_TRADING_CHAT_RES::unsafe_arena_set_allocated_chat(::DC::Packet::STRADE_CHAT_S2C* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chat_);
  }
  _impl_.chat_ = reinterpret_cast<::DC::Packet::STRADE_CHAT_S2C*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_TRADING_CHAT_RES.chat)
}
inline ::DC::Packet::STRADE_CHAT_S2C* SS2C_TRADING_CHAT_RES::release_chat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADE_CHAT_S2C* released = _impl_.chat_;
  _impl_.chat_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::STRADE_CHAT_S2C* SS2C_TRADING_CHAT_RES::unsafe_arena_release_chat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_TRADING_CHAT_RES.chat)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADE_CHAT_S2C* temp = _impl_.chat_;
  _impl_.chat_ = nullptr;
  return temp;
}
inline ::DC::Packet::STRADE_CHAT_S2C* SS2C_TRADING_CHAT_RES::_internal_mutable_chat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chat_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::STRADE_CHAT_S2C>(GetArena());
    _impl_.chat_ = reinterpret_cast<::DC::Packet::STRADE_CHAT_S2C*>(p);
  }
  return _impl_.chat_;
}
inline ::DC::Packet::STRADE_CHAT_S2C* SS2C_TRADING_CHAT_RES::mutable_chat() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::STRADE_CHAT_S2C* _msg = _internal_mutable_chat();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADING_CHAT_RES.chat)
  return _msg;
}
inline void SS2C_TRADING_CHAT_RES::set_allocated_chat(::DC::Packet::STRADE_CHAT_S2C* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.chat_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chat_ = reinterpret_cast<::DC::Packet::STRADE_CHAT_S2C*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_TRADING_CHAT_RES.chat)
}

// -------------------------------------------------------------------

// SC2S_TRADING_ITEM_UPDATE_REQ

// uint32 updateFlag = 1;
inline void SC2S_TRADING_ITEM_UPDATE_REQ::clear_updateflag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updateflag_ = 0u;
}
inline ::uint32_t SC2S_TRADING_ITEM_UPDATE_REQ::updateflag() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_TRADING_ITEM_UPDATE_REQ.updateFlag)
  return _internal_updateflag();
}
inline void SC2S_TRADING_ITEM_UPDATE_REQ::set_updateflag(::uint32_t value) {
  _internal_set_updateflag(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_TRADING_ITEM_UPDATE_REQ.updateFlag)
}
inline ::uint32_t SC2S_TRADING_ITEM_UPDATE_REQ::_internal_updateflag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updateflag_;
}
inline void SC2S_TRADING_ITEM_UPDATE_REQ::_internal_set_updateflag(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updateflag_ = value;
}

// uint64 uniqueId = 2;
inline void SC2S_TRADING_ITEM_UPDATE_REQ::clear_uniqueid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uniqueid_ = ::uint64_t{0u};
}
inline ::uint64_t SC2S_TRADING_ITEM_UPDATE_REQ::uniqueid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_TRADING_ITEM_UPDATE_REQ.uniqueId)
  return _internal_uniqueid();
}
inline void SC2S_TRADING_ITEM_UPDATE_REQ::set_uniqueid(::uint64_t value) {
  _internal_set_uniqueid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_TRADING_ITEM_UPDATE_REQ.uniqueId)
}
inline ::uint64_t SC2S_TRADING_ITEM_UPDATE_REQ::_internal_uniqueid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uniqueid_;
}
inline void SC2S_TRADING_ITEM_UPDATE_REQ::_internal_set_uniqueid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uniqueid_ = value;
}

// uint32 slotId = 3;
inline void SC2S_TRADING_ITEM_UPDATE_REQ::clear_slotid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slotid_ = 0u;
}
inline ::uint32_t SC2S_TRADING_ITEM_UPDATE_REQ::slotid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_TRADING_ITEM_UPDATE_REQ.slotId)
  return _internal_slotid();
}
inline void SC2S_TRADING_ITEM_UPDATE_REQ::set_slotid(::uint32_t value) {
  _internal_set_slotid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_TRADING_ITEM_UPDATE_REQ.slotId)
}
inline ::uint32_t SC2S_TRADING_ITEM_UPDATE_REQ::_internal_slotid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.slotid_;
}
inline void SC2S_TRADING_ITEM_UPDATE_REQ::_internal_set_slotid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slotid_ = value;
}

// -------------------------------------------------------------------

// SS2C_TRADING_ITEM_UPDATE_RES

// uint32 result = 1;
inline void SS2C_TRADING_ITEM_UPDATE_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_TRADING_ITEM_UPDATE_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES.result)
  return _internal_result();
}
inline void SS2C_TRADING_ITEM_UPDATE_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES.result)
}
inline ::uint32_t SS2C_TRADING_ITEM_UPDATE_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_TRADING_ITEM_UPDATE_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// .DC.Packet.STRADING_USER_INFO updateUserInfo = 2;
inline bool SS2C_TRADING_ITEM_UPDATE_RES::has_updateuserinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updateuserinfo_ != nullptr);
  return value;
}
inline void SS2C_TRADING_ITEM_UPDATE_RES::clear_updateuserinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updateuserinfo_ != nullptr) _impl_.updateuserinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::STRADING_USER_INFO& SS2C_TRADING_ITEM_UPDATE_RES::_internal_updateuserinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::STRADING_USER_INFO* p = _impl_.updateuserinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::STRADING_USER_INFO&>(::DC::Packet::_STRADING_USER_INFO_default_instance_);
}
inline const ::DC::Packet::STRADING_USER_INFO& SS2C_TRADING_ITEM_UPDATE_RES::updateuserinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES.updateUserInfo)
  return _internal_updateuserinfo();
}
inline void SS2C_TRADING_ITEM_UPDATE_RES::unsafe_arena_set_allocated_updateuserinfo(::DC::Packet::STRADING_USER_INFO* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updateuserinfo_);
  }
  _impl_.updateuserinfo_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES.updateUserInfo)
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_ITEM_UPDATE_RES::release_updateuserinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADING_USER_INFO* released = _impl_.updateuserinfo_;
  _impl_.updateuserinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_ITEM_UPDATE_RES::unsafe_arena_release_updateuserinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES.updateUserInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADING_USER_INFO* temp = _impl_.updateuserinfo_;
  _impl_.updateuserinfo_ = nullptr;
  return temp;
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_ITEM_UPDATE_RES::_internal_mutable_updateuserinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updateuserinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::STRADING_USER_INFO>(GetArena());
    _impl_.updateuserinfo_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(p);
  }
  return _impl_.updateuserinfo_;
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_ITEM_UPDATE_RES::mutable_updateuserinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::STRADING_USER_INFO* _msg = _internal_mutable_updateuserinfo();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES.updateUserInfo)
  return _msg;
}
inline void SS2C_TRADING_ITEM_UPDATE_RES::set_allocated_updateuserinfo(::DC::Packet::STRADING_USER_INFO* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.updateuserinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.updateuserinfo_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES.updateUserInfo)
}

// uint32 updateFlag = 3;
inline void SS2C_TRADING_ITEM_UPDATE_RES::clear_updateflag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updateflag_ = 0u;
}
inline ::uint32_t SS2C_TRADING_ITEM_UPDATE_RES::updateflag() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES.updateFlag)
  return _internal_updateflag();
}
inline void SS2C_TRADING_ITEM_UPDATE_RES::set_updateflag(::uint32_t value) {
  _internal_set_updateflag(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES.updateFlag)
}
inline ::uint32_t SS2C_TRADING_ITEM_UPDATE_RES::_internal_updateflag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updateflag_;
}
inline void SS2C_TRADING_ITEM_UPDATE_RES::_internal_set_updateflag(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updateflag_ = value;
}

// .DC.Packet.SItem updateItem = 4;
inline bool SS2C_TRADING_ITEM_UPDATE_RES::has_updateitem() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updateitem_ != nullptr);
  return value;
}
inline const ::DC::Packet::SItem& SS2C_TRADING_ITEM_UPDATE_RES::_internal_updateitem() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SItem* p = _impl_.updateitem_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SItem&>(::DC::Packet::_SItem_default_instance_);
}
inline const ::DC::Packet::SItem& SS2C_TRADING_ITEM_UPDATE_RES::updateitem() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES.updateItem)
  return _internal_updateitem();
}
inline void SS2C_TRADING_ITEM_UPDATE_RES::unsafe_arena_set_allocated_updateitem(::DC::Packet::SItem* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updateitem_);
  }
  _impl_.updateitem_ = reinterpret_cast<::DC::Packet::SItem*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES.updateItem)
}
inline ::DC::Packet::SItem* SS2C_TRADING_ITEM_UPDATE_RES::release_updateitem() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DC::Packet::SItem* released = _impl_.updateitem_;
  _impl_.updateitem_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SItem* SS2C_TRADING_ITEM_UPDATE_RES::unsafe_arena_release_updateitem() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES.updateItem)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DC::Packet::SItem* temp = _impl_.updateitem_;
  _impl_.updateitem_ = nullptr;
  return temp;
}
inline ::DC::Packet::SItem* SS2C_TRADING_ITEM_UPDATE_RES::_internal_mutable_updateitem() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updateitem_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SItem>(GetArena());
    _impl_.updateitem_ = reinterpret_cast<::DC::Packet::SItem*>(p);
  }
  return _impl_.updateitem_;
}
inline ::DC::Packet::SItem* SS2C_TRADING_ITEM_UPDATE_RES::mutable_updateitem() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::DC::Packet::SItem* _msg = _internal_mutable_updateitem();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES.updateItem)
  return _msg;
}
inline void SS2C_TRADING_ITEM_UPDATE_RES::set_allocated_updateitem(::DC::Packet::SItem* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updateitem_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.updateitem_ = reinterpret_cast<::DC::Packet::SItem*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_TRADING_ITEM_UPDATE_RES.updateItem)
}

// -------------------------------------------------------------------

// SC2S_TRADING_READY_REQ

// uint32 isReady = 1;
inline void SC2S_TRADING_READY_REQ::clear_isready() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isready_ = 0u;
}
inline ::uint32_t SC2S_TRADING_READY_REQ::isready() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_TRADING_READY_REQ.isReady)
  return _internal_isready();
}
inline void SC2S_TRADING_READY_REQ::set_isready(::uint32_t value) {
  _internal_set_isready(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_TRADING_READY_REQ.isReady)
}
inline ::uint32_t SC2S_TRADING_READY_REQ::_internal_isready() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isready_;
}
inline void SC2S_TRADING_READY_REQ::_internal_set_isready(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isready_ = value;
}

// -------------------------------------------------------------------

// SS2C_TRADING_READY_RES

// uint32 result = 1;
inline void SS2C_TRADING_READY_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_TRADING_READY_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_READY_RES.result)
  return _internal_result();
}
inline void SS2C_TRADING_READY_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADING_READY_RES.result)
}
inline ::uint32_t SS2C_TRADING_READY_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_TRADING_READY_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SS2C_TRADING_READY_NOT

// .DC.Packet.STRADING_USER_INFO readyUserInfo = 1;
inline bool SS2C_TRADING_READY_NOT::has_readyuserinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.readyuserinfo_ != nullptr);
  return value;
}
inline void SS2C_TRADING_READY_NOT::clear_readyuserinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readyuserinfo_ != nullptr) _impl_.readyuserinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::STRADING_USER_INFO& SS2C_TRADING_READY_NOT::_internal_readyuserinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::STRADING_USER_INFO* p = _impl_.readyuserinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::STRADING_USER_INFO&>(::DC::Packet::_STRADING_USER_INFO_default_instance_);
}
inline const ::DC::Packet::STRADING_USER_INFO& SS2C_TRADING_READY_NOT::readyuserinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_READY_NOT.readyUserInfo)
  return _internal_readyuserinfo();
}
inline void SS2C_TRADING_READY_NOT::unsafe_arena_set_allocated_readyuserinfo(::DC::Packet::STRADING_USER_INFO* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readyuserinfo_);
  }
  _impl_.readyuserinfo_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_TRADING_READY_NOT.readyUserInfo)
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_READY_NOT::release_readyuserinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADING_USER_INFO* released = _impl_.readyuserinfo_;
  _impl_.readyuserinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_READY_NOT::unsafe_arena_release_readyuserinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_TRADING_READY_NOT.readyUserInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADING_USER_INFO* temp = _impl_.readyuserinfo_;
  _impl_.readyuserinfo_ = nullptr;
  return temp;
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_READY_NOT::_internal_mutable_readyuserinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readyuserinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::STRADING_USER_INFO>(GetArena());
    _impl_.readyuserinfo_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(p);
  }
  return _impl_.readyuserinfo_;
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_READY_NOT::mutable_readyuserinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::STRADING_USER_INFO* _msg = _internal_mutable_readyuserinfo();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADING_READY_NOT.readyUserInfo)
  return _msg;
}
inline void SS2C_TRADING_READY_NOT::set_allocated_readyuserinfo(::DC::Packet::STRADING_USER_INFO* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.readyuserinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.readyuserinfo_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_TRADING_READY_NOT.readyUserInfo)
}

// uint32 isReady = 2;
inline void SS2C_TRADING_READY_NOT::clear_isready() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isready_ = 0u;
}
inline ::uint32_t SS2C_TRADING_READY_NOT::isready() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_READY_NOT.isReady)
  return _internal_isready();
}
inline void SS2C_TRADING_READY_NOT::set_isready(::uint32_t value) {
  _internal_set_isready(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADING_READY_NOT.isReady)
}
inline ::uint32_t SS2C_TRADING_READY_NOT::_internal_isready() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isready_;
}
inline void SS2C_TRADING_READY_NOT::_internal_set_isready(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isready_ = value;
}

// -------------------------------------------------------------------

// SS2C_TRADING_CONFIRM_NOT

// .DC.Packet.STRADING_CONFIRM_ITEM target = 1;
inline bool SS2C_TRADING_CONFIRM_NOT::has_target() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.target_ != nullptr);
  return value;
}
inline void SS2C_TRADING_CONFIRM_NOT::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_ != nullptr) _impl_.target_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::STRADING_CONFIRM_ITEM& SS2C_TRADING_CONFIRM_NOT::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::STRADING_CONFIRM_ITEM* p = _impl_.target_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::STRADING_CONFIRM_ITEM&>(::DC::Packet::_STRADING_CONFIRM_ITEM_default_instance_);
}
inline const ::DC::Packet::STRADING_CONFIRM_ITEM& SS2C_TRADING_CONFIRM_NOT::target() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_CONFIRM_NOT.target)
  return _internal_target();
}
inline void SS2C_TRADING_CONFIRM_NOT::unsafe_arena_set_allocated_target(::DC::Packet::STRADING_CONFIRM_ITEM* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_);
  }
  _impl_.target_ = reinterpret_cast<::DC::Packet::STRADING_CONFIRM_ITEM*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_TRADING_CONFIRM_NOT.target)
}
inline ::DC::Packet::STRADING_CONFIRM_ITEM* SS2C_TRADING_CONFIRM_NOT::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADING_CONFIRM_ITEM* released = _impl_.target_;
  _impl_.target_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::STRADING_CONFIRM_ITEM* SS2C_TRADING_CONFIRM_NOT::unsafe_arena_release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_TRADING_CONFIRM_NOT.target)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADING_CONFIRM_ITEM* temp = _impl_.target_;
  _impl_.target_ = nullptr;
  return temp;
}
inline ::DC::Packet::STRADING_CONFIRM_ITEM* SS2C_TRADING_CONFIRM_NOT::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::STRADING_CONFIRM_ITEM>(GetArena());
    _impl_.target_ = reinterpret_cast<::DC::Packet::STRADING_CONFIRM_ITEM*>(p);
  }
  return _impl_.target_;
}
inline ::DC::Packet::STRADING_CONFIRM_ITEM* SS2C_TRADING_CONFIRM_NOT::mutable_target() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::STRADING_CONFIRM_ITEM* _msg = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADING_CONFIRM_NOT.target)
  return _msg;
}
inline void SS2C_TRADING_CONFIRM_NOT::set_allocated_target(::DC::Packet::STRADING_CONFIRM_ITEM* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.target_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.target_ = reinterpret_cast<::DC::Packet::STRADING_CONFIRM_ITEM*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_TRADING_CONFIRM_NOT.target)
}

// .DC.Packet.STRADING_CONFIRM_ITEM mine = 2;
inline bool SS2C_TRADING_CONFIRM_NOT::has_mine() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mine_ != nullptr);
  return value;
}
inline void SS2C_TRADING_CONFIRM_NOT::clear_mine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mine_ != nullptr) _impl_.mine_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::DC::Packet::STRADING_CONFIRM_ITEM& SS2C_TRADING_CONFIRM_NOT::_internal_mine() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::STRADING_CONFIRM_ITEM* p = _impl_.mine_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::STRADING_CONFIRM_ITEM&>(::DC::Packet::_STRADING_CONFIRM_ITEM_default_instance_);
}
inline const ::DC::Packet::STRADING_CONFIRM_ITEM& SS2C_TRADING_CONFIRM_NOT::mine() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_CONFIRM_NOT.mine)
  return _internal_mine();
}
inline void SS2C_TRADING_CONFIRM_NOT::unsafe_arena_set_allocated_mine(::DC::Packet::STRADING_CONFIRM_ITEM* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mine_);
  }
  _impl_.mine_ = reinterpret_cast<::DC::Packet::STRADING_CONFIRM_ITEM*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_TRADING_CONFIRM_NOT.mine)
}
inline ::DC::Packet::STRADING_CONFIRM_ITEM* SS2C_TRADING_CONFIRM_NOT::release_mine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DC::Packet::STRADING_CONFIRM_ITEM* released = _impl_.mine_;
  _impl_.mine_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::STRADING_CONFIRM_ITEM* SS2C_TRADING_CONFIRM_NOT::unsafe_arena_release_mine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_TRADING_CONFIRM_NOT.mine)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::DC::Packet::STRADING_CONFIRM_ITEM* temp = _impl_.mine_;
  _impl_.mine_ = nullptr;
  return temp;
}
inline ::DC::Packet::STRADING_CONFIRM_ITEM* SS2C_TRADING_CONFIRM_NOT::_internal_mutable_mine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mine_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::STRADING_CONFIRM_ITEM>(GetArena());
    _impl_.mine_ = reinterpret_cast<::DC::Packet::STRADING_CONFIRM_ITEM*>(p);
  }
  return _impl_.mine_;
}
inline ::DC::Packet::STRADING_CONFIRM_ITEM* SS2C_TRADING_CONFIRM_NOT::mutable_mine() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::DC::Packet::STRADING_CONFIRM_ITEM* _msg = _internal_mutable_mine();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADING_CONFIRM_NOT.mine)
  return _msg;
}
inline void SS2C_TRADING_CONFIRM_NOT::set_allocated_mine(::DC::Packet::STRADING_CONFIRM_ITEM* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.mine_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.mine_ = reinterpret_cast<::DC::Packet::STRADING_CONFIRM_ITEM*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_TRADING_CONFIRM_NOT.mine)
}

// -------------------------------------------------------------------

// SC2S_TRADING_CONFIRM_READY_REQ

// uint32 isReady = 1;
inline void SC2S_TRADING_CONFIRM_READY_REQ::clear_isready() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isready_ = 0u;
}
inline ::uint32_t SC2S_TRADING_CONFIRM_READY_REQ::isready() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SC2S_TRADING_CONFIRM_READY_REQ.isReady)
  return _internal_isready();
}
inline void SC2S_TRADING_CONFIRM_READY_REQ::set_isready(::uint32_t value) {
  _internal_set_isready(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SC2S_TRADING_CONFIRM_READY_REQ.isReady)
}
inline ::uint32_t SC2S_TRADING_CONFIRM_READY_REQ::_internal_isready() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isready_;
}
inline void SC2S_TRADING_CONFIRM_READY_REQ::_internal_set_isready(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isready_ = value;
}

// -------------------------------------------------------------------

// SS2C_TRADING_CONFIRM_READY_RES

// uint32 result = 1;
inline void SS2C_TRADING_CONFIRM_READY_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_TRADING_CONFIRM_READY_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_CONFIRM_READY_RES.result)
  return _internal_result();
}
inline void SS2C_TRADING_CONFIRM_READY_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADING_CONFIRM_READY_RES.result)
}
inline ::uint32_t SS2C_TRADING_CONFIRM_READY_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_TRADING_CONFIRM_READY_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SS2C_TRADING_CONFIRM_READY_NOT

// .DC.Packet.STRADING_USER_INFO readyUserInfo = 1;
inline bool SS2C_TRADING_CONFIRM_READY_NOT::has_readyuserinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.readyuserinfo_ != nullptr);
  return value;
}
inline void SS2C_TRADING_CONFIRM_READY_NOT::clear_readyuserinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readyuserinfo_ != nullptr) _impl_.readyuserinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::STRADING_USER_INFO& SS2C_TRADING_CONFIRM_READY_NOT::_internal_readyuserinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::STRADING_USER_INFO* p = _impl_.readyuserinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::STRADING_USER_INFO&>(::DC::Packet::_STRADING_USER_INFO_default_instance_);
}
inline const ::DC::Packet::STRADING_USER_INFO& SS2C_TRADING_CONFIRM_READY_NOT::readyuserinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_CONFIRM_READY_NOT.readyUserInfo)
  return _internal_readyuserinfo();
}
inline void SS2C_TRADING_CONFIRM_READY_NOT::unsafe_arena_set_allocated_readyuserinfo(::DC::Packet::STRADING_USER_INFO* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readyuserinfo_);
  }
  _impl_.readyuserinfo_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SS2C_TRADING_CONFIRM_READY_NOT.readyUserInfo)
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_CONFIRM_READY_NOT::release_readyuserinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADING_USER_INFO* released = _impl_.readyuserinfo_;
  _impl_.readyuserinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_CONFIRM_READY_NOT::unsafe_arena_release_readyuserinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_TRADING_CONFIRM_READY_NOT.readyUserInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::STRADING_USER_INFO* temp = _impl_.readyuserinfo_;
  _impl_.readyuserinfo_ = nullptr;
  return temp;
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_CONFIRM_READY_NOT::_internal_mutable_readyuserinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readyuserinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::STRADING_USER_INFO>(GetArena());
    _impl_.readyuserinfo_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(p);
  }
  return _impl_.readyuserinfo_;
}
inline ::DC::Packet::STRADING_USER_INFO* SS2C_TRADING_CONFIRM_READY_NOT::mutable_readyuserinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::STRADING_USER_INFO* _msg = _internal_mutable_readyuserinfo();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_TRADING_CONFIRM_READY_NOT.readyUserInfo)
  return _msg;
}
inline void SS2C_TRADING_CONFIRM_READY_NOT::set_allocated_readyuserinfo(::DC::Packet::STRADING_USER_INFO* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.readyuserinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.readyuserinfo_ = reinterpret_cast<::DC::Packet::STRADING_USER_INFO*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_TRADING_CONFIRM_READY_NOT.readyUserInfo)
}

// uint32 isReady = 2;
inline void SS2C_TRADING_CONFIRM_READY_NOT::clear_isready() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isready_ = 0u;
}
inline ::uint32_t SS2C_TRADING_CONFIRM_READY_NOT::isready() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_CONFIRM_READY_NOT.isReady)
  return _internal_isready();
}
inline void SS2C_TRADING_CONFIRM_READY_NOT::set_isready(::uint32_t value) {
  _internal_set_isready(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADING_CONFIRM_READY_NOT.isReady)
}
inline ::uint32_t SS2C_TRADING_CONFIRM_READY_NOT::_internal_isready() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isready_;
}
inline void SS2C_TRADING_CONFIRM_READY_NOT::_internal_set_isready(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isready_ = value;
}

// -------------------------------------------------------------------

// SC2S_TRADING_CONFIRM_CANCEL_REQ

// -------------------------------------------------------------------

// SS2C_TRADING_CONFIRM_CANCEL_RES

// uint32 result = 1;
inline void SS2C_TRADING_CONFIRM_CANCEL_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_TRADING_CONFIRM_CANCEL_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_CONFIRM_CANCEL_RES.result)
  return _internal_result();
}
inline void SS2C_TRADING_CONFIRM_CANCEL_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADING_CONFIRM_CANCEL_RES.result)
}
inline ::uint32_t SS2C_TRADING_CONFIRM_CANCEL_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_TRADING_CONFIRM_CANCEL_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SS2C_TRADING_RESULT_NOT

// uint32 result = 1;
inline void SS2C_TRADING_RESULT_NOT::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_TRADING_RESULT_NOT::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_TRADING_RESULT_NOT.result)
  return _internal_result();
}
inline void SS2C_TRADING_RESULT_NOT::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_TRADING_RESULT_NOT.result)
}
inline ::uint32_t SS2C_TRADING_RESULT_NOT::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_TRADING_RESULT_NOT::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Packet
}  // namespace DC


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Trade_2eproto_2epb_2eh
