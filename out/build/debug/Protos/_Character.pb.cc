// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: _Character.proto
// Protobuf C++ Version: 5.29.0-dev

#include "_Character.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace DC {
namespace Packet {

inline constexpr SRankUserInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rankid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currentpoint_{0u},
        needpoint_{0u},
        gametype_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SRankUserInfo::SRankUserInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SRankUserInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SRankUserInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SRankUserInfoDefaultTypeInternal() {}
  union {
    SRankUserInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SRankUserInfoDefaultTypeInternal _SRankUserInfo_default_instance_;

inline constexpr SGameStat::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stattype_{0},
        statvalue_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SGameStat::SGameStat(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SGameStatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SGameStatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SGameStatDefaultTypeInternal() {}
  union {
    SGameStat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SGameStatDefaultTypeInternal _SGameStat_default_instance_;

inline constexpr SACCOUNT_NICKNAME::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : originalnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        streamingmodenickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rankid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        karmarating_{0},
        fame_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SACCOUNT_NICKNAME::SACCOUNT_NICKNAME(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SACCOUNT_NICKNAMEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SACCOUNT_NICKNAMEDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SACCOUNT_NICKNAMEDefaultTypeInternal() {}
  union {
    SACCOUNT_NICKNAME _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SACCOUNT_NICKNAMEDefaultTypeInternal _SACCOUNT_NICKNAME_default_instance_;

inline constexpr SCHARACTER_TRADE_INFO::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterclass_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_{nullptr},
        gender_{0u},
        level_{0u},
        characterlocation_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SCHARACTER_TRADE_INFO::SCHARACTER_TRADE_INFO(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SCHARACTER_TRADE_INFODefaultTypeInternal {
  PROTOBUF_CONSTEXPR SCHARACTER_TRADE_INFODefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SCHARACTER_TRADE_INFODefaultTypeInternal() {}
  union {
    SCHARACTER_TRADE_INFO _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SCHARACTER_TRADE_INFODefaultTypeInternal _SCHARACTER_TRADE_INFO_default_instance_;

inline constexpr SCHARACTER_GATHERING_HALL_INFO::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterclass_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_{nullptr},
        gender_{0u},
        level_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SCHARACTER_GATHERING_HALL_INFO::SCHARACTER_GATHERING_HALL_INFO(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SCHARACTER_GATHERING_HALL_INFODefaultTypeInternal {
  PROTOBUF_CONSTEXPR SCHARACTER_GATHERING_HALL_INFODefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SCHARACTER_GATHERING_HALL_INFODefaultTypeInternal() {}
  union {
    SCHARACTER_GATHERING_HALL_INFO _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SCHARACTER_GATHERING_HALL_INFODefaultTypeInternal _SCHARACTER_GATHERING_HALL_INFO_default_instance_;

inline constexpr SCHARACTER_FRIEND_INFO::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterclass_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_{nullptr},
        gender_{0u},
        level_{0u},
        locationstatus_{0u},
        partymemebercount_{0u},
        partymaxmemebercount_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SCHARACTER_FRIEND_INFO::SCHARACTER_FRIEND_INFO(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SCHARACTER_FRIEND_INFODefaultTypeInternal {
  PROTOBUF_CONSTEXPR SCHARACTER_FRIEND_INFODefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SCHARACTER_FRIEND_INFODefaultTypeInternal() {}
  union {
    SCHARACTER_FRIEND_INFO _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SCHARACTER_FRIEND_INFODefaultTypeInternal _SCHARACTER_FRIEND_INFO_default_instance_;

inline constexpr SBLOCK_CHARACTER::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterclass_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_{nullptr},
        gender_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SBLOCK_CHARACTER::SBLOCK_CHARACTER(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SBLOCK_CHARACTERDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SBLOCK_CHARACTERDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SBLOCK_CHARACTERDefaultTypeInternal() {}
  union {
    SBLOCK_CHARACTER _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SBLOCK_CHARACTERDefaultTypeInternal _SBLOCK_CHARACTER_default_instance_;

inline constexpr SSTORAGE_INFO::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : characterstorageitemlist_{},
        inventoryid_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SSTORAGE_INFO::SSTORAGE_INFO(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SSTORAGE_INFODefaultTypeInternal {
  PROTOBUF_CONSTEXPR SSTORAGE_INFODefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SSTORAGE_INFODefaultTypeInternal() {}
  union {
    SSTORAGE_INFO _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SSTORAGE_INFODefaultTypeInternal _SSTORAGE_INFO_default_instance_;

inline constexpr SCHARACTER_PARTY_INFO::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        equipitemlist_{},
        perks_{},
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterclass_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_{nullptr},
        gender_{0u},
        level_{0u},
        ispartyleader_{0u},
        isready_{0u},
        isingame_{0u},
        partyidx_{0u},
        gearscore_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SCHARACTER_PARTY_INFO::SCHARACTER_PARTY_INFO(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SCHARACTER_PARTY_INFODefaultTypeInternal {
  PROTOBUF_CONSTEXPR SCHARACTER_PARTY_INFODefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SCHARACTER_PARTY_INFODefaultTypeInternal() {}
  union {
    SCHARACTER_PARTY_INFO _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SCHARACTER_PARTY_INFODefaultTypeInternal _SCHARACTER_PARTY_INFO_default_instance_;

inline constexpr SCHARACTER_INFO::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        characteritemlist_{},
        characterstorageitemlist_{},
        characterstorageinfos_{},
        accountid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterclass_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        servicegrpc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_{nullptr},
        gender_{0u},
        level_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SCHARACTER_INFO::SCHARACTER_INFO(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SCHARACTER_INFODefaultTypeInternal {
  PROTOBUF_CONSTEXPR SCHARACTER_INFODefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SCHARACTER_INFODefaultTypeInternal() {}
  union {
    SCHARACTER_INFO _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SCHARACTER_INFODefaultTypeInternal _SCHARACTER_INFO_default_instance_;
}  // namespace Packet
}  // namespace DC
static const ::_pb::EnumDescriptor* file_level_enum_descriptors__5fCharacter_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors__5fCharacter_2eproto = nullptr;
const ::uint32_t
    TableStruct__5fCharacter_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SSTORAGE_INFO, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SSTORAGE_INFO, _impl_.inventoryid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SSTORAGE_INFO, _impl_.characterstorageitemlist_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_INFO, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_INFO, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_INFO, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_INFO, _impl_.accountnickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_INFO, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_INFO, _impl_.characterclass_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_INFO, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_INFO, _impl_.gender_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_INFO, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_INFO, _impl_.servicegrpc_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_INFO, _impl_.characteritemlist_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_INFO, _impl_.characterstorageitemlist_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_INFO, _impl_.characterstorageinfos_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_FRIEND_INFO, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_FRIEND_INFO, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_FRIEND_INFO, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_FRIEND_INFO, _impl_.accountnickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_FRIEND_INFO, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_FRIEND_INFO, _impl_.characterclass_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_FRIEND_INFO, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_FRIEND_INFO, _impl_.gender_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_FRIEND_INFO, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_FRIEND_INFO, _impl_.locationstatus_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_FRIEND_INFO, _impl_.partymemebercount_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_FRIEND_INFO, _impl_.partymaxmemebercount_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_PARTY_INFO, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_PARTY_INFO, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_PARTY_INFO, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_PARTY_INFO, _impl_.accountnickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_PARTY_INFO, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_PARTY_INFO, _impl_.characterclass_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_PARTY_INFO, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_PARTY_INFO, _impl_.gender_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_PARTY_INFO, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_PARTY_INFO, _impl_.ispartyleader_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_PARTY_INFO, _impl_.isready_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_PARTY_INFO, _impl_.isingame_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_PARTY_INFO, _impl_.equipitemlist_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_PARTY_INFO, _impl_.partyidx_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_PARTY_INFO, _impl_.perks_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_PARTY_INFO, _impl_.gearscore_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_TRADE_INFO, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_TRADE_INFO, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_TRADE_INFO, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_TRADE_INFO, _impl_.accountnickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_TRADE_INFO, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_TRADE_INFO, _impl_.characterclass_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_TRADE_INFO, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_TRADE_INFO, _impl_.gender_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_TRADE_INFO, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_TRADE_INFO, _impl_.characterlocation_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SACCOUNT_NICKNAME, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SACCOUNT_NICKNAME, _impl_.originalnickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SACCOUNT_NICKNAME, _impl_.streamingmodenickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SACCOUNT_NICKNAME, _impl_.karmarating_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SACCOUNT_NICKNAME, _impl_.rankid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SACCOUNT_NICKNAME, _impl_.fame_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SBLOCK_CHARACTER, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SBLOCK_CHARACTER, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SBLOCK_CHARACTER, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SBLOCK_CHARACTER, _impl_.accountnickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SBLOCK_CHARACTER, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SBLOCK_CHARACTER, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SBLOCK_CHARACTER, _impl_.characterclass_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SBLOCK_CHARACTER, _impl_.gender_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_GATHERING_HALL_INFO, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_GATHERING_HALL_INFO, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_GATHERING_HALL_INFO, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_GATHERING_HALL_INFO, _impl_.accountnickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_GATHERING_HALL_INFO, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_GATHERING_HALL_INFO, _impl_.characterclass_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_GATHERING_HALL_INFO, _impl_.characterid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_GATHERING_HALL_INFO, _impl_.gender_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SCHARACTER_GATHERING_HALL_INFO, _impl_.level_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SGameStat, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SGameStat, _impl_.stattype_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SGameStat, _impl_.statvalue_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SRankUserInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SRankUserInfo, _impl_.rankid_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SRankUserInfo, _impl_.currentpoint_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SRankUserInfo, _impl_.needpoint_),
        PROTOBUF_FIELD_OFFSET(::DC::Packet::SRankUserInfo, _impl_.gametype_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::DC::Packet::SSTORAGE_INFO)},
        {10, 29, -1, sizeof(::DC::Packet::SCHARACTER_INFO)},
        {40, 58, -1, sizeof(::DC::Packet::SCHARACTER_FRIEND_INFO)},
        {68, 90, -1, sizeof(::DC::Packet::SCHARACTER_PARTY_INFO)},
        {104, 120, -1, sizeof(::DC::Packet::SCHARACTER_TRADE_INFO)},
        {128, -1, -1, sizeof(::DC::Packet::SACCOUNT_NICKNAME)},
        {141, 155, -1, sizeof(::DC::Packet::SBLOCK_CHARACTER)},
        {161, 176, -1, sizeof(::DC::Packet::SCHARACTER_GATHERING_HALL_INFO)},
        {183, -1, -1, sizeof(::DC::Packet::SGameStat)},
        {193, -1, -1, sizeof(::DC::Packet::SRankUserInfo)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::DC::Packet::_SSTORAGE_INFO_default_instance_._instance,
    &::DC::Packet::_SCHARACTER_INFO_default_instance_._instance,
    &::DC::Packet::_SCHARACTER_FRIEND_INFO_default_instance_._instance,
    &::DC::Packet::_SCHARACTER_PARTY_INFO_default_instance_._instance,
    &::DC::Packet::_SCHARACTER_TRADE_INFO_default_instance_._instance,
    &::DC::Packet::_SACCOUNT_NICKNAME_default_instance_._instance,
    &::DC::Packet::_SBLOCK_CHARACTER_default_instance_._instance,
    &::DC::Packet::_SCHARACTER_GATHERING_HALL_INFO_default_instance_._instance,
    &::DC::Packet::_SGameStat_default_instance_._instance,
    &::DC::Packet::_SRankUserInfo_default_instance_._instance,
};
const char descriptor_table_protodef__5fCharacter_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020_Character.proto\022\tDC.Packet\032\013_Item.pro"
    "to\"X\n\rSSTORAGE_INFO\022\023\n\013inventoryId\030\001 \001(\r"
    "\0222\n\030CharacterStorageItemList\030\002 \003(\0132\020.DC."
    "Packet.SItem\"\350\002\n\017SCHARACTER_INFO\022\021\n\tacco"
    "untId\030\001 \001(\t\022\027\n\017accountNickname\030\002 \001(\t\022.\n\010"
    "nickName\030\003 \001(\0132\034.DC.Packet.SACCOUNT_NICK"
    "NAME\022\026\n\016characterClass\030\004 \001(\t\022\023\n\013characte"
    "rId\030\005 \001(\t\022\016\n\006gender\030\006 \001(\r\022\r\n\005level\030\007 \001(\r"
    "\022\023\n\013serviceGrpc\030\010 \001(\t\022+\n\021CharacterItemLi"
    "st\030\t \003(\0132\020.DC.Packet.SItem\0222\n\030CharacterS"
    "torageItemList\030\n \003(\0132\020.DC.Packet.SItem\0227"
    "\n\025CharacterStorageInfos\030\013 \003(\0132\030.DC.Packe"
    "t.SSTORAGE_INFO\"\221\002\n\026SCHARACTER_FRIEND_IN"
    "FO\022\021\n\taccountId\030\001 \001(\t\022\027\n\017accountNickname"
    "\030\002 \001(\t\022.\n\010nickName\030\003 \001(\0132\034.DC.Packet.SAC"
    "COUNT_NICKNAME\022\026\n\016characterClass\030\004 \001(\t\022\023"
    "\n\013characterId\030\005 \001(\t\022\016\n\006gender\030\006 \001(\r\022\r\n\005l"
    "evel\030\007 \001(\r\022\026\n\016locationStatus\030\010 \001(\r\022\031\n\021Pa"
    "rtyMemeberCount\030\t \001(\r\022\034\n\024PartyMaxMemeber"
    "Count\030\n \001(\r\"\350\002\n\025SCHARACTER_PARTY_INFO\022\021\n"
    "\taccountId\030\001 \001(\t\022\027\n\017accountNickname\030\002 \001("
    "\t\022.\n\010nickName\030\003 \001(\0132\034.DC.Packet.SACCOUNT"
    "_NICKNAME\022\026\n\016characterClass\030\004 \001(\t\022\023\n\013cha"
    "racterId\030\005 \001(\t\022\016\n\006gender\030\006 \001(\r\022\r\n\005level\030"
    "\007 \001(\r\022\025\n\risPartyLeader\030\010 \001(\r\022\017\n\007isReady\030"
    "\t \001(\r\022\020\n\010isInGame\030\n \001(\r\022\'\n\requipItemList"
    "\030\013 \003(\0132\020.DC.Packet.SItem\022\020\n\010partyIdx\030\014 \001"
    "(\r\022\037\n\005perks\030\r \003(\0132\020.DC.Packet.SPerk\022\021\n\tg"
    "earScore\030\016 \001(\r\"\332\001\n\025SCHARACTER_TRADE_INFO"
    "\022\021\n\taccountId\030\001 \001(\t\022\027\n\017accountNickname\030\002"
    " \001(\t\022.\n\010nickName\030\003 \001(\0132\034.DC.Packet.SACCO"
    "UNT_NICKNAME\022\026\n\016characterClass\030\004 \001(\t\022\023\n\013"
    "characterId\030\005 \001(\t\022\016\n\006gender\030\006 \001(\r\022\r\n\005lev"
    "el\030\007 \001(\r\022\031\n\021characterLocation\030\010 \001(\r\"\177\n\021S"
    "ACCOUNT_NICKNAME\022\030\n\020originalNickName\030\001 \001"
    "(\t\022\035\n\025streamingModeNickName\030\002 \001(\t\022\023\n\013kar"
    "maRating\030\003 \001(\005\022\016\n\006rankId\030\004 \001(\t\022\014\n\004fame\030\005"
    " \001(\r\"\253\001\n\020SBLOCK_CHARACTER\022\021\n\taccountId\030\001"
    " \001(\t\022\027\n\017accountNickname\030\002 \001(\t\022\023\n\013charact"
    "erId\030\003 \001(\t\022.\n\010nickName\030\004 \001(\0132\034.DC.Packet"
    ".SACCOUNT_NICKNAME\022\026\n\016characterClass\030\005 \001"
    "(\t\022\016\n\006gender\030\006 \001(\r\"\310\001\n\036SCHARACTER_GATHER"
    "ING_HALL_INFO\022\021\n\taccountId\030\001 \001(\t\022\027\n\017acco"
    "untNickname\030\002 \001(\t\022.\n\010nickName\030\003 \001(\0132\034.DC"
    ".Packet.SACCOUNT_NICKNAME\022\026\n\016characterCl"
    "ass\030\004 \001(\t\022\023\n\013characterId\030\005 \001(\t\022\016\n\006gender"
    "\030\006 \001(\r\022\r\n\005level\030\007 \001(\r\"0\n\tSGameStat\022\020\n\010st"
    "atType\030\001 \001(\005\022\021\n\tstatValue\030\002 \001(\005\"Z\n\rSRank"
    "UserInfo\022\016\n\006rankId\030\001 \001(\t\022\024\n\014currentPoint"
    "\030\002 \001(\r\022\021\n\tneedPoint\030\003 \001(\r\022\020\n\010gameType\030\004 "
    "\001(\r*\200\001\n\017Friend_Location\022\030\n\024Friend_Locati"
    "on_NONE\020\000\022\031\n\025Friend_Location_LOBBY\020\001\022\033\n\027"
    "Friend_Location_DUNGEON\020\002\022\033\n\027Friend_Loca"
    "tion_OFFLINE\020\003B$\n\025com.packets.characterB"
    "\tcharacterP\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table__5fCharacter_2eproto_deps[1] =
    {
        &::descriptor_table__5fItem_2eproto,
};
static ::absl::once_flag descriptor_table__5fCharacter_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table__5fCharacter_2eproto = {
    false,
    false,
    2180,
    descriptor_table_protodef__5fCharacter_2eproto,
    "_Character.proto",
    &descriptor_table__5fCharacter_2eproto_once,
    descriptor_table__5fCharacter_2eproto_deps,
    1,
    10,
    schemas,
    file_default_instances,
    TableStruct__5fCharacter_2eproto::offsets,
    file_level_enum_descriptors__5fCharacter_2eproto,
    file_level_service_descriptors__5fCharacter_2eproto,
};
namespace DC {
namespace Packet {
const ::google::protobuf::EnumDescriptor* Friend_Location_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table__5fCharacter_2eproto);
  return file_level_enum_descriptors__5fCharacter_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Friend_Location_internal_data_[] = {
    262144u, 0u, };
bool Friend_Location_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class SSTORAGE_INFO::_Internal {
 public:
};

void SSTORAGE_INFO::clear_characterstorageitemlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterstorageitemlist_.Clear();
}
SSTORAGE_INFO::SSTORAGE_INFO(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SSTORAGE_INFO)
}
inline PROTOBUF_NDEBUG_INLINE SSTORAGE_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SSTORAGE_INFO& from_msg)
      : characterstorageitemlist_{visibility, arena, from.characterstorageitemlist_},
        _cached_size_{0} {}

SSTORAGE_INFO::SSTORAGE_INFO(
    ::google::protobuf::Arena* arena,
    const SSTORAGE_INFO& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SSTORAGE_INFO* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.inventoryid_ = from._impl_.inventoryid_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SSTORAGE_INFO)
}
inline PROTOBUF_NDEBUG_INLINE SSTORAGE_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : characterstorageitemlist_{visibility, arena},
        _cached_size_{0} {}

inline void SSTORAGE_INFO::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.inventoryid_ = {};
}
SSTORAGE_INFO::~SSTORAGE_INFO() {
  // @@protoc_insertion_point(destructor:DC.Packet.SSTORAGE_INFO)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SSTORAGE_INFO::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SSTORAGE_INFO::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SSTORAGE_INFO_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SSTORAGE_INFO::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SSTORAGE_INFO>(),
            ::google::protobuf::Message::GetNewImpl<SSTORAGE_INFO>(),
            ::google::protobuf::Message::GetClearImpl<SSTORAGE_INFO>(), &SSTORAGE_INFO::ByteSizeLong,
                &SSTORAGE_INFO::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SSTORAGE_INFO, _impl_._cached_size_),
            false,
        },
        &SSTORAGE_INFO::kDescriptorMethods,
        &descriptor_table__5fCharacter_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SSTORAGE_INFO::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SSTORAGE_INFO::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SSTORAGE_INFO>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DC.Packet.SItem CharacterStorageItemList = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SSTORAGE_INFO, _impl_.characterstorageitemlist_)}},
    // uint32 inventoryId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SSTORAGE_INFO, _impl_.inventoryid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SSTORAGE_INFO, _impl_.inventoryid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 inventoryId = 1;
    {PROTOBUF_FIELD_OFFSET(SSTORAGE_INFO, _impl_.inventoryid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .DC.Packet.SItem CharacterStorageItemList = 2;
    {PROTOBUF_FIELD_OFFSET(SSTORAGE_INFO, _impl_.characterstorageitemlist_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SSTORAGE_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SSTORAGE_INFO)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.characterstorageitemlist_.Clear();
  _impl_.inventoryid_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SSTORAGE_INFO::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SSTORAGE_INFO& this_ = static_cast<const SSTORAGE_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SSTORAGE_INFO::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SSTORAGE_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SSTORAGE_INFO)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 inventoryId = 1;
          if (this_._internal_inventoryid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_inventoryid(), target);
          }

          // repeated .DC.Packet.SItem CharacterStorageItemList = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_characterstorageitemlist_size());
               i < n; i++) {
            const auto& repfield = this_._internal_characterstorageitemlist().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SSTORAGE_INFO)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SSTORAGE_INFO::ByteSizeLong(const MessageLite& base) {
          const SSTORAGE_INFO& this_ = static_cast<const SSTORAGE_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SSTORAGE_INFO::ByteSizeLong() const {
          const SSTORAGE_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SSTORAGE_INFO)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SItem CharacterStorageItemList = 2;
            {
              total_size += 1UL * this_._internal_characterstorageitemlist_size();
              for (const auto& msg : this_._internal_characterstorageitemlist()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 inventoryId = 1;
            if (this_._internal_inventoryid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_inventoryid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SSTORAGE_INFO::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SSTORAGE_INFO*>(&to_msg);
  auto& from = static_cast<const SSTORAGE_INFO&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SSTORAGE_INFO)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_characterstorageitemlist()->MergeFrom(
      from._internal_characterstorageitemlist());
  if (from._internal_inventoryid() != 0) {
    _this->_impl_.inventoryid_ = from._impl_.inventoryid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SSTORAGE_INFO::CopyFrom(const SSTORAGE_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SSTORAGE_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SSTORAGE_INFO::InternalSwap(SSTORAGE_INFO* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.characterstorageitemlist_.InternalSwap(&other->_impl_.characterstorageitemlist_);
        swap(_impl_.inventoryid_, other->_impl_.inventoryid_);
}

::google::protobuf::Metadata SSTORAGE_INFO::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SCHARACTER_INFO::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SCHARACTER_INFO>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_._has_bits_);
};

void SCHARACTER_INFO::clear_characteritemlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characteritemlist_.Clear();
}
void SCHARACTER_INFO::clear_characterstorageitemlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterstorageitemlist_.Clear();
}
SCHARACTER_INFO::SCHARACTER_INFO(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SCHARACTER_INFO)
}
inline PROTOBUF_NDEBUG_INLINE SCHARACTER_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SCHARACTER_INFO& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        characteritemlist_{visibility, arena, from.characteritemlist_},
        characterstorageitemlist_{visibility, arena, from.characterstorageitemlist_},
        characterstorageinfos_{visibility, arena, from.characterstorageinfos_},
        accountid_(arena, from.accountid_),
        accountnickname_(arena, from.accountnickname_),
        characterclass_(arena, from.characterclass_),
        characterid_(arena, from.characterid_),
        servicegrpc_(arena, from.servicegrpc_) {}

SCHARACTER_INFO::SCHARACTER_INFO(
    ::google::protobuf::Arena* arena,
    const SCHARACTER_INFO& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SCHARACTER_INFO* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.nickname_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(
                              arena, *from._impl_.nickname_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gender_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gender_),
           offsetof(Impl_, level_) -
               offsetof(Impl_, gender_) +
               sizeof(Impl_::level_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SCHARACTER_INFO)
}
inline PROTOBUF_NDEBUG_INLINE SCHARACTER_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        characteritemlist_{visibility, arena},
        characterstorageitemlist_{visibility, arena},
        characterstorageinfos_{visibility, arena},
        accountid_(arena),
        accountnickname_(arena),
        characterclass_(arena),
        characterid_(arena),
        servicegrpc_(arena) {}

inline void SCHARACTER_INFO::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nickname_),
           0,
           offsetof(Impl_, level_) -
               offsetof(Impl_, nickname_) +
               sizeof(Impl_::level_));
}
SCHARACTER_INFO::~SCHARACTER_INFO() {
  // @@protoc_insertion_point(destructor:DC.Packet.SCHARACTER_INFO)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SCHARACTER_INFO::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.accountnickname_.Destroy();
  _impl_.characterclass_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.servicegrpc_.Destroy();
  delete _impl_.nickname_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SCHARACTER_INFO::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SCHARACTER_INFO_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SCHARACTER_INFO::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SCHARACTER_INFO>(),
            ::google::protobuf::Message::GetNewImpl<SCHARACTER_INFO>(),
            ::google::protobuf::Message::GetClearImpl<SCHARACTER_INFO>(), &SCHARACTER_INFO::ByteSizeLong,
                &SCHARACTER_INFO::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_._cached_size_),
            false,
        },
        &SCHARACTER_INFO::kDescriptorMethods,
        &descriptor_table__5fCharacter_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SCHARACTER_INFO::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 4, 102, 2> SCHARACTER_INFO::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SCHARACTER_INFO>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.accountid_)}},
    // string accountNickname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.accountnickname_)}},
    // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.nickname_)}},
    // string characterClass = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.characterclass_)}},
    // string characterId = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.characterid_)}},
    // uint32 gender = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_INFO, _impl_.gender_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.gender_)}},
    // uint32 level = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_INFO, _impl_.level_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.level_)}},
    // string serviceGrpc = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.servicegrpc_)}},
    // repeated .DC.Packet.SItem CharacterItemList = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 1, PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.characteritemlist_)}},
    // repeated .DC.Packet.SItem CharacterStorageItemList = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 2, PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.characterstorageitemlist_)}},
    // repeated .DC.Packet.SSTORAGE_INFO CharacterStorageInfos = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 3, PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.characterstorageinfos_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.accountid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string accountNickname = 2;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.accountnickname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.nickname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string characterClass = 4;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.characterclass_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 5;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.characterid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 gender = 6;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.gender_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 level = 7;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string serviceGrpc = 8;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.servicegrpc_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .DC.Packet.SItem CharacterItemList = 9;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.characteritemlist_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SItem CharacterStorageItemList = 10;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.characterstorageitemlist_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DC.Packet.SSTORAGE_INFO CharacterStorageInfos = 11;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.characterstorageinfos_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SACCOUNT_NICKNAME>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SSTORAGE_INFO>()},
  }}, {{
    "\31\11\17\0\16\13\0\0\13\0\0\0\0\0\0\0"
    "DC.Packet.SCHARACTER_INFO"
    "accountId"
    "accountNickname"
    "characterClass"
    "characterId"
    "serviceGrpc"
  }},
};

PROTOBUF_NOINLINE void SCHARACTER_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SCHARACTER_INFO)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.characteritemlist_.Clear();
  _impl_.characterstorageitemlist_.Clear();
  _impl_.characterstorageinfos_.Clear();
  _impl_.accountid_.ClearToEmpty();
  _impl_.accountnickname_.ClearToEmpty();
  _impl_.characterclass_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.servicegrpc_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.nickname_ != nullptr);
    _impl_.nickname_->Clear();
  }
  ::memset(&_impl_.gender_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.level_) -
      reinterpret_cast<char*>(&_impl_.gender_)) + sizeof(_impl_.level_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SCHARACTER_INFO::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SCHARACTER_INFO& this_ = static_cast<const SCHARACTER_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SCHARACTER_INFO::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SCHARACTER_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SCHARACTER_INFO)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_INFO.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string accountNickname = 2;
          if (!this_._internal_accountnickname().empty()) {
            const std::string& _s = this_._internal_accountnickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_INFO.accountNickname");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.nickname_, this_._impl_.nickname_->GetCachedSize(), target,
                stream);
          }

          // string characterClass = 4;
          if (!this_._internal_characterclass().empty()) {
            const std::string& _s = this_._internal_characterclass();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_INFO.characterClass");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string characterId = 5;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_INFO.characterId");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // uint32 gender = 6;
          if (this_._internal_gender() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_gender(), target);
          }

          // uint32 level = 7;
          if (this_._internal_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_level(), target);
          }

          // string serviceGrpc = 8;
          if (!this_._internal_servicegrpc().empty()) {
            const std::string& _s = this_._internal_servicegrpc();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_INFO.serviceGrpc");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // repeated .DC.Packet.SItem CharacterItemList = 9;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_characteritemlist_size());
               i < n; i++) {
            const auto& repfield = this_._internal_characteritemlist().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    9, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SItem CharacterStorageItemList = 10;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_characterstorageitemlist_size());
               i < n; i++) {
            const auto& repfield = this_._internal_characterstorageitemlist().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    10, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .DC.Packet.SSTORAGE_INFO CharacterStorageInfos = 11;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_characterstorageinfos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_characterstorageinfos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    11, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SCHARACTER_INFO)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SCHARACTER_INFO::ByteSizeLong(const MessageLite& base) {
          const SCHARACTER_INFO& this_ = static_cast<const SCHARACTER_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SCHARACTER_INFO::ByteSizeLong() const {
          const SCHARACTER_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SCHARACTER_INFO)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SItem CharacterItemList = 9;
            {
              total_size += 1UL * this_._internal_characteritemlist_size();
              for (const auto& msg : this_._internal_characteritemlist()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SItem CharacterStorageItemList = 10;
            {
              total_size += 1UL * this_._internal_characterstorageitemlist_size();
              for (const auto& msg : this_._internal_characterstorageitemlist()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SSTORAGE_INFO CharacterStorageInfos = 11;
            {
              total_size += 1UL * this_._internal_characterstorageinfos_size();
              for (const auto& msg : this_._internal_characterstorageinfos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string accountNickname = 2;
            if (!this_._internal_accountnickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountnickname());
            }
            // string characterClass = 4;
            if (!this_._internal_characterclass().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterclass());
            }
            // string characterId = 5;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // string serviceGrpc = 8;
            if (!this_._internal_servicegrpc().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_servicegrpc());
            }
          }
           {
            // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.nickname_);
            }
          }
           {
            // uint32 gender = 6;
            if (this_._internal_gender() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gender());
            }
            // uint32 level = 7;
            if (this_._internal_level() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_level());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SCHARACTER_INFO::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SCHARACTER_INFO*>(&to_msg);
  auto& from = static_cast<const SCHARACTER_INFO&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SCHARACTER_INFO)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_characteritemlist()->MergeFrom(
      from._internal_characteritemlist());
  _this->_internal_mutable_characterstorageitemlist()->MergeFrom(
      from._internal_characterstorageitemlist());
  _this->_internal_mutable_characterstorageinfos()->MergeFrom(
      from._internal_characterstorageinfos());
  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_accountnickname().empty()) {
    _this->_internal_set_accountnickname(from._internal_accountnickname());
  }
  if (!from._internal_characterclass().empty()) {
    _this->_internal_set_characterclass(from._internal_characterclass());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (!from._internal_servicegrpc().empty()) {
    _this->_internal_set_servicegrpc(from._internal_servicegrpc());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.nickname_ != nullptr);
    if (_this->_impl_.nickname_ == nullptr) {
      _this->_impl_.nickname_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(arena, *from._impl_.nickname_);
    } else {
      _this->_impl_.nickname_->MergeFrom(*from._impl_.nickname_);
    }
  }
  if (from._internal_gender() != 0) {
    _this->_impl_.gender_ = from._impl_.gender_;
  }
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SCHARACTER_INFO::CopyFrom(const SCHARACTER_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SCHARACTER_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SCHARACTER_INFO::InternalSwap(SCHARACTER_INFO* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.characteritemlist_.InternalSwap(&other->_impl_.characteritemlist_);
  _impl_.characterstorageitemlist_.InternalSwap(&other->_impl_.characterstorageitemlist_);
  _impl_.characterstorageinfos_.InternalSwap(&other->_impl_.characterstorageinfos_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountnickname_, &other->_impl_.accountnickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterclass_, &other->_impl_.characterclass_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.servicegrpc_, &other->_impl_.servicegrpc_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.level_)
      + sizeof(SCHARACTER_INFO::_impl_.level_)
      - PROTOBUF_FIELD_OFFSET(SCHARACTER_INFO, _impl_.nickname_)>(
          reinterpret_cast<char*>(&_impl_.nickname_),
          reinterpret_cast<char*>(&other->_impl_.nickname_));
}

::google::protobuf::Metadata SCHARACTER_INFO::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SCHARACTER_FRIEND_INFO::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SCHARACTER_FRIEND_INFO>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_._has_bits_);
};

SCHARACTER_FRIEND_INFO::SCHARACTER_FRIEND_INFO(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SCHARACTER_FRIEND_INFO)
}
inline PROTOBUF_NDEBUG_INLINE SCHARACTER_FRIEND_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SCHARACTER_FRIEND_INFO& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        accountid_(arena, from.accountid_),
        accountnickname_(arena, from.accountnickname_),
        characterclass_(arena, from.characterclass_),
        characterid_(arena, from.characterid_) {}

SCHARACTER_FRIEND_INFO::SCHARACTER_FRIEND_INFO(
    ::google::protobuf::Arena* arena,
    const SCHARACTER_FRIEND_INFO& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SCHARACTER_FRIEND_INFO* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.nickname_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(
                              arena, *from._impl_.nickname_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gender_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gender_),
           offsetof(Impl_, partymaxmemebercount_) -
               offsetof(Impl_, gender_) +
               sizeof(Impl_::partymaxmemebercount_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SCHARACTER_FRIEND_INFO)
}
inline PROTOBUF_NDEBUG_INLINE SCHARACTER_FRIEND_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        accountid_(arena),
        accountnickname_(arena),
        characterclass_(arena),
        characterid_(arena) {}

inline void SCHARACTER_FRIEND_INFO::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nickname_),
           0,
           offsetof(Impl_, partymaxmemebercount_) -
               offsetof(Impl_, nickname_) +
               sizeof(Impl_::partymaxmemebercount_));
}
SCHARACTER_FRIEND_INFO::~SCHARACTER_FRIEND_INFO() {
  // @@protoc_insertion_point(destructor:DC.Packet.SCHARACTER_FRIEND_INFO)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SCHARACTER_FRIEND_INFO::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.accountnickname_.Destroy();
  _impl_.characterclass_.Destroy();
  _impl_.characterid_.Destroy();
  delete _impl_.nickname_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SCHARACTER_FRIEND_INFO::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SCHARACTER_FRIEND_INFO_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SCHARACTER_FRIEND_INFO::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SCHARACTER_FRIEND_INFO>(),
            ::google::protobuf::Message::GetNewImpl<SCHARACTER_FRIEND_INFO>(),
            ::google::protobuf::Message::GetClearImpl<SCHARACTER_FRIEND_INFO>(), &SCHARACTER_FRIEND_INFO::ByteSizeLong,
                &SCHARACTER_FRIEND_INFO::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_._cached_size_),
            false,
        },
        &SCHARACTER_FRIEND_INFO::kDescriptorMethods,
        &descriptor_table__5fCharacter_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SCHARACTER_FRIEND_INFO::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 98, 2> SCHARACTER_FRIEND_INFO::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SCHARACTER_FRIEND_INFO>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.accountid_)}},
    // string accountNickname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.accountnickname_)}},
    // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.nickname_)}},
    // string characterClass = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.characterclass_)}},
    // string characterId = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.characterid_)}},
    // uint32 gender = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_FRIEND_INFO, _impl_.gender_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.gender_)}},
    // uint32 level = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_FRIEND_INFO, _impl_.level_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.level_)}},
    // uint32 locationStatus = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_FRIEND_INFO, _impl_.locationstatus_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.locationstatus_)}},
    // uint32 PartyMemeberCount = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_FRIEND_INFO, _impl_.partymemebercount_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.partymemebercount_)}},
    // uint32 PartyMaxMemeberCount = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_FRIEND_INFO, _impl_.partymaxmemebercount_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.partymaxmemebercount_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.accountid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string accountNickname = 2;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.accountnickname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.nickname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string characterClass = 4;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.characterclass_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 5;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.characterid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 gender = 6;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.gender_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 level = 7;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 locationStatus = 8;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.locationstatus_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 PartyMemeberCount = 9;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.partymemebercount_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 PartyMaxMemeberCount = 10;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.partymaxmemebercount_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SACCOUNT_NICKNAME>()},
  }}, {{
    "\40\11\17\0\16\13\0\0\0\0\0\0\0\0\0\0"
    "DC.Packet.SCHARACTER_FRIEND_INFO"
    "accountId"
    "accountNickname"
    "characterClass"
    "characterId"
  }},
};

PROTOBUF_NOINLINE void SCHARACTER_FRIEND_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SCHARACTER_FRIEND_INFO)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.accountnickname_.ClearToEmpty();
  _impl_.characterclass_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.nickname_ != nullptr);
    _impl_.nickname_->Clear();
  }
  ::memset(&_impl_.gender_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.partymaxmemebercount_) -
      reinterpret_cast<char*>(&_impl_.gender_)) + sizeof(_impl_.partymaxmemebercount_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SCHARACTER_FRIEND_INFO::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SCHARACTER_FRIEND_INFO& this_ = static_cast<const SCHARACTER_FRIEND_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SCHARACTER_FRIEND_INFO::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SCHARACTER_FRIEND_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SCHARACTER_FRIEND_INFO)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_FRIEND_INFO.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string accountNickname = 2;
          if (!this_._internal_accountnickname().empty()) {
            const std::string& _s = this_._internal_accountnickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_FRIEND_INFO.accountNickname");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.nickname_, this_._impl_.nickname_->GetCachedSize(), target,
                stream);
          }

          // string characterClass = 4;
          if (!this_._internal_characterclass().empty()) {
            const std::string& _s = this_._internal_characterclass();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_FRIEND_INFO.characterClass");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string characterId = 5;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_FRIEND_INFO.characterId");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // uint32 gender = 6;
          if (this_._internal_gender() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_gender(), target);
          }

          // uint32 level = 7;
          if (this_._internal_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_level(), target);
          }

          // uint32 locationStatus = 8;
          if (this_._internal_locationstatus() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_locationstatus(), target);
          }

          // uint32 PartyMemeberCount = 9;
          if (this_._internal_partymemebercount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                9, this_._internal_partymemebercount(), target);
          }

          // uint32 PartyMaxMemeberCount = 10;
          if (this_._internal_partymaxmemebercount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                10, this_._internal_partymaxmemebercount(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SCHARACTER_FRIEND_INFO)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SCHARACTER_FRIEND_INFO::ByteSizeLong(const MessageLite& base) {
          const SCHARACTER_FRIEND_INFO& this_ = static_cast<const SCHARACTER_FRIEND_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SCHARACTER_FRIEND_INFO::ByteSizeLong() const {
          const SCHARACTER_FRIEND_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SCHARACTER_FRIEND_INFO)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string accountNickname = 2;
            if (!this_._internal_accountnickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountnickname());
            }
            // string characterClass = 4;
            if (!this_._internal_characterclass().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterclass());
            }
            // string characterId = 5;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
          }
           {
            // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.nickname_);
            }
          }
           {
            // uint32 gender = 6;
            if (this_._internal_gender() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gender());
            }
            // uint32 level = 7;
            if (this_._internal_level() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_level());
            }
            // uint32 locationStatus = 8;
            if (this_._internal_locationstatus() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_locationstatus());
            }
            // uint32 PartyMemeberCount = 9;
            if (this_._internal_partymemebercount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_partymemebercount());
            }
            // uint32 PartyMaxMemeberCount = 10;
            if (this_._internal_partymaxmemebercount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_partymaxmemebercount());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SCHARACTER_FRIEND_INFO::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SCHARACTER_FRIEND_INFO*>(&to_msg);
  auto& from = static_cast<const SCHARACTER_FRIEND_INFO&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SCHARACTER_FRIEND_INFO)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_accountnickname().empty()) {
    _this->_internal_set_accountnickname(from._internal_accountnickname());
  }
  if (!from._internal_characterclass().empty()) {
    _this->_internal_set_characterclass(from._internal_characterclass());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.nickname_ != nullptr);
    if (_this->_impl_.nickname_ == nullptr) {
      _this->_impl_.nickname_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(arena, *from._impl_.nickname_);
    } else {
      _this->_impl_.nickname_->MergeFrom(*from._impl_.nickname_);
    }
  }
  if (from._internal_gender() != 0) {
    _this->_impl_.gender_ = from._impl_.gender_;
  }
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  if (from._internal_locationstatus() != 0) {
    _this->_impl_.locationstatus_ = from._impl_.locationstatus_;
  }
  if (from._internal_partymemebercount() != 0) {
    _this->_impl_.partymemebercount_ = from._impl_.partymemebercount_;
  }
  if (from._internal_partymaxmemebercount() != 0) {
    _this->_impl_.partymaxmemebercount_ = from._impl_.partymaxmemebercount_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SCHARACTER_FRIEND_INFO::CopyFrom(const SCHARACTER_FRIEND_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SCHARACTER_FRIEND_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SCHARACTER_FRIEND_INFO::InternalSwap(SCHARACTER_FRIEND_INFO* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountnickname_, &other->_impl_.accountnickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterclass_, &other->_impl_.characterclass_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.partymaxmemebercount_)
      + sizeof(SCHARACTER_FRIEND_INFO::_impl_.partymaxmemebercount_)
      - PROTOBUF_FIELD_OFFSET(SCHARACTER_FRIEND_INFO, _impl_.nickname_)>(
          reinterpret_cast<char*>(&_impl_.nickname_),
          reinterpret_cast<char*>(&other->_impl_.nickname_));
}

::google::protobuf::Metadata SCHARACTER_FRIEND_INFO::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SCHARACTER_PARTY_INFO::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SCHARACTER_PARTY_INFO>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_._has_bits_);
};

void SCHARACTER_PARTY_INFO::clear_equipitemlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equipitemlist_.Clear();
}
void SCHARACTER_PARTY_INFO::clear_perks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.perks_.Clear();
}
SCHARACTER_PARTY_INFO::SCHARACTER_PARTY_INFO(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SCHARACTER_PARTY_INFO)
}
inline PROTOBUF_NDEBUG_INLINE SCHARACTER_PARTY_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SCHARACTER_PARTY_INFO& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        equipitemlist_{visibility, arena, from.equipitemlist_},
        perks_{visibility, arena, from.perks_},
        accountid_(arena, from.accountid_),
        accountnickname_(arena, from.accountnickname_),
        characterclass_(arena, from.characterclass_),
        characterid_(arena, from.characterid_) {}

SCHARACTER_PARTY_INFO::SCHARACTER_PARTY_INFO(
    ::google::protobuf::Arena* arena,
    const SCHARACTER_PARTY_INFO& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SCHARACTER_PARTY_INFO* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.nickname_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(
                              arena, *from._impl_.nickname_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gender_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gender_),
           offsetof(Impl_, gearscore_) -
               offsetof(Impl_, gender_) +
               sizeof(Impl_::gearscore_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SCHARACTER_PARTY_INFO)
}
inline PROTOBUF_NDEBUG_INLINE SCHARACTER_PARTY_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        equipitemlist_{visibility, arena},
        perks_{visibility, arena},
        accountid_(arena),
        accountnickname_(arena),
        characterclass_(arena),
        characterid_(arena) {}

inline void SCHARACTER_PARTY_INFO::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nickname_),
           0,
           offsetof(Impl_, gearscore_) -
               offsetof(Impl_, nickname_) +
               sizeof(Impl_::gearscore_));
}
SCHARACTER_PARTY_INFO::~SCHARACTER_PARTY_INFO() {
  // @@protoc_insertion_point(destructor:DC.Packet.SCHARACTER_PARTY_INFO)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SCHARACTER_PARTY_INFO::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.accountnickname_.Destroy();
  _impl_.characterclass_.Destroy();
  _impl_.characterid_.Destroy();
  delete _impl_.nickname_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SCHARACTER_PARTY_INFO::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SCHARACTER_PARTY_INFO_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SCHARACTER_PARTY_INFO::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SCHARACTER_PARTY_INFO>(),
            ::google::protobuf::Message::GetNewImpl<SCHARACTER_PARTY_INFO>(),
            ::google::protobuf::Message::GetClearImpl<SCHARACTER_PARTY_INFO>(), &SCHARACTER_PARTY_INFO::ByteSizeLong,
                &SCHARACTER_PARTY_INFO::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_._cached_size_),
            false,
        },
        &SCHARACTER_PARTY_INFO::kDescriptorMethods,
        &descriptor_table__5fCharacter_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SCHARACTER_PARTY_INFO::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 3, 97, 2> SCHARACTER_PARTY_INFO::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SCHARACTER_PARTY_INFO>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.accountid_)}},
    // string accountNickname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.accountnickname_)}},
    // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.nickname_)}},
    // string characterClass = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.characterclass_)}},
    // string characterId = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.characterid_)}},
    // uint32 gender = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_PARTY_INFO, _impl_.gender_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.gender_)}},
    // uint32 level = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_PARTY_INFO, _impl_.level_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.level_)}},
    // uint32 isPartyLeader = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_PARTY_INFO, _impl_.ispartyleader_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.ispartyleader_)}},
    // uint32 isReady = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_PARTY_INFO, _impl_.isready_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.isready_)}},
    // uint32 isInGame = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_PARTY_INFO, _impl_.isingame_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.isingame_)}},
    // repeated .DC.Packet.SItem equipItemList = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 1, PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.equipitemlist_)}},
    // uint32 partyIdx = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_PARTY_INFO, _impl_.partyidx_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.partyidx_)}},
    // repeated .DC.Packet.SPerk perks = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 2, PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.perks_)}},
    // uint32 gearScore = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_PARTY_INFO, _impl_.gearscore_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.gearscore_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.accountid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string accountNickname = 2;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.accountnickname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.nickname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string characterClass = 4;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.characterclass_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 5;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.characterid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 gender = 6;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.gender_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 level = 7;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 isPartyLeader = 8;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.ispartyleader_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 isReady = 9;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.isready_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 isInGame = 10;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.isingame_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .DC.Packet.SItem equipItemList = 11;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.equipitemlist_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 partyIdx = 12;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.partyidx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .DC.Packet.SPerk perks = 13;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.perks_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 gearScore = 14;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.gearscore_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SACCOUNT_NICKNAME>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SItem>()},
    {::_pbi::TcParser::GetTable<::DC::Packet::SPerk>()},
  }}, {{
    "\37\11\17\0\16\13\0\0\0\0\0\0\0\0\0\0"
    "DC.Packet.SCHARACTER_PARTY_INFO"
    "accountId"
    "accountNickname"
    "characterClass"
    "characterId"
  }},
};

PROTOBUF_NOINLINE void SCHARACTER_PARTY_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SCHARACTER_PARTY_INFO)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.equipitemlist_.Clear();
  _impl_.perks_.Clear();
  _impl_.accountid_.ClearToEmpty();
  _impl_.accountnickname_.ClearToEmpty();
  _impl_.characterclass_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.nickname_ != nullptr);
    _impl_.nickname_->Clear();
  }
  ::memset(&_impl_.gender_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gearscore_) -
      reinterpret_cast<char*>(&_impl_.gender_)) + sizeof(_impl_.gearscore_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SCHARACTER_PARTY_INFO::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SCHARACTER_PARTY_INFO& this_ = static_cast<const SCHARACTER_PARTY_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SCHARACTER_PARTY_INFO::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SCHARACTER_PARTY_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SCHARACTER_PARTY_INFO)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_PARTY_INFO.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string accountNickname = 2;
          if (!this_._internal_accountnickname().empty()) {
            const std::string& _s = this_._internal_accountnickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_PARTY_INFO.accountNickname");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.nickname_, this_._impl_.nickname_->GetCachedSize(), target,
                stream);
          }

          // string characterClass = 4;
          if (!this_._internal_characterclass().empty()) {
            const std::string& _s = this_._internal_characterclass();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_PARTY_INFO.characterClass");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string characterId = 5;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_PARTY_INFO.characterId");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // uint32 gender = 6;
          if (this_._internal_gender() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_gender(), target);
          }

          // uint32 level = 7;
          if (this_._internal_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_level(), target);
          }

          // uint32 isPartyLeader = 8;
          if (this_._internal_ispartyleader() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_ispartyleader(), target);
          }

          // uint32 isReady = 9;
          if (this_._internal_isready() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                9, this_._internal_isready(), target);
          }

          // uint32 isInGame = 10;
          if (this_._internal_isingame() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                10, this_._internal_isingame(), target);
          }

          // repeated .DC.Packet.SItem equipItemList = 11;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_equipitemlist_size());
               i < n; i++) {
            const auto& repfield = this_._internal_equipitemlist().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    11, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint32 partyIdx = 12;
          if (this_._internal_partyidx() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                12, this_._internal_partyidx(), target);
          }

          // repeated .DC.Packet.SPerk perks = 13;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_perks_size());
               i < n; i++) {
            const auto& repfield = this_._internal_perks().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    13, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint32 gearScore = 14;
          if (this_._internal_gearscore() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                14, this_._internal_gearscore(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SCHARACTER_PARTY_INFO)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SCHARACTER_PARTY_INFO::ByteSizeLong(const MessageLite& base) {
          const SCHARACTER_PARTY_INFO& this_ = static_cast<const SCHARACTER_PARTY_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SCHARACTER_PARTY_INFO::ByteSizeLong() const {
          const SCHARACTER_PARTY_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SCHARACTER_PARTY_INFO)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .DC.Packet.SItem equipItemList = 11;
            {
              total_size += 1UL * this_._internal_equipitemlist_size();
              for (const auto& msg : this_._internal_equipitemlist()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .DC.Packet.SPerk perks = 13;
            {
              total_size += 1UL * this_._internal_perks_size();
              for (const auto& msg : this_._internal_perks()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string accountNickname = 2;
            if (!this_._internal_accountnickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountnickname());
            }
            // string characterClass = 4;
            if (!this_._internal_characterclass().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterclass());
            }
            // string characterId = 5;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
          }
           {
            // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.nickname_);
            }
          }
           {
            // uint32 gender = 6;
            if (this_._internal_gender() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gender());
            }
            // uint32 level = 7;
            if (this_._internal_level() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_level());
            }
            // uint32 isPartyLeader = 8;
            if (this_._internal_ispartyleader() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_ispartyleader());
            }
            // uint32 isReady = 9;
            if (this_._internal_isready() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_isready());
            }
            // uint32 isInGame = 10;
            if (this_._internal_isingame() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_isingame());
            }
            // uint32 partyIdx = 12;
            if (this_._internal_partyidx() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_partyidx());
            }
            // uint32 gearScore = 14;
            if (this_._internal_gearscore() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gearscore());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SCHARACTER_PARTY_INFO::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SCHARACTER_PARTY_INFO*>(&to_msg);
  auto& from = static_cast<const SCHARACTER_PARTY_INFO&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SCHARACTER_PARTY_INFO)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_equipitemlist()->MergeFrom(
      from._internal_equipitemlist());
  _this->_internal_mutable_perks()->MergeFrom(
      from._internal_perks());
  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_accountnickname().empty()) {
    _this->_internal_set_accountnickname(from._internal_accountnickname());
  }
  if (!from._internal_characterclass().empty()) {
    _this->_internal_set_characterclass(from._internal_characterclass());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.nickname_ != nullptr);
    if (_this->_impl_.nickname_ == nullptr) {
      _this->_impl_.nickname_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(arena, *from._impl_.nickname_);
    } else {
      _this->_impl_.nickname_->MergeFrom(*from._impl_.nickname_);
    }
  }
  if (from._internal_gender() != 0) {
    _this->_impl_.gender_ = from._impl_.gender_;
  }
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  if (from._internal_ispartyleader() != 0) {
    _this->_impl_.ispartyleader_ = from._impl_.ispartyleader_;
  }
  if (from._internal_isready() != 0) {
    _this->_impl_.isready_ = from._impl_.isready_;
  }
  if (from._internal_isingame() != 0) {
    _this->_impl_.isingame_ = from._impl_.isingame_;
  }
  if (from._internal_partyidx() != 0) {
    _this->_impl_.partyidx_ = from._impl_.partyidx_;
  }
  if (from._internal_gearscore() != 0) {
    _this->_impl_.gearscore_ = from._impl_.gearscore_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SCHARACTER_PARTY_INFO::CopyFrom(const SCHARACTER_PARTY_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SCHARACTER_PARTY_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SCHARACTER_PARTY_INFO::InternalSwap(SCHARACTER_PARTY_INFO* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.equipitemlist_.InternalSwap(&other->_impl_.equipitemlist_);
  _impl_.perks_.InternalSwap(&other->_impl_.perks_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountnickname_, &other->_impl_.accountnickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterclass_, &other->_impl_.characterclass_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.gearscore_)
      + sizeof(SCHARACTER_PARTY_INFO::_impl_.gearscore_)
      - PROTOBUF_FIELD_OFFSET(SCHARACTER_PARTY_INFO, _impl_.nickname_)>(
          reinterpret_cast<char*>(&_impl_.nickname_),
          reinterpret_cast<char*>(&other->_impl_.nickname_));
}

::google::protobuf::Metadata SCHARACTER_PARTY_INFO::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SCHARACTER_TRADE_INFO::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SCHARACTER_TRADE_INFO>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_._has_bits_);
};

SCHARACTER_TRADE_INFO::SCHARACTER_TRADE_INFO(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SCHARACTER_TRADE_INFO)
}
inline PROTOBUF_NDEBUG_INLINE SCHARACTER_TRADE_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SCHARACTER_TRADE_INFO& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        accountid_(arena, from.accountid_),
        accountnickname_(arena, from.accountnickname_),
        characterclass_(arena, from.characterclass_),
        characterid_(arena, from.characterid_) {}

SCHARACTER_TRADE_INFO::SCHARACTER_TRADE_INFO(
    ::google::protobuf::Arena* arena,
    const SCHARACTER_TRADE_INFO& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SCHARACTER_TRADE_INFO* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.nickname_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(
                              arena, *from._impl_.nickname_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gender_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gender_),
           offsetof(Impl_, characterlocation_) -
               offsetof(Impl_, gender_) +
               sizeof(Impl_::characterlocation_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SCHARACTER_TRADE_INFO)
}
inline PROTOBUF_NDEBUG_INLINE SCHARACTER_TRADE_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        accountid_(arena),
        accountnickname_(arena),
        characterclass_(arena),
        characterid_(arena) {}

inline void SCHARACTER_TRADE_INFO::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nickname_),
           0,
           offsetof(Impl_, characterlocation_) -
               offsetof(Impl_, nickname_) +
               sizeof(Impl_::characterlocation_));
}
SCHARACTER_TRADE_INFO::~SCHARACTER_TRADE_INFO() {
  // @@protoc_insertion_point(destructor:DC.Packet.SCHARACTER_TRADE_INFO)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SCHARACTER_TRADE_INFO::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.accountnickname_.Destroy();
  _impl_.characterclass_.Destroy();
  _impl_.characterid_.Destroy();
  delete _impl_.nickname_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SCHARACTER_TRADE_INFO::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SCHARACTER_TRADE_INFO_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SCHARACTER_TRADE_INFO::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SCHARACTER_TRADE_INFO>(),
            ::google::protobuf::Message::GetNewImpl<SCHARACTER_TRADE_INFO>(),
            ::google::protobuf::Message::GetClearImpl<SCHARACTER_TRADE_INFO>(), &SCHARACTER_TRADE_INFO::ByteSizeLong,
                &SCHARACTER_TRADE_INFO::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_._cached_size_),
            false,
        },
        &SCHARACTER_TRADE_INFO::kDescriptorMethods,
        &descriptor_table__5fCharacter_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SCHARACTER_TRADE_INFO::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 97, 2> SCHARACTER_TRADE_INFO::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SCHARACTER_TRADE_INFO>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 characterLocation = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_TRADE_INFO, _impl_.characterlocation_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.characterlocation_)}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.accountid_)}},
    // string accountNickname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.accountnickname_)}},
    // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.nickname_)}},
    // string characterClass = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.characterclass_)}},
    // string characterId = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.characterid_)}},
    // uint32 gender = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_TRADE_INFO, _impl_.gender_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.gender_)}},
    // uint32 level = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_TRADE_INFO, _impl_.level_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.level_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.accountid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string accountNickname = 2;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.accountnickname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.nickname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string characterClass = 4;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.characterclass_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 5;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.characterid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 gender = 6;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.gender_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 level = 7;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 characterLocation = 8;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.characterlocation_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SACCOUNT_NICKNAME>()},
  }}, {{
    "\37\11\17\0\16\13\0\0\0\0\0\0\0\0\0\0"
    "DC.Packet.SCHARACTER_TRADE_INFO"
    "accountId"
    "accountNickname"
    "characterClass"
    "characterId"
  }},
};

PROTOBUF_NOINLINE void SCHARACTER_TRADE_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SCHARACTER_TRADE_INFO)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.accountnickname_.ClearToEmpty();
  _impl_.characterclass_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.nickname_ != nullptr);
    _impl_.nickname_->Clear();
  }
  ::memset(&_impl_.gender_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.characterlocation_) -
      reinterpret_cast<char*>(&_impl_.gender_)) + sizeof(_impl_.characterlocation_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SCHARACTER_TRADE_INFO::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SCHARACTER_TRADE_INFO& this_ = static_cast<const SCHARACTER_TRADE_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SCHARACTER_TRADE_INFO::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SCHARACTER_TRADE_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SCHARACTER_TRADE_INFO)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_TRADE_INFO.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string accountNickname = 2;
          if (!this_._internal_accountnickname().empty()) {
            const std::string& _s = this_._internal_accountnickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_TRADE_INFO.accountNickname");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.nickname_, this_._impl_.nickname_->GetCachedSize(), target,
                stream);
          }

          // string characterClass = 4;
          if (!this_._internal_characterclass().empty()) {
            const std::string& _s = this_._internal_characterclass();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_TRADE_INFO.characterClass");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string characterId = 5;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_TRADE_INFO.characterId");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // uint32 gender = 6;
          if (this_._internal_gender() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_gender(), target);
          }

          // uint32 level = 7;
          if (this_._internal_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_level(), target);
          }

          // uint32 characterLocation = 8;
          if (this_._internal_characterlocation() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_characterlocation(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SCHARACTER_TRADE_INFO)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SCHARACTER_TRADE_INFO::ByteSizeLong(const MessageLite& base) {
          const SCHARACTER_TRADE_INFO& this_ = static_cast<const SCHARACTER_TRADE_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SCHARACTER_TRADE_INFO::ByteSizeLong() const {
          const SCHARACTER_TRADE_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SCHARACTER_TRADE_INFO)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string accountNickname = 2;
            if (!this_._internal_accountnickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountnickname());
            }
            // string characterClass = 4;
            if (!this_._internal_characterclass().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterclass());
            }
            // string characterId = 5;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
          }
           {
            // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.nickname_);
            }
          }
           {
            // uint32 gender = 6;
            if (this_._internal_gender() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gender());
            }
            // uint32 level = 7;
            if (this_._internal_level() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_level());
            }
            // uint32 characterLocation = 8;
            if (this_._internal_characterlocation() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_characterlocation());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SCHARACTER_TRADE_INFO::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SCHARACTER_TRADE_INFO*>(&to_msg);
  auto& from = static_cast<const SCHARACTER_TRADE_INFO&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SCHARACTER_TRADE_INFO)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_accountnickname().empty()) {
    _this->_internal_set_accountnickname(from._internal_accountnickname());
  }
  if (!from._internal_characterclass().empty()) {
    _this->_internal_set_characterclass(from._internal_characterclass());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.nickname_ != nullptr);
    if (_this->_impl_.nickname_ == nullptr) {
      _this->_impl_.nickname_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(arena, *from._impl_.nickname_);
    } else {
      _this->_impl_.nickname_->MergeFrom(*from._impl_.nickname_);
    }
  }
  if (from._internal_gender() != 0) {
    _this->_impl_.gender_ = from._impl_.gender_;
  }
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  if (from._internal_characterlocation() != 0) {
    _this->_impl_.characterlocation_ = from._impl_.characterlocation_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SCHARACTER_TRADE_INFO::CopyFrom(const SCHARACTER_TRADE_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SCHARACTER_TRADE_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SCHARACTER_TRADE_INFO::InternalSwap(SCHARACTER_TRADE_INFO* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountnickname_, &other->_impl_.accountnickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterclass_, &other->_impl_.characterclass_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.characterlocation_)
      + sizeof(SCHARACTER_TRADE_INFO::_impl_.characterlocation_)
      - PROTOBUF_FIELD_OFFSET(SCHARACTER_TRADE_INFO, _impl_.nickname_)>(
          reinterpret_cast<char*>(&_impl_.nickname_),
          reinterpret_cast<char*>(&other->_impl_.nickname_));
}

::google::protobuf::Metadata SCHARACTER_TRADE_INFO::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SACCOUNT_NICKNAME::_Internal {
 public:
};

SACCOUNT_NICKNAME::SACCOUNT_NICKNAME(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SACCOUNT_NICKNAME)
}
inline PROTOBUF_NDEBUG_INLINE SACCOUNT_NICKNAME::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SACCOUNT_NICKNAME& from_msg)
      : originalnickname_(arena, from.originalnickname_),
        streamingmodenickname_(arena, from.streamingmodenickname_),
        rankid_(arena, from.rankid_),
        _cached_size_{0} {}

SACCOUNT_NICKNAME::SACCOUNT_NICKNAME(
    ::google::protobuf::Arena* arena,
    const SACCOUNT_NICKNAME& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SACCOUNT_NICKNAME* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, karmarating_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, karmarating_),
           offsetof(Impl_, fame_) -
               offsetof(Impl_, karmarating_) +
               sizeof(Impl_::fame_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SACCOUNT_NICKNAME)
}
inline PROTOBUF_NDEBUG_INLINE SACCOUNT_NICKNAME::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : originalnickname_(arena),
        streamingmodenickname_(arena),
        rankid_(arena),
        _cached_size_{0} {}

inline void SACCOUNT_NICKNAME::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, karmarating_),
           0,
           offsetof(Impl_, fame_) -
               offsetof(Impl_, karmarating_) +
               sizeof(Impl_::fame_));
}
SACCOUNT_NICKNAME::~SACCOUNT_NICKNAME() {
  // @@protoc_insertion_point(destructor:DC.Packet.SACCOUNT_NICKNAME)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SACCOUNT_NICKNAME::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.originalnickname_.Destroy();
  _impl_.streamingmodenickname_.Destroy();
  _impl_.rankid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SACCOUNT_NICKNAME::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SACCOUNT_NICKNAME_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SACCOUNT_NICKNAME::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SACCOUNT_NICKNAME>(),
            ::google::protobuf::Message::GetNewImpl<SACCOUNT_NICKNAME>(),
            ::google::protobuf::Message::GetClearImpl<SACCOUNT_NICKNAME>(), &SACCOUNT_NICKNAME::ByteSizeLong,
                &SACCOUNT_NICKNAME::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SACCOUNT_NICKNAME, _impl_._cached_size_),
            false,
        },
        &SACCOUNT_NICKNAME::kDescriptorMethods,
        &descriptor_table__5fCharacter_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SACCOUNT_NICKNAME::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 79, 2> SACCOUNT_NICKNAME::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SACCOUNT_NICKNAME>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string originalNickName = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SACCOUNT_NICKNAME, _impl_.originalnickname_)}},
    // string streamingModeNickName = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SACCOUNT_NICKNAME, _impl_.streamingmodenickname_)}},
    // int32 karmaRating = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SACCOUNT_NICKNAME, _impl_.karmarating_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SACCOUNT_NICKNAME, _impl_.karmarating_)}},
    // string rankId = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SACCOUNT_NICKNAME, _impl_.rankid_)}},
    // uint32 fame = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SACCOUNT_NICKNAME, _impl_.fame_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SACCOUNT_NICKNAME, _impl_.fame_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string originalNickName = 1;
    {PROTOBUF_FIELD_OFFSET(SACCOUNT_NICKNAME, _impl_.originalnickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string streamingModeNickName = 2;
    {PROTOBUF_FIELD_OFFSET(SACCOUNT_NICKNAME, _impl_.streamingmodenickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 karmaRating = 3;
    {PROTOBUF_FIELD_OFFSET(SACCOUNT_NICKNAME, _impl_.karmarating_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string rankId = 4;
    {PROTOBUF_FIELD_OFFSET(SACCOUNT_NICKNAME, _impl_.rankid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 fame = 5;
    {PROTOBUF_FIELD_OFFSET(SACCOUNT_NICKNAME, _impl_.fame_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\33\20\25\0\6\0\0\0"
    "DC.Packet.SACCOUNT_NICKNAME"
    "originalNickName"
    "streamingModeNickName"
    "rankId"
  }},
};

PROTOBUF_NOINLINE void SACCOUNT_NICKNAME::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SACCOUNT_NICKNAME)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.originalnickname_.ClearToEmpty();
  _impl_.streamingmodenickname_.ClearToEmpty();
  _impl_.rankid_.ClearToEmpty();
  ::memset(&_impl_.karmarating_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.fame_) -
      reinterpret_cast<char*>(&_impl_.karmarating_)) + sizeof(_impl_.fame_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SACCOUNT_NICKNAME::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SACCOUNT_NICKNAME& this_ = static_cast<const SACCOUNT_NICKNAME&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SACCOUNT_NICKNAME::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SACCOUNT_NICKNAME& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SACCOUNT_NICKNAME)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string originalNickName = 1;
          if (!this_._internal_originalnickname().empty()) {
            const std::string& _s = this_._internal_originalnickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SACCOUNT_NICKNAME.originalNickName");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string streamingModeNickName = 2;
          if (!this_._internal_streamingmodenickname().empty()) {
            const std::string& _s = this_._internal_streamingmodenickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SACCOUNT_NICKNAME.streamingModeNickName");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 karmaRating = 3;
          if (this_._internal_karmarating() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_karmarating(), target);
          }

          // string rankId = 4;
          if (!this_._internal_rankid().empty()) {
            const std::string& _s = this_._internal_rankid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SACCOUNT_NICKNAME.rankId");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // uint32 fame = 5;
          if (this_._internal_fame() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_fame(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SACCOUNT_NICKNAME)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SACCOUNT_NICKNAME::ByteSizeLong(const MessageLite& base) {
          const SACCOUNT_NICKNAME& this_ = static_cast<const SACCOUNT_NICKNAME&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SACCOUNT_NICKNAME::ByteSizeLong() const {
          const SACCOUNT_NICKNAME& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SACCOUNT_NICKNAME)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string originalNickName = 1;
            if (!this_._internal_originalnickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_originalnickname());
            }
            // string streamingModeNickName = 2;
            if (!this_._internal_streamingmodenickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_streamingmodenickname());
            }
            // string rankId = 4;
            if (!this_._internal_rankid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_rankid());
            }
            // int32 karmaRating = 3;
            if (this_._internal_karmarating() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_karmarating());
            }
            // uint32 fame = 5;
            if (this_._internal_fame() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_fame());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SACCOUNT_NICKNAME::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SACCOUNT_NICKNAME*>(&to_msg);
  auto& from = static_cast<const SACCOUNT_NICKNAME&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SACCOUNT_NICKNAME)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_originalnickname().empty()) {
    _this->_internal_set_originalnickname(from._internal_originalnickname());
  }
  if (!from._internal_streamingmodenickname().empty()) {
    _this->_internal_set_streamingmodenickname(from._internal_streamingmodenickname());
  }
  if (!from._internal_rankid().empty()) {
    _this->_internal_set_rankid(from._internal_rankid());
  }
  if (from._internal_karmarating() != 0) {
    _this->_impl_.karmarating_ = from._impl_.karmarating_;
  }
  if (from._internal_fame() != 0) {
    _this->_impl_.fame_ = from._impl_.fame_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SACCOUNT_NICKNAME::CopyFrom(const SACCOUNT_NICKNAME& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SACCOUNT_NICKNAME)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SACCOUNT_NICKNAME::InternalSwap(SACCOUNT_NICKNAME* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.originalnickname_, &other->_impl_.originalnickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.streamingmodenickname_, &other->_impl_.streamingmodenickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rankid_, &other->_impl_.rankid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SACCOUNT_NICKNAME, _impl_.fame_)
      + sizeof(SACCOUNT_NICKNAME::_impl_.fame_)
      - PROTOBUF_FIELD_OFFSET(SACCOUNT_NICKNAME, _impl_.karmarating_)>(
          reinterpret_cast<char*>(&_impl_.karmarating_),
          reinterpret_cast<char*>(&other->_impl_.karmarating_));
}

::google::protobuf::Metadata SACCOUNT_NICKNAME::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SBLOCK_CHARACTER::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SBLOCK_CHARACTER>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_._has_bits_);
};

SBLOCK_CHARACTER::SBLOCK_CHARACTER(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SBLOCK_CHARACTER)
}
inline PROTOBUF_NDEBUG_INLINE SBLOCK_CHARACTER::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SBLOCK_CHARACTER& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        accountid_(arena, from.accountid_),
        accountnickname_(arena, from.accountnickname_),
        characterid_(arena, from.characterid_),
        characterclass_(arena, from.characterclass_) {}

SBLOCK_CHARACTER::SBLOCK_CHARACTER(
    ::google::protobuf::Arena* arena,
    const SBLOCK_CHARACTER& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SBLOCK_CHARACTER* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.nickname_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(
                              arena, *from._impl_.nickname_)
                        : nullptr;
  _impl_.gender_ = from._impl_.gender_;

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SBLOCK_CHARACTER)
}
inline PROTOBUF_NDEBUG_INLINE SBLOCK_CHARACTER::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        accountid_(arena),
        accountnickname_(arena),
        characterid_(arena),
        characterclass_(arena) {}

inline void SBLOCK_CHARACTER::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nickname_),
           0,
           offsetof(Impl_, gender_) -
               offsetof(Impl_, nickname_) +
               sizeof(Impl_::gender_));
}
SBLOCK_CHARACTER::~SBLOCK_CHARACTER() {
  // @@protoc_insertion_point(destructor:DC.Packet.SBLOCK_CHARACTER)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SBLOCK_CHARACTER::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.accountnickname_.Destroy();
  _impl_.characterid_.Destroy();
  _impl_.characterclass_.Destroy();
  delete _impl_.nickname_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SBLOCK_CHARACTER::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SBLOCK_CHARACTER_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SBLOCK_CHARACTER::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SBLOCK_CHARACTER>(),
            ::google::protobuf::Message::GetNewImpl<SBLOCK_CHARACTER>(),
            ::google::protobuf::Message::GetClearImpl<SBLOCK_CHARACTER>(), &SBLOCK_CHARACTER::ByteSizeLong,
                &SBLOCK_CHARACTER::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_._cached_size_),
            false,
        },
        &SBLOCK_CHARACTER::kDescriptorMethods,
        &descriptor_table__5fCharacter_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SBLOCK_CHARACTER::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 84, 2> SBLOCK_CHARACTER::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SBLOCK_CHARACTER>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_.accountid_)}},
    // string accountNickname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_.accountnickname_)}},
    // string characterId = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_.characterid_)}},
    // .DC.Packet.SACCOUNT_NICKNAME nickName = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_.nickname_)}},
    // string characterClass = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_.characterclass_)}},
    // uint32 gender = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SBLOCK_CHARACTER, _impl_.gender_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_.gender_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_.accountid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string accountNickname = 2;
    {PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_.accountnickname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 3;
    {PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_.characterid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .DC.Packet.SACCOUNT_NICKNAME nickName = 4;
    {PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_.nickname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string characterClass = 5;
    {PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_.characterclass_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 gender = 6;
    {PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_.gender_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SACCOUNT_NICKNAME>()},
  }}, {{
    "\32\11\17\13\0\16\0\0"
    "DC.Packet.SBLOCK_CHARACTER"
    "accountId"
    "accountNickname"
    "characterId"
    "characterClass"
  }},
};

PROTOBUF_NOINLINE void SBLOCK_CHARACTER::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SBLOCK_CHARACTER)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.accountnickname_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  _impl_.characterclass_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.nickname_ != nullptr);
    _impl_.nickname_->Clear();
  }
  _impl_.gender_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SBLOCK_CHARACTER::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SBLOCK_CHARACTER& this_ = static_cast<const SBLOCK_CHARACTER&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SBLOCK_CHARACTER::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SBLOCK_CHARACTER& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SBLOCK_CHARACTER)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SBLOCK_CHARACTER.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string accountNickname = 2;
          if (!this_._internal_accountnickname().empty()) {
            const std::string& _s = this_._internal_accountnickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SBLOCK_CHARACTER.accountNickname");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string characterId = 3;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SBLOCK_CHARACTER.characterId");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SACCOUNT_NICKNAME nickName = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.nickname_, this_._impl_.nickname_->GetCachedSize(), target,
                stream);
          }

          // string characterClass = 5;
          if (!this_._internal_characterclass().empty()) {
            const std::string& _s = this_._internal_characterclass();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SBLOCK_CHARACTER.characterClass");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // uint32 gender = 6;
          if (this_._internal_gender() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_gender(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SBLOCK_CHARACTER)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SBLOCK_CHARACTER::ByteSizeLong(const MessageLite& base) {
          const SBLOCK_CHARACTER& this_ = static_cast<const SBLOCK_CHARACTER&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SBLOCK_CHARACTER::ByteSizeLong() const {
          const SBLOCK_CHARACTER& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SBLOCK_CHARACTER)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string accountNickname = 2;
            if (!this_._internal_accountnickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountnickname());
            }
            // string characterId = 3;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
            // string characterClass = 5;
            if (!this_._internal_characterclass().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterclass());
            }
          }
           {
            // .DC.Packet.SACCOUNT_NICKNAME nickName = 4;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.nickname_);
            }
          }
           {
            // uint32 gender = 6;
            if (this_._internal_gender() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gender());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SBLOCK_CHARACTER::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SBLOCK_CHARACTER*>(&to_msg);
  auto& from = static_cast<const SBLOCK_CHARACTER&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SBLOCK_CHARACTER)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_accountnickname().empty()) {
    _this->_internal_set_accountnickname(from._internal_accountnickname());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (!from._internal_characterclass().empty()) {
    _this->_internal_set_characterclass(from._internal_characterclass());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.nickname_ != nullptr);
    if (_this->_impl_.nickname_ == nullptr) {
      _this->_impl_.nickname_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(arena, *from._impl_.nickname_);
    } else {
      _this->_impl_.nickname_->MergeFrom(*from._impl_.nickname_);
    }
  }
  if (from._internal_gender() != 0) {
    _this->_impl_.gender_ = from._impl_.gender_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SBLOCK_CHARACTER::CopyFrom(const SBLOCK_CHARACTER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SBLOCK_CHARACTER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SBLOCK_CHARACTER::InternalSwap(SBLOCK_CHARACTER* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountnickname_, &other->_impl_.accountnickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterclass_, &other->_impl_.characterclass_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_.gender_)
      + sizeof(SBLOCK_CHARACTER::_impl_.gender_)
      - PROTOBUF_FIELD_OFFSET(SBLOCK_CHARACTER, _impl_.nickname_)>(
          reinterpret_cast<char*>(&_impl_.nickname_),
          reinterpret_cast<char*>(&other->_impl_.nickname_));
}

::google::protobuf::Metadata SBLOCK_CHARACTER::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SCHARACTER_GATHERING_HALL_INFO::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SCHARACTER_GATHERING_HALL_INFO>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_._has_bits_);
};

SCHARACTER_GATHERING_HALL_INFO::SCHARACTER_GATHERING_HALL_INFO(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SCHARACTER_GATHERING_HALL_INFO)
}
inline PROTOBUF_NDEBUG_INLINE SCHARACTER_GATHERING_HALL_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SCHARACTER_GATHERING_HALL_INFO& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        accountid_(arena, from.accountid_),
        accountnickname_(arena, from.accountnickname_),
        characterclass_(arena, from.characterclass_),
        characterid_(arena, from.characterid_) {}

SCHARACTER_GATHERING_HALL_INFO::SCHARACTER_GATHERING_HALL_INFO(
    ::google::protobuf::Arena* arena,
    const SCHARACTER_GATHERING_HALL_INFO& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SCHARACTER_GATHERING_HALL_INFO* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.nickname_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(
                              arena, *from._impl_.nickname_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gender_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gender_),
           offsetof(Impl_, level_) -
               offsetof(Impl_, gender_) +
               sizeof(Impl_::level_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SCHARACTER_GATHERING_HALL_INFO)
}
inline PROTOBUF_NDEBUG_INLINE SCHARACTER_GATHERING_HALL_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        accountid_(arena),
        accountnickname_(arena),
        characterclass_(arena),
        characterid_(arena) {}

inline void SCHARACTER_GATHERING_HALL_INFO::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nickname_),
           0,
           offsetof(Impl_, level_) -
               offsetof(Impl_, nickname_) +
               sizeof(Impl_::level_));
}
SCHARACTER_GATHERING_HALL_INFO::~SCHARACTER_GATHERING_HALL_INFO() {
  // @@protoc_insertion_point(destructor:DC.Packet.SCHARACTER_GATHERING_HALL_INFO)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SCHARACTER_GATHERING_HALL_INFO::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.accountid_.Destroy();
  _impl_.accountnickname_.Destroy();
  _impl_.characterclass_.Destroy();
  _impl_.characterid_.Destroy();
  delete _impl_.nickname_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SCHARACTER_GATHERING_HALL_INFO::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SCHARACTER_GATHERING_HALL_INFO_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SCHARACTER_GATHERING_HALL_INFO::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SCHARACTER_GATHERING_HALL_INFO>(),
            ::google::protobuf::Message::GetNewImpl<SCHARACTER_GATHERING_HALL_INFO>(),
            ::google::protobuf::Message::GetClearImpl<SCHARACTER_GATHERING_HALL_INFO>(), &SCHARACTER_GATHERING_HALL_INFO::ByteSizeLong,
                &SCHARACTER_GATHERING_HALL_INFO::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_._cached_size_),
            false,
        },
        &SCHARACTER_GATHERING_HALL_INFO::kDescriptorMethods,
        &descriptor_table__5fCharacter_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SCHARACTER_GATHERING_HALL_INFO::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 98, 2> SCHARACTER_GATHERING_HALL_INFO::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SCHARACTER_GATHERING_HALL_INFO>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string accountId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_.accountid_)}},
    // string accountNickname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_.accountnickname_)}},
    // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_.nickname_)}},
    // string characterClass = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_.characterclass_)}},
    // string characterId = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_.characterid_)}},
    // uint32 gender = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_GATHERING_HALL_INFO, _impl_.gender_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_.gender_)}},
    // uint32 level = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SCHARACTER_GATHERING_HALL_INFO, _impl_.level_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_.level_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string accountId = 1;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_.accountid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string accountNickname = 2;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_.accountnickname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_.nickname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string characterClass = 4;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_.characterclass_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string characterId = 5;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_.characterid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 gender = 6;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_.gender_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 level = 7;
    {PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_.level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DC::Packet::SACCOUNT_NICKNAME>()},
  }}, {{
    "\50\11\17\0\16\13\0\0"
    "DC.Packet.SCHARACTER_GATHERING_HALL_INFO"
    "accountId"
    "accountNickname"
    "characterClass"
    "characterId"
  }},
};

PROTOBUF_NOINLINE void SCHARACTER_GATHERING_HALL_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SCHARACTER_GATHERING_HALL_INFO)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_.ClearToEmpty();
  _impl_.accountnickname_.ClearToEmpty();
  _impl_.characterclass_.ClearToEmpty();
  _impl_.characterid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.nickname_ != nullptr);
    _impl_.nickname_->Clear();
  }
  ::memset(&_impl_.gender_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.level_) -
      reinterpret_cast<char*>(&_impl_.gender_)) + sizeof(_impl_.level_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SCHARACTER_GATHERING_HALL_INFO::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SCHARACTER_GATHERING_HALL_INFO& this_ = static_cast<const SCHARACTER_GATHERING_HALL_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SCHARACTER_GATHERING_HALL_INFO::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SCHARACTER_GATHERING_HALL_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SCHARACTER_GATHERING_HALL_INFO)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string accountId = 1;
          if (!this_._internal_accountid().empty()) {
            const std::string& _s = this_._internal_accountid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_GATHERING_HALL_INFO.accountId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string accountNickname = 2;
          if (!this_._internal_accountnickname().empty()) {
            const std::string& _s = this_._internal_accountnickname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_GATHERING_HALL_INFO.accountNickname");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.nickname_, this_._impl_.nickname_->GetCachedSize(), target,
                stream);
          }

          // string characterClass = 4;
          if (!this_._internal_characterclass().empty()) {
            const std::string& _s = this_._internal_characterclass();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_GATHERING_HALL_INFO.characterClass");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string characterId = 5;
          if (!this_._internal_characterid().empty()) {
            const std::string& _s = this_._internal_characterid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SCHARACTER_GATHERING_HALL_INFO.characterId");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // uint32 gender = 6;
          if (this_._internal_gender() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_gender(), target);
          }

          // uint32 level = 7;
          if (this_._internal_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_level(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SCHARACTER_GATHERING_HALL_INFO)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SCHARACTER_GATHERING_HALL_INFO::ByteSizeLong(const MessageLite& base) {
          const SCHARACTER_GATHERING_HALL_INFO& this_ = static_cast<const SCHARACTER_GATHERING_HALL_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SCHARACTER_GATHERING_HALL_INFO::ByteSizeLong() const {
          const SCHARACTER_GATHERING_HALL_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SCHARACTER_GATHERING_HALL_INFO)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string accountId = 1;
            if (!this_._internal_accountid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountid());
            }
            // string accountNickname = 2;
            if (!this_._internal_accountnickname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_accountnickname());
            }
            // string characterClass = 4;
            if (!this_._internal_characterclass().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterclass());
            }
            // string characterId = 5;
            if (!this_._internal_characterid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_characterid());
            }
          }
           {
            // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.nickname_);
            }
          }
           {
            // uint32 gender = 6;
            if (this_._internal_gender() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gender());
            }
            // uint32 level = 7;
            if (this_._internal_level() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_level());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SCHARACTER_GATHERING_HALL_INFO::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SCHARACTER_GATHERING_HALL_INFO*>(&to_msg);
  auto& from = static_cast<const SCHARACTER_GATHERING_HALL_INFO&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SCHARACTER_GATHERING_HALL_INFO)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accountid().empty()) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (!from._internal_accountnickname().empty()) {
    _this->_internal_set_accountnickname(from._internal_accountnickname());
  }
  if (!from._internal_characterclass().empty()) {
    _this->_internal_set_characterclass(from._internal_characterclass());
  }
  if (!from._internal_characterid().empty()) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.nickname_ != nullptr);
    if (_this->_impl_.nickname_ == nullptr) {
      _this->_impl_.nickname_ =
          ::google::protobuf::Message::CopyConstruct<::DC::Packet::SACCOUNT_NICKNAME>(arena, *from._impl_.nickname_);
    } else {
      _this->_impl_.nickname_->MergeFrom(*from._impl_.nickname_);
    }
  }
  if (from._internal_gender() != 0) {
    _this->_impl_.gender_ = from._impl_.gender_;
  }
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SCHARACTER_GATHERING_HALL_INFO::CopyFrom(const SCHARACTER_GATHERING_HALL_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SCHARACTER_GATHERING_HALL_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SCHARACTER_GATHERING_HALL_INFO::InternalSwap(SCHARACTER_GATHERING_HALL_INFO* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountid_, &other->_impl_.accountid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accountnickname_, &other->_impl_.accountnickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterclass_, &other->_impl_.characterclass_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characterid_, &other->_impl_.characterid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_.level_)
      + sizeof(SCHARACTER_GATHERING_HALL_INFO::_impl_.level_)
      - PROTOBUF_FIELD_OFFSET(SCHARACTER_GATHERING_HALL_INFO, _impl_.nickname_)>(
          reinterpret_cast<char*>(&_impl_.nickname_),
          reinterpret_cast<char*>(&other->_impl_.nickname_));
}

::google::protobuf::Metadata SCHARACTER_GATHERING_HALL_INFO::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SGameStat::_Internal {
 public:
};

SGameStat::SGameStat(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SGameStat)
}
SGameStat::SGameStat(
    ::google::protobuf::Arena* arena, const SGameStat& from)
    : SGameStat(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SGameStat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SGameStat::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, stattype_),
           0,
           offsetof(Impl_, statvalue_) -
               offsetof(Impl_, stattype_) +
               sizeof(Impl_::statvalue_));
}
SGameStat::~SGameStat() {
  // @@protoc_insertion_point(destructor:DC.Packet.SGameStat)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SGameStat::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SGameStat::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SGameStat_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SGameStat::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SGameStat>(),
            ::google::protobuf::Message::GetNewImpl<SGameStat>(),
            ::google::protobuf::Message::GetClearImpl<SGameStat>(), &SGameStat::ByteSizeLong,
                &SGameStat::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SGameStat, _impl_._cached_size_),
            false,
        },
        &SGameStat::kDescriptorMethods,
        &descriptor_table__5fCharacter_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SGameStat::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SGameStat::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SGameStat>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 statValue = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SGameStat, _impl_.statvalue_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SGameStat, _impl_.statvalue_)}},
    // int32 statType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SGameStat, _impl_.stattype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SGameStat, _impl_.stattype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 statType = 1;
    {PROTOBUF_FIELD_OFFSET(SGameStat, _impl_.stattype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 statValue = 2;
    {PROTOBUF_FIELD_OFFSET(SGameStat, _impl_.statvalue_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SGameStat::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SGameStat)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.stattype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.statvalue_) -
      reinterpret_cast<char*>(&_impl_.stattype_)) + sizeof(_impl_.statvalue_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SGameStat::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SGameStat& this_ = static_cast<const SGameStat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SGameStat::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SGameStat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SGameStat)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 statType = 1;
          if (this_._internal_stattype() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_stattype(), target);
          }

          // int32 statValue = 2;
          if (this_._internal_statvalue() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_statvalue(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SGameStat)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SGameStat::ByteSizeLong(const MessageLite& base) {
          const SGameStat& this_ = static_cast<const SGameStat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SGameStat::ByteSizeLong() const {
          const SGameStat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SGameStat)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 statType = 1;
            if (this_._internal_stattype() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_stattype());
            }
            // int32 statValue = 2;
            if (this_._internal_statvalue() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_statvalue());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SGameStat::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SGameStat*>(&to_msg);
  auto& from = static_cast<const SGameStat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SGameStat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stattype() != 0) {
    _this->_impl_.stattype_ = from._impl_.stattype_;
  }
  if (from._internal_statvalue() != 0) {
    _this->_impl_.statvalue_ = from._impl_.statvalue_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SGameStat::CopyFrom(const SGameStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SGameStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SGameStat::InternalSwap(SGameStat* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SGameStat, _impl_.statvalue_)
      + sizeof(SGameStat::_impl_.statvalue_)
      - PROTOBUF_FIELD_OFFSET(SGameStat, _impl_.stattype_)>(
          reinterpret_cast<char*>(&_impl_.stattype_),
          reinterpret_cast<char*>(&other->_impl_.stattype_));
}

::google::protobuf::Metadata SGameStat::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SRankUserInfo::_Internal {
 public:
};

SRankUserInfo::SRankUserInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DC.Packet.SRankUserInfo)
}
inline PROTOBUF_NDEBUG_INLINE SRankUserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::DC::Packet::SRankUserInfo& from_msg)
      : rankid_(arena, from.rankid_),
        _cached_size_{0} {}

SRankUserInfo::SRankUserInfo(
    ::google::protobuf::Arena* arena,
    const SRankUserInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SRankUserInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, currentpoint_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, currentpoint_),
           offsetof(Impl_, gametype_) -
               offsetof(Impl_, currentpoint_) +
               sizeof(Impl_::gametype_));

  // @@protoc_insertion_point(copy_constructor:DC.Packet.SRankUserInfo)
}
inline PROTOBUF_NDEBUG_INLINE SRankUserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rankid_(arena),
        _cached_size_{0} {}

inline void SRankUserInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, currentpoint_),
           0,
           offsetof(Impl_, gametype_) -
               offsetof(Impl_, currentpoint_) +
               sizeof(Impl_::gametype_));
}
SRankUserInfo::~SRankUserInfo() {
  // @@protoc_insertion_point(destructor:DC.Packet.SRankUserInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SRankUserInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.rankid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SRankUserInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SRankUserInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SRankUserInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SRankUserInfo>(),
            ::google::protobuf::Message::GetNewImpl<SRankUserInfo>(),
            ::google::protobuf::Message::GetClearImpl<SRankUserInfo>(), &SRankUserInfo::ByteSizeLong,
                &SRankUserInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SRankUserInfo, _impl_._cached_size_),
            false,
        },
        &SRankUserInfo::kDescriptorMethods,
        &descriptor_table__5fCharacter_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SRankUserInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 38, 2> SRankUserInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DC::Packet::SRankUserInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 gameType = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SRankUserInfo, _impl_.gametype_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SRankUserInfo, _impl_.gametype_)}},
    // string rankId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SRankUserInfo, _impl_.rankid_)}},
    // uint32 currentPoint = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SRankUserInfo, _impl_.currentpoint_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SRankUserInfo, _impl_.currentpoint_)}},
    // uint32 needPoint = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SRankUserInfo, _impl_.needpoint_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SRankUserInfo, _impl_.needpoint_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string rankId = 1;
    {PROTOBUF_FIELD_OFFSET(SRankUserInfo, _impl_.rankid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 currentPoint = 2;
    {PROTOBUF_FIELD_OFFSET(SRankUserInfo, _impl_.currentpoint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 needPoint = 3;
    {PROTOBUF_FIELD_OFFSET(SRankUserInfo, _impl_.needpoint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 gameType = 4;
    {PROTOBUF_FIELD_OFFSET(SRankUserInfo, _impl_.gametype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\27\6\0\0\0\0\0\0"
    "DC.Packet.SRankUserInfo"
    "rankId"
  }},
};

PROTOBUF_NOINLINE void SRankUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DC.Packet.SRankUserInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rankid_.ClearToEmpty();
  ::memset(&_impl_.currentpoint_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gametype_) -
      reinterpret_cast<char*>(&_impl_.currentpoint_)) + sizeof(_impl_.gametype_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SRankUserInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SRankUserInfo& this_ = static_cast<const SRankUserInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SRankUserInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SRankUserInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:DC.Packet.SRankUserInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string rankId = 1;
          if (!this_._internal_rankid().empty()) {
            const std::string& _s = this_._internal_rankid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DC.Packet.SRankUserInfo.rankId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 currentPoint = 2;
          if (this_._internal_currentpoint() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_currentpoint(), target);
          }

          // uint32 needPoint = 3;
          if (this_._internal_needpoint() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_needpoint(), target);
          }

          // uint32 gameType = 4;
          if (this_._internal_gametype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_gametype(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:DC.Packet.SRankUserInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SRankUserInfo::ByteSizeLong(const MessageLite& base) {
          const SRankUserInfo& this_ = static_cast<const SRankUserInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SRankUserInfo::ByteSizeLong() const {
          const SRankUserInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:DC.Packet.SRankUserInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string rankId = 1;
            if (!this_._internal_rankid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_rankid());
            }
            // uint32 currentPoint = 2;
            if (this_._internal_currentpoint() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_currentpoint());
            }
            // uint32 needPoint = 3;
            if (this_._internal_needpoint() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_needpoint());
            }
            // uint32 gameType = 4;
            if (this_._internal_gametype() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gametype());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SRankUserInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SRankUserInfo*>(&to_msg);
  auto& from = static_cast<const SRankUserInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DC.Packet.SRankUserInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rankid().empty()) {
    _this->_internal_set_rankid(from._internal_rankid());
  }
  if (from._internal_currentpoint() != 0) {
    _this->_impl_.currentpoint_ = from._impl_.currentpoint_;
  }
  if (from._internal_needpoint() != 0) {
    _this->_impl_.needpoint_ = from._impl_.needpoint_;
  }
  if (from._internal_gametype() != 0) {
    _this->_impl_.gametype_ = from._impl_.gametype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SRankUserInfo::CopyFrom(const SRankUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DC.Packet.SRankUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SRankUserInfo::InternalSwap(SRankUserInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rankid_, &other->_impl_.rankid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SRankUserInfo, _impl_.gametype_)
      + sizeof(SRankUserInfo::_impl_.gametype_)
      - PROTOBUF_FIELD_OFFSET(SRankUserInfo, _impl_.currentpoint_)>(
          reinterpret_cast<char*>(&_impl_.currentpoint_),
          reinterpret_cast<char*>(&other->_impl_.currentpoint_));
}

::google::protobuf::Metadata SRankUserInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Packet
}  // namespace DC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table__5fCharacter_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
