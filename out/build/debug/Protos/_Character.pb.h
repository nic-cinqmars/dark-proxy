// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: _Character.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED__5fCharacter_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED__5fCharacter_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "_Item.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT__5fCharacter_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct__5fCharacter_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table__5fCharacter_2eproto;
namespace DC {
namespace Packet {
class SACCOUNT_NICKNAME;
struct SACCOUNT_NICKNAMEDefaultTypeInternal;
extern SACCOUNT_NICKNAMEDefaultTypeInternal _SACCOUNT_NICKNAME_default_instance_;
class SBLOCK_CHARACTER;
struct SBLOCK_CHARACTERDefaultTypeInternal;
extern SBLOCK_CHARACTERDefaultTypeInternal _SBLOCK_CHARACTER_default_instance_;
class SCHARACTER_FRIEND_INFO;
struct SCHARACTER_FRIEND_INFODefaultTypeInternal;
extern SCHARACTER_FRIEND_INFODefaultTypeInternal _SCHARACTER_FRIEND_INFO_default_instance_;
class SCHARACTER_GATHERING_HALL_INFO;
struct SCHARACTER_GATHERING_HALL_INFODefaultTypeInternal;
extern SCHARACTER_GATHERING_HALL_INFODefaultTypeInternal _SCHARACTER_GATHERING_HALL_INFO_default_instance_;
class SCHARACTER_INFO;
struct SCHARACTER_INFODefaultTypeInternal;
extern SCHARACTER_INFODefaultTypeInternal _SCHARACTER_INFO_default_instance_;
class SCHARACTER_PARTY_INFO;
struct SCHARACTER_PARTY_INFODefaultTypeInternal;
extern SCHARACTER_PARTY_INFODefaultTypeInternal _SCHARACTER_PARTY_INFO_default_instance_;
class SCHARACTER_TRADE_INFO;
struct SCHARACTER_TRADE_INFODefaultTypeInternal;
extern SCHARACTER_TRADE_INFODefaultTypeInternal _SCHARACTER_TRADE_INFO_default_instance_;
class SGameStat;
struct SGameStatDefaultTypeInternal;
extern SGameStatDefaultTypeInternal _SGameStat_default_instance_;
class SRankUserInfo;
struct SRankUserInfoDefaultTypeInternal;
extern SRankUserInfoDefaultTypeInternal _SRankUserInfo_default_instance_;
class SSTORAGE_INFO;
struct SSTORAGE_INFODefaultTypeInternal;
extern SSTORAGE_INFODefaultTypeInternal _SSTORAGE_INFO_default_instance_;
}  // namespace Packet
}  // namespace DC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace DC {
namespace Packet {
enum Friend_Location : int {
  Friend_Location_NONE = 0,
  Friend_Location_LOBBY = 1,
  Friend_Location_DUNGEON = 2,
  Friend_Location_OFFLINE = 3,
  Friend_Location_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Friend_Location_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Friend_Location_IsValid(int value);
extern const uint32_t Friend_Location_internal_data_[];
constexpr Friend_Location Friend_Location_MIN = static_cast<Friend_Location>(0);
constexpr Friend_Location Friend_Location_MAX = static_cast<Friend_Location>(3);
constexpr int Friend_Location_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
Friend_Location_descriptor();
template <typename T>
const std::string& Friend_Location_Name(T value) {
  static_assert(std::is_same<T, Friend_Location>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Friend_Location_Name().");
  return Friend_Location_Name(static_cast<Friend_Location>(value));
}
template <>
inline const std::string& Friend_Location_Name(Friend_Location value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Friend_Location_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool Friend_Location_Parse(absl::string_view name, Friend_Location* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Friend_Location>(
      Friend_Location_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SRankUserInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SRankUserInfo) */ {
 public:
  inline SRankUserInfo() : SRankUserInfo(nullptr) {}
  ~SRankUserInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SRankUserInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline SRankUserInfo(const SRankUserInfo& from) : SRankUserInfo(nullptr, from) {}
  inline SRankUserInfo(SRankUserInfo&& from) noexcept
      : SRankUserInfo(nullptr, std::move(from)) {}
  inline SRankUserInfo& operator=(const SRankUserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRankUserInfo& operator=(SRankUserInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SRankUserInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const SRankUserInfo* internal_default_instance() {
    return reinterpret_cast<const SRankUserInfo*>(
        &_SRankUserInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(SRankUserInfo& a, SRankUserInfo& b) { a.Swap(&b); }
  inline void Swap(SRankUserInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SRankUserInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SRankUserInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SRankUserInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SRankUserInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SRankUserInfo& from) { SRankUserInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SRankUserInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SRankUserInfo"; }

 protected:
  explicit SRankUserInfo(::google::protobuf::Arena* arena);
  SRankUserInfo(::google::protobuf::Arena* arena, const SRankUserInfo& from);
  SRankUserInfo(::google::protobuf::Arena* arena, SRankUserInfo&& from) noexcept
      : SRankUserInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRankIdFieldNumber = 1,
    kCurrentPointFieldNumber = 2,
    kNeedPointFieldNumber = 3,
    kGameTypeFieldNumber = 4,
  };
  // string rankId = 1;
  void clear_rankid() ;
  const std::string& rankid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rankid(Arg_&& arg, Args_... args);
  std::string* mutable_rankid();
  PROTOBUF_NODISCARD std::string* release_rankid();
  void set_allocated_rankid(std::string* value);

  private:
  const std::string& _internal_rankid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rankid(
      const std::string& value);
  std::string* _internal_mutable_rankid();

  public:
  // uint32 currentPoint = 2;
  void clear_currentpoint() ;
  ::uint32_t currentpoint() const;
  void set_currentpoint(::uint32_t value);

  private:
  ::uint32_t _internal_currentpoint() const;
  void _internal_set_currentpoint(::uint32_t value);

  public:
  // uint32 needPoint = 3;
  void clear_needpoint() ;
  ::uint32_t needpoint() const;
  void set_needpoint(::uint32_t value);

  private:
  ::uint32_t _internal_needpoint() const;
  void _internal_set_needpoint(::uint32_t value);

  public:
  // uint32 gameType = 4;
  void clear_gametype() ;
  ::uint32_t gametype() const;
  void set_gametype(::uint32_t value);

  private:
  ::uint32_t _internal_gametype() const;
  void _internal_set_gametype(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SRankUserInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      38, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SRankUserInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SRankUserInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr rankid_;
    ::uint32_t currentpoint_;
    ::uint32_t needpoint_;
    ::uint32_t gametype_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fCharacter_2eproto;
};
// -------------------------------------------------------------------

class SGameStat final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SGameStat) */ {
 public:
  inline SGameStat() : SGameStat(nullptr) {}
  ~SGameStat() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SGameStat(
      ::google::protobuf::internal::ConstantInitialized);

  inline SGameStat(const SGameStat& from) : SGameStat(nullptr, from) {}
  inline SGameStat(SGameStat&& from) noexcept
      : SGameStat(nullptr, std::move(from)) {}
  inline SGameStat& operator=(const SGameStat& from) {
    CopyFrom(from);
    return *this;
  }
  inline SGameStat& operator=(SGameStat&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SGameStat& default_instance() {
    return *internal_default_instance();
  }
  static inline const SGameStat* internal_default_instance() {
    return reinterpret_cast<const SGameStat*>(
        &_SGameStat_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SGameStat& a, SGameStat& b) { a.Swap(&b); }
  inline void Swap(SGameStat* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SGameStat* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SGameStat* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SGameStat>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SGameStat& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SGameStat& from) { SGameStat::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SGameStat* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SGameStat"; }

 protected:
  explicit SGameStat(::google::protobuf::Arena* arena);
  SGameStat(::google::protobuf::Arena* arena, const SGameStat& from);
  SGameStat(::google::protobuf::Arena* arena, SGameStat&& from) noexcept
      : SGameStat(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatTypeFieldNumber = 1,
    kStatValueFieldNumber = 2,
  };
  // int32 statType = 1;
  void clear_stattype() ;
  ::int32_t stattype() const;
  void set_stattype(::int32_t value);

  private:
  ::int32_t _internal_stattype() const;
  void _internal_set_stattype(::int32_t value);

  public:
  // int32 statValue = 2;
  void clear_statvalue() ;
  ::int32_t statvalue() const;
  void set_statvalue(::int32_t value);

  private:
  ::int32_t _internal_statvalue() const;
  void _internal_set_statvalue(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SGameStat)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SGameStat_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SGameStat& from_msg);
    ::int32_t stattype_;
    ::int32_t statvalue_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fCharacter_2eproto;
};
// -------------------------------------------------------------------

class SACCOUNT_NICKNAME final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SACCOUNT_NICKNAME) */ {
 public:
  inline SACCOUNT_NICKNAME() : SACCOUNT_NICKNAME(nullptr) {}
  ~SACCOUNT_NICKNAME() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SACCOUNT_NICKNAME(
      ::google::protobuf::internal::ConstantInitialized);

  inline SACCOUNT_NICKNAME(const SACCOUNT_NICKNAME& from) : SACCOUNT_NICKNAME(nullptr, from) {}
  inline SACCOUNT_NICKNAME(SACCOUNT_NICKNAME&& from) noexcept
      : SACCOUNT_NICKNAME(nullptr, std::move(from)) {}
  inline SACCOUNT_NICKNAME& operator=(const SACCOUNT_NICKNAME& from) {
    CopyFrom(from);
    return *this;
  }
  inline SACCOUNT_NICKNAME& operator=(SACCOUNT_NICKNAME&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SACCOUNT_NICKNAME& default_instance() {
    return *internal_default_instance();
  }
  static inline const SACCOUNT_NICKNAME* internal_default_instance() {
    return reinterpret_cast<const SACCOUNT_NICKNAME*>(
        &_SACCOUNT_NICKNAME_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SACCOUNT_NICKNAME& a, SACCOUNT_NICKNAME& b) { a.Swap(&b); }
  inline void Swap(SACCOUNT_NICKNAME* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SACCOUNT_NICKNAME* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SACCOUNT_NICKNAME* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SACCOUNT_NICKNAME>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SACCOUNT_NICKNAME& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SACCOUNT_NICKNAME& from) { SACCOUNT_NICKNAME::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SACCOUNT_NICKNAME* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SACCOUNT_NICKNAME"; }

 protected:
  explicit SACCOUNT_NICKNAME(::google::protobuf::Arena* arena);
  SACCOUNT_NICKNAME(::google::protobuf::Arena* arena, const SACCOUNT_NICKNAME& from);
  SACCOUNT_NICKNAME(::google::protobuf::Arena* arena, SACCOUNT_NICKNAME&& from) noexcept
      : SACCOUNT_NICKNAME(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOriginalNickNameFieldNumber = 1,
    kStreamingModeNickNameFieldNumber = 2,
    kRankIdFieldNumber = 4,
    kKarmaRatingFieldNumber = 3,
    kFameFieldNumber = 5,
  };
  // string originalNickName = 1;
  void clear_originalnickname() ;
  const std::string& originalnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_originalnickname(Arg_&& arg, Args_... args);
  std::string* mutable_originalnickname();
  PROTOBUF_NODISCARD std::string* release_originalnickname();
  void set_allocated_originalnickname(std::string* value);

  private:
  const std::string& _internal_originalnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_originalnickname(
      const std::string& value);
  std::string* _internal_mutable_originalnickname();

  public:
  // string streamingModeNickName = 2;
  void clear_streamingmodenickname() ;
  const std::string& streamingmodenickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_streamingmodenickname(Arg_&& arg, Args_... args);
  std::string* mutable_streamingmodenickname();
  PROTOBUF_NODISCARD std::string* release_streamingmodenickname();
  void set_allocated_streamingmodenickname(std::string* value);

  private:
  const std::string& _internal_streamingmodenickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_streamingmodenickname(
      const std::string& value);
  std::string* _internal_mutable_streamingmodenickname();

  public:
  // string rankId = 4;
  void clear_rankid() ;
  const std::string& rankid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rankid(Arg_&& arg, Args_... args);
  std::string* mutable_rankid();
  PROTOBUF_NODISCARD std::string* release_rankid();
  void set_allocated_rankid(std::string* value);

  private:
  const std::string& _internal_rankid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rankid(
      const std::string& value);
  std::string* _internal_mutable_rankid();

  public:
  // int32 karmaRating = 3;
  void clear_karmarating() ;
  ::int32_t karmarating() const;
  void set_karmarating(::int32_t value);

  private:
  ::int32_t _internal_karmarating() const;
  void _internal_set_karmarating(::int32_t value);

  public:
  // uint32 fame = 5;
  void clear_fame() ;
  ::uint32_t fame() const;
  void set_fame(::uint32_t value);

  private:
  ::uint32_t _internal_fame() const;
  void _internal_set_fame(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SACCOUNT_NICKNAME)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      79, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SACCOUNT_NICKNAME_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SACCOUNT_NICKNAME& from_msg);
    ::google::protobuf::internal::ArenaStringPtr originalnickname_;
    ::google::protobuf::internal::ArenaStringPtr streamingmodenickname_;
    ::google::protobuf::internal::ArenaStringPtr rankid_;
    ::int32_t karmarating_;
    ::uint32_t fame_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fCharacter_2eproto;
};
// -------------------------------------------------------------------

class SCHARACTER_TRADE_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SCHARACTER_TRADE_INFO) */ {
 public:
  inline SCHARACTER_TRADE_INFO() : SCHARACTER_TRADE_INFO(nullptr) {}
  ~SCHARACTER_TRADE_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SCHARACTER_TRADE_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline SCHARACTER_TRADE_INFO(const SCHARACTER_TRADE_INFO& from) : SCHARACTER_TRADE_INFO(nullptr, from) {}
  inline SCHARACTER_TRADE_INFO(SCHARACTER_TRADE_INFO&& from) noexcept
      : SCHARACTER_TRADE_INFO(nullptr, std::move(from)) {}
  inline SCHARACTER_TRADE_INFO& operator=(const SCHARACTER_TRADE_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SCHARACTER_TRADE_INFO& operator=(SCHARACTER_TRADE_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SCHARACTER_TRADE_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const SCHARACTER_TRADE_INFO* internal_default_instance() {
    return reinterpret_cast<const SCHARACTER_TRADE_INFO*>(
        &_SCHARACTER_TRADE_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SCHARACTER_TRADE_INFO& a, SCHARACTER_TRADE_INFO& b) { a.Swap(&b); }
  inline void Swap(SCHARACTER_TRADE_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SCHARACTER_TRADE_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SCHARACTER_TRADE_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SCHARACTER_TRADE_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SCHARACTER_TRADE_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SCHARACTER_TRADE_INFO& from) { SCHARACTER_TRADE_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SCHARACTER_TRADE_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SCHARACTER_TRADE_INFO"; }

 protected:
  explicit SCHARACTER_TRADE_INFO(::google::protobuf::Arena* arena);
  SCHARACTER_TRADE_INFO(::google::protobuf::Arena* arena, const SCHARACTER_TRADE_INFO& from);
  SCHARACTER_TRADE_INFO(::google::protobuf::Arena* arena, SCHARACTER_TRADE_INFO&& from) noexcept
      : SCHARACTER_TRADE_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kAccountNicknameFieldNumber = 2,
    kCharacterClassFieldNumber = 4,
    kCharacterIdFieldNumber = 5,
    kNickNameFieldNumber = 3,
    kGenderFieldNumber = 6,
    kLevelFieldNumber = 7,
    kCharacterLocationFieldNumber = 8,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string accountNickname = 2;
  void clear_accountnickname() ;
  const std::string& accountnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountnickname(Arg_&& arg, Args_... args);
  std::string* mutable_accountnickname();
  PROTOBUF_NODISCARD std::string* release_accountnickname();
  void set_allocated_accountnickname(std::string* value);

  private:
  const std::string& _internal_accountnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountnickname(
      const std::string& value);
  std::string* _internal_mutable_accountnickname();

  public:
  // string characterClass = 4;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // string characterId = 5;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // uint32 gender = 6;
  void clear_gender() ;
  ::uint32_t gender() const;
  void set_gender(::uint32_t value);

  private:
  ::uint32_t _internal_gender() const;
  void _internal_set_gender(::uint32_t value);

  public:
  // uint32 level = 7;
  void clear_level() ;
  ::uint32_t level() const;
  void set_level(::uint32_t value);

  private:
  ::uint32_t _internal_level() const;
  void _internal_set_level(::uint32_t value);

  public:
  // uint32 characterLocation = 8;
  void clear_characterlocation() ;
  ::uint32_t characterlocation() const;
  void set_characterlocation(::uint32_t value);

  private:
  ::uint32_t _internal_characterlocation() const;
  void _internal_set_characterlocation(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SCHARACTER_TRADE_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      97, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SCHARACTER_TRADE_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SCHARACTER_TRADE_INFO& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr accountnickname_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    ::uint32_t gender_;
    ::uint32_t level_;
    ::uint32_t characterlocation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fCharacter_2eproto;
};
// -------------------------------------------------------------------

class SCHARACTER_GATHERING_HALL_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SCHARACTER_GATHERING_HALL_INFO) */ {
 public:
  inline SCHARACTER_GATHERING_HALL_INFO() : SCHARACTER_GATHERING_HALL_INFO(nullptr) {}
  ~SCHARACTER_GATHERING_HALL_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SCHARACTER_GATHERING_HALL_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline SCHARACTER_GATHERING_HALL_INFO(const SCHARACTER_GATHERING_HALL_INFO& from) : SCHARACTER_GATHERING_HALL_INFO(nullptr, from) {}
  inline SCHARACTER_GATHERING_HALL_INFO(SCHARACTER_GATHERING_HALL_INFO&& from) noexcept
      : SCHARACTER_GATHERING_HALL_INFO(nullptr, std::move(from)) {}
  inline SCHARACTER_GATHERING_HALL_INFO& operator=(const SCHARACTER_GATHERING_HALL_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SCHARACTER_GATHERING_HALL_INFO& operator=(SCHARACTER_GATHERING_HALL_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SCHARACTER_GATHERING_HALL_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const SCHARACTER_GATHERING_HALL_INFO* internal_default_instance() {
    return reinterpret_cast<const SCHARACTER_GATHERING_HALL_INFO*>(
        &_SCHARACTER_GATHERING_HALL_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SCHARACTER_GATHERING_HALL_INFO& a, SCHARACTER_GATHERING_HALL_INFO& b) { a.Swap(&b); }
  inline void Swap(SCHARACTER_GATHERING_HALL_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SCHARACTER_GATHERING_HALL_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SCHARACTER_GATHERING_HALL_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SCHARACTER_GATHERING_HALL_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SCHARACTER_GATHERING_HALL_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SCHARACTER_GATHERING_HALL_INFO& from) { SCHARACTER_GATHERING_HALL_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SCHARACTER_GATHERING_HALL_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SCHARACTER_GATHERING_HALL_INFO"; }

 protected:
  explicit SCHARACTER_GATHERING_HALL_INFO(::google::protobuf::Arena* arena);
  SCHARACTER_GATHERING_HALL_INFO(::google::protobuf::Arena* arena, const SCHARACTER_GATHERING_HALL_INFO& from);
  SCHARACTER_GATHERING_HALL_INFO(::google::protobuf::Arena* arena, SCHARACTER_GATHERING_HALL_INFO&& from) noexcept
      : SCHARACTER_GATHERING_HALL_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kAccountNicknameFieldNumber = 2,
    kCharacterClassFieldNumber = 4,
    kCharacterIdFieldNumber = 5,
    kNickNameFieldNumber = 3,
    kGenderFieldNumber = 6,
    kLevelFieldNumber = 7,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string accountNickname = 2;
  void clear_accountnickname() ;
  const std::string& accountnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountnickname(Arg_&& arg, Args_... args);
  std::string* mutable_accountnickname();
  PROTOBUF_NODISCARD std::string* release_accountnickname();
  void set_allocated_accountnickname(std::string* value);

  private:
  const std::string& _internal_accountnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountnickname(
      const std::string& value);
  std::string* _internal_mutable_accountnickname();

  public:
  // string characterClass = 4;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // string characterId = 5;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // uint32 gender = 6;
  void clear_gender() ;
  ::uint32_t gender() const;
  void set_gender(::uint32_t value);

  private:
  ::uint32_t _internal_gender() const;
  void _internal_set_gender(::uint32_t value);

  public:
  // uint32 level = 7;
  void clear_level() ;
  ::uint32_t level() const;
  void set_level(::uint32_t value);

  private:
  ::uint32_t _internal_level() const;
  void _internal_set_level(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SCHARACTER_GATHERING_HALL_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      98, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SCHARACTER_GATHERING_HALL_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SCHARACTER_GATHERING_HALL_INFO& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr accountnickname_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    ::uint32_t gender_;
    ::uint32_t level_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fCharacter_2eproto;
};
// -------------------------------------------------------------------

class SCHARACTER_FRIEND_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SCHARACTER_FRIEND_INFO) */ {
 public:
  inline SCHARACTER_FRIEND_INFO() : SCHARACTER_FRIEND_INFO(nullptr) {}
  ~SCHARACTER_FRIEND_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SCHARACTER_FRIEND_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline SCHARACTER_FRIEND_INFO(const SCHARACTER_FRIEND_INFO& from) : SCHARACTER_FRIEND_INFO(nullptr, from) {}
  inline SCHARACTER_FRIEND_INFO(SCHARACTER_FRIEND_INFO&& from) noexcept
      : SCHARACTER_FRIEND_INFO(nullptr, std::move(from)) {}
  inline SCHARACTER_FRIEND_INFO& operator=(const SCHARACTER_FRIEND_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SCHARACTER_FRIEND_INFO& operator=(SCHARACTER_FRIEND_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SCHARACTER_FRIEND_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const SCHARACTER_FRIEND_INFO* internal_default_instance() {
    return reinterpret_cast<const SCHARACTER_FRIEND_INFO*>(
        &_SCHARACTER_FRIEND_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SCHARACTER_FRIEND_INFO& a, SCHARACTER_FRIEND_INFO& b) { a.Swap(&b); }
  inline void Swap(SCHARACTER_FRIEND_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SCHARACTER_FRIEND_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SCHARACTER_FRIEND_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SCHARACTER_FRIEND_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SCHARACTER_FRIEND_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SCHARACTER_FRIEND_INFO& from) { SCHARACTER_FRIEND_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SCHARACTER_FRIEND_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SCHARACTER_FRIEND_INFO"; }

 protected:
  explicit SCHARACTER_FRIEND_INFO(::google::protobuf::Arena* arena);
  SCHARACTER_FRIEND_INFO(::google::protobuf::Arena* arena, const SCHARACTER_FRIEND_INFO& from);
  SCHARACTER_FRIEND_INFO(::google::protobuf::Arena* arena, SCHARACTER_FRIEND_INFO&& from) noexcept
      : SCHARACTER_FRIEND_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kAccountNicknameFieldNumber = 2,
    kCharacterClassFieldNumber = 4,
    kCharacterIdFieldNumber = 5,
    kNickNameFieldNumber = 3,
    kGenderFieldNumber = 6,
    kLevelFieldNumber = 7,
    kLocationStatusFieldNumber = 8,
    kPartyMemeberCountFieldNumber = 9,
    kPartyMaxMemeberCountFieldNumber = 10,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string accountNickname = 2;
  void clear_accountnickname() ;
  const std::string& accountnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountnickname(Arg_&& arg, Args_... args);
  std::string* mutable_accountnickname();
  PROTOBUF_NODISCARD std::string* release_accountnickname();
  void set_allocated_accountnickname(std::string* value);

  private:
  const std::string& _internal_accountnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountnickname(
      const std::string& value);
  std::string* _internal_mutable_accountnickname();

  public:
  // string characterClass = 4;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // string characterId = 5;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // uint32 gender = 6;
  void clear_gender() ;
  ::uint32_t gender() const;
  void set_gender(::uint32_t value);

  private:
  ::uint32_t _internal_gender() const;
  void _internal_set_gender(::uint32_t value);

  public:
  // uint32 level = 7;
  void clear_level() ;
  ::uint32_t level() const;
  void set_level(::uint32_t value);

  private:
  ::uint32_t _internal_level() const;
  void _internal_set_level(::uint32_t value);

  public:
  // uint32 locationStatus = 8;
  void clear_locationstatus() ;
  ::uint32_t locationstatus() const;
  void set_locationstatus(::uint32_t value);

  private:
  ::uint32_t _internal_locationstatus() const;
  void _internal_set_locationstatus(::uint32_t value);

  public:
  // uint32 PartyMemeberCount = 9;
  void clear_partymemebercount() ;
  ::uint32_t partymemebercount() const;
  void set_partymemebercount(::uint32_t value);

  private:
  ::uint32_t _internal_partymemebercount() const;
  void _internal_set_partymemebercount(::uint32_t value);

  public:
  // uint32 PartyMaxMemeberCount = 10;
  void clear_partymaxmemebercount() ;
  ::uint32_t partymaxmemebercount() const;
  void set_partymaxmemebercount(::uint32_t value);

  private:
  ::uint32_t _internal_partymaxmemebercount() const;
  void _internal_set_partymaxmemebercount(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SCHARACTER_FRIEND_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 1,
      98, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SCHARACTER_FRIEND_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SCHARACTER_FRIEND_INFO& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr accountnickname_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    ::uint32_t gender_;
    ::uint32_t level_;
    ::uint32_t locationstatus_;
    ::uint32_t partymemebercount_;
    ::uint32_t partymaxmemebercount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fCharacter_2eproto;
};
// -------------------------------------------------------------------

class SBLOCK_CHARACTER final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SBLOCK_CHARACTER) */ {
 public:
  inline SBLOCK_CHARACTER() : SBLOCK_CHARACTER(nullptr) {}
  ~SBLOCK_CHARACTER() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SBLOCK_CHARACTER(
      ::google::protobuf::internal::ConstantInitialized);

  inline SBLOCK_CHARACTER(const SBLOCK_CHARACTER& from) : SBLOCK_CHARACTER(nullptr, from) {}
  inline SBLOCK_CHARACTER(SBLOCK_CHARACTER&& from) noexcept
      : SBLOCK_CHARACTER(nullptr, std::move(from)) {}
  inline SBLOCK_CHARACTER& operator=(const SBLOCK_CHARACTER& from) {
    CopyFrom(from);
    return *this;
  }
  inline SBLOCK_CHARACTER& operator=(SBLOCK_CHARACTER&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SBLOCK_CHARACTER& default_instance() {
    return *internal_default_instance();
  }
  static inline const SBLOCK_CHARACTER* internal_default_instance() {
    return reinterpret_cast<const SBLOCK_CHARACTER*>(
        &_SBLOCK_CHARACTER_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(SBLOCK_CHARACTER& a, SBLOCK_CHARACTER& b) { a.Swap(&b); }
  inline void Swap(SBLOCK_CHARACTER* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SBLOCK_CHARACTER* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SBLOCK_CHARACTER* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SBLOCK_CHARACTER>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SBLOCK_CHARACTER& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SBLOCK_CHARACTER& from) { SBLOCK_CHARACTER::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SBLOCK_CHARACTER* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SBLOCK_CHARACTER"; }

 protected:
  explicit SBLOCK_CHARACTER(::google::protobuf::Arena* arena);
  SBLOCK_CHARACTER(::google::protobuf::Arena* arena, const SBLOCK_CHARACTER& from);
  SBLOCK_CHARACTER(::google::protobuf::Arena* arena, SBLOCK_CHARACTER&& from) noexcept
      : SBLOCK_CHARACTER(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kAccountNicknameFieldNumber = 2,
    kCharacterIdFieldNumber = 3,
    kCharacterClassFieldNumber = 5,
    kNickNameFieldNumber = 4,
    kGenderFieldNumber = 6,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string accountNickname = 2;
  void clear_accountnickname() ;
  const std::string& accountnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountnickname(Arg_&& arg, Args_... args);
  std::string* mutable_accountnickname();
  PROTOBUF_NODISCARD std::string* release_accountnickname();
  void set_allocated_accountnickname(std::string* value);

  private:
  const std::string& _internal_accountnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountnickname(
      const std::string& value);
  std::string* _internal_mutable_accountnickname();

  public:
  // string characterId = 3;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string characterClass = 5;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 4;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // uint32 gender = 6;
  void clear_gender() ;
  ::uint32_t gender() const;
  void set_gender(::uint32_t value);

  private:
  ::uint32_t _internal_gender() const;
  void _internal_set_gender(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SBLOCK_CHARACTER)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      84, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SBLOCK_CHARACTER_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SBLOCK_CHARACTER& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr accountnickname_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    ::uint32_t gender_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fCharacter_2eproto;
};
// -------------------------------------------------------------------

class SSTORAGE_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SSTORAGE_INFO) */ {
 public:
  inline SSTORAGE_INFO() : SSTORAGE_INFO(nullptr) {}
  ~SSTORAGE_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SSTORAGE_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline SSTORAGE_INFO(const SSTORAGE_INFO& from) : SSTORAGE_INFO(nullptr, from) {}
  inline SSTORAGE_INFO(SSTORAGE_INFO&& from) noexcept
      : SSTORAGE_INFO(nullptr, std::move(from)) {}
  inline SSTORAGE_INFO& operator=(const SSTORAGE_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSTORAGE_INFO& operator=(SSTORAGE_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SSTORAGE_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const SSTORAGE_INFO* internal_default_instance() {
    return reinterpret_cast<const SSTORAGE_INFO*>(
        &_SSTORAGE_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SSTORAGE_INFO& a, SSTORAGE_INFO& b) { a.Swap(&b); }
  inline void Swap(SSTORAGE_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSTORAGE_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SSTORAGE_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SSTORAGE_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SSTORAGE_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SSTORAGE_INFO& from) { SSTORAGE_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SSTORAGE_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SSTORAGE_INFO"; }

 protected:
  explicit SSTORAGE_INFO(::google::protobuf::Arena* arena);
  SSTORAGE_INFO(::google::protobuf::Arena* arena, const SSTORAGE_INFO& from);
  SSTORAGE_INFO(::google::protobuf::Arena* arena, SSTORAGE_INFO&& from) noexcept
      : SSTORAGE_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCharacterStorageItemListFieldNumber = 2,
    kInventoryIdFieldNumber = 1,
  };
  // repeated .DC.Packet.SItem CharacterStorageItemList = 2;
  int characterstorageitemlist_size() const;
  private:
  int _internal_characterstorageitemlist_size() const;

  public:
  void clear_characterstorageitemlist() ;
  ::DC::Packet::SItem* mutable_characterstorageitemlist(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* mutable_characterstorageitemlist();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& _internal_characterstorageitemlist() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* _internal_mutable_characterstorageitemlist();
  public:
  const ::DC::Packet::SItem& characterstorageitemlist(int index) const;
  ::DC::Packet::SItem* add_characterstorageitemlist();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& characterstorageitemlist() const;
  // uint32 inventoryId = 1;
  void clear_inventoryid() ;
  ::uint32_t inventoryid() const;
  void set_inventoryid(::uint32_t value);

  private:
  ::uint32_t _internal_inventoryid() const;
  void _internal_set_inventoryid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SSTORAGE_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SSTORAGE_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SSTORAGE_INFO& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SItem > characterstorageitemlist_;
    ::uint32_t inventoryid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fCharacter_2eproto;
};
// -------------------------------------------------------------------

class SCHARACTER_PARTY_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SCHARACTER_PARTY_INFO) */ {
 public:
  inline SCHARACTER_PARTY_INFO() : SCHARACTER_PARTY_INFO(nullptr) {}
  ~SCHARACTER_PARTY_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SCHARACTER_PARTY_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline SCHARACTER_PARTY_INFO(const SCHARACTER_PARTY_INFO& from) : SCHARACTER_PARTY_INFO(nullptr, from) {}
  inline SCHARACTER_PARTY_INFO(SCHARACTER_PARTY_INFO&& from) noexcept
      : SCHARACTER_PARTY_INFO(nullptr, std::move(from)) {}
  inline SCHARACTER_PARTY_INFO& operator=(const SCHARACTER_PARTY_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SCHARACTER_PARTY_INFO& operator=(SCHARACTER_PARTY_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SCHARACTER_PARTY_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const SCHARACTER_PARTY_INFO* internal_default_instance() {
    return reinterpret_cast<const SCHARACTER_PARTY_INFO*>(
        &_SCHARACTER_PARTY_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SCHARACTER_PARTY_INFO& a, SCHARACTER_PARTY_INFO& b) { a.Swap(&b); }
  inline void Swap(SCHARACTER_PARTY_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SCHARACTER_PARTY_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SCHARACTER_PARTY_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SCHARACTER_PARTY_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SCHARACTER_PARTY_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SCHARACTER_PARTY_INFO& from) { SCHARACTER_PARTY_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SCHARACTER_PARTY_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SCHARACTER_PARTY_INFO"; }

 protected:
  explicit SCHARACTER_PARTY_INFO(::google::protobuf::Arena* arena);
  SCHARACTER_PARTY_INFO(::google::protobuf::Arena* arena, const SCHARACTER_PARTY_INFO& from);
  SCHARACTER_PARTY_INFO(::google::protobuf::Arena* arena, SCHARACTER_PARTY_INFO&& from) noexcept
      : SCHARACTER_PARTY_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEquipItemListFieldNumber = 11,
    kPerksFieldNumber = 13,
    kAccountIdFieldNumber = 1,
    kAccountNicknameFieldNumber = 2,
    kCharacterClassFieldNumber = 4,
    kCharacterIdFieldNumber = 5,
    kNickNameFieldNumber = 3,
    kGenderFieldNumber = 6,
    kLevelFieldNumber = 7,
    kIsPartyLeaderFieldNumber = 8,
    kIsReadyFieldNumber = 9,
    kIsInGameFieldNumber = 10,
    kPartyIdxFieldNumber = 12,
    kGearScoreFieldNumber = 14,
  };
  // repeated .DC.Packet.SItem equipItemList = 11;
  int equipitemlist_size() const;
  private:
  int _internal_equipitemlist_size() const;

  public:
  void clear_equipitemlist() ;
  ::DC::Packet::SItem* mutable_equipitemlist(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* mutable_equipitemlist();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& _internal_equipitemlist() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* _internal_mutable_equipitemlist();
  public:
  const ::DC::Packet::SItem& equipitemlist(int index) const;
  ::DC::Packet::SItem* add_equipitemlist();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& equipitemlist() const;
  // repeated .DC.Packet.SPerk perks = 13;
  int perks_size() const;
  private:
  int _internal_perks_size() const;

  public:
  void clear_perks() ;
  ::DC::Packet::SPerk* mutable_perks(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>* mutable_perks();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>& _internal_perks() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>* _internal_mutable_perks();
  public:
  const ::DC::Packet::SPerk& perks(int index) const;
  ::DC::Packet::SPerk* add_perks();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>& perks() const;
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string accountNickname = 2;
  void clear_accountnickname() ;
  const std::string& accountnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountnickname(Arg_&& arg, Args_... args);
  std::string* mutable_accountnickname();
  PROTOBUF_NODISCARD std::string* release_accountnickname();
  void set_allocated_accountnickname(std::string* value);

  private:
  const std::string& _internal_accountnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountnickname(
      const std::string& value);
  std::string* _internal_mutable_accountnickname();

  public:
  // string characterClass = 4;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // string characterId = 5;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // uint32 gender = 6;
  void clear_gender() ;
  ::uint32_t gender() const;
  void set_gender(::uint32_t value);

  private:
  ::uint32_t _internal_gender() const;
  void _internal_set_gender(::uint32_t value);

  public:
  // uint32 level = 7;
  void clear_level() ;
  ::uint32_t level() const;
  void set_level(::uint32_t value);

  private:
  ::uint32_t _internal_level() const;
  void _internal_set_level(::uint32_t value);

  public:
  // uint32 isPartyLeader = 8;
  void clear_ispartyleader() ;
  ::uint32_t ispartyleader() const;
  void set_ispartyleader(::uint32_t value);

  private:
  ::uint32_t _internal_ispartyleader() const;
  void _internal_set_ispartyleader(::uint32_t value);

  public:
  // uint32 isReady = 9;
  void clear_isready() ;
  ::uint32_t isready() const;
  void set_isready(::uint32_t value);

  private:
  ::uint32_t _internal_isready() const;
  void _internal_set_isready(::uint32_t value);

  public:
  // uint32 isInGame = 10;
  void clear_isingame() ;
  ::uint32_t isingame() const;
  void set_isingame(::uint32_t value);

  private:
  ::uint32_t _internal_isingame() const;
  void _internal_set_isingame(::uint32_t value);

  public:
  // uint32 partyIdx = 12;
  void clear_partyidx() ;
  ::uint32_t partyidx() const;
  void set_partyidx(::uint32_t value);

  private:
  ::uint32_t _internal_partyidx() const;
  void _internal_set_partyidx(::uint32_t value);

  public:
  // uint32 gearScore = 14;
  void clear_gearscore() ;
  ::uint32_t gearscore() const;
  void set_gearscore(::uint32_t value);

  private:
  ::uint32_t _internal_gearscore() const;
  void _internal_set_gearscore(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SCHARACTER_PARTY_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 3,
      97, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SCHARACTER_PARTY_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SCHARACTER_PARTY_INFO& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SItem > equipitemlist_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SPerk > perks_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr accountnickname_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    ::uint32_t gender_;
    ::uint32_t level_;
    ::uint32_t ispartyleader_;
    ::uint32_t isready_;
    ::uint32_t isingame_;
    ::uint32_t partyidx_;
    ::uint32_t gearscore_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fCharacter_2eproto;
};
// -------------------------------------------------------------------

class SCHARACTER_INFO final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SCHARACTER_INFO) */ {
 public:
  inline SCHARACTER_INFO() : SCHARACTER_INFO(nullptr) {}
  ~SCHARACTER_INFO() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SCHARACTER_INFO(
      ::google::protobuf::internal::ConstantInitialized);

  inline SCHARACTER_INFO(const SCHARACTER_INFO& from) : SCHARACTER_INFO(nullptr, from) {}
  inline SCHARACTER_INFO(SCHARACTER_INFO&& from) noexcept
      : SCHARACTER_INFO(nullptr, std::move(from)) {}
  inline SCHARACTER_INFO& operator=(const SCHARACTER_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SCHARACTER_INFO& operator=(SCHARACTER_INFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SCHARACTER_INFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const SCHARACTER_INFO* internal_default_instance() {
    return reinterpret_cast<const SCHARACTER_INFO*>(
        &_SCHARACTER_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SCHARACTER_INFO& a, SCHARACTER_INFO& b) { a.Swap(&b); }
  inline void Swap(SCHARACTER_INFO* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SCHARACTER_INFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SCHARACTER_INFO* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SCHARACTER_INFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SCHARACTER_INFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SCHARACTER_INFO& from) { SCHARACTER_INFO::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SCHARACTER_INFO* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SCHARACTER_INFO"; }

 protected:
  explicit SCHARACTER_INFO(::google::protobuf::Arena* arena);
  SCHARACTER_INFO(::google::protobuf::Arena* arena, const SCHARACTER_INFO& from);
  SCHARACTER_INFO(::google::protobuf::Arena* arena, SCHARACTER_INFO&& from) noexcept
      : SCHARACTER_INFO(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCharacterItemListFieldNumber = 9,
    kCharacterStorageItemListFieldNumber = 10,
    kCharacterStorageInfosFieldNumber = 11,
    kAccountIdFieldNumber = 1,
    kAccountNicknameFieldNumber = 2,
    kCharacterClassFieldNumber = 4,
    kCharacterIdFieldNumber = 5,
    kServiceGrpcFieldNumber = 8,
    kNickNameFieldNumber = 3,
    kGenderFieldNumber = 6,
    kLevelFieldNumber = 7,
  };
  // repeated .DC.Packet.SItem CharacterItemList = 9;
  int characteritemlist_size() const;
  private:
  int _internal_characteritemlist_size() const;

  public:
  void clear_characteritemlist() ;
  ::DC::Packet::SItem* mutable_characteritemlist(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* mutable_characteritemlist();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& _internal_characteritemlist() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* _internal_mutable_characteritemlist();
  public:
  const ::DC::Packet::SItem& characteritemlist(int index) const;
  ::DC::Packet::SItem* add_characteritemlist();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& characteritemlist() const;
  // repeated .DC.Packet.SItem CharacterStorageItemList = 10;
  int characterstorageitemlist_size() const;
  private:
  int _internal_characterstorageitemlist_size() const;

  public:
  void clear_characterstorageitemlist() ;
  ::DC::Packet::SItem* mutable_characterstorageitemlist(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* mutable_characterstorageitemlist();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& _internal_characterstorageitemlist() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* _internal_mutable_characterstorageitemlist();
  public:
  const ::DC::Packet::SItem& characterstorageitemlist(int index) const;
  ::DC::Packet::SItem* add_characterstorageitemlist();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& characterstorageitemlist() const;
  // repeated .DC.Packet.SSTORAGE_INFO CharacterStorageInfos = 11;
  int characterstorageinfos_size() const;
  private:
  int _internal_characterstorageinfos_size() const;

  public:
  void clear_characterstorageinfos() ;
  ::DC::Packet::SSTORAGE_INFO* mutable_characterstorageinfos(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SSTORAGE_INFO>* mutable_characterstorageinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSTORAGE_INFO>& _internal_characterstorageinfos() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SSTORAGE_INFO>* _internal_mutable_characterstorageinfos();
  public:
  const ::DC::Packet::SSTORAGE_INFO& characterstorageinfos(int index) const;
  ::DC::Packet::SSTORAGE_INFO* add_characterstorageinfos();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSTORAGE_INFO>& characterstorageinfos() const;
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string accountNickname = 2;
  void clear_accountnickname() ;
  const std::string& accountnickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountnickname(Arg_&& arg, Args_... args);
  std::string* mutable_accountnickname();
  PROTOBUF_NODISCARD std::string* release_accountnickname();
  void set_allocated_accountnickname(std::string* value);

  private:
  const std::string& _internal_accountnickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountnickname(
      const std::string& value);
  std::string* _internal_mutable_accountnickname();

  public:
  // string characterClass = 4;
  void clear_characterclass() ;
  const std::string& characterclass() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterclass(Arg_&& arg, Args_... args);
  std::string* mutable_characterclass();
  PROTOBUF_NODISCARD std::string* release_characterclass();
  void set_allocated_characterclass(std::string* value);

  private:
  const std::string& _internal_characterclass() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterclass(
      const std::string& value);
  std::string* _internal_mutable_characterclass();

  public:
  // string characterId = 5;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string serviceGrpc = 8;
  void clear_servicegrpc() ;
  const std::string& servicegrpc() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_servicegrpc(Arg_&& arg, Args_... args);
  std::string* mutable_servicegrpc();
  PROTOBUF_NODISCARD std::string* release_servicegrpc();
  void set_allocated_servicegrpc(std::string* value);

  private:
  const std::string& _internal_servicegrpc() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_servicegrpc(
      const std::string& value);
  std::string* _internal_mutable_servicegrpc();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // uint32 gender = 6;
  void clear_gender() ;
  ::uint32_t gender() const;
  void set_gender(::uint32_t value);

  private:
  ::uint32_t _internal_gender() const;
  void _internal_set_gender(::uint32_t value);

  public:
  // uint32 level = 7;
  void clear_level() ;
  ::uint32_t level() const;
  void set_level(::uint32_t value);

  private:
  ::uint32_t _internal_level() const;
  void _internal_set_level(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SCHARACTER_INFO)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 4,
      102, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SCHARACTER_INFO_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SCHARACTER_INFO& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SItem > characteritemlist_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SItem > characterstorageitemlist_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SSTORAGE_INFO > characterstorageinfos_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr accountnickname_;
    ::google::protobuf::internal::ArenaStringPtr characterclass_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr servicegrpc_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    ::uint32_t gender_;
    ::uint32_t level_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fCharacter_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SSTORAGE_INFO

// uint32 inventoryId = 1;
inline void SSTORAGE_INFO::clear_inventoryid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inventoryid_ = 0u;
}
inline ::uint32_t SSTORAGE_INFO::inventoryid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SSTORAGE_INFO.inventoryId)
  return _internal_inventoryid();
}
inline void SSTORAGE_INFO::set_inventoryid(::uint32_t value) {
  _internal_set_inventoryid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SSTORAGE_INFO.inventoryId)
}
inline ::uint32_t SSTORAGE_INFO::_internal_inventoryid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inventoryid_;
}
inline void SSTORAGE_INFO::_internal_set_inventoryid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inventoryid_ = value;
}

// repeated .DC.Packet.SItem CharacterStorageItemList = 2;
inline int SSTORAGE_INFO::_internal_characterstorageitemlist_size() const {
  return _internal_characterstorageitemlist().size();
}
inline int SSTORAGE_INFO::characterstorageitemlist_size() const {
  return _internal_characterstorageitemlist_size();
}
inline ::DC::Packet::SItem* SSTORAGE_INFO::mutable_characterstorageitemlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SSTORAGE_INFO.CharacterStorageItemList)
  return _internal_mutable_characterstorageitemlist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* SSTORAGE_INFO::mutable_characterstorageitemlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SSTORAGE_INFO.CharacterStorageItemList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_characterstorageitemlist();
}
inline const ::DC::Packet::SItem& SSTORAGE_INFO::characterstorageitemlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SSTORAGE_INFO.CharacterStorageItemList)
  return _internal_characterstorageitemlist().Get(index);
}
inline ::DC::Packet::SItem* SSTORAGE_INFO::add_characterstorageitemlist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SItem* _add = _internal_mutable_characterstorageitemlist()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SSTORAGE_INFO.CharacterStorageItemList)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& SSTORAGE_INFO::characterstorageitemlist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SSTORAGE_INFO.CharacterStorageItemList)
  return _internal_characterstorageitemlist();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>&
SSTORAGE_INFO::_internal_characterstorageitemlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterstorageitemlist_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>*
SSTORAGE_INFO::_internal_mutable_characterstorageitemlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.characterstorageitemlist_;
}

// -------------------------------------------------------------------

// SCHARACTER_INFO

// string accountId = 1;
inline void SCHARACTER_INFO::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SCHARACTER_INFO::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_INFO.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_INFO::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_INFO.accountId)
}
inline std::string* SCHARACTER_INFO::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_INFO.accountId)
  return _s;
}
inline const std::string& SCHARACTER_INFO::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SCHARACTER_INFO::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SCHARACTER_INFO::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SCHARACTER_INFO::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_INFO.accountId)
  return _impl_.accountid_.Release();
}
inline void SCHARACTER_INFO::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_INFO.accountId)
}

// string accountNickname = 2;
inline void SCHARACTER_INFO::clear_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.ClearToEmpty();
}
inline const std::string& SCHARACTER_INFO::accountnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_INFO.accountNickname)
  return _internal_accountnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_INFO::set_accountnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_INFO.accountNickname)
}
inline std::string* SCHARACTER_INFO::mutable_accountnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_INFO.accountNickname)
  return _s;
}
inline const std::string& SCHARACTER_INFO::_internal_accountnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountnickname_.Get();
}
inline void SCHARACTER_INFO::_internal_set_accountnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(value, GetArena());
}
inline std::string* SCHARACTER_INFO::_internal_mutable_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountnickname_.Mutable( GetArena());
}
inline std::string* SCHARACTER_INFO::release_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_INFO.accountNickname)
  return _impl_.accountnickname_.Release();
}
inline void SCHARACTER_INFO::set_allocated_accountnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountnickname_.IsDefault()) {
          _impl_.accountnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_INFO.accountNickname)
}

// .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
inline bool SCHARACTER_INFO::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline void SCHARACTER_INFO::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ != nullptr) _impl_.nickname_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SCHARACTER_INFO::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SCHARACTER_INFO::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_INFO.nickName)
  return _internal_nickname();
}
inline void SCHARACTER_INFO::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SCHARACTER_INFO.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_INFO::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_INFO::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_INFO.nickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_INFO::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_INFO::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_INFO.nickName)
  return _msg;
}
inline void SCHARACTER_INFO::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_INFO.nickName)
}

// string characterClass = 4;
inline void SCHARACTER_INFO::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& SCHARACTER_INFO::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_INFO.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_INFO::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_INFO.characterClass)
}
inline std::string* SCHARACTER_INFO::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_INFO.characterClass)
  return _s;
}
inline const std::string& SCHARACTER_INFO::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void SCHARACTER_INFO::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* SCHARACTER_INFO::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* SCHARACTER_INFO::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_INFO.characterClass)
  return _impl_.characterclass_.Release();
}
inline void SCHARACTER_INFO::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_INFO.characterClass)
}

// string characterId = 5;
inline void SCHARACTER_INFO::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SCHARACTER_INFO::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_INFO.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_INFO::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_INFO.characterId)
}
inline std::string* SCHARACTER_INFO::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_INFO.characterId)
  return _s;
}
inline const std::string& SCHARACTER_INFO::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SCHARACTER_INFO::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SCHARACTER_INFO::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SCHARACTER_INFO::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_INFO.characterId)
  return _impl_.characterid_.Release();
}
inline void SCHARACTER_INFO::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_INFO.characterId)
}

// uint32 gender = 6;
inline void SCHARACTER_INFO::clear_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = 0u;
}
inline ::uint32_t SCHARACTER_INFO::gender() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_INFO.gender)
  return _internal_gender();
}
inline void SCHARACTER_INFO::set_gender(::uint32_t value) {
  _internal_set_gender(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_INFO.gender)
}
inline ::uint32_t SCHARACTER_INFO::_internal_gender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gender_;
}
inline void SCHARACTER_INFO::_internal_set_gender(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = value;
}

// uint32 level = 7;
inline void SCHARACTER_INFO::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0u;
}
inline ::uint32_t SCHARACTER_INFO::level() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_INFO.level)
  return _internal_level();
}
inline void SCHARACTER_INFO::set_level(::uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_INFO.level)
}
inline ::uint32_t SCHARACTER_INFO::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void SCHARACTER_INFO::_internal_set_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// string serviceGrpc = 8;
inline void SCHARACTER_INFO::clear_servicegrpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.servicegrpc_.ClearToEmpty();
}
inline const std::string& SCHARACTER_INFO::servicegrpc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_INFO.serviceGrpc)
  return _internal_servicegrpc();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_INFO::set_servicegrpc(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.servicegrpc_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_INFO.serviceGrpc)
}
inline std::string* SCHARACTER_INFO::mutable_servicegrpc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_servicegrpc();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_INFO.serviceGrpc)
  return _s;
}
inline const std::string& SCHARACTER_INFO::_internal_servicegrpc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.servicegrpc_.Get();
}
inline void SCHARACTER_INFO::_internal_set_servicegrpc(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.servicegrpc_.Set(value, GetArena());
}
inline std::string* SCHARACTER_INFO::_internal_mutable_servicegrpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.servicegrpc_.Mutable( GetArena());
}
inline std::string* SCHARACTER_INFO::release_servicegrpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_INFO.serviceGrpc)
  return _impl_.servicegrpc_.Release();
}
inline void SCHARACTER_INFO::set_allocated_servicegrpc(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.servicegrpc_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.servicegrpc_.IsDefault()) {
          _impl_.servicegrpc_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_INFO.serviceGrpc)
}

// repeated .DC.Packet.SItem CharacterItemList = 9;
inline int SCHARACTER_INFO::_internal_characteritemlist_size() const {
  return _internal_characteritemlist().size();
}
inline int SCHARACTER_INFO::characteritemlist_size() const {
  return _internal_characteritemlist_size();
}
inline ::DC::Packet::SItem* SCHARACTER_INFO::mutable_characteritemlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_INFO.CharacterItemList)
  return _internal_mutable_characteritemlist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* SCHARACTER_INFO::mutable_characteritemlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SCHARACTER_INFO.CharacterItemList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_characteritemlist();
}
inline const ::DC::Packet::SItem& SCHARACTER_INFO::characteritemlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_INFO.CharacterItemList)
  return _internal_characteritemlist().Get(index);
}
inline ::DC::Packet::SItem* SCHARACTER_INFO::add_characteritemlist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SItem* _add = _internal_mutable_characteritemlist()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SCHARACTER_INFO.CharacterItemList)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& SCHARACTER_INFO::characteritemlist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SCHARACTER_INFO.CharacterItemList)
  return _internal_characteritemlist();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>&
SCHARACTER_INFO::_internal_characteritemlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characteritemlist_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>*
SCHARACTER_INFO::_internal_mutable_characteritemlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.characteritemlist_;
}

// repeated .DC.Packet.SItem CharacterStorageItemList = 10;
inline int SCHARACTER_INFO::_internal_characterstorageitemlist_size() const {
  return _internal_characterstorageitemlist().size();
}
inline int SCHARACTER_INFO::characterstorageitemlist_size() const {
  return _internal_characterstorageitemlist_size();
}
inline ::DC::Packet::SItem* SCHARACTER_INFO::mutable_characterstorageitemlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_INFO.CharacterStorageItemList)
  return _internal_mutable_characterstorageitemlist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* SCHARACTER_INFO::mutable_characterstorageitemlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SCHARACTER_INFO.CharacterStorageItemList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_characterstorageitemlist();
}
inline const ::DC::Packet::SItem& SCHARACTER_INFO::characterstorageitemlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_INFO.CharacterStorageItemList)
  return _internal_characterstorageitemlist().Get(index);
}
inline ::DC::Packet::SItem* SCHARACTER_INFO::add_characterstorageitemlist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SItem* _add = _internal_mutable_characterstorageitemlist()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SCHARACTER_INFO.CharacterStorageItemList)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& SCHARACTER_INFO::characterstorageitemlist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SCHARACTER_INFO.CharacterStorageItemList)
  return _internal_characterstorageitemlist();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>&
SCHARACTER_INFO::_internal_characterstorageitemlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterstorageitemlist_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>*
SCHARACTER_INFO::_internal_mutable_characterstorageitemlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.characterstorageitemlist_;
}

// repeated .DC.Packet.SSTORAGE_INFO CharacterStorageInfos = 11;
inline int SCHARACTER_INFO::_internal_characterstorageinfos_size() const {
  return _internal_characterstorageinfos().size();
}
inline int SCHARACTER_INFO::characterstorageinfos_size() const {
  return _internal_characterstorageinfos_size();
}
inline void SCHARACTER_INFO::clear_characterstorageinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterstorageinfos_.Clear();
}
inline ::DC::Packet::SSTORAGE_INFO* SCHARACTER_INFO::mutable_characterstorageinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_INFO.CharacterStorageInfos)
  return _internal_mutable_characterstorageinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SSTORAGE_INFO>* SCHARACTER_INFO::mutable_characterstorageinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SCHARACTER_INFO.CharacterStorageInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_characterstorageinfos();
}
inline const ::DC::Packet::SSTORAGE_INFO& SCHARACTER_INFO::characterstorageinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_INFO.CharacterStorageInfos)
  return _internal_characterstorageinfos().Get(index);
}
inline ::DC::Packet::SSTORAGE_INFO* SCHARACTER_INFO::add_characterstorageinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SSTORAGE_INFO* _add = _internal_mutable_characterstorageinfos()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SCHARACTER_INFO.CharacterStorageInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSTORAGE_INFO>& SCHARACTER_INFO::characterstorageinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SCHARACTER_INFO.CharacterStorageInfos)
  return _internal_characterstorageinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SSTORAGE_INFO>&
SCHARACTER_INFO::_internal_characterstorageinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterstorageinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SSTORAGE_INFO>*
SCHARACTER_INFO::_internal_mutable_characterstorageinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.characterstorageinfos_;
}

// -------------------------------------------------------------------

// SCHARACTER_FRIEND_INFO

// string accountId = 1;
inline void SCHARACTER_FRIEND_INFO::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SCHARACTER_FRIEND_INFO::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_FRIEND_INFO.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_FRIEND_INFO::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_FRIEND_INFO.accountId)
}
inline std::string* SCHARACTER_FRIEND_INFO::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_FRIEND_INFO.accountId)
  return _s;
}
inline const std::string& SCHARACTER_FRIEND_INFO::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SCHARACTER_FRIEND_INFO::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SCHARACTER_FRIEND_INFO::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SCHARACTER_FRIEND_INFO::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_FRIEND_INFO.accountId)
  return _impl_.accountid_.Release();
}
inline void SCHARACTER_FRIEND_INFO::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_FRIEND_INFO.accountId)
}

// string accountNickname = 2;
inline void SCHARACTER_FRIEND_INFO::clear_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.ClearToEmpty();
}
inline const std::string& SCHARACTER_FRIEND_INFO::accountnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_FRIEND_INFO.accountNickname)
  return _internal_accountnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_FRIEND_INFO::set_accountnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_FRIEND_INFO.accountNickname)
}
inline std::string* SCHARACTER_FRIEND_INFO::mutable_accountnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_FRIEND_INFO.accountNickname)
  return _s;
}
inline const std::string& SCHARACTER_FRIEND_INFO::_internal_accountnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountnickname_.Get();
}
inline void SCHARACTER_FRIEND_INFO::_internal_set_accountnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(value, GetArena());
}
inline std::string* SCHARACTER_FRIEND_INFO::_internal_mutable_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountnickname_.Mutable( GetArena());
}
inline std::string* SCHARACTER_FRIEND_INFO::release_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_FRIEND_INFO.accountNickname)
  return _impl_.accountnickname_.Release();
}
inline void SCHARACTER_FRIEND_INFO::set_allocated_accountnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountnickname_.IsDefault()) {
          _impl_.accountnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_FRIEND_INFO.accountNickname)
}

// .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
inline bool SCHARACTER_FRIEND_INFO::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline void SCHARACTER_FRIEND_INFO::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ != nullptr) _impl_.nickname_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SCHARACTER_FRIEND_INFO::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SCHARACTER_FRIEND_INFO::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_FRIEND_INFO.nickName)
  return _internal_nickname();
}
inline void SCHARACTER_FRIEND_INFO::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SCHARACTER_FRIEND_INFO.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_FRIEND_INFO::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_FRIEND_INFO::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_FRIEND_INFO.nickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_FRIEND_INFO::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_FRIEND_INFO::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_FRIEND_INFO.nickName)
  return _msg;
}
inline void SCHARACTER_FRIEND_INFO::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_FRIEND_INFO.nickName)
}

// string characterClass = 4;
inline void SCHARACTER_FRIEND_INFO::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& SCHARACTER_FRIEND_INFO::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_FRIEND_INFO.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_FRIEND_INFO::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_FRIEND_INFO.characterClass)
}
inline std::string* SCHARACTER_FRIEND_INFO::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_FRIEND_INFO.characterClass)
  return _s;
}
inline const std::string& SCHARACTER_FRIEND_INFO::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void SCHARACTER_FRIEND_INFO::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* SCHARACTER_FRIEND_INFO::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* SCHARACTER_FRIEND_INFO::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_FRIEND_INFO.characterClass)
  return _impl_.characterclass_.Release();
}
inline void SCHARACTER_FRIEND_INFO::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_FRIEND_INFO.characterClass)
}

// string characterId = 5;
inline void SCHARACTER_FRIEND_INFO::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SCHARACTER_FRIEND_INFO::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_FRIEND_INFO.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_FRIEND_INFO::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_FRIEND_INFO.characterId)
}
inline std::string* SCHARACTER_FRIEND_INFO::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_FRIEND_INFO.characterId)
  return _s;
}
inline const std::string& SCHARACTER_FRIEND_INFO::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SCHARACTER_FRIEND_INFO::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SCHARACTER_FRIEND_INFO::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SCHARACTER_FRIEND_INFO::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_FRIEND_INFO.characterId)
  return _impl_.characterid_.Release();
}
inline void SCHARACTER_FRIEND_INFO::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_FRIEND_INFO.characterId)
}

// uint32 gender = 6;
inline void SCHARACTER_FRIEND_INFO::clear_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = 0u;
}
inline ::uint32_t SCHARACTER_FRIEND_INFO::gender() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_FRIEND_INFO.gender)
  return _internal_gender();
}
inline void SCHARACTER_FRIEND_INFO::set_gender(::uint32_t value) {
  _internal_set_gender(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_FRIEND_INFO.gender)
}
inline ::uint32_t SCHARACTER_FRIEND_INFO::_internal_gender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gender_;
}
inline void SCHARACTER_FRIEND_INFO::_internal_set_gender(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = value;
}

// uint32 level = 7;
inline void SCHARACTER_FRIEND_INFO::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0u;
}
inline ::uint32_t SCHARACTER_FRIEND_INFO::level() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_FRIEND_INFO.level)
  return _internal_level();
}
inline void SCHARACTER_FRIEND_INFO::set_level(::uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_FRIEND_INFO.level)
}
inline ::uint32_t SCHARACTER_FRIEND_INFO::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void SCHARACTER_FRIEND_INFO::_internal_set_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// uint32 locationStatus = 8;
inline void SCHARACTER_FRIEND_INFO::clear_locationstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locationstatus_ = 0u;
}
inline ::uint32_t SCHARACTER_FRIEND_INFO::locationstatus() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_FRIEND_INFO.locationStatus)
  return _internal_locationstatus();
}
inline void SCHARACTER_FRIEND_INFO::set_locationstatus(::uint32_t value) {
  _internal_set_locationstatus(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_FRIEND_INFO.locationStatus)
}
inline ::uint32_t SCHARACTER_FRIEND_INFO::_internal_locationstatus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.locationstatus_;
}
inline void SCHARACTER_FRIEND_INFO::_internal_set_locationstatus(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locationstatus_ = value;
}

// uint32 PartyMemeberCount = 9;
inline void SCHARACTER_FRIEND_INFO::clear_partymemebercount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partymemebercount_ = 0u;
}
inline ::uint32_t SCHARACTER_FRIEND_INFO::partymemebercount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_FRIEND_INFO.PartyMemeberCount)
  return _internal_partymemebercount();
}
inline void SCHARACTER_FRIEND_INFO::set_partymemebercount(::uint32_t value) {
  _internal_set_partymemebercount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_FRIEND_INFO.PartyMemeberCount)
}
inline ::uint32_t SCHARACTER_FRIEND_INFO::_internal_partymemebercount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partymemebercount_;
}
inline void SCHARACTER_FRIEND_INFO::_internal_set_partymemebercount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partymemebercount_ = value;
}

// uint32 PartyMaxMemeberCount = 10;
inline void SCHARACTER_FRIEND_INFO::clear_partymaxmemebercount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partymaxmemebercount_ = 0u;
}
inline ::uint32_t SCHARACTER_FRIEND_INFO::partymaxmemebercount() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_FRIEND_INFO.PartyMaxMemeberCount)
  return _internal_partymaxmemebercount();
}
inline void SCHARACTER_FRIEND_INFO::set_partymaxmemebercount(::uint32_t value) {
  _internal_set_partymaxmemebercount(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_FRIEND_INFO.PartyMaxMemeberCount)
}
inline ::uint32_t SCHARACTER_FRIEND_INFO::_internal_partymaxmemebercount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partymaxmemebercount_;
}
inline void SCHARACTER_FRIEND_INFO::_internal_set_partymaxmemebercount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partymaxmemebercount_ = value;
}

// -------------------------------------------------------------------

// SCHARACTER_PARTY_INFO

// string accountId = 1;
inline void SCHARACTER_PARTY_INFO::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SCHARACTER_PARTY_INFO::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_PARTY_INFO.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_PARTY_INFO::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_PARTY_INFO.accountId)
}
inline std::string* SCHARACTER_PARTY_INFO::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_PARTY_INFO.accountId)
  return _s;
}
inline const std::string& SCHARACTER_PARTY_INFO::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SCHARACTER_PARTY_INFO::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SCHARACTER_PARTY_INFO::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SCHARACTER_PARTY_INFO::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_PARTY_INFO.accountId)
  return _impl_.accountid_.Release();
}
inline void SCHARACTER_PARTY_INFO::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_PARTY_INFO.accountId)
}

// string accountNickname = 2;
inline void SCHARACTER_PARTY_INFO::clear_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.ClearToEmpty();
}
inline const std::string& SCHARACTER_PARTY_INFO::accountnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_PARTY_INFO.accountNickname)
  return _internal_accountnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_PARTY_INFO::set_accountnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_PARTY_INFO.accountNickname)
}
inline std::string* SCHARACTER_PARTY_INFO::mutable_accountnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_PARTY_INFO.accountNickname)
  return _s;
}
inline const std::string& SCHARACTER_PARTY_INFO::_internal_accountnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountnickname_.Get();
}
inline void SCHARACTER_PARTY_INFO::_internal_set_accountnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(value, GetArena());
}
inline std::string* SCHARACTER_PARTY_INFO::_internal_mutable_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountnickname_.Mutable( GetArena());
}
inline std::string* SCHARACTER_PARTY_INFO::release_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_PARTY_INFO.accountNickname)
  return _impl_.accountnickname_.Release();
}
inline void SCHARACTER_PARTY_INFO::set_allocated_accountnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountnickname_.IsDefault()) {
          _impl_.accountnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_PARTY_INFO.accountNickname)
}

// .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
inline bool SCHARACTER_PARTY_INFO::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline void SCHARACTER_PARTY_INFO::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ != nullptr) _impl_.nickname_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SCHARACTER_PARTY_INFO::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SCHARACTER_PARTY_INFO::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_PARTY_INFO.nickName)
  return _internal_nickname();
}
inline void SCHARACTER_PARTY_INFO::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SCHARACTER_PARTY_INFO.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_PARTY_INFO::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_PARTY_INFO::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_PARTY_INFO.nickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_PARTY_INFO::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_PARTY_INFO::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_PARTY_INFO.nickName)
  return _msg;
}
inline void SCHARACTER_PARTY_INFO::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_PARTY_INFO.nickName)
}

// string characterClass = 4;
inline void SCHARACTER_PARTY_INFO::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& SCHARACTER_PARTY_INFO::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_PARTY_INFO.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_PARTY_INFO::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_PARTY_INFO.characterClass)
}
inline std::string* SCHARACTER_PARTY_INFO::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_PARTY_INFO.characterClass)
  return _s;
}
inline const std::string& SCHARACTER_PARTY_INFO::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void SCHARACTER_PARTY_INFO::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* SCHARACTER_PARTY_INFO::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* SCHARACTER_PARTY_INFO::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_PARTY_INFO.characterClass)
  return _impl_.characterclass_.Release();
}
inline void SCHARACTER_PARTY_INFO::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_PARTY_INFO.characterClass)
}

// string characterId = 5;
inline void SCHARACTER_PARTY_INFO::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SCHARACTER_PARTY_INFO::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_PARTY_INFO.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_PARTY_INFO::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_PARTY_INFO.characterId)
}
inline std::string* SCHARACTER_PARTY_INFO::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_PARTY_INFO.characterId)
  return _s;
}
inline const std::string& SCHARACTER_PARTY_INFO::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SCHARACTER_PARTY_INFO::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SCHARACTER_PARTY_INFO::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SCHARACTER_PARTY_INFO::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_PARTY_INFO.characterId)
  return _impl_.characterid_.Release();
}
inline void SCHARACTER_PARTY_INFO::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_PARTY_INFO.characterId)
}

// uint32 gender = 6;
inline void SCHARACTER_PARTY_INFO::clear_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = 0u;
}
inline ::uint32_t SCHARACTER_PARTY_INFO::gender() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_PARTY_INFO.gender)
  return _internal_gender();
}
inline void SCHARACTER_PARTY_INFO::set_gender(::uint32_t value) {
  _internal_set_gender(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_PARTY_INFO.gender)
}
inline ::uint32_t SCHARACTER_PARTY_INFO::_internal_gender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gender_;
}
inline void SCHARACTER_PARTY_INFO::_internal_set_gender(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = value;
}

// uint32 level = 7;
inline void SCHARACTER_PARTY_INFO::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0u;
}
inline ::uint32_t SCHARACTER_PARTY_INFO::level() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_PARTY_INFO.level)
  return _internal_level();
}
inline void SCHARACTER_PARTY_INFO::set_level(::uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_PARTY_INFO.level)
}
inline ::uint32_t SCHARACTER_PARTY_INFO::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void SCHARACTER_PARTY_INFO::_internal_set_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// uint32 isPartyLeader = 8;
inline void SCHARACTER_PARTY_INFO::clear_ispartyleader() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ispartyleader_ = 0u;
}
inline ::uint32_t SCHARACTER_PARTY_INFO::ispartyleader() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_PARTY_INFO.isPartyLeader)
  return _internal_ispartyleader();
}
inline void SCHARACTER_PARTY_INFO::set_ispartyleader(::uint32_t value) {
  _internal_set_ispartyleader(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_PARTY_INFO.isPartyLeader)
}
inline ::uint32_t SCHARACTER_PARTY_INFO::_internal_ispartyleader() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ispartyleader_;
}
inline void SCHARACTER_PARTY_INFO::_internal_set_ispartyleader(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ispartyleader_ = value;
}

// uint32 isReady = 9;
inline void SCHARACTER_PARTY_INFO::clear_isready() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isready_ = 0u;
}
inline ::uint32_t SCHARACTER_PARTY_INFO::isready() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_PARTY_INFO.isReady)
  return _internal_isready();
}
inline void SCHARACTER_PARTY_INFO::set_isready(::uint32_t value) {
  _internal_set_isready(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_PARTY_INFO.isReady)
}
inline ::uint32_t SCHARACTER_PARTY_INFO::_internal_isready() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isready_;
}
inline void SCHARACTER_PARTY_INFO::_internal_set_isready(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isready_ = value;
}

// uint32 isInGame = 10;
inline void SCHARACTER_PARTY_INFO::clear_isingame() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isingame_ = 0u;
}
inline ::uint32_t SCHARACTER_PARTY_INFO::isingame() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_PARTY_INFO.isInGame)
  return _internal_isingame();
}
inline void SCHARACTER_PARTY_INFO::set_isingame(::uint32_t value) {
  _internal_set_isingame(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_PARTY_INFO.isInGame)
}
inline ::uint32_t SCHARACTER_PARTY_INFO::_internal_isingame() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isingame_;
}
inline void SCHARACTER_PARTY_INFO::_internal_set_isingame(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isingame_ = value;
}

// repeated .DC.Packet.SItem equipItemList = 11;
inline int SCHARACTER_PARTY_INFO::_internal_equipitemlist_size() const {
  return _internal_equipitemlist().size();
}
inline int SCHARACTER_PARTY_INFO::equipitemlist_size() const {
  return _internal_equipitemlist_size();
}
inline ::DC::Packet::SItem* SCHARACTER_PARTY_INFO::mutable_equipitemlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_PARTY_INFO.equipItemList)
  return _internal_mutable_equipitemlist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>* SCHARACTER_PARTY_INFO::mutable_equipitemlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SCHARACTER_PARTY_INFO.equipItemList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_equipitemlist();
}
inline const ::DC::Packet::SItem& SCHARACTER_PARTY_INFO::equipitemlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_PARTY_INFO.equipItemList)
  return _internal_equipitemlist().Get(index);
}
inline ::DC::Packet::SItem* SCHARACTER_PARTY_INFO::add_equipitemlist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SItem* _add = _internal_mutable_equipitemlist()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SCHARACTER_PARTY_INFO.equipItemList)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>& SCHARACTER_PARTY_INFO::equipitemlist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SCHARACTER_PARTY_INFO.equipItemList)
  return _internal_equipitemlist();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>&
SCHARACTER_PARTY_INFO::_internal_equipitemlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.equipitemlist_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SItem>*
SCHARACTER_PARTY_INFO::_internal_mutable_equipitemlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.equipitemlist_;
}

// uint32 partyIdx = 12;
inline void SCHARACTER_PARTY_INFO::clear_partyidx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partyidx_ = 0u;
}
inline ::uint32_t SCHARACTER_PARTY_INFO::partyidx() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_PARTY_INFO.partyIdx)
  return _internal_partyidx();
}
inline void SCHARACTER_PARTY_INFO::set_partyidx(::uint32_t value) {
  _internal_set_partyidx(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_PARTY_INFO.partyIdx)
}
inline ::uint32_t SCHARACTER_PARTY_INFO::_internal_partyidx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partyidx_;
}
inline void SCHARACTER_PARTY_INFO::_internal_set_partyidx(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partyidx_ = value;
}

// repeated .DC.Packet.SPerk perks = 13;
inline int SCHARACTER_PARTY_INFO::_internal_perks_size() const {
  return _internal_perks().size();
}
inline int SCHARACTER_PARTY_INFO::perks_size() const {
  return _internal_perks_size();
}
inline ::DC::Packet::SPerk* SCHARACTER_PARTY_INFO::mutable_perks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_PARTY_INFO.perks)
  return _internal_mutable_perks()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>* SCHARACTER_PARTY_INFO::mutable_perks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SCHARACTER_PARTY_INFO.perks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_perks();
}
inline const ::DC::Packet::SPerk& SCHARACTER_PARTY_INFO::perks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_PARTY_INFO.perks)
  return _internal_perks().Get(index);
}
inline ::DC::Packet::SPerk* SCHARACTER_PARTY_INFO::add_perks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SPerk* _add = _internal_mutable_perks()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SCHARACTER_PARTY_INFO.perks)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>& SCHARACTER_PARTY_INFO::perks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SCHARACTER_PARTY_INFO.perks)
  return _internal_perks();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>&
SCHARACTER_PARTY_INFO::_internal_perks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.perks_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SPerk>*
SCHARACTER_PARTY_INFO::_internal_mutable_perks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.perks_;
}

// uint32 gearScore = 14;
inline void SCHARACTER_PARTY_INFO::clear_gearscore() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gearscore_ = 0u;
}
inline ::uint32_t SCHARACTER_PARTY_INFO::gearscore() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_PARTY_INFO.gearScore)
  return _internal_gearscore();
}
inline void SCHARACTER_PARTY_INFO::set_gearscore(::uint32_t value) {
  _internal_set_gearscore(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_PARTY_INFO.gearScore)
}
inline ::uint32_t SCHARACTER_PARTY_INFO::_internal_gearscore() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gearscore_;
}
inline void SCHARACTER_PARTY_INFO::_internal_set_gearscore(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gearscore_ = value;
}

// -------------------------------------------------------------------

// SCHARACTER_TRADE_INFO

// string accountId = 1;
inline void SCHARACTER_TRADE_INFO::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SCHARACTER_TRADE_INFO::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_TRADE_INFO.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_TRADE_INFO::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_TRADE_INFO.accountId)
}
inline std::string* SCHARACTER_TRADE_INFO::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_TRADE_INFO.accountId)
  return _s;
}
inline const std::string& SCHARACTER_TRADE_INFO::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SCHARACTER_TRADE_INFO::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SCHARACTER_TRADE_INFO::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SCHARACTER_TRADE_INFO::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_TRADE_INFO.accountId)
  return _impl_.accountid_.Release();
}
inline void SCHARACTER_TRADE_INFO::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_TRADE_INFO.accountId)
}

// string accountNickname = 2;
inline void SCHARACTER_TRADE_INFO::clear_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.ClearToEmpty();
}
inline const std::string& SCHARACTER_TRADE_INFO::accountnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_TRADE_INFO.accountNickname)
  return _internal_accountnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_TRADE_INFO::set_accountnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_TRADE_INFO.accountNickname)
}
inline std::string* SCHARACTER_TRADE_INFO::mutable_accountnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_TRADE_INFO.accountNickname)
  return _s;
}
inline const std::string& SCHARACTER_TRADE_INFO::_internal_accountnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountnickname_.Get();
}
inline void SCHARACTER_TRADE_INFO::_internal_set_accountnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(value, GetArena());
}
inline std::string* SCHARACTER_TRADE_INFO::_internal_mutable_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountnickname_.Mutable( GetArena());
}
inline std::string* SCHARACTER_TRADE_INFO::release_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_TRADE_INFO.accountNickname)
  return _impl_.accountnickname_.Release();
}
inline void SCHARACTER_TRADE_INFO::set_allocated_accountnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountnickname_.IsDefault()) {
          _impl_.accountnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_TRADE_INFO.accountNickname)
}

// .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
inline bool SCHARACTER_TRADE_INFO::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline void SCHARACTER_TRADE_INFO::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ != nullptr) _impl_.nickname_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SCHARACTER_TRADE_INFO::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SCHARACTER_TRADE_INFO::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_TRADE_INFO.nickName)
  return _internal_nickname();
}
inline void SCHARACTER_TRADE_INFO::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SCHARACTER_TRADE_INFO.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_TRADE_INFO::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_TRADE_INFO::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_TRADE_INFO.nickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_TRADE_INFO::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_TRADE_INFO::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_TRADE_INFO.nickName)
  return _msg;
}
inline void SCHARACTER_TRADE_INFO::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_TRADE_INFO.nickName)
}

// string characterClass = 4;
inline void SCHARACTER_TRADE_INFO::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& SCHARACTER_TRADE_INFO::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_TRADE_INFO.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_TRADE_INFO::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_TRADE_INFO.characterClass)
}
inline std::string* SCHARACTER_TRADE_INFO::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_TRADE_INFO.characterClass)
  return _s;
}
inline const std::string& SCHARACTER_TRADE_INFO::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void SCHARACTER_TRADE_INFO::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* SCHARACTER_TRADE_INFO::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* SCHARACTER_TRADE_INFO::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_TRADE_INFO.characterClass)
  return _impl_.characterclass_.Release();
}
inline void SCHARACTER_TRADE_INFO::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_TRADE_INFO.characterClass)
}

// string characterId = 5;
inline void SCHARACTER_TRADE_INFO::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SCHARACTER_TRADE_INFO::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_TRADE_INFO.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_TRADE_INFO::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_TRADE_INFO.characterId)
}
inline std::string* SCHARACTER_TRADE_INFO::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_TRADE_INFO.characterId)
  return _s;
}
inline const std::string& SCHARACTER_TRADE_INFO::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SCHARACTER_TRADE_INFO::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SCHARACTER_TRADE_INFO::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SCHARACTER_TRADE_INFO::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_TRADE_INFO.characterId)
  return _impl_.characterid_.Release();
}
inline void SCHARACTER_TRADE_INFO::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_TRADE_INFO.characterId)
}

// uint32 gender = 6;
inline void SCHARACTER_TRADE_INFO::clear_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = 0u;
}
inline ::uint32_t SCHARACTER_TRADE_INFO::gender() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_TRADE_INFO.gender)
  return _internal_gender();
}
inline void SCHARACTER_TRADE_INFO::set_gender(::uint32_t value) {
  _internal_set_gender(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_TRADE_INFO.gender)
}
inline ::uint32_t SCHARACTER_TRADE_INFO::_internal_gender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gender_;
}
inline void SCHARACTER_TRADE_INFO::_internal_set_gender(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = value;
}

// uint32 level = 7;
inline void SCHARACTER_TRADE_INFO::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0u;
}
inline ::uint32_t SCHARACTER_TRADE_INFO::level() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_TRADE_INFO.level)
  return _internal_level();
}
inline void SCHARACTER_TRADE_INFO::set_level(::uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_TRADE_INFO.level)
}
inline ::uint32_t SCHARACTER_TRADE_INFO::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void SCHARACTER_TRADE_INFO::_internal_set_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// uint32 characterLocation = 8;
inline void SCHARACTER_TRADE_INFO::clear_characterlocation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterlocation_ = 0u;
}
inline ::uint32_t SCHARACTER_TRADE_INFO::characterlocation() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_TRADE_INFO.characterLocation)
  return _internal_characterlocation();
}
inline void SCHARACTER_TRADE_INFO::set_characterlocation(::uint32_t value) {
  _internal_set_characterlocation(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_TRADE_INFO.characterLocation)
}
inline ::uint32_t SCHARACTER_TRADE_INFO::_internal_characterlocation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterlocation_;
}
inline void SCHARACTER_TRADE_INFO::_internal_set_characterlocation(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterlocation_ = value;
}

// -------------------------------------------------------------------

// SACCOUNT_NICKNAME

// string originalNickName = 1;
inline void SACCOUNT_NICKNAME::clear_originalnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.originalnickname_.ClearToEmpty();
}
inline const std::string& SACCOUNT_NICKNAME::originalnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SACCOUNT_NICKNAME.originalNickName)
  return _internal_originalnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SACCOUNT_NICKNAME::set_originalnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.originalnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SACCOUNT_NICKNAME.originalNickName)
}
inline std::string* SACCOUNT_NICKNAME::mutable_originalnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_originalnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SACCOUNT_NICKNAME.originalNickName)
  return _s;
}
inline const std::string& SACCOUNT_NICKNAME::_internal_originalnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.originalnickname_.Get();
}
inline void SACCOUNT_NICKNAME::_internal_set_originalnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.originalnickname_.Set(value, GetArena());
}
inline std::string* SACCOUNT_NICKNAME::_internal_mutable_originalnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.originalnickname_.Mutable( GetArena());
}
inline std::string* SACCOUNT_NICKNAME::release_originalnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SACCOUNT_NICKNAME.originalNickName)
  return _impl_.originalnickname_.Release();
}
inline void SACCOUNT_NICKNAME::set_allocated_originalnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.originalnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.originalnickname_.IsDefault()) {
          _impl_.originalnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SACCOUNT_NICKNAME.originalNickName)
}

// string streamingModeNickName = 2;
inline void SACCOUNT_NICKNAME::clear_streamingmodenickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.streamingmodenickname_.ClearToEmpty();
}
inline const std::string& SACCOUNT_NICKNAME::streamingmodenickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SACCOUNT_NICKNAME.streamingModeNickName)
  return _internal_streamingmodenickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SACCOUNT_NICKNAME::set_streamingmodenickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.streamingmodenickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SACCOUNT_NICKNAME.streamingModeNickName)
}
inline std::string* SACCOUNT_NICKNAME::mutable_streamingmodenickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_streamingmodenickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SACCOUNT_NICKNAME.streamingModeNickName)
  return _s;
}
inline const std::string& SACCOUNT_NICKNAME::_internal_streamingmodenickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.streamingmodenickname_.Get();
}
inline void SACCOUNT_NICKNAME::_internal_set_streamingmodenickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.streamingmodenickname_.Set(value, GetArena());
}
inline std::string* SACCOUNT_NICKNAME::_internal_mutable_streamingmodenickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.streamingmodenickname_.Mutable( GetArena());
}
inline std::string* SACCOUNT_NICKNAME::release_streamingmodenickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SACCOUNT_NICKNAME.streamingModeNickName)
  return _impl_.streamingmodenickname_.Release();
}
inline void SACCOUNT_NICKNAME::set_allocated_streamingmodenickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.streamingmodenickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.streamingmodenickname_.IsDefault()) {
          _impl_.streamingmodenickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SACCOUNT_NICKNAME.streamingModeNickName)
}

// int32 karmaRating = 3;
inline void SACCOUNT_NICKNAME::clear_karmarating() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.karmarating_ = 0;
}
inline ::int32_t SACCOUNT_NICKNAME::karmarating() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SACCOUNT_NICKNAME.karmaRating)
  return _internal_karmarating();
}
inline void SACCOUNT_NICKNAME::set_karmarating(::int32_t value) {
  _internal_set_karmarating(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SACCOUNT_NICKNAME.karmaRating)
}
inline ::int32_t SACCOUNT_NICKNAME::_internal_karmarating() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.karmarating_;
}
inline void SACCOUNT_NICKNAME::_internal_set_karmarating(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.karmarating_ = value;
}

// string rankId = 4;
inline void SACCOUNT_NICKNAME::clear_rankid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankid_.ClearToEmpty();
}
inline const std::string& SACCOUNT_NICKNAME::rankid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SACCOUNT_NICKNAME.rankId)
  return _internal_rankid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SACCOUNT_NICKNAME::set_rankid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SACCOUNT_NICKNAME.rankId)
}
inline std::string* SACCOUNT_NICKNAME::mutable_rankid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rankid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SACCOUNT_NICKNAME.rankId)
  return _s;
}
inline const std::string& SACCOUNT_NICKNAME::_internal_rankid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rankid_.Get();
}
inline void SACCOUNT_NICKNAME::_internal_set_rankid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankid_.Set(value, GetArena());
}
inline std::string* SACCOUNT_NICKNAME::_internal_mutable_rankid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rankid_.Mutable( GetArena());
}
inline std::string* SACCOUNT_NICKNAME::release_rankid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SACCOUNT_NICKNAME.rankId)
  return _impl_.rankid_.Release();
}
inline void SACCOUNT_NICKNAME::set_allocated_rankid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rankid_.IsDefault()) {
          _impl_.rankid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SACCOUNT_NICKNAME.rankId)
}

// uint32 fame = 5;
inline void SACCOUNT_NICKNAME::clear_fame() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fame_ = 0u;
}
inline ::uint32_t SACCOUNT_NICKNAME::fame() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SACCOUNT_NICKNAME.fame)
  return _internal_fame();
}
inline void SACCOUNT_NICKNAME::set_fame(::uint32_t value) {
  _internal_set_fame(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SACCOUNT_NICKNAME.fame)
}
inline ::uint32_t SACCOUNT_NICKNAME::_internal_fame() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fame_;
}
inline void SACCOUNT_NICKNAME::_internal_set_fame(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fame_ = value;
}

// -------------------------------------------------------------------

// SBLOCK_CHARACTER

// string accountId = 1;
inline void SBLOCK_CHARACTER::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SBLOCK_CHARACTER::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SBLOCK_CHARACTER.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SBLOCK_CHARACTER::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SBLOCK_CHARACTER.accountId)
}
inline std::string* SBLOCK_CHARACTER::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SBLOCK_CHARACTER.accountId)
  return _s;
}
inline const std::string& SBLOCK_CHARACTER::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SBLOCK_CHARACTER::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SBLOCK_CHARACTER::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SBLOCK_CHARACTER::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SBLOCK_CHARACTER.accountId)
  return _impl_.accountid_.Release();
}
inline void SBLOCK_CHARACTER::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SBLOCK_CHARACTER.accountId)
}

// string accountNickname = 2;
inline void SBLOCK_CHARACTER::clear_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.ClearToEmpty();
}
inline const std::string& SBLOCK_CHARACTER::accountnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SBLOCK_CHARACTER.accountNickname)
  return _internal_accountnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SBLOCK_CHARACTER::set_accountnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SBLOCK_CHARACTER.accountNickname)
}
inline std::string* SBLOCK_CHARACTER::mutable_accountnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SBLOCK_CHARACTER.accountNickname)
  return _s;
}
inline const std::string& SBLOCK_CHARACTER::_internal_accountnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountnickname_.Get();
}
inline void SBLOCK_CHARACTER::_internal_set_accountnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(value, GetArena());
}
inline std::string* SBLOCK_CHARACTER::_internal_mutable_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountnickname_.Mutable( GetArena());
}
inline std::string* SBLOCK_CHARACTER::release_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SBLOCK_CHARACTER.accountNickname)
  return _impl_.accountnickname_.Release();
}
inline void SBLOCK_CHARACTER::set_allocated_accountnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountnickname_.IsDefault()) {
          _impl_.accountnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SBLOCK_CHARACTER.accountNickname)
}

// string characterId = 3;
inline void SBLOCK_CHARACTER::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SBLOCK_CHARACTER::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SBLOCK_CHARACTER.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SBLOCK_CHARACTER::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SBLOCK_CHARACTER.characterId)
}
inline std::string* SBLOCK_CHARACTER::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SBLOCK_CHARACTER.characterId)
  return _s;
}
inline const std::string& SBLOCK_CHARACTER::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SBLOCK_CHARACTER::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SBLOCK_CHARACTER::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SBLOCK_CHARACTER::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SBLOCK_CHARACTER.characterId)
  return _impl_.characterid_.Release();
}
inline void SBLOCK_CHARACTER::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SBLOCK_CHARACTER.characterId)
}

// .DC.Packet.SACCOUNT_NICKNAME nickName = 4;
inline bool SBLOCK_CHARACTER::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline void SBLOCK_CHARACTER::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ != nullptr) _impl_.nickname_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SBLOCK_CHARACTER::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SBLOCK_CHARACTER::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SBLOCK_CHARACTER.nickName)
  return _internal_nickname();
}
inline void SBLOCK_CHARACTER::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SBLOCK_CHARACTER.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SBLOCK_CHARACTER::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SBLOCK_CHARACTER::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SBLOCK_CHARACTER.nickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SBLOCK_CHARACTER::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SBLOCK_CHARACTER::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SBLOCK_CHARACTER.nickName)
  return _msg;
}
inline void SBLOCK_CHARACTER::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SBLOCK_CHARACTER.nickName)
}

// string characterClass = 5;
inline void SBLOCK_CHARACTER::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& SBLOCK_CHARACTER::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SBLOCK_CHARACTER.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SBLOCK_CHARACTER::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SBLOCK_CHARACTER.characterClass)
}
inline std::string* SBLOCK_CHARACTER::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SBLOCK_CHARACTER.characterClass)
  return _s;
}
inline const std::string& SBLOCK_CHARACTER::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void SBLOCK_CHARACTER::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* SBLOCK_CHARACTER::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* SBLOCK_CHARACTER::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SBLOCK_CHARACTER.characterClass)
  return _impl_.characterclass_.Release();
}
inline void SBLOCK_CHARACTER::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SBLOCK_CHARACTER.characterClass)
}

// uint32 gender = 6;
inline void SBLOCK_CHARACTER::clear_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = 0u;
}
inline ::uint32_t SBLOCK_CHARACTER::gender() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SBLOCK_CHARACTER.gender)
  return _internal_gender();
}
inline void SBLOCK_CHARACTER::set_gender(::uint32_t value) {
  _internal_set_gender(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SBLOCK_CHARACTER.gender)
}
inline ::uint32_t SBLOCK_CHARACTER::_internal_gender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gender_;
}
inline void SBLOCK_CHARACTER::_internal_set_gender(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = value;
}

// -------------------------------------------------------------------

// SCHARACTER_GATHERING_HALL_INFO

// string accountId = 1;
inline void SCHARACTER_GATHERING_HALL_INFO::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SCHARACTER_GATHERING_HALL_INFO::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_GATHERING_HALL_INFO::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.accountId)
}
inline std::string* SCHARACTER_GATHERING_HALL_INFO::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.accountId)
  return _s;
}
inline const std::string& SCHARACTER_GATHERING_HALL_INFO::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SCHARACTER_GATHERING_HALL_INFO::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SCHARACTER_GATHERING_HALL_INFO::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SCHARACTER_GATHERING_HALL_INFO::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.accountId)
  return _impl_.accountid_.Release();
}
inline void SCHARACTER_GATHERING_HALL_INFO::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.accountId)
}

// string accountNickname = 2;
inline void SCHARACTER_GATHERING_HALL_INFO::clear_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.ClearToEmpty();
}
inline const std::string& SCHARACTER_GATHERING_HALL_INFO::accountnickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.accountNickname)
  return _internal_accountnickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_GATHERING_HALL_INFO::set_accountnickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.accountNickname)
}
inline std::string* SCHARACTER_GATHERING_HALL_INFO::mutable_accountnickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountnickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.accountNickname)
  return _s;
}
inline const std::string& SCHARACTER_GATHERING_HALL_INFO::_internal_accountnickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountnickname_.Get();
}
inline void SCHARACTER_GATHERING_HALL_INFO::_internal_set_accountnickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.Set(value, GetArena());
}
inline std::string* SCHARACTER_GATHERING_HALL_INFO::_internal_mutable_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountnickname_.Mutable( GetArena());
}
inline std::string* SCHARACTER_GATHERING_HALL_INFO::release_accountnickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.accountNickname)
  return _impl_.accountnickname_.Release();
}
inline void SCHARACTER_GATHERING_HALL_INFO::set_allocated_accountnickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountnickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountnickname_.IsDefault()) {
          _impl_.accountnickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.accountNickname)
}

// .DC.Packet.SACCOUNT_NICKNAME nickName = 3;
inline bool SCHARACTER_GATHERING_HALL_INFO::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline void SCHARACTER_GATHERING_HALL_INFO::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ != nullptr) _impl_.nickname_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SCHARACTER_GATHERING_HALL_INFO::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SCHARACTER_GATHERING_HALL_INFO::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.nickName)
  return _internal_nickname();
}
inline void SCHARACTER_GATHERING_HALL_INFO::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.nickName)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_GATHERING_HALL_INFO::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_GATHERING_HALL_INFO::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.nickName)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_GATHERING_HALL_INFO::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHARACTER_GATHERING_HALL_INFO::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.nickName)
  return _msg;
}
inline void SCHARACTER_GATHERING_HALL_INFO::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.nickName)
}

// string characterClass = 4;
inline void SCHARACTER_GATHERING_HALL_INFO::clear_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.ClearToEmpty();
}
inline const std::string& SCHARACTER_GATHERING_HALL_INFO::characterclass() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.characterClass)
  return _internal_characterclass();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_GATHERING_HALL_INFO::set_characterclass(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.characterClass)
}
inline std::string* SCHARACTER_GATHERING_HALL_INFO::mutable_characterclass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterclass();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.characterClass)
  return _s;
}
inline const std::string& SCHARACTER_GATHERING_HALL_INFO::_internal_characterclass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterclass_.Get();
}
inline void SCHARACTER_GATHERING_HALL_INFO::_internal_set_characterclass(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.Set(value, GetArena());
}
inline std::string* SCHARACTER_GATHERING_HALL_INFO::_internal_mutable_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterclass_.Mutable( GetArena());
}
inline std::string* SCHARACTER_GATHERING_HALL_INFO::release_characterclass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.characterClass)
  return _impl_.characterclass_.Release();
}
inline void SCHARACTER_GATHERING_HALL_INFO::set_allocated_characterclass(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterclass_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterclass_.IsDefault()) {
          _impl_.characterclass_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.characterClass)
}

// string characterId = 5;
inline void SCHARACTER_GATHERING_HALL_INFO::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SCHARACTER_GATHERING_HALL_INFO::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHARACTER_GATHERING_HALL_INFO::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.characterId)
}
inline std::string* SCHARACTER_GATHERING_HALL_INFO::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.characterId)
  return _s;
}
inline const std::string& SCHARACTER_GATHERING_HALL_INFO::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SCHARACTER_GATHERING_HALL_INFO::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SCHARACTER_GATHERING_HALL_INFO::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SCHARACTER_GATHERING_HALL_INFO::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.characterId)
  return _impl_.characterid_.Release();
}
inline void SCHARACTER_GATHERING_HALL_INFO::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.characterId)
}

// uint32 gender = 6;
inline void SCHARACTER_GATHERING_HALL_INFO::clear_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = 0u;
}
inline ::uint32_t SCHARACTER_GATHERING_HALL_INFO::gender() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.gender)
  return _internal_gender();
}
inline void SCHARACTER_GATHERING_HALL_INFO::set_gender(::uint32_t value) {
  _internal_set_gender(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.gender)
}
inline ::uint32_t SCHARACTER_GATHERING_HALL_INFO::_internal_gender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gender_;
}
inline void SCHARACTER_GATHERING_HALL_INFO::_internal_set_gender(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = value;
}

// uint32 level = 7;
inline void SCHARACTER_GATHERING_HALL_INFO::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0u;
}
inline ::uint32_t SCHARACTER_GATHERING_HALL_INFO::level() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.level)
  return _internal_level();
}
inline void SCHARACTER_GATHERING_HALL_INFO::set_level(::uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHARACTER_GATHERING_HALL_INFO.level)
}
inline ::uint32_t SCHARACTER_GATHERING_HALL_INFO::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void SCHARACTER_GATHERING_HALL_INFO::_internal_set_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// -------------------------------------------------------------------

// SGameStat

// int32 statType = 1;
inline void SGameStat::clear_stattype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stattype_ = 0;
}
inline ::int32_t SGameStat::stattype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SGameStat.statType)
  return _internal_stattype();
}
inline void SGameStat::set_stattype(::int32_t value) {
  _internal_set_stattype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SGameStat.statType)
}
inline ::int32_t SGameStat::_internal_stattype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stattype_;
}
inline void SGameStat::_internal_set_stattype(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stattype_ = value;
}

// int32 statValue = 2;
inline void SGameStat::clear_statvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.statvalue_ = 0;
}
inline ::int32_t SGameStat::statvalue() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SGameStat.statValue)
  return _internal_statvalue();
}
inline void SGameStat::set_statvalue(::int32_t value) {
  _internal_set_statvalue(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SGameStat.statValue)
}
inline ::int32_t SGameStat::_internal_statvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.statvalue_;
}
inline void SGameStat::_internal_set_statvalue(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.statvalue_ = value;
}

// -------------------------------------------------------------------

// SRankUserInfo

// string rankId = 1;
inline void SRankUserInfo::clear_rankid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankid_.ClearToEmpty();
}
inline const std::string& SRankUserInfo::rankid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SRankUserInfo.rankId)
  return _internal_rankid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SRankUserInfo::set_rankid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SRankUserInfo.rankId)
}
inline std::string* SRankUserInfo::mutable_rankid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rankid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SRankUserInfo.rankId)
  return _s;
}
inline const std::string& SRankUserInfo::_internal_rankid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rankid_.Get();
}
inline void SRankUserInfo::_internal_set_rankid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankid_.Set(value, GetArena());
}
inline std::string* SRankUserInfo::_internal_mutable_rankid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rankid_.Mutable( GetArena());
}
inline std::string* SRankUserInfo::release_rankid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SRankUserInfo.rankId)
  return _impl_.rankid_.Release();
}
inline void SRankUserInfo::set_allocated_rankid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rankid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rankid_.IsDefault()) {
          _impl_.rankid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SRankUserInfo.rankId)
}

// uint32 currentPoint = 2;
inline void SRankUserInfo::clear_currentpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentpoint_ = 0u;
}
inline ::uint32_t SRankUserInfo::currentpoint() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SRankUserInfo.currentPoint)
  return _internal_currentpoint();
}
inline void SRankUserInfo::set_currentpoint(::uint32_t value) {
  _internal_set_currentpoint(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SRankUserInfo.currentPoint)
}
inline ::uint32_t SRankUserInfo::_internal_currentpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currentpoint_;
}
inline void SRankUserInfo::_internal_set_currentpoint(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentpoint_ = value;
}

// uint32 needPoint = 3;
inline void SRankUserInfo::clear_needpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needpoint_ = 0u;
}
inline ::uint32_t SRankUserInfo::needpoint() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SRankUserInfo.needPoint)
  return _internal_needpoint();
}
inline void SRankUserInfo::set_needpoint(::uint32_t value) {
  _internal_set_needpoint(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SRankUserInfo.needPoint)
}
inline ::uint32_t SRankUserInfo::_internal_needpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.needpoint_;
}
inline void SRankUserInfo::_internal_set_needpoint(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needpoint_ = value;
}

// uint32 gameType = 4;
inline void SRankUserInfo::clear_gametype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gametype_ = 0u;
}
inline ::uint32_t SRankUserInfo::gametype() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SRankUserInfo.gameType)
  return _internal_gametype();
}
inline void SRankUserInfo::set_gametype(::uint32_t value) {
  _internal_set_gametype(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SRankUserInfo.gameType)
}
inline ::uint32_t SRankUserInfo::_internal_gametype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gametype_;
}
inline void SRankUserInfo::_internal_set_gametype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gametype_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Packet
}  // namespace DC


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::DC::Packet::Friend_Location> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::DC::Packet::Friend_Location>() {
  return ::DC::Packet::Friend_Location_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED__5fCharacter_2eproto_2epb_2eh
