// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: _Chat.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED__5fChat_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED__5fChat_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "_Character.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT__5fChat_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct__5fChat_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table__5fChat_2eproto;
namespace DC {
namespace Packet {
class SCHATDATA;
struct SCHATDATADefaultTypeInternal;
extern SCHATDATADefaultTypeInternal _SCHATDATA_default_instance_;
class SCHATDATA_PIECE;
struct SCHATDATA_PIECEDefaultTypeInternal;
extern SCHATDATA_PIECEDefaultTypeInternal _SCHATDATA_PIECE_default_instance_;
class SCHATDATA_PIECE_ITEM;
struct SCHATDATA_PIECE_ITEMDefaultTypeInternal;
extern SCHATDATA_PIECE_ITEMDefaultTypeInternal _SCHATDATA_PIECE_ITEM_default_instance_;
class SCHATDATA_PIECE_ITEM_PROPERTY;
struct SCHATDATA_PIECE_ITEM_PROPERTYDefaultTypeInternal;
extern SCHATDATA_PIECE_ITEM_PROPERTYDefaultTypeInternal _SCHATDATA_PIECE_ITEM_PROPERTY_default_instance_;
class SPIECE_ITEM_ARRAY;
struct SPIECE_ITEM_ARRAYDefaultTypeInternal;
extern SPIECE_ITEM_ARRAYDefaultTypeInternal _SPIECE_ITEM_ARRAY_default_instance_;
class SPIECE_ITEM_BODY;
struct SPIECE_ITEM_BODYDefaultTypeInternal;
extern SPIECE_ITEM_BODYDefaultTypeInternal _SPIECE_ITEM_BODY_default_instance_;
}  // namespace Packet
}  // namespace DC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace DC {
namespace Packet {

// ===================================================================


// -------------------------------------------------------------------

class SCHATDATA_PIECE_ITEM_PROPERTY final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SCHATDATA_PIECE_ITEM_PROPERTY) */ {
 public:
  inline SCHATDATA_PIECE_ITEM_PROPERTY() : SCHATDATA_PIECE_ITEM_PROPERTY(nullptr) {}
  ~SCHATDATA_PIECE_ITEM_PROPERTY() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SCHATDATA_PIECE_ITEM_PROPERTY(
      ::google::protobuf::internal::ConstantInitialized);

  inline SCHATDATA_PIECE_ITEM_PROPERTY(const SCHATDATA_PIECE_ITEM_PROPERTY& from) : SCHATDATA_PIECE_ITEM_PROPERTY(nullptr, from) {}
  inline SCHATDATA_PIECE_ITEM_PROPERTY(SCHATDATA_PIECE_ITEM_PROPERTY&& from) noexcept
      : SCHATDATA_PIECE_ITEM_PROPERTY(nullptr, std::move(from)) {}
  inline SCHATDATA_PIECE_ITEM_PROPERTY& operator=(const SCHATDATA_PIECE_ITEM_PROPERTY& from) {
    CopyFrom(from);
    return *this;
  }
  inline SCHATDATA_PIECE_ITEM_PROPERTY& operator=(SCHATDATA_PIECE_ITEM_PROPERTY&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SCHATDATA_PIECE_ITEM_PROPERTY& default_instance() {
    return *internal_default_instance();
  }
  static inline const SCHATDATA_PIECE_ITEM_PROPERTY* internal_default_instance() {
    return reinterpret_cast<const SCHATDATA_PIECE_ITEM_PROPERTY*>(
        &_SCHATDATA_PIECE_ITEM_PROPERTY_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SCHATDATA_PIECE_ITEM_PROPERTY& a, SCHATDATA_PIECE_ITEM_PROPERTY& b) { a.Swap(&b); }
  inline void Swap(SCHATDATA_PIECE_ITEM_PROPERTY* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SCHATDATA_PIECE_ITEM_PROPERTY* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SCHATDATA_PIECE_ITEM_PROPERTY* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SCHATDATA_PIECE_ITEM_PROPERTY>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SCHATDATA_PIECE_ITEM_PROPERTY& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SCHATDATA_PIECE_ITEM_PROPERTY& from) { SCHATDATA_PIECE_ITEM_PROPERTY::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SCHATDATA_PIECE_ITEM_PROPERTY* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SCHATDATA_PIECE_ITEM_PROPERTY"; }

 protected:
  explicit SCHATDATA_PIECE_ITEM_PROPERTY(::google::protobuf::Arena* arena);
  SCHATDATA_PIECE_ITEM_PROPERTY(::google::protobuf::Arena* arena, const SCHATDATA_PIECE_ITEM_PROPERTY& from);
  SCHATDATA_PIECE_ITEM_PROPERTY(::google::protobuf::Arena* arena, SCHATDATA_PIECE_ITEM_PROPERTY&& from) noexcept
      : SCHATDATA_PIECE_ITEM_PROPERTY(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPidFieldNumber = 1,
    kPvFieldNumber = 2,
  };
  // string pid = 1;
  void clear_pid() ;
  const std::string& pid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pid(Arg_&& arg, Args_... args);
  std::string* mutable_pid();
  PROTOBUF_NODISCARD std::string* release_pid();
  void set_allocated_pid(std::string* value);

  private:
  const std::string& _internal_pid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pid(
      const std::string& value);
  std::string* _internal_mutable_pid();

  public:
  // int32 pv = 2;
  void clear_pv() ;
  ::int32_t pv() const;
  void set_pv(::int32_t value);

  private:
  ::int32_t _internal_pv() const;
  void _internal_set_pv(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SCHATDATA_PIECE_ITEM_PROPERTY)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      51, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SCHATDATA_PIECE_ITEM_PROPERTY_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SCHATDATA_PIECE_ITEM_PROPERTY& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pid_;
    ::int32_t pv_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fChat_2eproto;
};
// -------------------------------------------------------------------

class SCHATDATA_PIECE_ITEM final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SCHATDATA_PIECE_ITEM) */ {
 public:
  inline SCHATDATA_PIECE_ITEM() : SCHATDATA_PIECE_ITEM(nullptr) {}
  ~SCHATDATA_PIECE_ITEM() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SCHATDATA_PIECE_ITEM(
      ::google::protobuf::internal::ConstantInitialized);

  inline SCHATDATA_PIECE_ITEM(const SCHATDATA_PIECE_ITEM& from) : SCHATDATA_PIECE_ITEM(nullptr, from) {}
  inline SCHATDATA_PIECE_ITEM(SCHATDATA_PIECE_ITEM&& from) noexcept
      : SCHATDATA_PIECE_ITEM(nullptr, std::move(from)) {}
  inline SCHATDATA_PIECE_ITEM& operator=(const SCHATDATA_PIECE_ITEM& from) {
    CopyFrom(from);
    return *this;
  }
  inline SCHATDATA_PIECE_ITEM& operator=(SCHATDATA_PIECE_ITEM&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SCHATDATA_PIECE_ITEM& default_instance() {
    return *internal_default_instance();
  }
  static inline const SCHATDATA_PIECE_ITEM* internal_default_instance() {
    return reinterpret_cast<const SCHATDATA_PIECE_ITEM*>(
        &_SCHATDATA_PIECE_ITEM_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SCHATDATA_PIECE_ITEM& a, SCHATDATA_PIECE_ITEM& b) { a.Swap(&b); }
  inline void Swap(SCHATDATA_PIECE_ITEM* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SCHATDATA_PIECE_ITEM* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SCHATDATA_PIECE_ITEM* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SCHATDATA_PIECE_ITEM>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SCHATDATA_PIECE_ITEM& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SCHATDATA_PIECE_ITEM& from) { SCHATDATA_PIECE_ITEM::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SCHATDATA_PIECE_ITEM* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SCHATDATA_PIECE_ITEM"; }

 protected:
  explicit SCHATDATA_PIECE_ITEM(::google::protobuf::Arena* arena);
  SCHATDATA_PIECE_ITEM(::google::protobuf::Arena* arena, const SCHATDATA_PIECE_ITEM& from);
  SCHATDATA_PIECE_ITEM(::google::protobuf::Arena* arena, SCHATDATA_PIECE_ITEM&& from) noexcept
      : SCHATDATA_PIECE_ITEM(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPpFieldNumber = 3,
    kSpFieldNumber = 4,
    kIidFieldNumber = 2,
    kUidFieldNumber = 1,
  };
  // repeated .DC.Packet.SCHATDATA_PIECE_ITEM_PROPERTY pp = 3;
  int pp_size() const;
  private:
  int _internal_pp_size() const;

  public:
  void clear_pp() ;
  ::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY* mutable_pp(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY>* mutable_pp();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY>& _internal_pp() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY>* _internal_mutable_pp();
  public:
  const ::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY& pp(int index) const;
  ::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY* add_pp();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY>& pp() const;
  // repeated .DC.Packet.SCHATDATA_PIECE_ITEM_PROPERTY sp = 4;
  int sp_size() const;
  private:
  int _internal_sp_size() const;

  public:
  void clear_sp() ;
  ::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY* mutable_sp(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY>* mutable_sp();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY>& _internal_sp() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY>* _internal_mutable_sp();
  public:
  const ::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY& sp(int index) const;
  ::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY* add_sp();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY>& sp() const;
  // string iid = 2;
  void clear_iid() ;
  const std::string& iid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_iid(Arg_&& arg, Args_... args);
  std::string* mutable_iid();
  PROTOBUF_NODISCARD std::string* release_iid();
  void set_allocated_iid(std::string* value);

  private:
  const std::string& _internal_iid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_iid(
      const std::string& value);
  std::string* _internal_mutable_iid();

  public:
  // uint64 uid = 1;
  void clear_uid() ;
  ::uint64_t uid() const;
  void set_uid(::uint64_t value);

  private:
  ::uint64_t _internal_uid() const;
  void _internal_set_uid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SCHATDATA_PIECE_ITEM)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SCHATDATA_PIECE_ITEM_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SCHATDATA_PIECE_ITEM& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY > pp_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY > sp_;
    ::google::protobuf::internal::ArenaStringPtr iid_;
    ::uint64_t uid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fChat_2eproto;
};
// -------------------------------------------------------------------

class SPIECE_ITEM_BODY final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SPIECE_ITEM_BODY) */ {
 public:
  inline SPIECE_ITEM_BODY() : SPIECE_ITEM_BODY(nullptr) {}
  ~SPIECE_ITEM_BODY() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SPIECE_ITEM_BODY(
      ::google::protobuf::internal::ConstantInitialized);

  inline SPIECE_ITEM_BODY(const SPIECE_ITEM_BODY& from) : SPIECE_ITEM_BODY(nullptr, from) {}
  inline SPIECE_ITEM_BODY(SPIECE_ITEM_BODY&& from) noexcept
      : SPIECE_ITEM_BODY(nullptr, std::move(from)) {}
  inline SPIECE_ITEM_BODY& operator=(const SPIECE_ITEM_BODY& from) {
    CopyFrom(from);
    return *this;
  }
  inline SPIECE_ITEM_BODY& operator=(SPIECE_ITEM_BODY&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SPIECE_ITEM_BODY& default_instance() {
    return *internal_default_instance();
  }
  static inline const SPIECE_ITEM_BODY* internal_default_instance() {
    return reinterpret_cast<const SPIECE_ITEM_BODY*>(
        &_SPIECE_ITEM_BODY_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SPIECE_ITEM_BODY& a, SPIECE_ITEM_BODY& b) { a.Swap(&b); }
  inline void Swap(SPIECE_ITEM_BODY* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SPIECE_ITEM_BODY* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SPIECE_ITEM_BODY* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SPIECE_ITEM_BODY>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SPIECE_ITEM_BODY& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SPIECE_ITEM_BODY& from) { SPIECE_ITEM_BODY::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SPIECE_ITEM_BODY* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SPIECE_ITEM_BODY"; }

 protected:
  explicit SPIECE_ITEM_BODY(::google::protobuf::Arena* arena);
  SPIECE_ITEM_BODY(::google::protobuf::Arena* arena, const SPIECE_ITEM_BODY& from);
  SPIECE_ITEM_BODY(::google::protobuf::Arena* arena, SPIECE_ITEM_BODY&& from) noexcept
      : SPIECE_ITEM_BODY(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPiecesFieldNumber = 2,
    kIdxFieldNumber = 1,
  };
  // .DC.Packet.SCHATDATA_PIECE_ITEM pieces = 2;
  bool has_pieces() const;
  void clear_pieces() ;
  const ::DC::Packet::SCHATDATA_PIECE_ITEM& pieces() const;
  PROTOBUF_NODISCARD ::DC::Packet::SCHATDATA_PIECE_ITEM* release_pieces();
  ::DC::Packet::SCHATDATA_PIECE_ITEM* mutable_pieces();
  void set_allocated_pieces(::DC::Packet::SCHATDATA_PIECE_ITEM* value);
  void unsafe_arena_set_allocated_pieces(::DC::Packet::SCHATDATA_PIECE_ITEM* value);
  ::DC::Packet::SCHATDATA_PIECE_ITEM* unsafe_arena_release_pieces();

  private:
  const ::DC::Packet::SCHATDATA_PIECE_ITEM& _internal_pieces() const;
  ::DC::Packet::SCHATDATA_PIECE_ITEM* _internal_mutable_pieces();

  public:
  // uint32 idx = 1;
  void clear_idx() ;
  ::uint32_t idx() const;
  void set_idx(::uint32_t value);

  private:
  ::uint32_t _internal_idx() const;
  void _internal_set_idx(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SPIECE_ITEM_BODY)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SPIECE_ITEM_BODY_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SPIECE_ITEM_BODY& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::DC::Packet::SCHATDATA_PIECE_ITEM* pieces_;
    ::uint32_t idx_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fChat_2eproto;
};
// -------------------------------------------------------------------

class SCHATDATA_PIECE final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SCHATDATA_PIECE) */ {
 public:
  inline SCHATDATA_PIECE() : SCHATDATA_PIECE(nullptr) {}
  ~SCHATDATA_PIECE() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SCHATDATA_PIECE(
      ::google::protobuf::internal::ConstantInitialized);

  inline SCHATDATA_PIECE(const SCHATDATA_PIECE& from) : SCHATDATA_PIECE(nullptr, from) {}
  inline SCHATDATA_PIECE(SCHATDATA_PIECE&& from) noexcept
      : SCHATDATA_PIECE(nullptr, std::move(from)) {}
  inline SCHATDATA_PIECE& operator=(const SCHATDATA_PIECE& from) {
    CopyFrom(from);
    return *this;
  }
  inline SCHATDATA_PIECE& operator=(SCHATDATA_PIECE&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SCHATDATA_PIECE& default_instance() {
    return *internal_default_instance();
  }
  static inline const SCHATDATA_PIECE* internal_default_instance() {
    return reinterpret_cast<const SCHATDATA_PIECE*>(
        &_SCHATDATA_PIECE_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SCHATDATA_PIECE& a, SCHATDATA_PIECE& b) { a.Swap(&b); }
  inline void Swap(SCHATDATA_PIECE* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SCHATDATA_PIECE* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SCHATDATA_PIECE* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SCHATDATA_PIECE>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SCHATDATA_PIECE& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SCHATDATA_PIECE& from) { SCHATDATA_PIECE::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SCHATDATA_PIECE* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SCHATDATA_PIECE"; }

 protected:
  explicit SCHATDATA_PIECE(::google::protobuf::Arena* arena);
  SCHATDATA_PIECE(::google::protobuf::Arena* arena, const SCHATDATA_PIECE& from);
  SCHATDATA_PIECE(::google::protobuf::Arena* arena, SCHATDATA_PIECE&& from) noexcept
      : SCHATDATA_PIECE(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChatStrFieldNumber = 1,
    kChatDataPieceItemFieldNumber = 2,
  };
  // string chatStr = 1;
  void clear_chatstr() ;
  const std::string& chatstr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_chatstr(Arg_&& arg, Args_... args);
  std::string* mutable_chatstr();
  PROTOBUF_NODISCARD std::string* release_chatstr();
  void set_allocated_chatstr(std::string* value);

  private:
  const std::string& _internal_chatstr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chatstr(
      const std::string& value);
  std::string* _internal_mutable_chatstr();

  public:
  // .DC.Packet.SCHATDATA_PIECE_ITEM chatDataPieceItem = 2;
  bool has_chatdatapieceitem() const;
  void clear_chatdatapieceitem() ;
  const ::DC::Packet::SCHATDATA_PIECE_ITEM& chatdatapieceitem() const;
  PROTOBUF_NODISCARD ::DC::Packet::SCHATDATA_PIECE_ITEM* release_chatdatapieceitem();
  ::DC::Packet::SCHATDATA_PIECE_ITEM* mutable_chatdatapieceitem();
  void set_allocated_chatdatapieceitem(::DC::Packet::SCHATDATA_PIECE_ITEM* value);
  void unsafe_arena_set_allocated_chatdatapieceitem(::DC::Packet::SCHATDATA_PIECE_ITEM* value);
  ::DC::Packet::SCHATDATA_PIECE_ITEM* unsafe_arena_release_chatdatapieceitem();

  private:
  const ::DC::Packet::SCHATDATA_PIECE_ITEM& _internal_chatdatapieceitem() const;
  ::DC::Packet::SCHATDATA_PIECE_ITEM* _internal_mutable_chatdatapieceitem();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SCHATDATA_PIECE)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      41, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SCHATDATA_PIECE_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SCHATDATA_PIECE& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr chatstr_;
    ::DC::Packet::SCHATDATA_PIECE_ITEM* chatdatapieceitem_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fChat_2eproto;
};
// -------------------------------------------------------------------

class SPIECE_ITEM_ARRAY final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SPIECE_ITEM_ARRAY) */ {
 public:
  inline SPIECE_ITEM_ARRAY() : SPIECE_ITEM_ARRAY(nullptr) {}
  ~SPIECE_ITEM_ARRAY() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SPIECE_ITEM_ARRAY(
      ::google::protobuf::internal::ConstantInitialized);

  inline SPIECE_ITEM_ARRAY(const SPIECE_ITEM_ARRAY& from) : SPIECE_ITEM_ARRAY(nullptr, from) {}
  inline SPIECE_ITEM_ARRAY(SPIECE_ITEM_ARRAY&& from) noexcept
      : SPIECE_ITEM_ARRAY(nullptr, std::move(from)) {}
  inline SPIECE_ITEM_ARRAY& operator=(const SPIECE_ITEM_ARRAY& from) {
    CopyFrom(from);
    return *this;
  }
  inline SPIECE_ITEM_ARRAY& operator=(SPIECE_ITEM_ARRAY&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SPIECE_ITEM_ARRAY& default_instance() {
    return *internal_default_instance();
  }
  static inline const SPIECE_ITEM_ARRAY* internal_default_instance() {
    return reinterpret_cast<const SPIECE_ITEM_ARRAY*>(
        &_SPIECE_ITEM_ARRAY_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SPIECE_ITEM_ARRAY& a, SPIECE_ITEM_ARRAY& b) { a.Swap(&b); }
  inline void Swap(SPIECE_ITEM_ARRAY* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SPIECE_ITEM_ARRAY* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SPIECE_ITEM_ARRAY* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SPIECE_ITEM_ARRAY>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SPIECE_ITEM_ARRAY& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SPIECE_ITEM_ARRAY& from) { SPIECE_ITEM_ARRAY::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SPIECE_ITEM_ARRAY* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SPIECE_ITEM_ARRAY"; }

 protected:
  explicit SPIECE_ITEM_ARRAY(::google::protobuf::Arena* arena);
  SPIECE_ITEM_ARRAY(::google::protobuf::Arena* arena, const SPIECE_ITEM_ARRAY& from);
  SPIECE_ITEM_ARRAY(::google::protobuf::Arena* arena, SPIECE_ITEM_ARRAY&& from) noexcept
      : SPIECE_ITEM_ARRAY(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLinksFieldNumber = 1,
  };
  // repeated .DC.Packet.SPIECE_ITEM_BODY links = 1;
  int links_size() const;
  private:
  int _internal_links_size() const;

  public:
  void clear_links() ;
  ::DC::Packet::SPIECE_ITEM_BODY* mutable_links(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SPIECE_ITEM_BODY>* mutable_links();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SPIECE_ITEM_BODY>& _internal_links() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SPIECE_ITEM_BODY>* _internal_mutable_links();
  public:
  const ::DC::Packet::SPIECE_ITEM_BODY& links(int index) const;
  ::DC::Packet::SPIECE_ITEM_BODY* add_links();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SPIECE_ITEM_BODY>& links() const;
  // @@protoc_insertion_point(class_scope:DC.Packet.SPIECE_ITEM_ARRAY)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SPIECE_ITEM_ARRAY_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SPIECE_ITEM_ARRAY& from_msg);
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SPIECE_ITEM_BODY > links_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fChat_2eproto;
};
// -------------------------------------------------------------------

class SCHATDATA final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SCHATDATA) */ {
 public:
  inline SCHATDATA() : SCHATDATA(nullptr) {}
  ~SCHATDATA() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SCHATDATA(
      ::google::protobuf::internal::ConstantInitialized);

  inline SCHATDATA(const SCHATDATA& from) : SCHATDATA(nullptr, from) {}
  inline SCHATDATA(SCHATDATA&& from) noexcept
      : SCHATDATA(nullptr, std::move(from)) {}
  inline SCHATDATA& operator=(const SCHATDATA& from) {
    CopyFrom(from);
    return *this;
  }
  inline SCHATDATA& operator=(SCHATDATA&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SCHATDATA& default_instance() {
    return *internal_default_instance();
  }
  static inline const SCHATDATA* internal_default_instance() {
    return reinterpret_cast<const SCHATDATA*>(
        &_SCHATDATA_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SCHATDATA& a, SCHATDATA& b) { a.Swap(&b); }
  inline void Swap(SCHATDATA* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SCHATDATA* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SCHATDATA* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SCHATDATA>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SCHATDATA& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SCHATDATA& from) { SCHATDATA::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SCHATDATA* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SCHATDATA"; }

 protected:
  explicit SCHATDATA(::google::protobuf::Arena* arena);
  SCHATDATA(::google::protobuf::Arena* arena, const SCHATDATA& from);
  SCHATDATA(::google::protobuf::Arena* arena, SCHATDATA&& from) noexcept
      : SCHATDATA(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChatDataPieceArrayFieldNumber = 5,
    kAccountIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
    kPartyIdFieldNumber = 4,
    kNicknameFieldNumber = 3,
  };
  // repeated .DC.Packet.SCHATDATA_PIECE chatDataPieceArray = 5;
  int chatdatapiecearray_size() const;
  private:
  int _internal_chatdatapiecearray_size() const;

  public:
  void clear_chatdatapiecearray() ;
  ::DC::Packet::SCHATDATA_PIECE* mutable_chatdatapiecearray(int index);
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE>* mutable_chatdatapiecearray();

  private:
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE>& _internal_chatdatapiecearray() const;
  ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE>* _internal_mutable_chatdatapiecearray();
  public:
  const ::DC::Packet::SCHATDATA_PIECE& chatdatapiecearray(int index) const;
  ::DC::Packet::SCHATDATA_PIECE* add_chatdatapiecearray();
  const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE>& chatdatapiecearray() const;
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* value);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string characterId = 2;
  void clear_characterid() ;
  const std::string& characterid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_characterid(Arg_&& arg, Args_... args);
  std::string* mutable_characterid();
  PROTOBUF_NODISCARD std::string* release_characterid();
  void set_allocated_characterid(std::string* value);

  private:
  const std::string& _internal_characterid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_characterid(
      const std::string& value);
  std::string* _internal_mutable_characterid();

  public:
  // string partyId = 4;
  void clear_partyid() ;
  const std::string& partyid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_partyid(Arg_&& arg, Args_... args);
  std::string* mutable_partyid();
  PROTOBUF_NODISCARD std::string* release_partyid();
  void set_allocated_partyid(std::string* value);

  private:
  const std::string& _internal_partyid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_partyid(
      const std::string& value);
  std::string* _internal_mutable_partyid();

  public:
  // .DC.Packet.SACCOUNT_NICKNAME nickname = 3;
  bool has_nickname() const;
  void clear_nickname() ;
  const ::DC::Packet::SACCOUNT_NICKNAME& nickname() const;
  PROTOBUF_NODISCARD ::DC::Packet::SACCOUNT_NICKNAME* release_nickname();
  ::DC::Packet::SACCOUNT_NICKNAME* mutable_nickname();
  void set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  void unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value);
  ::DC::Packet::SACCOUNT_NICKNAME* unsafe_arena_release_nickname();

  private:
  const ::DC::Packet::SACCOUNT_NICKNAME& _internal_nickname() const;
  ::DC::Packet::SACCOUNT_NICKNAME* _internal_mutable_nickname();

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SCHATDATA)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      55, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SCHATDATA_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SCHATDATA& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::DC::Packet::SCHATDATA_PIECE > chatdatapiecearray_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr characterid_;
    ::google::protobuf::internal::ArenaStringPtr partyid_;
    ::DC::Packet::SACCOUNT_NICKNAME* nickname_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fChat_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SCHATDATA_PIECE_ITEM_PROPERTY

// string pid = 1;
inline void SCHATDATA_PIECE_ITEM_PROPERTY::clear_pid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pid_.ClearToEmpty();
}
inline const std::string& SCHATDATA_PIECE_ITEM_PROPERTY::pid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHATDATA_PIECE_ITEM_PROPERTY.pid)
  return _internal_pid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHATDATA_PIECE_ITEM_PROPERTY::set_pid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHATDATA_PIECE_ITEM_PROPERTY.pid)
}
inline std::string* SCHATDATA_PIECE_ITEM_PROPERTY::mutable_pid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHATDATA_PIECE_ITEM_PROPERTY.pid)
  return _s;
}
inline const std::string& SCHATDATA_PIECE_ITEM_PROPERTY::_internal_pid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pid_.Get();
}
inline void SCHATDATA_PIECE_ITEM_PROPERTY::_internal_set_pid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pid_.Set(value, GetArena());
}
inline std::string* SCHATDATA_PIECE_ITEM_PROPERTY::_internal_mutable_pid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pid_.Mutable( GetArena());
}
inline std::string* SCHATDATA_PIECE_ITEM_PROPERTY::release_pid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHATDATA_PIECE_ITEM_PROPERTY.pid)
  return _impl_.pid_.Release();
}
inline void SCHATDATA_PIECE_ITEM_PROPERTY::set_allocated_pid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pid_.IsDefault()) {
          _impl_.pid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHATDATA_PIECE_ITEM_PROPERTY.pid)
}

// int32 pv = 2;
inline void SCHATDATA_PIECE_ITEM_PROPERTY::clear_pv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pv_ = 0;
}
inline ::int32_t SCHATDATA_PIECE_ITEM_PROPERTY::pv() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHATDATA_PIECE_ITEM_PROPERTY.pv)
  return _internal_pv();
}
inline void SCHATDATA_PIECE_ITEM_PROPERTY::set_pv(::int32_t value) {
  _internal_set_pv(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHATDATA_PIECE_ITEM_PROPERTY.pv)
}
inline ::int32_t SCHATDATA_PIECE_ITEM_PROPERTY::_internal_pv() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pv_;
}
inline void SCHATDATA_PIECE_ITEM_PROPERTY::_internal_set_pv(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pv_ = value;
}

// -------------------------------------------------------------------

// SCHATDATA_PIECE_ITEM

// uint64 uid = 1;
inline void SCHATDATA_PIECE_ITEM::clear_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = ::uint64_t{0u};
}
inline ::uint64_t SCHATDATA_PIECE_ITEM::uid() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHATDATA_PIECE_ITEM.uid)
  return _internal_uid();
}
inline void SCHATDATA_PIECE_ITEM::set_uid(::uint64_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SCHATDATA_PIECE_ITEM.uid)
}
inline ::uint64_t SCHATDATA_PIECE_ITEM::_internal_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uid_;
}
inline void SCHATDATA_PIECE_ITEM::_internal_set_uid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = value;
}

// string iid = 2;
inline void SCHATDATA_PIECE_ITEM::clear_iid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iid_.ClearToEmpty();
}
inline const std::string& SCHATDATA_PIECE_ITEM::iid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHATDATA_PIECE_ITEM.iid)
  return _internal_iid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHATDATA_PIECE_ITEM::set_iid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHATDATA_PIECE_ITEM.iid)
}
inline std::string* SCHATDATA_PIECE_ITEM::mutable_iid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_iid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHATDATA_PIECE_ITEM.iid)
  return _s;
}
inline const std::string& SCHATDATA_PIECE_ITEM::_internal_iid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.iid_.Get();
}
inline void SCHATDATA_PIECE_ITEM::_internal_set_iid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iid_.Set(value, GetArena());
}
inline std::string* SCHATDATA_PIECE_ITEM::_internal_mutable_iid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.iid_.Mutable( GetArena());
}
inline std::string* SCHATDATA_PIECE_ITEM::release_iid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHATDATA_PIECE_ITEM.iid)
  return _impl_.iid_.Release();
}
inline void SCHATDATA_PIECE_ITEM::set_allocated_iid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.iid_.IsDefault()) {
          _impl_.iid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHATDATA_PIECE_ITEM.iid)
}

// repeated .DC.Packet.SCHATDATA_PIECE_ITEM_PROPERTY pp = 3;
inline int SCHATDATA_PIECE_ITEM::_internal_pp_size() const {
  return _internal_pp().size();
}
inline int SCHATDATA_PIECE_ITEM::pp_size() const {
  return _internal_pp_size();
}
inline void SCHATDATA_PIECE_ITEM::clear_pp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pp_.Clear();
}
inline ::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY* SCHATDATA_PIECE_ITEM::mutable_pp(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHATDATA_PIECE_ITEM.pp)
  return _internal_mutable_pp()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY>* SCHATDATA_PIECE_ITEM::mutable_pp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SCHATDATA_PIECE_ITEM.pp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pp();
}
inline const ::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY& SCHATDATA_PIECE_ITEM::pp(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHATDATA_PIECE_ITEM.pp)
  return _internal_pp().Get(index);
}
inline ::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY* SCHATDATA_PIECE_ITEM::add_pp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY* _add = _internal_mutable_pp()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SCHATDATA_PIECE_ITEM.pp)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY>& SCHATDATA_PIECE_ITEM::pp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SCHATDATA_PIECE_ITEM.pp)
  return _internal_pp();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY>&
SCHATDATA_PIECE_ITEM::_internal_pp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pp_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY>*
SCHATDATA_PIECE_ITEM::_internal_mutable_pp() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pp_;
}

// repeated .DC.Packet.SCHATDATA_PIECE_ITEM_PROPERTY sp = 4;
inline int SCHATDATA_PIECE_ITEM::_internal_sp_size() const {
  return _internal_sp().size();
}
inline int SCHATDATA_PIECE_ITEM::sp_size() const {
  return _internal_sp_size();
}
inline void SCHATDATA_PIECE_ITEM::clear_sp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sp_.Clear();
}
inline ::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY* SCHATDATA_PIECE_ITEM::mutable_sp(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHATDATA_PIECE_ITEM.sp)
  return _internal_mutable_sp()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY>* SCHATDATA_PIECE_ITEM::mutable_sp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SCHATDATA_PIECE_ITEM.sp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sp();
}
inline const ::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY& SCHATDATA_PIECE_ITEM::sp(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHATDATA_PIECE_ITEM.sp)
  return _internal_sp().Get(index);
}
inline ::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY* SCHATDATA_PIECE_ITEM::add_sp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY* _add = _internal_mutable_sp()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SCHATDATA_PIECE_ITEM.sp)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY>& SCHATDATA_PIECE_ITEM::sp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SCHATDATA_PIECE_ITEM.sp)
  return _internal_sp();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY>&
SCHATDATA_PIECE_ITEM::_internal_sp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sp_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE_ITEM_PROPERTY>*
SCHATDATA_PIECE_ITEM::_internal_mutable_sp() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sp_;
}

// -------------------------------------------------------------------

// SCHATDATA_PIECE

// string chatStr = 1;
inline void SCHATDATA_PIECE::clear_chatstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chatstr_.ClearToEmpty();
}
inline const std::string& SCHATDATA_PIECE::chatstr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHATDATA_PIECE.chatStr)
  return _internal_chatstr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHATDATA_PIECE::set_chatstr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chatstr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHATDATA_PIECE.chatStr)
}
inline std::string* SCHATDATA_PIECE::mutable_chatstr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_chatstr();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHATDATA_PIECE.chatStr)
  return _s;
}
inline const std::string& SCHATDATA_PIECE::_internal_chatstr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chatstr_.Get();
}
inline void SCHATDATA_PIECE::_internal_set_chatstr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chatstr_.Set(value, GetArena());
}
inline std::string* SCHATDATA_PIECE::_internal_mutable_chatstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.chatstr_.Mutable( GetArena());
}
inline std::string* SCHATDATA_PIECE::release_chatstr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHATDATA_PIECE.chatStr)
  return _impl_.chatstr_.Release();
}
inline void SCHATDATA_PIECE::set_allocated_chatstr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chatstr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.chatstr_.IsDefault()) {
          _impl_.chatstr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHATDATA_PIECE.chatStr)
}

// .DC.Packet.SCHATDATA_PIECE_ITEM chatDataPieceItem = 2;
inline bool SCHATDATA_PIECE::has_chatdatapieceitem() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chatdatapieceitem_ != nullptr);
  return value;
}
inline void SCHATDATA_PIECE::clear_chatdatapieceitem() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chatdatapieceitem_ != nullptr) _impl_.chatdatapieceitem_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::SCHATDATA_PIECE_ITEM& SCHATDATA_PIECE::_internal_chatdatapieceitem() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SCHATDATA_PIECE_ITEM* p = _impl_.chatdatapieceitem_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SCHATDATA_PIECE_ITEM&>(::DC::Packet::_SCHATDATA_PIECE_ITEM_default_instance_);
}
inline const ::DC::Packet::SCHATDATA_PIECE_ITEM& SCHATDATA_PIECE::chatdatapieceitem() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHATDATA_PIECE.chatDataPieceItem)
  return _internal_chatdatapieceitem();
}
inline void SCHATDATA_PIECE::unsafe_arena_set_allocated_chatdatapieceitem(::DC::Packet::SCHATDATA_PIECE_ITEM* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chatdatapieceitem_);
  }
  _impl_.chatdatapieceitem_ = reinterpret_cast<::DC::Packet::SCHATDATA_PIECE_ITEM*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SCHATDATA_PIECE.chatDataPieceItem)
}
inline ::DC::Packet::SCHATDATA_PIECE_ITEM* SCHATDATA_PIECE::release_chatdatapieceitem() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SCHATDATA_PIECE_ITEM* released = _impl_.chatdatapieceitem_;
  _impl_.chatdatapieceitem_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SCHATDATA_PIECE_ITEM* SCHATDATA_PIECE::unsafe_arena_release_chatdatapieceitem() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHATDATA_PIECE.chatDataPieceItem)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SCHATDATA_PIECE_ITEM* temp = _impl_.chatdatapieceitem_;
  _impl_.chatdatapieceitem_ = nullptr;
  return temp;
}
inline ::DC::Packet::SCHATDATA_PIECE_ITEM* SCHATDATA_PIECE::_internal_mutable_chatdatapieceitem() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chatdatapieceitem_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SCHATDATA_PIECE_ITEM>(GetArena());
    _impl_.chatdatapieceitem_ = reinterpret_cast<::DC::Packet::SCHATDATA_PIECE_ITEM*>(p);
  }
  return _impl_.chatdatapieceitem_;
}
inline ::DC::Packet::SCHATDATA_PIECE_ITEM* SCHATDATA_PIECE::mutable_chatdatapieceitem() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SCHATDATA_PIECE_ITEM* _msg = _internal_mutable_chatdatapieceitem();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHATDATA_PIECE.chatDataPieceItem)
  return _msg;
}
inline void SCHATDATA_PIECE::set_allocated_chatdatapieceitem(::DC::Packet::SCHATDATA_PIECE_ITEM* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.chatdatapieceitem_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chatdatapieceitem_ = reinterpret_cast<::DC::Packet::SCHATDATA_PIECE_ITEM*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHATDATA_PIECE.chatDataPieceItem)
}

// -------------------------------------------------------------------

// SCHATDATA

// string accountId = 1;
inline void SCHATDATA::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& SCHATDATA::accountid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHATDATA.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHATDATA::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHATDATA.accountId)
}
inline std::string* SCHATDATA::mutable_accountid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHATDATA.accountId)
  return _s;
}
inline const std::string& SCHATDATA::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_.Get();
}
inline void SCHATDATA::_internal_set_accountid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.Set(value, GetArena());
}
inline std::string* SCHATDATA::_internal_mutable_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accountid_.Mutable( GetArena());
}
inline std::string* SCHATDATA::release_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHATDATA.accountId)
  return _impl_.accountid_.Release();
}
inline void SCHATDATA::set_allocated_accountid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHATDATA.accountId)
}

// string characterId = 2;
inline void SCHATDATA::clear_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.ClearToEmpty();
}
inline const std::string& SCHATDATA::characterid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHATDATA.characterId)
  return _internal_characterid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHATDATA::set_characterid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHATDATA.characterId)
}
inline std::string* SCHATDATA::mutable_characterid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_characterid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHATDATA.characterId)
  return _s;
}
inline const std::string& SCHATDATA::_internal_characterid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterid_.Get();
}
inline void SCHATDATA::_internal_set_characterid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.Set(value, GetArena());
}
inline std::string* SCHATDATA::_internal_mutable_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.characterid_.Mutable( GetArena());
}
inline std::string* SCHATDATA::release_characterid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHATDATA.characterId)
  return _impl_.characterid_.Release();
}
inline void SCHATDATA::set_allocated_characterid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characterid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.characterid_.IsDefault()) {
          _impl_.characterid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHATDATA.characterId)
}

// .DC.Packet.SACCOUNT_NICKNAME nickname = 3;
inline bool SCHATDATA::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nickname_ != nullptr);
  return value;
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SCHATDATA::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SACCOUNT_NICKNAME* p = _impl_.nickname_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SACCOUNT_NICKNAME&>(::DC::Packet::_SACCOUNT_NICKNAME_default_instance_);
}
inline const ::DC::Packet::SACCOUNT_NICKNAME& SCHATDATA::nickname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHATDATA.nickname)
  return _internal_nickname();
}
inline void SCHATDATA::unsafe_arena_set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }
  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SCHATDATA.nickname)
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHATDATA::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* released = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHATDATA::unsafe_arena_release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHATDATA.nickname)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* temp = _impl_.nickname_;
  _impl_.nickname_ = nullptr;
  return temp;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHATDATA::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nickname_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SACCOUNT_NICKNAME>(GetArena());
    _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(p);
  }
  return _impl_.nickname_;
}
inline ::DC::Packet::SACCOUNT_NICKNAME* SCHATDATA::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SACCOUNT_NICKNAME* _msg = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHATDATA.nickname)
  return _msg;
}
inline void SCHATDATA::set_allocated_nickname(::DC::Packet::SACCOUNT_NICKNAME* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nickname_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nickname_ = reinterpret_cast<::DC::Packet::SACCOUNT_NICKNAME*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHATDATA.nickname)
}

// string partyId = 4;
inline void SCHATDATA::clear_partyid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partyid_.ClearToEmpty();
}
inline const std::string& SCHATDATA::partyid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHATDATA.partyId)
  return _internal_partyid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SCHATDATA::set_partyid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partyid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SCHATDATA.partyId)
}
inline std::string* SCHATDATA::mutable_partyid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_partyid();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHATDATA.partyId)
  return _s;
}
inline const std::string& SCHATDATA::_internal_partyid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partyid_.Get();
}
inline void SCHATDATA::_internal_set_partyid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partyid_.Set(value, GetArena());
}
inline std::string* SCHATDATA::_internal_mutable_partyid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.partyid_.Mutable( GetArena());
}
inline std::string* SCHATDATA::release_partyid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SCHATDATA.partyId)
  return _impl_.partyid_.Release();
}
inline void SCHATDATA::set_allocated_partyid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partyid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.partyid_.IsDefault()) {
          _impl_.partyid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SCHATDATA.partyId)
}

// repeated .DC.Packet.SCHATDATA_PIECE chatDataPieceArray = 5;
inline int SCHATDATA::_internal_chatdatapiecearray_size() const {
  return _internal_chatdatapiecearray().size();
}
inline int SCHATDATA::chatdatapiecearray_size() const {
  return _internal_chatdatapiecearray_size();
}
inline void SCHATDATA::clear_chatdatapiecearray() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chatdatapiecearray_.Clear();
}
inline ::DC::Packet::SCHATDATA_PIECE* SCHATDATA::mutable_chatdatapiecearray(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SCHATDATA.chatDataPieceArray)
  return _internal_mutable_chatdatapiecearray()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE>* SCHATDATA::mutable_chatdatapiecearray()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SCHATDATA.chatDataPieceArray)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_chatdatapiecearray();
}
inline const ::DC::Packet::SCHATDATA_PIECE& SCHATDATA::chatdatapiecearray(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SCHATDATA.chatDataPieceArray)
  return _internal_chatdatapiecearray().Get(index);
}
inline ::DC::Packet::SCHATDATA_PIECE* SCHATDATA::add_chatdatapiecearray() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SCHATDATA_PIECE* _add = _internal_mutable_chatdatapiecearray()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SCHATDATA.chatDataPieceArray)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE>& SCHATDATA::chatdatapiecearray() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SCHATDATA.chatDataPieceArray)
  return _internal_chatdatapiecearray();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE>&
SCHATDATA::_internal_chatdatapiecearray() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chatdatapiecearray_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SCHATDATA_PIECE>*
SCHATDATA::_internal_mutable_chatdatapiecearray() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.chatdatapiecearray_;
}

// -------------------------------------------------------------------

// SPIECE_ITEM_BODY

// uint32 idx = 1;
inline void SPIECE_ITEM_BODY::clear_idx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.idx_ = 0u;
}
inline ::uint32_t SPIECE_ITEM_BODY::idx() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SPIECE_ITEM_BODY.idx)
  return _internal_idx();
}
inline void SPIECE_ITEM_BODY::set_idx(::uint32_t value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SPIECE_ITEM_BODY.idx)
}
inline ::uint32_t SPIECE_ITEM_BODY::_internal_idx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.idx_;
}
inline void SPIECE_ITEM_BODY::_internal_set_idx(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.idx_ = value;
}

// .DC.Packet.SCHATDATA_PIECE_ITEM pieces = 2;
inline bool SPIECE_ITEM_BODY::has_pieces() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pieces_ != nullptr);
  return value;
}
inline void SPIECE_ITEM_BODY::clear_pieces() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pieces_ != nullptr) _impl_.pieces_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DC::Packet::SCHATDATA_PIECE_ITEM& SPIECE_ITEM_BODY::_internal_pieces() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DC::Packet::SCHATDATA_PIECE_ITEM* p = _impl_.pieces_;
  return p != nullptr ? *p : reinterpret_cast<const ::DC::Packet::SCHATDATA_PIECE_ITEM&>(::DC::Packet::_SCHATDATA_PIECE_ITEM_default_instance_);
}
inline const ::DC::Packet::SCHATDATA_PIECE_ITEM& SPIECE_ITEM_BODY::pieces() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SPIECE_ITEM_BODY.pieces)
  return _internal_pieces();
}
inline void SPIECE_ITEM_BODY::unsafe_arena_set_allocated_pieces(::DC::Packet::SCHATDATA_PIECE_ITEM* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pieces_);
  }
  _impl_.pieces_ = reinterpret_cast<::DC::Packet::SCHATDATA_PIECE_ITEM*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DC.Packet.SPIECE_ITEM_BODY.pieces)
}
inline ::DC::Packet::SCHATDATA_PIECE_ITEM* SPIECE_ITEM_BODY::release_pieces() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SCHATDATA_PIECE_ITEM* released = _impl_.pieces_;
  _impl_.pieces_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DC::Packet::SCHATDATA_PIECE_ITEM* SPIECE_ITEM_BODY::unsafe_arena_release_pieces() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SPIECE_ITEM_BODY.pieces)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DC::Packet::SCHATDATA_PIECE_ITEM* temp = _impl_.pieces_;
  _impl_.pieces_ = nullptr;
  return temp;
}
inline ::DC::Packet::SCHATDATA_PIECE_ITEM* SPIECE_ITEM_BODY::_internal_mutable_pieces() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pieces_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DC::Packet::SCHATDATA_PIECE_ITEM>(GetArena());
    _impl_.pieces_ = reinterpret_cast<::DC::Packet::SCHATDATA_PIECE_ITEM*>(p);
  }
  return _impl_.pieces_;
}
inline ::DC::Packet::SCHATDATA_PIECE_ITEM* SPIECE_ITEM_BODY::mutable_pieces() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DC::Packet::SCHATDATA_PIECE_ITEM* _msg = _internal_mutable_pieces();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SPIECE_ITEM_BODY.pieces)
  return _msg;
}
inline void SPIECE_ITEM_BODY::set_allocated_pieces(::DC::Packet::SCHATDATA_PIECE_ITEM* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.pieces_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pieces_ = reinterpret_cast<::DC::Packet::SCHATDATA_PIECE_ITEM*>(value);
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SPIECE_ITEM_BODY.pieces)
}

// -------------------------------------------------------------------

// SPIECE_ITEM_ARRAY

// repeated .DC.Packet.SPIECE_ITEM_BODY links = 1;
inline int SPIECE_ITEM_ARRAY::_internal_links_size() const {
  return _internal_links().size();
}
inline int SPIECE_ITEM_ARRAY::links_size() const {
  return _internal_links_size();
}
inline void SPIECE_ITEM_ARRAY::clear_links() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.links_.Clear();
}
inline ::DC::Packet::SPIECE_ITEM_BODY* SPIECE_ITEM_ARRAY::mutable_links(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:DC.Packet.SPIECE_ITEM_ARRAY.links)
  return _internal_mutable_links()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SPIECE_ITEM_BODY>* SPIECE_ITEM_ARRAY::mutable_links()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DC.Packet.SPIECE_ITEM_ARRAY.links)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_links();
}
inline const ::DC::Packet::SPIECE_ITEM_BODY& SPIECE_ITEM_ARRAY::links(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SPIECE_ITEM_ARRAY.links)
  return _internal_links().Get(index);
}
inline ::DC::Packet::SPIECE_ITEM_BODY* SPIECE_ITEM_ARRAY::add_links() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DC::Packet::SPIECE_ITEM_BODY* _add = _internal_mutable_links()->Add();
  // @@protoc_insertion_point(field_add:DC.Packet.SPIECE_ITEM_ARRAY.links)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SPIECE_ITEM_BODY>& SPIECE_ITEM_ARRAY::links() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DC.Packet.SPIECE_ITEM_ARRAY.links)
  return _internal_links();
}
inline const ::google::protobuf::RepeatedPtrField<::DC::Packet::SPIECE_ITEM_BODY>&
SPIECE_ITEM_ARRAY::_internal_links() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.links_;
}
inline ::google::protobuf::RepeatedPtrField<::DC::Packet::SPIECE_ITEM_BODY>*
SPIECE_ITEM_ARRAY::_internal_mutable_links() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.links_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Packet
}  // namespace DC


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED__5fChat_2eproto_2epb_2eh
