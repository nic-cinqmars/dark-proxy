// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: _PacketCommand.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED__5fPacketCommand_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED__5fPacketCommand_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT__5fPacketCommand_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct__5fPacketCommand_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table__5fPacketCommand_2eproto;
namespace DC {
namespace Packet {
class SC2S_ALIVE_REQ;
struct SC2S_ALIVE_REQDefaultTypeInternal;
extern SC2S_ALIVE_REQDefaultTypeInternal _SC2S_ALIVE_REQ_default_instance_;
class SC2S_ALIVE_REVERSE_REQ;
struct SC2S_ALIVE_REVERSE_REQDefaultTypeInternal;
extern SC2S_ALIVE_REVERSE_REQDefaultTypeInternal _SC2S_ALIVE_REVERSE_REQ_default_instance_;
class SC2S_RECONNECT_REQ;
struct SC2S_RECONNECT_REQDefaultTypeInternal;
extern SC2S_RECONNECT_REQDefaultTypeInternal _SC2S_RECONNECT_REQ_default_instance_;
class SS2C_ALIVE_RES;
struct SS2C_ALIVE_RESDefaultTypeInternal;
extern SS2C_ALIVE_RESDefaultTypeInternal _SS2C_ALIVE_RES_default_instance_;
class SS2C_ALIVE_REVERSE_NOT;
struct SS2C_ALIVE_REVERSE_NOTDefaultTypeInternal;
extern SS2C_ALIVE_REVERSE_NOTDefaultTypeInternal _SS2C_ALIVE_REVERSE_NOT_default_instance_;
class SS2C_ALIVE_REVERSE_RES;
struct SS2C_ALIVE_REVERSE_RESDefaultTypeInternal;
extern SS2C_ALIVE_REVERSE_RESDefaultTypeInternal _SS2C_ALIVE_REVERSE_RES_default_instance_;
class SS2C_CONNECT_SERVICE_INFO_JSON;
struct SS2C_CONNECT_SERVICE_INFO_JSONDefaultTypeInternal;
extern SS2C_CONNECT_SERVICE_INFO_JSONDefaultTypeInternal _SS2C_CONNECT_SERVICE_INFO_JSON_default_instance_;
class SS2C_RECONNECT_RES;
struct SS2C_RECONNECT_RESDefaultTypeInternal;
extern SS2C_RECONNECT_RESDefaultTypeInternal _SS2C_RECONNECT_RES_default_instance_;
}  // namespace Packet
}  // namespace DC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace DC {
namespace Packet {
enum PacketCommand : int {
  PACKET_NONE = 0,
  C2S_ALIVE_REQ = 1,
  S2C_ALIVE_RES = 2,
  C2S_RECONNECT_REQ = 3,
  S2C_RECONNECT_RES = 4,
  S2C_ALIVE_REVERSE_NOT = 5,
  C2S_ALIVE_REVERSE_REQ = 6,
  S2C_ALIVE_REVERSE_RES = 7,
  C2S_ACCOUNT_LOGIN_REQ = 11,
  S2C_ACCOUNT_LOGIN_RES = 12,
  C2S_ACCOUNT_CHARACTER_CREATE_REQ = 15,
  S2C_ACCOUNT_CHARACTER_CREATE_RES = 16,
  C2S_ACCOUNT_CHARACTER_LIST_REQ = 17,
  S2C_ACCOUNT_CHARACTER_LIST_RES = 18,
  C2S_ACCOUNT_CHARACTER_DELETE_REQ = 19,
  S2C_ACCOUNT_CHARACTER_DELETE_RES = 20,
  C2S_LOBBY_ENTER_REQ = 21,
  S2C_LOBBY_ENTER_RES = 22,
  C2S_ACCOUNT_AGREE_ANSWER_REQ = 23,
  S2C_ACCOUNT_AGREE_ANSWER_RES = 24,
  S2C_ACCOUNT_CHARACTER_CLASS_LIST_NOT = 25,
  C2S_USER_HW_INFO_REQ = 26,
  S2C_USER_HW_INFO_RES = 27,
  C2S_CHARACTER_SELECT_ENTER_REQ = 41,
  S2C_CHARACTER_SELECT_ENTER_RES = 42,
  C2S_LOBBY_CHARACTER_INFO_REQ = 43,
  S2C_LOBBY_CHARACTER_INFO_RES = 44,
  C2S_OPEN_LOBBY_MAP_REQ = 45,
  S2C_OPEN_LOBBY_MAP_RES = 46,
  C2S_LOBBY_REGION_SELECT_REQ = 47,
  S2C_LOBBY_REGION_SELECT_RES = 48,
  C2S_LOBBY_ENTER_FROM_GAME_REQ = 49,
  S2C_LOBBY_ENTER_FROM_GAME_RES = 50,
  C2S_LOBBY_GAME_TYPE_SELECT_REQ = 51,
  S2C_LOBBY_GAME_TYPE_SELECT_RES = 52,
  S2C_LOBBY_ACCOUNT_CURRENCY_LIST_NOT = 53,
  S2C_LOBBY_CHARACTER_LOBBY_EMOTE_NOT = 54,
  S2C_LOBBY_REPORT_PUNISH_LIST_NOT = 55,
  C2S_USER_CHARACTER_GAME_STAT_INFO_REQ = 56,
  S2C_USER_CHARACTER_GAME_STAT_INFO_RES = 57,
  C2S_KNIGHT_PROGRAM_LINK_SELECT_REQ = 58,
  S2C_KNIGHT_PROGRAM_LINK_SELECT_RES = 59,
  S2C_FRIEND_ITEM_RECOVERED_NOT = 60,
  C2S_FRIEND_ITEM_RECOVERED_NOT_CHECK_REQ = 61,
  S2C_FRIEND_ITEM_RECOVERED_NOT_CHECK_RES = 62,
  C2S_LOBBY_RANDOM_MATCHMAKING_REQ = 63,
  S2C_LOBBY_RANDOM_MATCHMAKING_RES = 64,
  S2C_FRIEND_ITEM_RECOVERY_RECEIVE_NOT = 65,
  C2S_FRIEND_ITEM_RECOVERY_RECEIVE_NOT_CHECK_REQ = 66,
  S2C_FRIEND_ITEM_RECOVERY_RECEIVE_NOT_CHECK_RES = 67,
  MIN_INVENTORY_PACKET = 500,
  C2S_INVENTORY_INFO_REQ = 501,
  S2C_INVENTORY_INFO_RES = 502,
  C2S_INVENTORY_ALL_UPDATE_REQ = 503,
  S2C_INVENTORY_ALL_UPDATE_RES = 504,
  C2S_INVENTORY_SINGLE_UPDATE_REQ = 505,
  S2C_INVENTORY_SINGLE_UPDATE_RES = 506,
  C2S_INVENTORY_MOVE_REQ = 507,
  S2C_INVENTORY_MOVE_RES = 508,
  C2S_INVENTORY_MERGE_REQ = 509,
  S2C_INVENTORY_MERGE_RES = 510,
  C2S_INVENTORY_SWAP_REQ = 511,
  S2C_INVENTORY_SWAP_RES = 512,
  C2S_INVENTORY_SPLIT_MOVE_REQ = 513,
  S2C_INVENTORY_SPLIT_MOVE_RES = 514,
  C2S_INVENTORY_SPLIT_MERGE_REQ = 515,
  S2C_INVENTORY_SPLIT_MERGE_RES = 516,
  C2S_INVENTORY_SPLIT_SWAP_REQ = 517,
  S2C_INVENTORY_SPLIT_SWAP_RES = 518,
  C2S_INVENTORY_TWO_HANDED_WEAPON_SWAP_REQ = 519,
  S2C_INVENTORY_TWO_HANDED_WEAPON_SWAP_RES = 520,
  C2S_INVENTORY_EXPAND_STORAGE_REQ = 521,
  S2C_INVENTORY_EXPAND_STORAGE_RES = 522,
  C2S_STORAGE_INFO_REQ = 551,
  S2C_STORAGE_INFO_RES = 552,
  MAX_INVENTORY_PACKET = 600,
  C2S_AUTO_MATCH_REG_REQ = 751,
  S2C_AUTO_MATCH_REG_RES = 752,
  S2C_ENTER_GAME_SERVER_NOT = 753,
  C2S_GAME_ENTER_COMPLETE_NOT = 754,
  S2C_AUTO_MATCH_REG_TEAM_NOT = 755,
  C2S_RECONNECT_INGAME_REQ = 756,
  S2C_RECONNECT_INGAME_RES = 757,
  S2C_GEAR_BASE_SCORE_LIST_NOT = 758,
  S2C_MATCH_POOL_REGISTERED_NOT = 759,
  S2C_MATCHMAKING_FAIL_NOT = 760,
  MIN_RANKING_PACKET = 800,
  C2S_RANKING_RANGE_REQ = 801,
  S2C_RANKING_RANGE_RES = 802,
  C2S_RANKING_CHARACTER_REQ = 805,
  S2C_RANKING_CHARACTER_RES = 806,
  C2S_RANKING_INFO_REQ = 807,
  S2C_RANKING_INFO_RES = 808,
  C2S_RANKING_AP_CONFIG_REQ = 809,
  S2C_RANKING_AP_CONFIG_RES = 810,
  S2C_RANKING_HAS_REWARD_NOT = 811,
  C2S_RANKING_REWARD_GET_REQ = 812,
  S2C_RANKING_REWARD_GET_RES = 813,
  MAX_RANKING_PACKET = 880,
  MIN_FRIEND_PACKET = 900,
  C2S_FRIEND_CHECK_ACCOUNTNICKNAME_REQ = 901,
  S2C_FRIEND_CHECK_ACCOUNTNICKNAME_RES = 902,
  C2S_FRIEND_CREATE_ACCOUNTNICKNAME_REQ = 903,
  S2C_FRIEND_CREATE_ACCOUNTNICKNAME_RES = 904,
  C2S_FRIEND_SET_STATUS_REQ = 905,
  S2C_FRIEND_SET_STATUS_RES = 906,
  C2S_FRIEND_SET_PRIVACY_REQ = 907,
  S2C_FRIEND_SET_PRIVACY_RES = 908,
  C2S_FRIEND_INVITE_REQ = 909,
  S2C_FRIEND_INVITE_RES = 910,
  C2S_FRIEND_INVITE_BY_ACCOUNTNICKNAME_REQ = 911,
  S2C_FRIEND_INVITE_BY_ACCOUNTNICKNAME_RES = 912,
  C2S_FRIEND_INVITE_ACCEPT_REQ = 913,
  S2C_FRIEND_INVITE_ACCEPT_RES = 914,
  C2S_FRIEND_INVITE_DECLINE_REQ = 915,
  S2C_FRIEND_INVITE_DECLINE_RES = 916,
  C2S_FRIEND_INVITE_CANCEL_REQ = 917,
  S2C_FRIEND_INVITE_CANCEL_RES = 918,
  C2S_FRIEND_DEL_FRIEND_REQ = 919,
  S2C_FRIEND_DEL_FRIEND_RES = 920,
  S2C_FRIEND_INFO_NOT = 921,
  S2C_FRIEND_SET_FRIEND_INFOS_NOT = 922,
  S2C_FRIEND_DEL_FRIEND_INFOS_NOT = 923,
  S2C_FRIEND_SET_ACCEPT_INFOS_NOT = 924,
  S2C_FRIEND_DEL_ACCEPT_INFOS_NOT = 925,
  S2C_FRIEND_SET_INVITE_INFOS_NOT = 926,
  S2C_FRIEND_DEL_INVITE_INFOS_NOT = 927,
  S2C_FRIEND_SET_STATUS_NOT = 928,
  C2S_FRIEND_LIST_REQ = 940,
  S2C_FRIEND_LIST_RES = 941,
  C2S_FRIEND_LIST_ALL_REQ = 942,
  S2C_FRIEND_LIST_ALL_RES = 943,
  C2S_FRIEND_FIND_REQ = 944,
  S2C_FRIEND_FIND_RES = 945,
  MAX_FRIEND_PACKET = 950,
  MIN_PARTY_PACKET = 1000,
  C2S_PARTY_INVITE_REQ = 1001,
  S2C_PARTY_INVITE_RES = 1002,
  S2C_PARTY_INVITE_NOT = 1003,
  C2S_PARTY_INVITE_ANSWER_REQ = 1004,
  S2C_PARTY_INVITE_ANSWER_RES = 1005,
  S2C_PARTY_INVITE_ANSWER_RESULT_NOT = 1006,
  C2S_PARTY_EXIT_REQ = 1007,
  S2C_PARTY_EXIT_RES = 1008,
  S2C_PARTY_MEMBER_INFO_NOT = 1009,
  C2S_PARTY_READY_REQ = 1010,
  S2C_PARTY_READY_RES = 1011,
  S2C_PARTY_EQUIP_ITEM_CHANGE_NOT = 1012,
  S2C_PARTY_REGION_CHANGE_NOT = 1013,
  S2C_PARTY_LOCATION_UPDATE_NOT = 1014,
  S2C_PARTY_CHARACTER_SKIN_LIST_NOT = 1015,
  S2C_PARTY_CHARACTER_SKIN_CHANGE_NOT = 1016,
  S2C_PARTY_ITEM_SKIN_LIST_NOT = 1017,
  S2C_PARTY_ITEM_SKIN_CHANGE_NOT = 1018,
  S2C_PARTY_GAME_TYPE_CHANGE_NOT = 1019,
  C2S_PARTY_MEMBER_KICK_REQ = 1020,
  S2C_PARTY_MEMBER_KICK_RES = 1021,
  C2S_PARTY_CHAT_REQ = 1022,
  S2C_PARTY_CHAT_RES = 1023,
  S2C_PARTY_CHAT_NOT = 1024,
  S2C_PARTY_READY_CHANGE_NOT = 1025,
  S2C_PARTY_KICKED_OUT_NOT = 1026,
  S2C_PARTY_MEMBER_LOBBY_EMOTE_NOT = 1027,
  C2S_PARTY_START_LOBBY_EMOTE_REQ = 1028,
  S2C_PARTY_START_LOBBY_EMOTE_RES = 1029,
  S2C_PARTY_START_LOBBY_EMOTE_NOT = 1030,
  S2C_PARTY_ARMOR_SKIN_LIST_NOT = 1031,
  S2C_PARTY_ARMOR_SKIN_CHANGE_NOT = 1032,
  S2C_PARTY_GEAR_SCORE_CHANGE_NOT = 1033,
  S2C_PARTY_RANDOM_MATCHMAKING_NOT = 1034,
  MAX_PARTY_PACKET = 1150,
  MIN_GM_PACKET = 1200,
  C2S_GM_PARTY_ALL_RANDOM_REQ = 1201,
  S2C_GM_PARTY_ALL_RANDOM_RES = 1202,
  C2S_GM_ENTER_GAME_SPECTATOR_REQ = 1203,
  S2C_GM_ENTER_GAME_SPECTATOR_RES = 1204,
  C2S_GM_TRADE_CHAT_BAN_REQ = 1205,
  S2C_GM_TRADE_CHAT_BAN_RES = 1206,
  MAX_GM_PACKET = 1300,
  MIN_MERCHANT_PACKET = 1350,
  C2S_MERCHANT_LIST_REQ = 1351,
  S2C_MERCHANT_LIST_RES = 1352,
  C2S_MERCHANT_STOCK_BUY_ITEM_LIST_REQ = 1353,
  S2C_MERCHANT_STOCK_BUY_ITEM_LIST_RES = 1354,
  C2S_MERCHANT_STOCK_SELL_BACK_ITEM_LIST_REQ = 1355,
  S2C_MERCHANT_STOCK_SELL_BACK_ITEM_LIST_RES = 1356,
  C2S_MERCHANT_STOCK_BUY_REQ = 1357,
  S2C_MERCHANT_STOCK_BUY_RES = 1358,
  C2S_MERCHANT_STOCK_SELL_BACK_REQ = 1359,
  S2C_MERCHANT_STOCK_SELL_BACK_RES = 1360,
  C2S_MERCHANT_SERVICE_CRAFT_LIST_REQ = 1361,
  S2C_MERCHANT_SERVICE_CRAFT_LIST_RES = 1362,
  C2S_MERCHANT_SERVICE_CRAFT_REQ = 1363,
  S2C_MERCHANT_SERVICE_CRAFT_RES = 1364,
  C2S_MERCHANT_SERVICE_REPAIR_REQ = 1365,
  S2C_MERCHANT_SERVICE_REPAIR_RES = 1366,
  C2S_MERCHANT_SERVICE_MINDWIPE_INFO_REQ = 1367,
  S2C_MERCHANT_SERVICE_MINDWIPE_INFO_RES = 1368,
  C2S_MERCHANT_SERVICE_MINDWIPE_REQ = 1369,
  S2C_MERCHANT_SERVICE_MINDWIPE_RES = 1370,
  C2S_MERCHANT_RECOVERY_LIST_REQ = 1371,
  S2C_MERCHANT_RECOVERY_LIST_RES = 1372,
  C2S_MERCHANT_RECOVERY_BUY_REQ = 1373,
  S2C_MERCHANT_RECOVERY_BUY_RES = 1374,
  S2C_MERCHANT_RECOVERY_ITEM_CHECK_NOT = 1375,
  C2S_MERCHANT_RECOVERY_CHECK_REQ = 1376,
  S2C_MERCHANT_RECOVERY_CHECK_RES = 1377,
  C2S_MERCHANT_QUEST_LIST_INFO_REQ = 1400,
  S2C_MERCHANT_QUEST_LIST_INFO_RES = 1401,
  C2S_MERCHANT_QUEST_SELECT_REQ = 1402,
  S2C_MERCHANT_QUEST_SELECT_RES = 1403,
  C2S_MERCHANT_QUEST_COMPLETE_REQ = 1404,
  S2C_MERCHANT_QUEST_COMPLETE_RES = 1405,
  C2S_MERCHANT_QUEST_CONTENT_VALUE_STACK_REQ = 1406,
  S2C_MERCHANT_QUEST_CONTENT_VALUE_STACK_RES = 1407,
  C2S_MERCHANT_BASE_GEAR_LIST_REQ = 1450,
  S2C_MERCHANT_BASE_GEAR_LIST_RES = 1451,
  C2S_MERCHANT_BASE_GEAR_SET_REQ = 1452,
  S2C_MERCHANT_BASE_GEAR_SET_RES = 1453,
  C2S_MERCHANT_SAVE_BASE_GEAR_SET_REQ = 1454,
  S2C_MERCHANT_SAVE_BASE_GEAR_SET_RES = 1455,
  C2S_MERCHANT_EQUIP_BASE_GEAR_SET_REQ = 1456,
  S2C_MERCHANT_EQUIP_BASE_GEAR_SET_RES = 1457,
  C2S_MERCHANT_QUEST_LOG_LIST_REQ = 1480,
  S2C_MERCHANT_QUEST_LOG_LIST_RES = 1481,
  C2S_MERCHANT_QUEST_LOG_ACCEPT_ALL_REQ = 1482,
  S2C_MERCHANT_QUEST_LOG_ACCEPT_ALL_RES = 1483,
  MAX_MERCHANT_PACKET = 1600,
  MIN_KARMA_PACKET = 1650,
  C2S_KARMA_REPORT_LIST_REQ = 1651,
  S2C_KARMA_REPORT_LIST_RES = 1652,
  C2S_KARMA_REPORT_ACTION_REQ = 1653,
  S2C_KARMA_REPORT_ACTION_RES = 1654,
  S2C_KARMA_RATING_UPDATE_NOT = 1655,
  MAX_KARMA_PACKET = 1700,
  MIN_TRADE_PACKET = 2000,
  C2S_TRADE_CHANNEL_LIST_REQ = 2001,
  S2C_TRADE_CHANNEL_LIST_RES = 2002,
  C2S_TRADE_CHANNEL_SELECT_REQ = 2003,
  S2C_TRADE_CHANNEL_SELECT_RES = 2004,
  C2S_TRADE_CHANNEL_EXIT_REQ = 2005,
  S2C_TRADE_CHANNEL_EXIT_RES = 2006,
  C2S_TRADE_CHANNEL_USER_LIST_REQ = 2007,
  S2C_TRADE_CHANNEL_USER_LIST_RES = 2008,
  S2C_TRADE_CHANNEL_USER_UPDATE_NOT = 2009,
  C2S_TRADE_CHANNEL_CHAT_REQ = 2011,
  S2C_TRADE_CHANNEL_CHAT_RES = 2012,
  C2S_TRADE_CHANNEL_CHAT_TEXT_RANGE_REQ = 2013,
  S2C_TRADE_CHANNEL_CHAT_TEXT_RANGE_RES = 2014,
  C2S_TRADE_MEMBERSHIP_REQUIREMENT_REQ = 2030,
  S2C_TRADE_MEMBERSHIP_REQUIREMENT_RES = 2031,
  C2S_TRADE_MEMBERSHIP_REQ = 2032,
  S2C_TRADE_MEMBERSHIP_RES = 2033,
  C2S_TRADE_REQUEST_REQ = 2034,
  S2C_TRADE_REQUEST_RES = 2035,
  S2C_TRADE_REQUEST_NOT = 2036,
  C2S_TRADE_ANSWER_REQ = 2037,
  S2C_TRADE_ANSWER_RES = 2038,
  S2C_TRADE_ANSWER_REFUSAL_NOT = 2039,
  S2C_TRADING_BEGIN_NOT = 2050,
  C2S_TRADING_CLOSE_REQ = 2051,
  S2C_TRADING_CLOSE_RES = 2052,
  C2S_TRADING_CHAT_REQ = 2053,
  S2C_TRADING_CHAT_RES = 2054,
  C2S_TRADING_ITEM_UPDATE_REQ = 2055,
  S2C_TRADING_ITEM_UPDATE_RES = 2056,
  C2S_TRADING_READY_REQ = 2057,
  S2C_TRADING_READY_RES = 2058,
  S2C_TRADING_READY_NOT = 2059,
  S2C_TRADING_CONFIRM_NOT = 2060,
  C2S_TRADING_CONFIRM_READY_REQ = 2061,
  S2C_TRADING_CONFIRM_READY_RES = 2062,
  S2C_TRADING_CONFIRM_READY_NOT = 2063,
  C2S_TRADING_CONFIRM_CANCEL_REQ = 2064,
  S2C_TRADING_CONFIRM_CANCEL_RES = 2065,
  S2C_TRADING_RESULT_NOT = 2066,
  MAX_TRADE_PACKET = 2300,
  MIN_CUSTOMIZE_PACKET = 2330,
  C2S_CUSTOMIZE_NEW_ITEM_CHECK_REQ = 2331,
  S2C_CUSTOMIZE_NEW_ITEM_CHECK_RES = 2332,
  S2C_CUSTOMIZE_NEW_ITEM_ALERT_NOT = 2333,
  C2S_CUSTOMIZE_INFO_REQ = 2341,
  S2C_CUSTOMIZE_INFO_RES = 2342,
  C2S_CUSTOMIZE_MOUNT_REQ = 2351,
  S2C_CUSTOMIZE_MOUNT_RES = 2352,
  C2S_CUSTOMIZE_UNMOUNT_REQ = 2353,
  S2C_CUSTOMIZE_UNMOUNT_RES = 2354,
  MAX_CUSTOMIZE_PACKET = 2450,
  MIN_SHOP_PACKET = 2501,
  C2S_SHOP_ITEM_LIST_REQ = 2502,
  S2C_SHOP_ITEM_LIST_RES = 2503,
  C2S_SHOP_ITEM_BUY_REQ = 2521,
  S2C_SHOP_ITEM_BUY_RES = 2522,
  C2S_SHOP_ENTER_GIFT_CODE_REQ = 2550,
  S2C_SHOP_ENTER_GIFT_CODE_RES = 2551,
  C2S_SHOP_RED_STONE_SHARD_INFO_REQ = 2555,
  S2C_SHOP_RED_STONE_SHARD_INFO_RES = 2556,
  C2S_SHOP_RED_STONE_SHARD_BUY_REQ = 2557,
  S2C_SHOP_RED_STONE_SHARD_BUY_RES = 2558,
  C2S_SHOP_RED_STONE_SHARD_BUY_CHECK_REQ = 2560,
  S2C_SHOP_RED_STONE_SHARD_BUY_CHECK_RES = 2561,
  C2S_SHOP_LEGEND_UPGRADE_REQ = 2562,
  S2C_SHOP_LEGEND_UPGRADE_RES = 2563,
  C2S_SHOP_CHANGE_ACCOUNT_NAME_REQ = 2564,
  S2C_SHOP_CHANGE_ACCOUNT_NAME_RES = 2565,
  S2C_SHOP_ITEM_CHECK_NOT = 2570,
  MAX_SHOP_PACKET = 2600,
  MIN_CLASS_PACKET = 2700,
  C2S_TRAINING_INFO_REQ = 2701,
  S2C_TRAINING_INFO_RES = 2702,
  C2S_TRAINING_REDEEM_LEARNING_TOKEN_REQ = 2705,
  S2C_TRAINING_REDEEM_LEARNING_TOKEN_RES = 2706,
  C2S_TRAINING_RECEIVE_CLASS_ABILITY_REQ = 2707,
  S2C_TRAINING_RECEIVE_CLASS_ABILITY_RES = 2708,
  C2S_TRAINING_REDEEM_REWARD_TOKEN_REQ = 2709,
  S2C_TRAINING_REDEEM_REWARD_TOKEN_RES = 2710,
  C2S_TRAINING_RECEIVE_REWARD_REQ = 2711,
  S2C_TRAINING_RECEIVE_REWARD_RES = 2712,
  C2S_CLASS_LEVEL_INFO_REQ = 3001,
  S2C_CLASS_LEVEL_INFO_RES = 3002,
  C2S_CLASS_EQUIP_INFO_REQ = 3031,
  S2C_CLASS_EQUIP_INFO_RES = 3032,
  C2S_CLASS_PERK_LIST_REQ = 3041,
  S2C_CLASS_PERK_LIST_RES = 3042,
  C2S_CLASS_SKILL_LIST_REQ = 3043,
  S2C_CLASS_SKILL_LIST_RES = 3044,
  C2S_CLASS_SPELL_LIST_REQ = 3045,
  S2C_CLASS_SPELL_LIST_RES = 3046,
  C2S_CLASS_MUSIC_LIST_REQ = 3047,
  S2C_CLASS_MUSIC_LIST_RES = 3048,
  C2S_CLASS_SHAPESHIFT_LIST_REQ = 3049,
  S2C_CLASS_SHAPESHIFT_LIST_RES = 3050,
  C2S_CLASS_ITEM_MOVE_REQ = 3071,
  S2C_CLASS_ITEM_MOVE_RES = 3072,
  C2S_CLASS_SPELL_SLOT_MOVE_REQ = 3073,
  S2C_CLASS_SPELL_SLOT_MOVE_RES = 3074,
  C2S_CLASS_SPELL_SEQUENCE_CHANGE_REQ = 3075,
  S2C_CLASS_SPELL_SEQUENCE_CHANGE_RES = 3076,
  C2S_CLASS_MUSIC_SLOT_MOVE_REQ = 3078,
  S2C_CLASS_MUSIC_SLOT_MOVE_RES = 3079,
  C2S_CLASS_MUSIC_SEQUENCE_CHANGE_REQ = 3080,
  S2C_CLASS_MUSIC_SEQUENCE_CHANGE_RES = 3081,
  C2S_CLASS_SHAPESHIFT_SLOT_MOVE_REQ = 3082,
  S2C_CLASS_SHAPESHIFT_SLOT_MOVE_RES = 3083,
  C2S_CLASS_SHAPESHIFT_SEQUENCE_CHANGE_REQ = 3084,
  S2C_CLASS_SHAPESHIFT_SEQUENCE_CHANGE_RES = 3085,
  MAX_CLASS_PACKET = 3199,
  MIN_GATHERING_HALL_PACKET = 3200,
  C2S_GATHERING_HALL_CHANNEL_LIST_REQ = 3201,
  S2C_GATHERING_HALL_CHANNEL_LIST_RES = 3202,
  C2S_GATHERING_HALL_CHANNEL_SELECT_REQ = 3203,
  S2C_GATHERING_HALL_CHANNEL_SELECT_RES = 3204,
  C2S_GATHERING_HALL_CHANNEL_EXIT_REQ = 3205,
  S2C_GATHERING_HALL_CHANNEL_EXIT_RES = 3206,
  C2S_GATHERING_HALL_CHANNEL_USER_LIST_REQ = 3207,
  S2C_GATHERING_HALL_CHANNEL_USER_LIST_RES = 3208,
  S2C_GATHERING_HALL_CHANNEL_USER_UPDATE_NOT = 3209,
  C2S_GATHERING_HALL_CHANNEL_CHAT_REQ = 3220,
  S2C_GATHERING_HALL_CHANNEL_CHAT_RES = 3221,
  S2C_GATHERING_HALL_CHANNEL_CHAT_NOT = 3222,
  C2S_GATHERING_HALL_TARGET_EQUIPPED_ITEM_REQ = 3230,
  S2C_GATHERING_HALL_TARGET_EQUIPPED_ITEM_RES = 3231,
  MAX_GATHERING_HALL_PACKET = 3300,
  MIN_MARKETPLACE_PACKET = 3500,
  C2S_MARKETPLACE_ITEM_LIST_REQ = 3511,
  S2C_MARKETPLACE_ITEM_LIST_RES = 3512,
  C2S_MARKETPLACE_MY_ITEM_LIST_REQ = 3513,
  S2C_MARKETPLACE_MY_ITEM_LIST_RES = 3514,
  C2S_MARKETPLACE_ITEM_BUY_REQ = 3531,
  S2C_MARKETPLACE_ITEM_BUY_RES = 3532,
  C2S_MARKETPLACE_ITEM_REGISTER_REQ = 3533,
  S2C_MARKETPLACE_ITEM_REGISTER_RES = 3534,
  C2S_MARKETPLACE_ITEM_CANCEL_REQ = 3535,
  S2C_MARKETPLACE_ITEM_CANCEL_RES = 3536,
  C2S_MARKETPLACE_TRANSFER_ITEMS_REQ = 3551,
  S2C_MARKETPLACE_TRANSFER_ITEMS_RES = 3552,
  S2C_MARKETPLACE_ITEM_HAS_SOLD_NOT = 3560,
  C2S_MARKETPLACE_ENTER_REQ = 3565,
  S2C_MARKETPLACE_ENTER_RES = 3566,
  MAX_MARKETPLACE_PACKET = 3700,
  MIN_META_PACKET = 10000,
  C2S_META_LOCATION_REQ = 10001,
  S2C_META_LOCATION_RES = 10002,
  C2S_BLOCK_CHARACTER_REQ = 10010,
  S2C_BLOCK_CHARACTER_RES = 10011,
  C2S_UNBLOCK_CHARACTER_REQ = 10012,
  S2C_UNBLOCK_CHARACTER_RES = 10013,
  C2S_BLOCK_CHARACTER_LIST_REQ = 10014,
  S2C_BLOCK_CHARACTER_LIST_RES = 10015,
  S2C_LOBBY_COMPLETE_NOT = 10020,
  C2S_HACK_LOG_REQ = 10030,
  S2C_HACK_LOG_RES = 10031,
  C2S_CHAT_HACK_REPORT_REQ = 10040,
  S2C_CHAT_HACK_REPORT_RES = 10041,
  S2C_SERVICE_POLICY_NOT = 10050,
  C2S_RE_LOGIN_REQ = 10060,
  S2C_RE_LOGIN_RES = 10061,
  S2C_CLOSED_GAME_NOT = 10062,
  C2S_JOIN_LAST_GAME_REQ = 10063,
  S2C_JOIN_LAST_GAME_RES = 10064,
  S2C_LATENCY_CHECK_NOT = 10070,
  C2S_USER_CHARACTER_INFO_REQ = 10080,
  S2C_USER_CHARACTER_INFO_RES = 10081,
  S2C_ALL_MAP_MATCHMAKING_NOT = 10100,
  C2S_WHISPER_CHAT_REQ = 10120,
  S2C_WHISPER_CHAT_RES = 10121,
  S2C_WHISPER_CHAT_NOT = 10122,
  S2C_OPERATE_ANNOUNCE_NOT = 10500,
  S2C_ACCOUNT_STATUS_NOT = 10550,
  C2S_PLATFORM_LINK_CODE_GEN_REQ = 10601,
  S2C_PLATFORM_LINK_CODE_GEN_RES = 10602,
  C2S_PLATFORM_LINK_CODE_ACTIVE_REQ = 10603,
  S2C_PLATFORM_LINK_CODE_ACTIVE_RES = 10604,
  C2S_PLATFORM_LINK_INFO_LIST_REQ = 10605,
  S2C_PLATFORM_LINK_INFO_LIST_RES = 10606,
  C2S_PLATFORM_LINK_FAQ_URL_REQ = 10607,
  S2C_PLATFORM_LINK_FAQ_URL_RES = 10608,
  S2C_CLIENT_POPUP_MESSAGE_NOT = 10630,
  S2C_SQUIRE_STATUS_RESTRICTED_CONTENT_NOT = 10631,
  C2S_REFRESH_RED_STONE_SHARD_REQ = 10650,
  S2C_REFRESH_RED_STONE_SHARD_RES = 10651,
  S2C_TERMINATE_NOT = 10660,
  MAX_META_PACKET = 11000,
  PacketCommand_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PacketCommand_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PacketCommand_IsValid(int value);
extern const uint32_t PacketCommand_internal_data_[];
constexpr PacketCommand PacketCommand_MIN = static_cast<PacketCommand>(0);
constexpr PacketCommand PacketCommand_MAX = static_cast<PacketCommand>(11000);
constexpr int PacketCommand_ARRAYSIZE = 11000 + 1;
const ::google::protobuf::EnumDescriptor*
PacketCommand_descriptor();
template <typename T>
const std::string& PacketCommand_Name(T value) {
  static_assert(std::is_same<T, PacketCommand>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PacketCommand_Name().");
  return ::google::protobuf::internal::NameOfEnum(PacketCommand_descriptor(), value);
}
inline bool PacketCommand_Parse(absl::string_view name, PacketCommand* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PacketCommand>(
      PacketCommand_descriptor(), name, value);
}
enum PacketResult : int {
  RESULT_NONE = 0,
  SUCCESS = 1,
  SUCCESS_REQUEST_PAYMENT_CHAF_GAMES = 2,
  FAIL_GENERAL = 10,
  FAIL_SHORTAGE = 11,
  FAIL_NO_VALUE = 12,
  FAIL_DUPLICATE_NICKNAME = 13,
  FAIL_CHARACTER_NICKNAME_LENGTH_SHORTAGE = 14,
  FAIL_CHARACTER_NICKNAME_LENGTH_OVER = 15,
  FAIL_CHATACTER_CLASS = 16,
  FAIL_CHARACTER_BAD_NICKNAME = 17,
  FAIL_CHARACTER_MAX_COUNT = 18,
  FAIL_CHARACTER_NOT_PURCHASED = 19,
  FAIL_ACCOUNT_LINK_GENERIC_ERROR = 20,
  FAIL_MAX_SQUIRE_CHARACTER_COUNT_EXCEEDED = 21,
  FAIL_CHARACTER_NICKNAME_INVALID = 22,
  FAIL_CHARACTER_NEED_MORE_TIME = 23,
  FAIL_PARTY_INVITE_OFFLINE_CHARACTER = 25,
  FAIL_PARTY_INVITE_NO_LOBBY_CHARACTER = 26,
  FAIL_PARTY_INVITE_ALREADY_PARTY = 27,
  FAIL_PARTY_INVITE_MEMBER_FULL = 28,
  FAIL_EXIT_PARTY_NO_PARTY = 30,
  FAIL_EXIT_ALREADY_GAME_START_PARTY = 31,
  FAIL_PARTY_INVITE_ANSWER_DECLINED = 32,
  FAIL_PARTY_TARGET_BLOCK_CHARACTER = 33,
  FAIL_PARTY_YOU_BLOCKED_CHARACTER = 34,
  FAIL_PARTY_DUPLICATE_REQUEST = 35,
  FAIL_PARTY_INVITE_TARGET_TRADING = 36,
  FAIL_PARTY_CHAT_NO_PARTY = 37,
  FAIL_PARTY_IS_MATCHING = 38,
  FAIL_PARTY_READY_SHORTAGE_ENTRANCE_FEE = 39,
  FAIL_PARTY_READY_SHORTAGE_ENTRANCE_LEVEL = 40,
  FAIL_PARTY_INVITE_TOO_OFTEN = 41,
  FAIL_PARTY_READY_MEMBER_EXCEEDED = 42,
  FAIL_PARTY_READY_PLAY_TIME_SHORTAGE = 43,
  FAIL_PARTY_READY_RARITY_ITEM_TOO_HIGH = 44,
  FAIL_PARTY_READY_REGION_LATENCY_LIMIT = 45,
  FAIL_PARTY_READY_MATCH_RESTRICTION_BASECAMP_ESCAPE = 46,
  FAIL_PARTY_READY_CAN_NOT_SQUIRE = 47,
  FAIL_PARTY_READY_INSUFFICIENT_GEAR_SCORE = 48,
  FAIL_PARTY_READY_PARTY_SIZE_MISMATCH = 49,
  FAIL_CHARACTER_SELECT_ENTER_IS_MATCHING = 50,
  FAIL_CHARACTER_SELECT_ENTER_NOT_LOBBY = 51,
  FAIL_PARTY_READY_IS_MATCHING = 55,
  FAIL_MERCHANT_NO_OPEN = 60,
  FAIL_MERCHANT_IS_MATCHING = 61,
  FAIL_PARTY_READY_MATCH_RESTRICTION_TEAM_KILLER = 70,
  FAIL_ON_PARTY_READY_WITH_EQUIPMENT_ITEM = 71,
  FAIL_CLASS_NOT_FOUND_OLD_ITEM = 100,
  FAIL_CLASS_NOT_FOUND_NEW_ITEM = 101,
  FAIL_CLASS_NEW_ITEM_CONDITION = 102,
  FAIL_CLASS_SWAP = 103,
  FAIL_CLASS_ITEM_LOCKED_BY_PERK = 104,
  FAIL_CLASS_NOT_FOUND_SPELL_ITEM = 105,
  FAIL_CLASS_DUPLICATE_EQUIP_SPELL_ITEM = 106,
  FAIL_CLASS_NOT_FOUND_MUSIC_ITEM = 107,
  FAIL_CLASS_DUPLICATE_EQUIP_MUSIC_ITEM = 108,
  FAIL_CLASS_NOT_FOUND_SHAPESHIFT_ITEM = 109,
  FAIL_CLASS_DUPLICATE_EQUIP_SHAPESHIFT_ITEM = 110,
  FAIL_CHAT_MAX_ROOM_USER = 130,
  FAIL_CHAT_SELECT_ALREADY_ROOM = 131,
  FAIL_CHAT_SELECT_NOT_MEMBERSHIP = 132,
  FAIL_CHAT_SELECT_NOT_EXISTS_ROOM = 133,
  FAIL_CHAT_WHISPER_NOT_FOUND_USER = 134,
  FAIL_CHAT_SELECT_SQUIRE_USER_ENTER = 135,
  FAIL_CHAT_EXIT_NOT_EXISTS_ROOM = 140,
  FAIL_CHAT_EXIT_CANNOT_LEAVE_DURING_TRADE = 141,
  FAIL_TRADE_REQUIREMENT_SHORTAGE_LV = 150,
  FAIL_TRADE_REQUIREMENT_SHORTAGE_GOLD = 151,
  FAIL_TRADE_ALREADY_MEMBERSHIP = 152,
  FAIL_TRADE_TARGET_BLOCK = 153,
  FAIL_TRADE_DUPLICATE_REQUEST = 154,
  FAIL_TRADE_REQUEST_NOT_FOUND_CHANNEL = 155,
  FAIL_TRADE_ANSWER_NO_CHANNEL = 156,
  FAIL_TRADE_REQUIREMENT_PLAY_TIME_SHORTAGE = 157,
  FAIL_TRADE_CAN_NOT_SQUIRE = 158,
  FAIL_TRADING_NOT_FOUND_USER = 161,
  FAIL_TRADING_ALREADY_TRADING = 162,
  FAIL_TRADING_NO_MEMBERSHIP = 163,
  FAIL_TRADING_SHORTAGE_MINE_GOLD = 164,
  FAIL_TRADING_SHORTAGE_TARGET_GOLD = 165,
  FAIL_TRADING_INGAME_TARGET = 166,
  FAIL_TRADING_NOT_FOUND_ITEM = 167,
  FAIL_TRADING_ALREADY_ITEM = 168,
  FAIL_TRADING_NOT_FOUND_EMPTY_SLOT = 169,
  FAIL_TRADING_READY_SHORTAGE_GOLD = 170,
  FAIL_TRADING_NOT_FOUND_EMPTY_INVENTORY_SLOT = 171,
  FAIL_TRADING_NON_TRADE_LOOTED = 172,
  FAIL_BLOCK_CHARACTER_ALREADY = 180,
  FAIL_BLOCK_CHARACTER_LIMIT = 181,
  FAIL_BLOCK_CHARACTER_NOT_FOUND = 182,
  FAIL_UNBLOCK_CHARACTER_NOT_FOUND = 183,
  FAIL_CHAT_NOT_FOUND_USER = 190,
  FAIL_FRIEND_FIND_NOT_FOUND = 201,
  FAIL_CUSTOMIZE_NOT_FOUND_ITEM = 250,
  FAIL_CUSTOMIZE_UNEQUIPPED_CLASS = 251,
  FAIL_CUSTOMIZE_NO_MOUNTING_SLOT_AVAILABLE = 252,
  FAIL_CUSTOMIZE_MAXIMUM_LIMIT = 253,
  FAIL_SHOP_ALREADY_ITEM = 270,
  FAIL_SHOP_ITEM_SHORTAGE_CURRENCY = 271,
  FAIL_SHOP_BUY_PRICE_DIFFERENT = 272,
  FAIL_KARMA_NOT_FOUND_USER = 300,
  FAIL_KARMA_SHORTAGE_TICKET_COUNT = 301,
  FAIL_KARMA_IMPOSSIBLE_ACTION = 302,
  FAIL_KARMA_ALREADY_VOTES = 303,
  FAIL_KARMA_BAD_CHARACTER_IMPOSSIBLE_VOTE = 304,
  FAIL_GATHERING_HALL_NOT_FOUND_USER = 320,
  FAIL_ENTER_GAME_SPECTATOR_NOT_PLAY_GAME = 500,
  FAIL_ENTER_GAME_SPECTATOR_NOT_FOUND_USER = 501,
  FAIL_NOT_GM = 502,
  FAIL_SHOP_ENTER_GIFT_CODE_INVALID = 550,
  FAIL_SHOP_ENTER_GIFT_CODE_ALREADY = 551,
  FAIL_SHOP_ENTER_GIFT_CODE_NOT_VALID_TIME = 552,
  FAIL_SHOP_ENTER_GIFT_CODE_INVALID_REWARD_TYPE = 553,
  FAIL_SHOP_ENTER_GIFT_CODE_INVALID_REWARD_ID = 554,
  FAIL_SHOP_ENTER_GIFT_CODE_MAXIMUM_ALLOWED_QUANTITY_EXCEEDED = 555,
  FAIL_SHOP_ENTER_GIFT_CODE_ALREADY_USED_IN_GROUP = 556,
  FAIL_INSUFFICIENT_FUNDS_FOR_EXPANSION = 570,
  FAIL_DUPLICATE_EXPANSION_PURCHASE = 571,
  FAIL_PREMATURE_EXPANSION_PURCHASE = 572,
  FAIL_MERCHANT_QUEST_ALREADY_ACCEPTED = 600,
  FAIL_MERCHANT_QUEST_NOT_ACCEPTABLE = 601,
  FAIL_MERCHANT_QUEST_INACTIVE = 602,
  FAIL_MERCHANT_QUEST_NO_SPACE_FOR_REWARD = 603,
  FAIL_MERCHANT_QUEST_REWARD_ALREADY_RECEIVED = 604,
  FAIL_MERCHANT_QUEST_NOT_FOUND_QUEST = 605,
  FAIL_MERCHANT_QUEST_NOT_COMPLETED = 606,
  FAIL_MERCHANT_QUEST_CONTENT_COUNT_SHORT_AGE = 607,
  FAIL_MERCHANT_QUEST_LOG_ALL_ACCEPT_DB_ERROR = 608,
  FAIL_MERCHANT_QUEST_LOG_ALL_ACCEPT_DATA_CONVERT_ERROR = 609,
  FAIL_FRIEND_DB_ERROR = 620,
  FAIL_FRIEND_SERVER_ERROR = 621,
  FAIL_FRIEND_PARAM_EMPTY_ACCOUNTNICKNAME = 622,
  FAIL_FRIEND_ALREADY_CREATED_ACCOUNTNICKNAME = 623,
  FAIL_FRIEND_NOT_EXISTED_ACCOUNTNICKNAME = 624,
  FAIL_FRIEND_SAME_STATUS = 625,
  FAIL_FRIEND_NOT_ALLOWED_STATUS = 626,
  FAIL_FRIEND_NOT_ALLOWED_INVITATION = 627,
  FAIL_FRIEND_ALREADY_FRIEND = 628,
  FAIL_FRIEND_ALREADY_GOT_INVITATION = 629,
  FAIL_FRIEND_ALREADY_SENT_INVITATION = 630,
  FAIL_FRIEND_LIMIT_TO_INVITE = 631,
  FAIL_FRIEND_LIMIT_TO_BE_FRIEND = 632,
  FAIL_FRIEND_NOT_EXISTED_IN_FRIEND_LIST = 633,
  FAIL_FRIEND_NOT_EXISTED_IN_ACCEPT_LIST = 634,
  FAIL_FRIEND_NOT_EXISTED_IN_REQUEST_LIST = 635,
  FAIL_FRIEND_ALREADY_EXISTED_ACCOUNTNICKNAME = 636,
  FAIL_FRIEND_NOT_EXISTED_USER = 637,
  FAIL_FRIEND_PRIVACY_IS_ON = 638,
  FAIL_FRIEND_LIMIT_INVITE_RECEIVE = 639,
  FAIL_MARKETPLACE_GENERAL_ERROR = 650,
  FAIL_MARKETPLACE_ITEM_ALREADY_SOLD = 651,
  FAIL_MARKETPLACE_INVALID_PURCHASE_SPACE = 652,
  FAIL_MARKETPLACE_INSUFFICIENT_INVENTORY_SPACE = 653,
  FAIL_MARKETPLACE_ITEM_DISTRIBUTION_FAILED = 654,
  FAIL_MARKETPLACE_EXCEEDED_MAXIMUM_REGISTRATION = 655,
  FAIL_MARKETPLACE_ITEM_PRICE_NOT_SET = 656,
  FAIL_MARKETPLACE_INSUFFICIENT_COMMISSION = 657,
  FAIL_MARKETPLACE_INSUFFICIENT_SPACE_FOR_CANCELLED_ITEM = 658,
  FAIL_MARKETPLACE_PAYMENT_PERIOD_EXPIRED = 659,
  FAIL_MARKETPLACE_EXCEEDED_MAXIMUM_AMOUNT = 660,
  FAIL_MARKETPLACE_BUY_PERIOD_EXPIRED = 661,
  FAIL_MARKETPLACE_NON_TRADE_LOOTED = 662,
  FAIL_MARKETPLACE_SQUIRE_ATTEMPT_REGISTER_ITEM = 663,
  FAIL_MARKETPLACE_LISTING_REQUIREMENT_PLAY_TIME_SHORTAGE = 664,
  FAIL_MARKETPLACE_IS_MATCHING = 665,
  FAIL_REPORT_LOBBY_CHARACTER_NOT_EXISTED = 700,
  FAIL_REPORT_TIME_MIN_OVER = 701,
  FAIL_REPORT_POLICY_OFF = 702,
  FAIL_REPORT_CHAT_SERVER_TYPE_NOT_EXISTED = 703,
  FAIL_REPORT_TARGET_USER_NOT_EXISTED = 704,
  FAIL_REPORT_CHAT_MESSAGE_NOT_EXISTED = 705,
  FAIL_MERCHANT_SQUIRE_NOT_FOUND_MERCHANT_ID = 751,
  FAIL_MERCHANT_SQUIRE_INVENTORY_FULL = 752,
  FAIL_MERCHANT_SQUIRE_AFFINITY_INSUFFICIENT = 753,
  FAIL_MERCHANT_SQUIRE_INVALID_SLOT = 754,
  FAIL_MERCHANT_SQUIRE_NO_DIRTY_ITEM = 755,
  FAIL_MERCHANT_SQUIRE_EQUIPPED_INVALID_PERK = 756,
  FAIL_MERCHANT_SQUIRE_IS_MATCHING = 757,
  FAIL_RANKING_GIVE_REWARD_INVENTORY_FULL = 780,
  FAIL_TRAINING_NOT_MASTER_CLASS = 800,
  FAIL_TRAINING_INSUFFICIENT_LEARNING_TOKENS = 801,
  FAIL_TRAINING_INSUFFICIENT_REWARD_TOKENS = 802,
  FAIL_TRAINING_NO_MORE_CLASS_ABILITIES_AVAILABLE = 803,
  FAIL_TRAINING_UNSELECTED_CLASS_ABILITY_PRESENT = 804,
  FAIL_TRAINING_UNSELECTED_REWARD_PRESENT = 805,
  FAIL_TRAINING_NO_PROGRESSABLE_CLASS_ABILITY = 806,
  FAIL_TRAINING_INVALID_CLASS_ABILITY = 807,
  FAIL_TRAINING_INVALID_REWARD = 808,
  FAIL_TRAINING_INITIALIZATION_TIME_NOT_REACHED = 809,
  FAIL_TRAINING_INSUFFICIENT_GOLD_FOR_INITIALIZATION = 810,
  FAIL_TRAINING_IMPOSSIBLE_STATE = 811,
  FAIL_WHISPER_CHAT_NOT_FOUND_USER = 830,
  FAIL_WHISPER_CHAT_TOO_FAST_TERM = 831,
  FAIL_RECOVERY_NOT_FOUND_ITEM = 840,
  FAIL_RECOVERY_NOT_FOUND_CONDITION = 841,
  FAIL_RECOVERY_ITEM_DISTRIBUTION_FAILED = 842,
  FAIL_RECOVERY_SHORTAGE_AMOUNT = 843,
  FAIL_RECOVERY_EXPIRED = 844,
  FAIL_RECOVERY_IS_MATCHING = 845,
  FAIL_ACCOUNT_LINK_GEN_CODE_WAIT = 870,
  FAIL_ACCOUNT_LINK_GEN_CODE_SQUIRE_NOT_ALLOWED = 871,
  FAIL_ACCOUNT_LINK_CHARACTER_EXISTS = 872,
  FAIL_ACCOUNT_LINK_INVALID_CODE = 873,
  FAIL_ACCOUNT_LINK_CODE_EXPIRED = 874,
  FAIL_ACCOUNT_LINK_DUPLICATE_PLATFORM = 875,
  FAIL_ACCOUNT_LINK_PAYMENT_HISTORY = 876,
  FAIL_ACCOUNT_LINK_ACCOUNT_ALREADY_LINKED = 877,
  FAIL_ACCOUNT_STATUS_UPGRADE_ALREADY = 900,
  FAIL_ACCOUNT_STATUS_UPGRADE_SHORTAGE_RED_STONE = 901,
  FAIL_RED_STONE_DB_BEGIN_BUY_TRANSACTION = 1000,
  FAIL_STEAM_BILLING_ERROR_THE_OPERATION_FAILED = 1001,
  FAIL_STEAM_BILLING_ERROR_INVALID_PARAMETER = 1002,
  FAIL_STEAM_BILLING_ERROR_INTERNAL_ERROR = 1003,
  FAIL_STEAM_BILLING_ERROR_USER_HAS_NOT_APPROVED = 1004,
  FAIL_STEAM_BILLING_ERROR_ALREADY_BEEN_COMMITTED = 1005,
  FAIL_STEAM_BILLING_ERROR_USER_NOT_LOGGED_IN = 1006,
  FAIL_STEAM_BILLING_ERROR_CURRENCY_DOES_NOT_MATCH_USER = 1007,
  FAIL_STEAM_BILLING_ERROR_ACCOUNT_DOES_NOT_EXIST = 1008,
  FAIL_STEAM_BILLING_ERROR_TRANSACTION_HAS_BEEN_DENIED_BY_USER = 1009,
  FAIL_STEAM_BILLING_ERROR_USER_IS_A_RESTRICTED_COUNTRY = 1010,
  FAIL_STEAM_BILLING_ERROR_BILLING_AGREEMENT_IS_NOT_ACTIVE = 1011,
  FAIL_STEAM_BILLING_ERROR_NOT_TYPE_GAME = 1012,
  FAIL_STEAM_BILLING_ERROR_DISPUTE_OR_CHARGEBACK = 1013,
  FAIL_STEAM_BILLING_ERROR_NOT_TYPE_STEAM = 1014,
  FAIL_STEAM_BILLING_ERROR_ALREADY_AGREEMENT_FOR_THIS_GAME = 1015,
  FAIL_STEAM_BILLING_ERROR_INSUFFICIENT_FUNDS = 1016,
  FAIL_STEAM_BILLING_ERROR_TIME_LIMIT_FINALIZATION_EXCEEDED = 1017,
  FAIL_STEAM_BILLING_ERROR_ACCOUNT_IS_DISABLED = 1018,
  FAIL_STEAM_BILLING_ERROR_ACCOUNT_IS_NOT_ALLOWED_TO_PURCHASE = 1019,
  FAIL_STEAM_BILLING_ERROR_FRAUD_DETECTION = 1020,
  FAIL_STEAM_BILLING_ERROR_NO_CACHED_PAYMENT = 1021,
  FAIL_STEAM_BILLING_ERROR_SPENDING_LIMIT = 1022,
  FAIL_STEAM_BILLING_ERROR_PENDING_TRANSACTION = 1023,
  FAIL_CHANGE_ACCOUNTNAME_SHORTAGE_RED_STONE = 1024,
  FAIL_CHANGE_ACCOUNTNAME_ALREADY_EXISTED = 1025,
  FAIL_MATCHMAKING_NO_PLAYERS = 1060,
  FAIL_MATCHMAKING_GAME_CREATION_FAILED = 1061,
  PacketResult_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PacketResult_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PacketResult_IsValid(int value);
extern const uint32_t PacketResult_internal_data_[];
constexpr PacketResult PacketResult_MIN = static_cast<PacketResult>(0);
constexpr PacketResult PacketResult_MAX = static_cast<PacketResult>(1061);
constexpr int PacketResult_ARRAYSIZE = 1061 + 1;
const ::google::protobuf::EnumDescriptor*
PacketResult_descriptor();
template <typename T>
const std::string& PacketResult_Name(T value) {
  static_assert(std::is_same<T, PacketResult>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PacketResult_Name().");
  return ::google::protobuf::internal::NameOfEnum(PacketResult_descriptor(), value);
}
inline bool PacketResult_Parse(absl::string_view name, PacketResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PacketResult>(
      PacketResult_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SS2C_RECONNECT_RES final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_RECONNECT_RES) */ {
 public:
  inline SS2C_RECONNECT_RES() : SS2C_RECONNECT_RES(nullptr) {}
  ~SS2C_RECONNECT_RES() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_RECONNECT_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_RECONNECT_RES(const SS2C_RECONNECT_RES& from) : SS2C_RECONNECT_RES(nullptr, from) {}
  inline SS2C_RECONNECT_RES(SS2C_RECONNECT_RES&& from) noexcept
      : SS2C_RECONNECT_RES(nullptr, std::move(from)) {}
  inline SS2C_RECONNECT_RES& operator=(const SS2C_RECONNECT_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_RECONNECT_RES& operator=(SS2C_RECONNECT_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_RECONNECT_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_RECONNECT_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_RECONNECT_RES*>(
        &_SS2C_RECONNECT_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SS2C_RECONNECT_RES& a, SS2C_RECONNECT_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_RECONNECT_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_RECONNECT_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_RECONNECT_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_RECONNECT_RES>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_RECONNECT_RES& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_RECONNECT_RES& from) { SS2C_RECONNECT_RES::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_RECONNECT_RES* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_RECONNECT_RES"; }

 protected:
  explicit SS2C_RECONNECT_RES(::google::protobuf::Arena* arena);
  SS2C_RECONNECT_RES(::google::protobuf::Arena* arena, const SS2C_RECONNECT_RES& from);
  SS2C_RECONNECT_RES(::google::protobuf::Arena* arena, SS2C_RECONNECT_RES&& from) noexcept
      : SS2C_RECONNECT_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint32 result = 1;
  void clear_result() ;
  ::uint32_t result() const;
  void set_result(::uint32_t value);

  private:
  ::uint32_t _internal_result() const;
  void _internal_set_result(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_RECONNECT_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_RECONNECT_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_RECONNECT_RES& from_msg);
    ::uint32_t result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fPacketCommand_2eproto;
};
// -------------------------------------------------------------------

class SS2C_CONNECT_SERVICE_INFO_JSON final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_CONNECT_SERVICE_INFO_JSON) */ {
 public:
  inline SS2C_CONNECT_SERVICE_INFO_JSON() : SS2C_CONNECT_SERVICE_INFO_JSON(nullptr) {}
  ~SS2C_CONNECT_SERVICE_INFO_JSON() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_CONNECT_SERVICE_INFO_JSON(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_CONNECT_SERVICE_INFO_JSON(const SS2C_CONNECT_SERVICE_INFO_JSON& from) : SS2C_CONNECT_SERVICE_INFO_JSON(nullptr, from) {}
  inline SS2C_CONNECT_SERVICE_INFO_JSON(SS2C_CONNECT_SERVICE_INFO_JSON&& from) noexcept
      : SS2C_CONNECT_SERVICE_INFO_JSON(nullptr, std::move(from)) {}
  inline SS2C_CONNECT_SERVICE_INFO_JSON& operator=(const SS2C_CONNECT_SERVICE_INFO_JSON& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_CONNECT_SERVICE_INFO_JSON& operator=(SS2C_CONNECT_SERVICE_INFO_JSON&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_CONNECT_SERVICE_INFO_JSON& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_CONNECT_SERVICE_INFO_JSON* internal_default_instance() {
    return reinterpret_cast<const SS2C_CONNECT_SERVICE_INFO_JSON*>(
        &_SS2C_CONNECT_SERVICE_INFO_JSON_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SS2C_CONNECT_SERVICE_INFO_JSON& a, SS2C_CONNECT_SERVICE_INFO_JSON& b) { a.Swap(&b); }
  inline void Swap(SS2C_CONNECT_SERVICE_INFO_JSON* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_CONNECT_SERVICE_INFO_JSON* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_CONNECT_SERVICE_INFO_JSON* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SS2C_CONNECT_SERVICE_INFO_JSON>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SS2C_CONNECT_SERVICE_INFO_JSON& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SS2C_CONNECT_SERVICE_INFO_JSON& from) { SS2C_CONNECT_SERVICE_INFO_JSON::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SS2C_CONNECT_SERVICE_INFO_JSON* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_CONNECT_SERVICE_INFO_JSON"; }

 protected:
  explicit SS2C_CONNECT_SERVICE_INFO_JSON(::google::protobuf::Arena* arena);
  SS2C_CONNECT_SERVICE_INFO_JSON(::google::protobuf::Arena* arena, const SS2C_CONNECT_SERVICE_INFO_JSON& from);
  SS2C_CONNECT_SERVICE_INFO_JSON(::google::protobuf::Arena* arena, SS2C_CONNECT_SERVICE_INFO_JSON&& from) noexcept
      : SS2C_CONNECT_SERVICE_INFO_JSON(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIpAddressFieldNumber = 1,
    kRemoteFieldNumber = 3,
    kPortFieldNumber = 2,
  };
  // string ipAddress = 1;
  void clear_ipaddress() ;
  const std::string& ipaddress() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ipaddress(Arg_&& arg, Args_... args);
  std::string* mutable_ipaddress();
  PROTOBUF_NODISCARD std::string* release_ipaddress();
  void set_allocated_ipaddress(std::string* value);

  private:
  const std::string& _internal_ipaddress() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ipaddress(
      const std::string& value);
  std::string* _internal_mutable_ipaddress();

  public:
  // string remote = 3;
  void clear_remote() ;
  const std::string& remote() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_remote(Arg_&& arg, Args_... args);
  std::string* mutable_remote();
  PROTOBUF_NODISCARD std::string* release_remote();
  void set_allocated_remote(std::string* value);

  private:
  const std::string& _internal_remote() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_remote(
      const std::string& value);
  std::string* _internal_mutable_remote();

  public:
  // uint32 port = 2;
  void clear_port() ;
  ::uint32_t port() const;
  void set_port(::uint32_t value);

  private:
  ::uint32_t _internal_port() const;
  void _internal_set_port(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_CONNECT_SERVICE_INFO_JSON)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_CONNECT_SERVICE_INFO_JSON_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_CONNECT_SERVICE_INFO_JSON& from_msg);
    ::google::protobuf::internal::ArenaStringPtr ipaddress_;
    ::google::protobuf::internal::ArenaStringPtr remote_;
    ::uint32_t port_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct__5fPacketCommand_2eproto;
};
// -------------------------------------------------------------------

class SS2C_ALIVE_REVERSE_RES final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_ALIVE_REVERSE_RES) */ {
 public:
  inline SS2C_ALIVE_REVERSE_RES() : SS2C_ALIVE_REVERSE_RES(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_ALIVE_REVERSE_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_ALIVE_REVERSE_RES(const SS2C_ALIVE_REVERSE_RES& from) : SS2C_ALIVE_REVERSE_RES(nullptr, from) {}
  inline SS2C_ALIVE_REVERSE_RES(SS2C_ALIVE_REVERSE_RES&& from) noexcept
      : SS2C_ALIVE_REVERSE_RES(nullptr, std::move(from)) {}
  inline SS2C_ALIVE_REVERSE_RES& operator=(const SS2C_ALIVE_REVERSE_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_ALIVE_REVERSE_RES& operator=(SS2C_ALIVE_REVERSE_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_ALIVE_REVERSE_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_ALIVE_REVERSE_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_ALIVE_REVERSE_RES*>(
        &_SS2C_ALIVE_REVERSE_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SS2C_ALIVE_REVERSE_RES& a, SS2C_ALIVE_REVERSE_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_ALIVE_REVERSE_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_ALIVE_REVERSE_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_ALIVE_REVERSE_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SS2C_ALIVE_REVERSE_RES>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SS2C_ALIVE_REVERSE_RES& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SS2C_ALIVE_REVERSE_RES& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_ALIVE_REVERSE_RES"; }

 protected:
  explicit SS2C_ALIVE_REVERSE_RES(::google::protobuf::Arena* arena);
  SS2C_ALIVE_REVERSE_RES(::google::protobuf::Arena* arena, const SS2C_ALIVE_REVERSE_RES& from);
  SS2C_ALIVE_REVERSE_RES(::google::protobuf::Arena* arena, SS2C_ALIVE_REVERSE_RES&& from) noexcept
      : SS2C_ALIVE_REVERSE_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_ALIVE_REVERSE_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_ALIVE_REVERSE_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_ALIVE_REVERSE_RES& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct__5fPacketCommand_2eproto;
};
// -------------------------------------------------------------------

class SS2C_ALIVE_REVERSE_NOT final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_ALIVE_REVERSE_NOT) */ {
 public:
  inline SS2C_ALIVE_REVERSE_NOT() : SS2C_ALIVE_REVERSE_NOT(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_ALIVE_REVERSE_NOT(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_ALIVE_REVERSE_NOT(const SS2C_ALIVE_REVERSE_NOT& from) : SS2C_ALIVE_REVERSE_NOT(nullptr, from) {}
  inline SS2C_ALIVE_REVERSE_NOT(SS2C_ALIVE_REVERSE_NOT&& from) noexcept
      : SS2C_ALIVE_REVERSE_NOT(nullptr, std::move(from)) {}
  inline SS2C_ALIVE_REVERSE_NOT& operator=(const SS2C_ALIVE_REVERSE_NOT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_ALIVE_REVERSE_NOT& operator=(SS2C_ALIVE_REVERSE_NOT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_ALIVE_REVERSE_NOT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_ALIVE_REVERSE_NOT* internal_default_instance() {
    return reinterpret_cast<const SS2C_ALIVE_REVERSE_NOT*>(
        &_SS2C_ALIVE_REVERSE_NOT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SS2C_ALIVE_REVERSE_NOT& a, SS2C_ALIVE_REVERSE_NOT& b) { a.Swap(&b); }
  inline void Swap(SS2C_ALIVE_REVERSE_NOT* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_ALIVE_REVERSE_NOT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_ALIVE_REVERSE_NOT* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SS2C_ALIVE_REVERSE_NOT>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SS2C_ALIVE_REVERSE_NOT& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SS2C_ALIVE_REVERSE_NOT& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_ALIVE_REVERSE_NOT"; }

 protected:
  explicit SS2C_ALIVE_REVERSE_NOT(::google::protobuf::Arena* arena);
  SS2C_ALIVE_REVERSE_NOT(::google::protobuf::Arena* arena, const SS2C_ALIVE_REVERSE_NOT& from);
  SS2C_ALIVE_REVERSE_NOT(::google::protobuf::Arena* arena, SS2C_ALIVE_REVERSE_NOT&& from) noexcept
      : SS2C_ALIVE_REVERSE_NOT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_ALIVE_REVERSE_NOT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_ALIVE_REVERSE_NOT_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_ALIVE_REVERSE_NOT& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct__5fPacketCommand_2eproto;
};
// -------------------------------------------------------------------

class SS2C_ALIVE_RES final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SS2C_ALIVE_RES) */ {
 public:
  inline SS2C_ALIVE_RES() : SS2C_ALIVE_RES(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SS2C_ALIVE_RES(
      ::google::protobuf::internal::ConstantInitialized);

  inline SS2C_ALIVE_RES(const SS2C_ALIVE_RES& from) : SS2C_ALIVE_RES(nullptr, from) {}
  inline SS2C_ALIVE_RES(SS2C_ALIVE_RES&& from) noexcept
      : SS2C_ALIVE_RES(nullptr, std::move(from)) {}
  inline SS2C_ALIVE_RES& operator=(const SS2C_ALIVE_RES& from) {
    CopyFrom(from);
    return *this;
  }
  inline SS2C_ALIVE_RES& operator=(SS2C_ALIVE_RES&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SS2C_ALIVE_RES& default_instance() {
    return *internal_default_instance();
  }
  static inline const SS2C_ALIVE_RES* internal_default_instance() {
    return reinterpret_cast<const SS2C_ALIVE_RES*>(
        &_SS2C_ALIVE_RES_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SS2C_ALIVE_RES& a, SS2C_ALIVE_RES& b) { a.Swap(&b); }
  inline void Swap(SS2C_ALIVE_RES* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SS2C_ALIVE_RES* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SS2C_ALIVE_RES* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SS2C_ALIVE_RES>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SS2C_ALIVE_RES& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SS2C_ALIVE_RES& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SS2C_ALIVE_RES"; }

 protected:
  explicit SS2C_ALIVE_RES(::google::protobuf::Arena* arena);
  SS2C_ALIVE_RES(::google::protobuf::Arena* arena, const SS2C_ALIVE_RES& from);
  SS2C_ALIVE_RES(::google::protobuf::Arena* arena, SS2C_ALIVE_RES&& from) noexcept
      : SS2C_ALIVE_RES(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SS2C_ALIVE_RES)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SS2C_ALIVE_RES_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SS2C_ALIVE_RES& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct__5fPacketCommand_2eproto;
};
// -------------------------------------------------------------------

class SC2S_RECONNECT_REQ final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_RECONNECT_REQ) */ {
 public:
  inline SC2S_RECONNECT_REQ() : SC2S_RECONNECT_REQ(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_RECONNECT_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_RECONNECT_REQ(const SC2S_RECONNECT_REQ& from) : SC2S_RECONNECT_REQ(nullptr, from) {}
  inline SC2S_RECONNECT_REQ(SC2S_RECONNECT_REQ&& from) noexcept
      : SC2S_RECONNECT_REQ(nullptr, std::move(from)) {}
  inline SC2S_RECONNECT_REQ& operator=(const SC2S_RECONNECT_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_RECONNECT_REQ& operator=(SC2S_RECONNECT_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_RECONNECT_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_RECONNECT_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_RECONNECT_REQ*>(
        &_SC2S_RECONNECT_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SC2S_RECONNECT_REQ& a, SC2S_RECONNECT_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_RECONNECT_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_RECONNECT_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_RECONNECT_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SC2S_RECONNECT_REQ>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SC2S_RECONNECT_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SC2S_RECONNECT_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_RECONNECT_REQ"; }

 protected:
  explicit SC2S_RECONNECT_REQ(::google::protobuf::Arena* arena);
  SC2S_RECONNECT_REQ(::google::protobuf::Arena* arena, const SC2S_RECONNECT_REQ& from);
  SC2S_RECONNECT_REQ(::google::protobuf::Arena* arena, SC2S_RECONNECT_REQ&& from) noexcept
      : SC2S_RECONNECT_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_RECONNECT_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_RECONNECT_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_RECONNECT_REQ& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct__5fPacketCommand_2eproto;
};
// -------------------------------------------------------------------

class SC2S_ALIVE_REVERSE_REQ final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_ALIVE_REVERSE_REQ) */ {
 public:
  inline SC2S_ALIVE_REVERSE_REQ() : SC2S_ALIVE_REVERSE_REQ(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_ALIVE_REVERSE_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_ALIVE_REVERSE_REQ(const SC2S_ALIVE_REVERSE_REQ& from) : SC2S_ALIVE_REVERSE_REQ(nullptr, from) {}
  inline SC2S_ALIVE_REVERSE_REQ(SC2S_ALIVE_REVERSE_REQ&& from) noexcept
      : SC2S_ALIVE_REVERSE_REQ(nullptr, std::move(from)) {}
  inline SC2S_ALIVE_REVERSE_REQ& operator=(const SC2S_ALIVE_REVERSE_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_ALIVE_REVERSE_REQ& operator=(SC2S_ALIVE_REVERSE_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_ALIVE_REVERSE_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_ALIVE_REVERSE_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_ALIVE_REVERSE_REQ*>(
        &_SC2S_ALIVE_REVERSE_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(SC2S_ALIVE_REVERSE_REQ& a, SC2S_ALIVE_REVERSE_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_ALIVE_REVERSE_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_ALIVE_REVERSE_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_ALIVE_REVERSE_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SC2S_ALIVE_REVERSE_REQ>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SC2S_ALIVE_REVERSE_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SC2S_ALIVE_REVERSE_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_ALIVE_REVERSE_REQ"; }

 protected:
  explicit SC2S_ALIVE_REVERSE_REQ(::google::protobuf::Arena* arena);
  SC2S_ALIVE_REVERSE_REQ(::google::protobuf::Arena* arena, const SC2S_ALIVE_REVERSE_REQ& from);
  SC2S_ALIVE_REVERSE_REQ(::google::protobuf::Arena* arena, SC2S_ALIVE_REVERSE_REQ&& from) noexcept
      : SC2S_ALIVE_REVERSE_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_ALIVE_REVERSE_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_ALIVE_REVERSE_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_ALIVE_REVERSE_REQ& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct__5fPacketCommand_2eproto;
};
// -------------------------------------------------------------------

class SC2S_ALIVE_REQ final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DC.Packet.SC2S_ALIVE_REQ) */ {
 public:
  inline SC2S_ALIVE_REQ() : SC2S_ALIVE_REQ(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SC2S_ALIVE_REQ(
      ::google::protobuf::internal::ConstantInitialized);

  inline SC2S_ALIVE_REQ(const SC2S_ALIVE_REQ& from) : SC2S_ALIVE_REQ(nullptr, from) {}
  inline SC2S_ALIVE_REQ(SC2S_ALIVE_REQ&& from) noexcept
      : SC2S_ALIVE_REQ(nullptr, std::move(from)) {}
  inline SC2S_ALIVE_REQ& operator=(const SC2S_ALIVE_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC2S_ALIVE_REQ& operator=(SC2S_ALIVE_REQ&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC2S_ALIVE_REQ& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC2S_ALIVE_REQ* internal_default_instance() {
    return reinterpret_cast<const SC2S_ALIVE_REQ*>(
        &_SC2S_ALIVE_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SC2S_ALIVE_REQ& a, SC2S_ALIVE_REQ& b) { a.Swap(&b); }
  inline void Swap(SC2S_ALIVE_REQ* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC2S_ALIVE_REQ* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC2S_ALIVE_REQ* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SC2S_ALIVE_REQ>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SC2S_ALIVE_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SC2S_ALIVE_REQ& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DC.Packet.SC2S_ALIVE_REQ"; }

 protected:
  explicit SC2S_ALIVE_REQ(::google::protobuf::Arena* arena);
  SC2S_ALIVE_REQ(::google::protobuf::Arena* arena, const SC2S_ALIVE_REQ& from);
  SC2S_ALIVE_REQ(::google::protobuf::Arena* arena, SC2S_ALIVE_REQ&& from) noexcept
      : SC2S_ALIVE_REQ(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DC.Packet.SC2S_ALIVE_REQ)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SC2S_ALIVE_REQ_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SC2S_ALIVE_REQ& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct__5fPacketCommand_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SC2S_ALIVE_REQ

// -------------------------------------------------------------------

// SS2C_ALIVE_RES

// -------------------------------------------------------------------

// SC2S_RECONNECT_REQ

// -------------------------------------------------------------------

// SS2C_RECONNECT_RES

// uint32 result = 1;
inline void SS2C_RECONNECT_RES::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0u;
}
inline ::uint32_t SS2C_RECONNECT_RES::result() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_RECONNECT_RES.result)
  return _internal_result();
}
inline void SS2C_RECONNECT_RES::set_result(::uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_RECONNECT_RES.result)
}
inline ::uint32_t SS2C_RECONNECT_RES::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void SS2C_RECONNECT_RES::_internal_set_result(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SS2C_CONNECT_SERVICE_INFO_JSON

// string ipAddress = 1;
inline void SS2C_CONNECT_SERVICE_INFO_JSON::clear_ipaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ipaddress_.ClearToEmpty();
}
inline const std::string& SS2C_CONNECT_SERVICE_INFO_JSON::ipaddress() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_CONNECT_SERVICE_INFO_JSON.ipAddress)
  return _internal_ipaddress();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_CONNECT_SERVICE_INFO_JSON::set_ipaddress(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ipaddress_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_CONNECT_SERVICE_INFO_JSON.ipAddress)
}
inline std::string* SS2C_CONNECT_SERVICE_INFO_JSON::mutable_ipaddress() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ipaddress();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_CONNECT_SERVICE_INFO_JSON.ipAddress)
  return _s;
}
inline const std::string& SS2C_CONNECT_SERVICE_INFO_JSON::_internal_ipaddress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ipaddress_.Get();
}
inline void SS2C_CONNECT_SERVICE_INFO_JSON::_internal_set_ipaddress(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ipaddress_.Set(value, GetArena());
}
inline std::string* SS2C_CONNECT_SERVICE_INFO_JSON::_internal_mutable_ipaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ipaddress_.Mutable( GetArena());
}
inline std::string* SS2C_CONNECT_SERVICE_INFO_JSON::release_ipaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_CONNECT_SERVICE_INFO_JSON.ipAddress)
  return _impl_.ipaddress_.Release();
}
inline void SS2C_CONNECT_SERVICE_INFO_JSON::set_allocated_ipaddress(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ipaddress_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ipaddress_.IsDefault()) {
          _impl_.ipaddress_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_CONNECT_SERVICE_INFO_JSON.ipAddress)
}

// uint32 port = 2;
inline void SS2C_CONNECT_SERVICE_INFO_JSON::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = 0u;
}
inline ::uint32_t SS2C_CONNECT_SERVICE_INFO_JSON::port() const {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_CONNECT_SERVICE_INFO_JSON.port)
  return _internal_port();
}
inline void SS2C_CONNECT_SERVICE_INFO_JSON::set_port(::uint32_t value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_CONNECT_SERVICE_INFO_JSON.port)
}
inline ::uint32_t SS2C_CONNECT_SERVICE_INFO_JSON::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline void SS2C_CONNECT_SERVICE_INFO_JSON::_internal_set_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = value;
}

// string remote = 3;
inline void SS2C_CONNECT_SERVICE_INFO_JSON::clear_remote() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_.ClearToEmpty();
}
inline const std::string& SS2C_CONNECT_SERVICE_INFO_JSON::remote() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DC.Packet.SS2C_CONNECT_SERVICE_INFO_JSON.remote)
  return _internal_remote();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SS2C_CONNECT_SERVICE_INFO_JSON::set_remote(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DC.Packet.SS2C_CONNECT_SERVICE_INFO_JSON.remote)
}
inline std::string* SS2C_CONNECT_SERVICE_INFO_JSON::mutable_remote() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_remote();
  // @@protoc_insertion_point(field_mutable:DC.Packet.SS2C_CONNECT_SERVICE_INFO_JSON.remote)
  return _s;
}
inline const std::string& SS2C_CONNECT_SERVICE_INFO_JSON::_internal_remote() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_.Get();
}
inline void SS2C_CONNECT_SERVICE_INFO_JSON::_internal_set_remote(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_.Set(value, GetArena());
}
inline std::string* SS2C_CONNECT_SERVICE_INFO_JSON::_internal_mutable_remote() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.remote_.Mutable( GetArena());
}
inline std::string* SS2C_CONNECT_SERVICE_INFO_JSON::release_remote() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DC.Packet.SS2C_CONNECT_SERVICE_INFO_JSON.remote)
  return _impl_.remote_.Release();
}
inline void SS2C_CONNECT_SERVICE_INFO_JSON::set_allocated_remote(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.remote_.IsDefault()) {
          _impl_.remote_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DC.Packet.SS2C_CONNECT_SERVICE_INFO_JSON.remote)
}

// -------------------------------------------------------------------

// SS2C_ALIVE_REVERSE_NOT

// -------------------------------------------------------------------

// SC2S_ALIVE_REVERSE_REQ

// -------------------------------------------------------------------

// SS2C_ALIVE_REVERSE_RES

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Packet
}  // namespace DC


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::DC::Packet::PacketCommand> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::DC::Packet::PacketCommand>() {
  return ::DC::Packet::PacketCommand_descriptor();
}
template <>
struct is_proto_enum<::DC::Packet::PacketResult> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::DC::Packet::PacketResult>() {
  return ::DC::Packet::PacketResult_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED__5fPacketCommand_2eproto_2epb_2eh
